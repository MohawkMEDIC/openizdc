<?xml version="1.0"?>
<AppletManifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://openiz.org/applet">
  <info id="org.openiz.core" version="0.6.14.3516">
    <icon>/org.openiz.core/img/icon.png</icon>
    <name lang="en">OpenIZ Disconnected Client Core</name>
    <author>Mohawk College of Applied Arts and Technology - mHealth &amp; eHealth Development &amp; Innovation Centre</author>
  </info>
  <startup>~/index.html</startup>
  <menuItem order="99">
    <icon>/tz.timr.applet/img/appbar.code.xml.png</icon>
    <text>Development Tools</text>
    <menuItem order="0" launch="#/core/report" asset="/org.openiz.core/views/debug/report.html">
      <icon>/org.openiz.core/img/appbar.bug.png</icon>
      <text>Bug Report</text>
    </menuItem>
    <menuItem order="0" launch="#/core/about" asset="/org.openiz.core/views/debug/about.html">
      <icon>/org.openiz.core/img/appbar.futurama.bender.png</icon>
      <text>Debug Information</text>
    </menuItem>
    <menuItem order="0" launch="#/core/settings" asset="/org.openiz.core/views/settings/settings.html">
      <icon>/org.openiz.core/img/appbar.settings.png</icon>
      <text>Suggestion Box</text>
    </menuItem>
  </menuItem>
  <template mnemonic="act.substanceadmin.immunization">
    <form>/org.openiz.core/views/templates/act.substanceadmin.immunization.html</form>
    <definition>/org.openiz.core/templates/act.substanceadmin.immunization.json</definition>
  </template>
  <template mnemonic="act.substanceadmin.supplement">
    <form>/org.openiz.core/views/templates/act.substanceadmin.supplement.html</form>
    <definition>/org.openiz.core/templates/act.substanceadmin.supplement.json</definition>
  </template>
  <template mnemonic="act.transferstock">
    <definition>/org.openiz.core/templates/act.transferstock.json</definition>
  </template>
  <template mnemonic="act.observation.weight">
    <form>/org.openiz.core/views/templates/act.observation.weight.html</form>
    <definition>/org.openiz.core/templates/act.observation.weight.json</definition>
  </template>
  <template mnemonic="act.adjuststock">
    <definition>/org.openiz.core/templates/act.adjuststock.json</definition>
  </template>
  <template mnemonic="act.countstock">
    <definition>/org.openiz.core/templates/act.countstock.json</definition>
  </template>
  <asset name="bundleconfig.json" mimeType="text/javascript">
    <contentText>[
  {
    "outputFileName": "js/openiz-localize.min.js",
    "inputFiles": [
      "js/openiz-localize.js"
    ]
  },
  {
    "outputFileName": "js/openiz-model.min.js",
    "inputFiles": [
      "js/openiz-model.js"
    ]
  },
  {
    "outputFileName": "js/openiz.min.js",
    "inputFiles": [
      "js/openiz.js"
    ]
  },
  {
    "outputFileName": "css/theme.min.css",
    "inputFiles": [
      "css/theme.css"
    ]
  },
  {
    "outputFileName": "controllers/common/patients/search/search-results.min.js",
    "inputFiles": [
      "controllers/common/patients/search/search-results.js"
    ]
  },
  {
    "outputFileName": "controllers/common/security/login.min.js",
    "inputFiles": [
      "controllers/common/security/login.js"
    ]
  },
  {
    "outputFileName": "controllers/settings/settings.min.js",
    "inputFiles": [
      "controllers/settings/settings.js"
    ]
  },
  {
    "outputFileName": "controllers/layouts/root.min.js",
    "inputFiles": [
      "controllers/layouts/root.js"
    ]
  },
  {
    "outputFileName": "controllers/layouts/navbar.min.js",
    "inputFiles": [
      "controllers/layouts/navbar.js"
    ]
  },
  {
    "outputFileName": "lib/bootstrap-tokenfield.min.js",
    "inputFiles": [
      "lib/bootstrap-tokenfield.js"
    ]
  },
  {
    "outputFileName": "lib/jquery.datefix.min.js",
    "inputFiles": [
      "lib/jquery.datefix.js"
    ]
  },
  {
    "outputFileName": "lib/select2.min.js",
    "inputFiles": [
      "lib/select2.js"
    ]
  },
  {
    "outputFileName": "js/openiz-ng.min.js",
    "inputFiles": [
      "js/openiz-ng.js"
    ]
  },
  {
    "outputFileName": "lib/bootstrap-wizard.min.js",
    "inputFiles": [
      "lib/bootstrap-wizard.js"
    ]
  }
]
</contentText>
  </asset>
  <asset name="index.html" mimeType="text/html">
    <contentHtml>
      <layout>~/layouts/navbar.html</layout>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" oiz:layout="~/layouts/navbar.html">
          <ui-view />
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="openizdc.licenseheader" mimeType="application/octet-stream">
    <contentBin>77u/ZXh0ZW5zaW9uczogZGVzaWduZXIuY3MgZ2VuZXJhdGVkLmNzDQpleHRlbnNpb25zOiAuY3MgLmNwcCAuaCAuanMNCi8qDQogKiBDb3B5cmlnaHQgMjAxNS0lQ3VycmVudFllYXIlIE1vaGF3ayBDb2xsZWdlIG9mIEFwcGxpZWQgQXJ0cyBhbmQgVGVjaG5vbG9neQ0KICogDQogKiANCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgDQogKiBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSANCiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgDQogKiANCiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMCANCiAqIA0KICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywgV0lUSE9VVA0KICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIA0KICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgDQogKiB0aGUgTGljZW5zZS4NCiAqIA0KICogVXNlcjogJVVzZXJOYW1lJQ0KICogRGF0ZTogJUNyZWF0aW9uWWVhciUtJUNyZWF0aW9uTW9udGglLSVDcmVhdGlvbkRheSUNCiAqLw0KZXh0ZW5zaW9uczogLmFzcHggLmFzY3gNCmV4dGVuc2lvbnM6ICAueG1sIC5jb25maWcgLnhzZCAueHNsdCAuaHRtIC5odG1sDQo8IS0tDQogLSBDb3B5cmlnaHQgMjAxNS0lQ3VycmVudFllYXIlIE1vaGF3ayBDb2xsZWdlIG9mIEFwcGxpZWQgQXJ0cyBhbmQgVGVjaG5vbG9neQ0KIC0NCiAtIA0KIC0gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSANCiAtIG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IA0KIC0gb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCANCiAtIA0KIC0gaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wIA0KIC0gDQogLSBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQogLSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUDQogLSBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgDQogLSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciANCiAtIHRoZSBMaWNlbnNlLg0KIC0gDQogLSBVc2VyOiAlVXNlck5hbWUlDQogLSBEYXRlOiAlQ3JlYXRpb25ZZWFyJS0lQ3JlYXRpb25Nb250aCUtJUNyZWF0aW9uRGF5JQ0KIC0tPg==</contentBin>
  </asset>
  <asset name="controllers/alerts/view.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */

/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/controllers/layouts/navbar.js"/&gt;

layoutApp.controller('ViewAlertController', ['$scope', '$stateParams', function ($scope, $stateParams)
{

    OpenIZ.App.getAlertsAsync({
        query: {
            id: $stateParams.alertId,
            _count: 1
        },
        onException: function (ex)
        {
            OpenIZ.App.hideWait();

            if (typeof (ex) == "string")
                alert(ex);
            else if (ex.message != undefined)
                alert("" + ex.message + " - " + ex.details);
            else
                alert(ex);
        },
        continueWith: function (data)
        {
            $scope.alert = data[0];
            console.log($scope.alert);
            $scope.alert.body = $scope.alert.body.replace("\n", "&lt;br/&gt;");
            $scope.$apply();
        }
    });

    $scope.deleteAlert = function (alert)
    {
        alert.flags = 2;

        $scope.alert.creationTime = $scope.alert.time;

        OpenIZ.App.saveAlertAsync({
            data: alert,
            continueWith: function (data)
            {
                OpenIZ.App.showWait();
                OpenIZ.App.toast(OpenIZ.Localization.getString("locale.alert.updateSuccessful"));
            },
            onException: function (ex)
            {
                console.log(ex);
                OpenIZ.App.toast(OpenIZ.Localization.getString("locale.alert.updateUnsuccessful"));
            },
            finally: function ()
            {
                OpenIZ.App.hideWait();
            }
        });
    };

    $scope.updateAlert = function ()
    {
        $scope.alert.flags = 2;

        $scope.alert.creationTime = $scope.alert.time;

        OpenIZ.App.saveAlertAsync({
            data: $scope.alert,
            continueWith: function (data)
            {
                OpenIZ.App.showWait();
                OpenIZ.App.toast(OpenIZ.Localization.getString("locale.alert.updateSuccessful"));
            },
            onException: function (ex)
            {
                console.log(ex);
                OpenIZ.App.toast(OpenIZ.Localization.getString("locale.alert.updateUnsuccessful"));
            },
            finally: function ()
            {
                OpenIZ.App.hideWait();
            }
        });
    };

}]);</contentText>
  </asset>
  <asset name="controllers/common/encounters/history/vaccination.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-30
 */

/// &lt;refernece path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;

layoutApp.controller('VaccinationHistoryController', ['$scope', function($scope) {
    //    $('.oiz-vaccination-history').each(function (i, e) {
    // Get the current scope that we're in
    //        var scope = angular.element(e).scope();

    var scope = $scope.$parent;
    // Init data
    scope.patient = scope.patient || new OpenIZModel.Patient({});
    scope.patient.participation = scope.patient.participation || {};
    scope.display = scope.display || {};

    // Iterate through vaccinations and organize them by antigen
    // TODO: Change this to be an AJAX call
    scope.display._vaccineAdministrations = {};

    scope.$watch(function (s) { return s.patient.participation }, function (newValue, oldValue) {
        scope.display._vaccineAdministrations = {};
        if(newValue != null &amp;&amp; newValue.RecordTarget !== undefined)
        {
            if (newValue.RecordTarget instanceof Array)
            {
                // Sort based on dose
                newValue.RecordTarget.sort(function (a, b)
                {
                    if (a.actModel.actTime &gt; b.actModel.actTime)
                        return 1;
                    else if (a.actModel.actTime &lt; b.actModel.actTime)
                        return -1;
                    else
                    {
                        return 0;
                    }
                });

                // Record target

                for (var ptcpt in newValue.RecordTarget)
                {

                    var acts = [];

                    // Patient encounters are the grouping of objects
                    var participation = newValue.RecordTarget[ptcpt];
                    if (participation.actModel.$type != 'PatientEncounter')
                        acts.push(participation);
                    else
                        acts = participation.actModel.relationship;

                    for (var act in acts)
                    {

                        var model = acts[act].actModel || acts[act].targetModel;
                        // Ignore anything except substance admins
                        if (model.$type != 'SubstanceAdministration' || model.typeConceptModel == undefined || (model.typeConceptModel.mnemonic != 'InitialImmunization' &amp;&amp; model.typeConceptModel.mnemonic != 'Immunization' &amp;&amp; model.typeConceptModel.mnemonic != 'BoosterImmunization'))
                            continue;

                        var antigenId = model.participation.Product.playerModel.name.Assigned.component.$other.value;
                        if (scope.display._vaccineAdministrations[antigenId] == null)
                        {
                            scope.display._vaccineAdministrations[antigenId] = [];
                            for (var i = 0; i &lt; model.doseSequence; i++)
                                scope.display._vaccineAdministrations[antigenId].push(null);
                            //model._enabled = true;
                        }
                        scope.display._vaccineAdministrations[antigenId].push(model);
                        //                scope.$apply();
                    }
                }
            }
        }
    });
}]);</contentText>
  </asset>
  <asset name="controllers/common/encounters/register/encounter.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */

/// &lt;refernece path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;

layoutApp.controller('EncounterEntryController', ['$scope', function ($scope) {

    // Get the current scope that we're in
    var scope = $scope;

    /** 
    * Add sub-encounter sub-encounter
    */
    scope.addSubEncounter = scope.addSubEncounter || function (bind, templateName) {
        OpenIZ.CarePlan.getActTemplateAsync({
            templateId: templateName,
            continueWith: function (d) {
                bind.push({
                    _created: true,
                    _enabled: true,
                    targetModel: d
                });
                scope.$apply();
            }
        });

    };

    /** 
     * Delete sub-encounter
     */
    scope.delSubEncounter = function (bind, index) {
        bind.splice(index, 1);
    };

    // Encounter 
    scope.validateAct = scope.validateAct || function (act) {

        var validation = [];

        // Act not done!?
        if (act.negationInd &amp;&amp; act.reasonConcept == null) // not done - There must be a reason why ... 
            validation.push(OpenIZ.Localization.getString('locale.encounter.validation.reasonRequired'));
        else {

        }

        return validation;

    };
}]);
</contentText>
  </asset>
  <asset name="controllers/common/modal/authenticate.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-10-14
 */

/// &lt;reference path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/bootstrap.min.js"/&gt;
layoutApp.controller('AuthenticationDialogController', ['$scope', function ($scope) {

    $scope.authenticate = function (form) {
        if(!form.$valid) 
        {
            alert(OpenIZ.Localization.getString('locale.error.login.invalid'));
            return;
        }

        // Do an authentication that is not session binding
        OpenIZ.Authentication.loginAsync({
            userName: $scope.username,
            password: $scope.password,
            scope: "elevation",
            continueWith: function(session) {
                if (session == null) {
                    alert(OpenIZ.Localization.getString("err_oauth2_invalid_grant"));
                }
                else {
                    OpenIZ.Authentication.$elevationCredentials = {
                        userName : $scope.username,
                        password : $scope.password,
                        $enabled : true,
                        continueWith: OpenIZ.Authentication.$elevationCredentials.continueWith
                    };
                    OpenIZ.Authentication.hideElevationDialog();
                    if(OpenIZ.Authentication.$elevationCredentials.continueWith != null)
                        OpenIZ.Authentication.$elevationCredentials.continueWith();
                }
            },
            onException: function(error) {
                if(error.error != null)
                    alert(error.error);
                else if(error.message != null)
                    alert(error.message);
                else
                    alert(error);
            }
        })
    }
    
}]);</contentText>
  </asset>
  <asset name="controllers/common/patients/register/demographics.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */

/// &lt;refernece path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/select2.min.js"/&gt;

angular.element(document).ready(function () {


   


    //$('.select2-tag').each(function (e, d) {
    //    $(d).on('select2:open', function (s) {
    //        s.preventDefault();
    //        return true;
    //    });
    //});

});</contentText>
  </asset>
  <asset name="controllers/common/patients/register/identifiers.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-30
 */

/// &lt;refernece path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;

layoutApp.controller('PatientIdentifiersController', ['$scope', function ($scope) {
    // Get the current scope that we're in
    var scope = $scope.$parent;

    // Init data
    scope.patient = scope.patient || new OpenIZModel.Patient({});
    scope.patient.identifier = scope.patient.identifier || { $other: { authority: null, value: null } };


    // Rebind the domain scope
    scope.rebindDomain = scope.rebindDomain || function (authority, identifier) {
        scope.patient.identifier[identifier.authority] = identifier;
        delete scope.patient.identifier["NEW"];
    };

    // Scan the specified barcode
    scope.scanBarcode = scope.scanBarcode || function (authority, identifier) {
        identifier.value = OpenIZ.App.scanBarcode();
    };

    // Add identifier
    scope.addIdentifier = scope.addIdentifier || function () {
        if (scope.patient.identifier["NEW"] != null &amp;&amp;
            scope.patient.identifier["NEW"].authority != "NEW") {
            scope.patient.identifier[scope.patient.identifier["NEW"].authority] = scope.patient.identifier["NEW"];
            scope.patient.identifier["NEW"] = { authority: "NEW", value: null };
        }
        else if (scope.patient.identifier["NEW"] == null)
            scope.patient.identifier["NEW"] = { authority: "NEW", value: null };
    };

    // Remove identifier
    scope.removeIdentifier = scope.removeIdentifier || function (id) {
        delete scope.patient.identifier[id];
        if (Object.keys(scope.patient.identifier) == 0)
            scope.addIdentifier();
    };
}]);</contentText>
  </asset>
  <asset name="controllers/common/patients/search/search-results.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */

/// &lt;refernece path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;

// Document ready, bind search results to their related contexts
layoutApp.controller('SearchResultsController', ['$scope', function ($scope) {

        // Get the current scope that we're in
        var scope = $scope;

        // If the current scope does not have required values bind them
        scope.search = scope.search || {};
        scope.search.query = scope.search.query || {};
        scope.search.results = null;
        scope.search.paging = scope.search.paging || {
            size: 10
        };

        scope.$watch('search.dateOfBirthString', function (nvalue, ovalue) {
            if(nvalue !== undefined) 
                $scope.search.query.dateOfBirth = OpenIZ.Util.toDateInputString(new Date(nvalue));
        });

        var updateResultEncounters = function () {
            for (var i in scope.search.results.item) {
                OpenIZ.Act.findAsync({
                    query: {
                        "classConcept": OpenIZModel.ActClassKeys.Encounter,
                        "statusConcept": OpenIZModel.StatusKeys.Active,
                        "moodConcept": OpenIZModel.ActMoodKeys.Eventoccurrence,
                        "participation[RecordTarget].player": scope.search.results.item[i].id,
                        "_count": 0
                    },
                    continueWith: function (result) {
                        if (result != null)
                            scope.search.results.item[i]._isInEncounter = result.totalResults &gt; 0;
                        scope.$apply();
                    }
                });
            }
        };

        /** 
         * @summary Advances to the next set of results
         */
        scope.search.search = scope.search.search || function (nonInteractive) {
            if (!nonInteractive) OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text"));
            scope.search.query["_offset"] = 0;
            scope.search.query["_count"] = scope.search.paging.size;

            OpenIZ.Patient.findAsync({
                query: scope.search.query,
                continueWith: function (r) {
                    scope.search.results = r;
                    scope.search.paging = {
                        current: 1,
                        total: r.totalResults == 0 ? 1 : r.totalResults / scope.search.paging.size,
                        size: scope.search.paging.size,
                        pages: []
                    };
                    for (var i = 0; i &lt; scope.search.paging.total; i++)
                        scope.search.paging.pages[i] = i + 1;
                    updateResultEncounters();
                    scope.$apply();
                },
                onException: function (e) {
                    OpenIZ.App.toast(e.message);
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            });

        };
        /** 
         * @summary Advances to the next set of results
         */
        scope.search.next = scope.search.next || function () {
            OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text"));
            if (scope.search.paging.current == scope.search.paging.count)
                return;

            // Current page increment
            scope.search.paging.current++;
            scope.search.query["_offset"] = (scope.search.paging.current - 1) * scope.search.paging.size;
            scope.search.query["_count"] = scope.search.paging.size;

            // Find async
            OpenIZ.Patient.findAsync({
                query: scope.search.query, 
                continueWith: function (r) {
                    scope.search.results = r;
                    updateResultEncounters();
                    scope.$apply();
                },
                onException: function (e) {
                    OpenIZ.App.toast(e.message);
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            });
        };

        /** 
         * @summary Goes to the previous page
         */
        scope.search.previous = scope.search.previous || function () {
            OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text"));
            if (scope.search.paging.current == 1)
                return;

            // Current page increment
            scope.search.paging.current--;
            scope.search.query["_offset"] = (scope.search.paging.current - 1) * scope.search.paging.size;
            scope.search.query["_count"] = scope.search.paging.size;

            // Find async
            OpenIZ.Patient.findAsync({
                query: scope.search.query,
                continueWith: function (r) {
                    scope.search.results = r;
                    updateResultEncounters();
                    scope.$apply();
                },
                onException: function (e) {
                    OpenIZ.App.toast(e.message);
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            });
        };

        /**
         * @summary Goes to the specific page
         */
        scope.search.goPage = scope.search.goPage || function (pageNo) {
            OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text"));

            // Current page increment
            scope.search.paging.current = pageNo;
            scope.search.query["_offset"] = (scope.search.paging.current - 1) * scope.search.paging.size;
            scope.search.query["_count"] = scope.search.paging.size;

            // Find async
            OpenIZ.Patient.findAsync({
                query: scope.search.query,
                continueWith: function (r) {
                    scope.search.results = r;
                    updateResultEncounters();
                    scope.$apply();
                },
                onException: function (e) {
                    OpenIZ.App.toast(e.message);
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            });
        };

        scope.act = { };

        /**
        * @summary Starts an encounter for a patient.
        */
        scope.startEncounter = function (patient) {
            scope.doStartEncounter(patient);
        };

}]);</contentText>
  </asset>
  <asset name="controllers/common/patients/search/search-results.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-24
 */
layoutApp.controller("SearchResultsController",["$scope",function(n){var t=n,i;t.search=t.search||{};t.search.query=t.search.query||{};t.search.results=null;t.search.paging=t.search.paging||{size:10};t.$watch("search.dateOfBirthString",function(t){t!==undefined&amp;&amp;(n.search.query.dateOfBirth=OpenIZ.Util.toDateInputString(new Date(t)))});i=function(){for(var n in t.search.results.item)OpenIZ.Act.findAsync({query:{classConcept:OpenIZModel.ActClassKeys.Encounter,statusConcept:OpenIZModel.StatusKeys.Active,moodConcept:OpenIZModel.ActMoodKeys.Eventoccurrence,"participation[RecordTarget].player":t.search.results.item[n].id,_count:0},continueWith:function(i){i!=null&amp;&amp;(t.search.results.item[n]._isInEncounter=i.totalResults&gt;0);t.$apply()}})};t.search.search=t.search.search||function(n){n||OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text"));t.search.query._offset=0;t.search.query._count=t.search.paging.size;OpenIZ.Patient.findAsync({query:t.search.query,continueWith:function(n){t.search.results=n;t.search.paging={current:1,total:n.totalResults==0?1:n.totalResults/t.search.paging.size,size:t.search.paging.size,pages:[]};for(var r=0;r&lt;t.search.paging.total;r++)t.search.paging.pages[r]=r+1;i();t.$apply()},onException:function(n){OpenIZ.App.toast(n.message)},"finally":function(){OpenIZ.App.hideWait()}})};t.search.next=t.search.next||function(){(OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text")),t.search.paging.current!=t.search.paging.count)&amp;&amp;(t.search.paging.current++,t.search.query._offset=(t.search.paging.current-1)*t.search.paging.size,t.search.query._count=t.search.paging.size,OpenIZ.Patient.findAsync({query:t.search.query,continueWith:function(n){t.search.results=n;i();t.$apply()},onException:function(n){OpenIZ.App.toast(n.message)},"finally":function(){OpenIZ.App.hideWait()}}))};t.search.previous=t.search.previous||function(){(OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text")),t.search.paging.current!=1)&amp;&amp;(t.search.paging.current--,t.search.query._offset=(t.search.paging.current-1)*t.search.paging.size,t.search.query._count=t.search.paging.size,OpenIZ.Patient.findAsync({query:t.search.query,continueWith:function(n){t.search.results=n;i();t.$apply()},onException:function(n){OpenIZ.App.toast(n.message)},"finally":function(){OpenIZ.App.hideWait()}}))};t.search.goPage=t.search.goPage||function(n){OpenIZ.App.showWait(OpenIZ.Localization.getString("locale.dialog.wait.text"));t.search.paging.current=n;t.search.query._offset=(t.search.paging.current-1)*t.search.paging.size;t.search.query._count=t.search.paging.size;OpenIZ.Patient.findAsync({query:t.search.query,continueWith:function(n){t.search.results=n;i();t.$apply()},onException:function(n){OpenIZ.App.toast(n.message)},"finally":function(){OpenIZ.App.hideWait()}})};t.act={};t.startEncounter=function(n){t.doStartEncounter(n)}}]);</contentText>
  </asset>
  <asset name="controllers/common/patients/view/partials/demographic-summary.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-11-8
 */

/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/bootstrap.min.js"/&gt;
//demographics-summary-controller

/*
 * Copyright 2016 PATH International
 * Developed by Mohawk College of Applied Arts and Technology 
 *
 * Licensed under Creative Commons ShareAlike Attribution Version 4.0 (the "License"); 
 * you may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * https://creativecommons.org/licenses/by-sa/4.0/legalcode
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: khannan
 * Date: 2016-9-10
 */

layoutApp.controller('DemographicSummaryController', ['$scope', function ($scope) {

}]);
</contentText>
  </asset>
  <asset name="controllers/common/patients/view/partials/yellowcard.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-11-14
 */

/// &lt;refernece path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;

layoutApp.controller('YellowCardController', ['$scope', function ($scope) {
    //    $('.oiz-vaccination-history').each(function (i, e) {
    // Get the current scope that we're in
    //        var scope = angular.element(e).scope();

    var scope = $scope.$parent;
    // Init data
    scope.patient = scope.patient || new OpenIZModel.Patient({});
    scope.patient.participation = scope.patient.participation || {};
    scope.display = scope.display || {};

    // Iterate through vaccinations and organize them by antigen
    // TODO: Change this to be an AJAX call
    scope.display._vaccineAdministrations = {};

    scope.$watch(function (s) { return s.encounters != undefined ? s.encounters.length : null; }, function (newValue, oldValue) {
        
        if (newValue != null &amp;&amp; newValue != 0) {

            if (scope.encounters) {
                // Sort based on dose
                var oldIndex = oldValue == undefined ? 0 : oldValue;
                var newEncounters = scope.encounters.slice(oldIndex, newValue);
                

                // Record target

                for (var ptcpt in newEncounters) {

                    var acts = [];

                    // Patient encounters are the grouping of objects
                    var participation = newEncounters[ptcpt];
                    if (participation.$type != 'PatientEncounter')
                        acts.push(participation);
                    else
                        acts = $.map(participation.relationship.HasComponent, function (e) { return e.targetModel; });

                    for (var act in acts) {

                        var model = acts[act];
                        // Ignore anything except substance admins
                        if (model.$type != 'SubstanceAdministration' || model.typeConceptModel == undefined || (model.typeConceptModel.mnemonic != 'InitialImmunization' &amp;&amp; model.typeConceptModel.mnemonic != 'Immunization' &amp;&amp; model.typeConceptModel.mnemonic != 'BoosterImmunization'))
                            continue;
                        var antigenId = model.participation.Product.playerModel.name.Assigned.component.$other.value;
                        if (scope.display._vaccineAdministrations[antigenId] == null) {
                            scope.display._vaccineAdministrations[antigenId] = [];
                            for (var i = 0; i &lt; model.doseSequence; i++)
                                scope.display._vaccineAdministrations[antigenId].push(null);
                            //model._enabled = true;
                        }

                        if(model.moodConcept != OpenIZModel.ActMoodKeys.Eventoccurrence &amp;&amp; scope.display._vaccineAdministrations[antigenId][model.doseSequence] == null ||
                            (model.moodConcept == OpenIZModel.ActMoodKeys.Eventoccurrence)
                            )
                            scope.display._vaccineAdministrations[antigenId][model.doseSequence] = model;
                        //               scope.$apply();
                    }
                    ;;
                   
                }

            }
        }
    });
}]);</contentText>
  </asset>
  <asset name="controllers/common/security/forgotpassword.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-10-11
 */

/// &lt;reference path="~/js/openiz.js"/&gt;
layoutApp.controller('ForgotPasswordController', ['$scope', '$window', function ($scope, $window) {

    $scope.resetRequest = {
        purpose: "PasswordReset"
    };

    $scope.displayPage = "#usernameTab";

    // Get mechanisms
    OpenIZ.Authentication.getTfaMechanisms({
        continueWith: function (data) {
            $scope.tfaMechanisms = data;
            $scope.$apply();
        },
        onException: function (ex) {
            OpenIZ.App.toast(ex.message || ex);
        }
    });
    
    $("a[data-toggle='tab'][href='#changePasswordTab']").on('shown.bs.tab', function () {
        $scope.onNext = function () {
            if (!OpenIZ.App.getOnlineState()) {
                alert(OpenIZ.Localization.getString("locale.error.onlineOnly"));
                return false;
            }

            // Try to change the password
            OpenIZ.App.showWait();
            OpenIZ.Authentication.setPasswordAsync({
                userName: $scope.resetRequest.userName,
                password: $scope.resetRequest.password,
                continueWith: function (data) {
                    OpenIZ.App.toast(OpenIZ.Localization.getString("locale.alert.updateSuccessful"));

                    // Authenticate fully
                    OpenIZ.Authentication.loginAsync({
                        userName: $scope.resetRequest.userName,
                        password: $scope.resetRequest.password,
                        continueWith: function (session) {
                            if (session == null) {
                                alert(OpenIZ.Localization.getString("err_oauth2_invalid_grant"));
                            }
                            else if (OpenIZ.urlParams["returnUrl"] != null)
                                $window.location.reload();
                        },
                        onException: function (exception) {
                            alert(exception.message || exception);
                        },
                        finally: function () {
                            OpenIZ.App.hideWait()
                        }
                    });
                },
                onException: function (exception) {
                    alert(exception.message || exception);
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            })

            return false;

        };
    });

    /** 
     * Set the reset mechanism
     */
    $scope.setMechanism = function (mechanism) {
        $scope.resetRequest.mechanismModel = mechanism;
        $scope.nextEnabled(true);
    }
    

    $scope.nextEnabled = function (state) {
        if (state)
            $("#nextButton").removeAttr("disabled");
        else
            $("#nextButton").attr("disabled", "disabled");
    };

    /**
     * Proceed to next page!
     */
    $scope.nextWizard = function () {

        // First we want to verify the step occurring 
        if ($scope.onNext == null || $scope.onNext()) {
            $("#forgotPasswordWizard li.active~li:first a").tab('show');
            $scope.nextEnabled(false);
        }
    }

    /** 
     * Send the reset function
     */
    $scope.sendReset = function () {

        // Next step will be verification ... set that up
        $scope.onNext = function () {

            // Online only
            if (!OpenIZ.App.getOnlineState()) {
                alert(OpenIZ.Localization.getString("locale.error.onlineOnly"));
                return false;
            }

            // Try to use the login code
            OpenIZ.App.showWait();
            OpenIZ.Authentication.loginAsync({
                userName: $scope.resetRequest.userName,
                tfaSecret: $scope.resetRequest.tfaSecret,
                continueWith: function (data) {
                    // Set scope next
                    $scope.onNext = null;
                    $scope.nextWizard();
                },
                onException: function (exception) {
                    alert(exception.message || exception);
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            });
            return false;
        }

        // Online only
        if (!OpenIZ.App.getOnlineState()) {
            alert(OpenIZ.Localization.getString("locale.error.onlineOnly"));
            return false;
        }

        OpenIZ.App.showWait();
        OpenIZ.Authentication.sendTfaSecretAsync({
            data: $scope.resetRequest,
            continueWith: function (data) {
                $scope.resetResponse = true;
                $scope.$apply();
            },
            onException: function (ex) {
                alert(ex.message || ex);
            },
            finally: function () {
                OpenIZ.App.hideWait();
            }
        });
    };

}]);</contentText>
  </asset>
  <asset name="controllers/common/security/login.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */

/// &lt;reference path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/bootstrap.min.js"/&gt;

layoutApp.controller('LoginPartController', ['$scope', '$window', function ($scope, $window) {
        // Get the current scope that we're in

        $scope.showPasswordReset = $scope.showPasswordReset || function () {
            $('#passwordResetDialog').modal('show');
        };

        $scope.login = $scope.login || function (form, username, password) {

            if (!form.$valid)
            {
                alert(OpenIZ.Localization.getString("locale.security.login.invalid"));
                return;
            }
            OpenIZ.App.showWait();
            OpenIZ.Authentication.loginAsync({
                userName: username,
                password: password,
                continueWith: function (session) {
                    if (session == null) {
                        alert(OpenIZ.Localization.getString("err_oauth2_invalid_grant"));
                    }
                    else {
                        if(window.location.hash == "")
                            window.location.hash = "#/";
                        $window.location.reload();
                    }
                },
                onException: function (ex) {
                    OpenIZ.App.hideWait();


                if (typeof (ex) == "string")
                    alert(ex);
                else if (ex.message != undefined)
                    alert("" + ex.message + " - " + ex.details);
                else
                    alert(ex);
            }
        });
    }; // scope.login

        
}]);</contentText>
  </asset>
  <asset name="controllers/common/security/login.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-24
 */
layoutApp.controller("LoginPartController",["$scope","$window",function(n,t){n.showPasswordReset=n.showPasswordReset||function(){$("#passwordResetDialog").modal("show")};n.login=n.login||function(n,i,r){if(!n.$valid){alert(OpenIZ.Localization.getString("locale.security.login.invalid"));return}OpenIZ.App.showWait();OpenIZ.Authentication.loginAsync({userName:i,password:r,continueWith:function(n){n==null?alert(OpenIZ.Localization.getString("err_oauth2_invalid_grant")):(window.location.hash==""&amp;&amp;(window.location.hash="#/"),t.location.reload())},onException:function(n){OpenIZ.App.hideWait();typeof n=="string"?alert(n):n.message!=undefined?alert(""+n.message+" - "+n.details):alert(n)}})}}]);</contentText>
  </asset>
  <asset name="controllers/debug/about.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */

/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;

layoutApp.controller('AboutApplicationController', ['$scope', function ($scope) {

    $scope.data = {};
    // Get information asynchronously
    OpenIZ.App.getInfoAsync({
        continueWith: function (data) {
            $scope.about = data;
            $scope.$apply();
            OpenIZ.App.getLogInfoAsync({
                continueWith: function (data) {
                    $scope.about.logInfo = data;
                    $scope.$apply();
                    OpenIZ.App.getLogInfoAsync({
                        query: { _id: $scope.about.logInfo[0].id },
                        continueWith: function (data) {
                            $scope.log = data[0];
                            $scope.logLength = 1024;
                            $scope.log.text = data[0].text.substring(data[0].text.length - $scope.logLength, data[0].text.length);
                            $scope.$apply();
                        }
                    });
                }
            });
        }
    });

    $scope.log = { size: 0 };
    $scope.logLength = 1024;
    // Load log file contents
    $scope.loadLogContents = function () {
        OpenIZ.App.getLogInfoAsync({
            query : { _id : $scope.logid },
            continueWith: function (data) {
                $scope.log=data[0];
                $scope.log.text = data[0].text.substring(data[0].text.length - $scope.logLength, data[0].text.length);
                $scope.$apply();
            }
        });
    };
}]);</contentText>
  </asset>
  <asset name="controllers/debug/feedback.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */

/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;

</contentText>
  </asset>
  <asset name="controllers/debug/report.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */

/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;

layoutApp.controller('ReportBugController', ['$scope', '$rootScope', function ($scope, $rootScope) {

    $rootScope.$watch('session', function(n, o) {
        if(n != null)
            $scope.report = {
                submitterKey: $rootScope.session.entity.id,
                submitterModel: $rootScope.session.entity,
                _includeData: true
            };
    });


    // Cancel
    $scope.close = function (form) {
        if(form.$touched &amp;&amp; confirm(OpenIZ.Localization.getString("locale.confirm.loseChanges")) || !form.$touched)
            window.history.back();
    }

    // Submit
    $scope.submitBugReport = function (form) {
        if (form.$invalid) {
            alert(OpenIZ.Localization.getString("locale.common.invalidForm"));
            return;
        }

        // Submit
        OpenIZ.App.showWait();
        OpenIZ.App.submitBugReportAsync({
            data: $scope.report,
            continueWith: function (data) {
                $scope.report = data;
                $scope.$apply();
            },
            onException: function (error) {
                if (error.message)
                    alert(error.message);
                else
                    alert(error);
            },
            finally: function () {
                OpenIZ.App.hideWait();
            }
        });
    }
}]);</contentText>
  </asset>
  <asset name="controllers/layouts/navbar.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */

/// &lt;reference path="~/js/openiz-model.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="~/lib/jquery.min.js"/&gt;
layoutApp.controller('LayoutController', ['$scope', '$interval', '$rootScope', '$window', function ($scope, $interval, $rootScope, $window) {
    // Add menu items
    OpenIZ.App.getMenusAsync({
        continueWith: function (menus) {
            $scope.menuItems = menus;
            $scope.$applyAsync();
        }
    });
    
    
    // Perform a logout of the session
    $scope.logout = $scope.logout || function ()
    {
        if (confirm(OpenIZ.Localization.getString('locale.layout.navbar.logout.confirm')))
        {
            OpenIZ.Authentication.abandonSession({
                continueWith: function(data)
                {
                    console.log(data);
                    window.location.hash = "#/";
                    $window.location.reload();
                },
                onException: function(ex)
                {
                    console.log(ex);
                }
            });
        }
    };

    // Set locale
    $scope.setLocale = $scope.setLocale || function (locale) {
        OpenIZ.Localization.setLocale(locale);
        window.location.hash = "#/";
        $window.location.reload(true);
    };

    $scope.checkMessages = function () {
        OpenIZ.App.getAlertsAsync({
            query: {
                flags: "!2",
                _count: 5
            },
            continueWith: function (d) {
                if ($scope.messages == null || d.length != $scope.messages.length) {
                    $scope.messages = d;
                    $scope.$apply();
                }

                setTimeout($scope.checkMessages, 30000);
            }
        });
    };
    setTimeout($scope.checkMessages, 30000);
    $scope.checkMessages();
}]);
</contentText>
  </asset>
  <asset name="controllers/layouts/navbar.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-24
 */
layoutApp.controller("LayoutController",["$scope","$interval","$rootScope","$window",function(n,t,i,r){OpenIZ.App.getMenusAsync({continueWith:function(t){n.menuItems=t;n.$applyAsync()}});n.logout=n.logout||function(){confirm(OpenIZ.Localization.getString("locale.layout.navbar.logout.confirm"))&amp;&amp;OpenIZ.Authentication.abandonSession({continueWith:function(n){console.log(n);window.location.hash="#/";r.location.reload()},onException:function(n){console.log(n)}})};n.setLocale=n.setLocale||function(n){OpenIZ.Localization.setLocale(n);window.location.hash="#/";r.location.reload(!0)};n.checkMessages=function(){OpenIZ.App.getAlertsAsync({query:{flags:"!2",_count:5},continueWith:function(t){(n.messages==null||t.length!=n.messages.length)&amp;&amp;(n.messages=t,n.$apply());setTimeout(n.checkMessages,3e4)}})};setTimeout(n.checkMessages,3e4);n.checkMessages()}]);</contentText>
  </asset>
  <asset name="controllers/layouts/root.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="~/js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */

/// &lt;reference path="~/js/openiz.js"/&gt;
/// &lt;reference path="~/lib/angular.min.js"/&gt;
var layoutApp = angular.module('layout', ['openiz', 'ngSanitize', 'ui.router'])
    .config(['$compileProvider', '$stateProvider', '$urlRouterProvider', function ($compileProvider, $stateProvider, $urlRouterProvider) {
        $compileProvider.aHrefSanitizationWhitelist(/^\s*(http|tel):/);
        $compileProvider.imgSrcSanitizationWhitelist(/^\s*(http|tel):/);

        OpenIZ.UserInterface.states.forEach(function (state) {
            $stateProvider.state(state);
        });

        //$urlRouterProvider.otherwise('/');

    }])
    .run(function ($rootScope) {

        // HACK: Sometimes HASH is empty ... ugh... 
        // Once we fix the panels and tabs in BS this can be removed
        if (window.location.hash == "")
            window.location.hash = "#/";

        OpenIZ.Configuration.getConfigurationAsync({
            continueWith: function (config) {
                $rootScope.system = {};
                $rootScope.system.config = config;
                $rootScope.$apply();
            }
        })
        $rootScope.$on("$stateChangeError", console.log.bind(console));

        $rootScope.page = {
            title: OpenIZ.App.getCurrentAssetTitle(),
            loadTime: new Date(),
            maxEventTime: new Date().tomorrow(), // Dislike Javascript
            minEventTime: new Date().yesterday(), // quite a bit
            locale: OpenIZ.Localization.getLocale(),
            onlineState: OpenIZ.App.getOnlineState()
        };

        setInterval(function () {
            $rootScope.page.onlineState = OpenIZ.App.getOnlineState();
            $rootScope.$applyAsync();
        }, 10000);


        // Get current session
        OpenIZ.Authentication.getSessionAsync({
            continueWith: function (session) {
                $rootScope.session = session;
                if (session != null &amp;&amp; session.entity != null) {
                    session.entity.telecom = session.entity.telecom || {};
                    if (Object.keys(session.entity.telecom).length == 0)
                        session.entity.telecom.MobilePhone = { value: "" };
                }
                $rootScope.$apply();
            }
        });

        $rootScope.changeInputType = function (controlId, type) {
            $(controlId).attr('type', type);
            if ($(controlId).attr('data-max-' + type) != null) {
                $(controlId).attr('max', $(controlId).attr('data-max-' + type));
            }
        };

        $rootScope.OpenIZ = OpenIZ;
    });


/**
 * @summary The queryUrlParameterService is used to get url parameters.
 *
 * @description The purpose of this service is to get url parameters.
 * @namespace queryUrlParameterService
 */
layoutApp.service('queryUrlParameterService', [function () {

    /**
     * @summary Gets the url parameters of the current page and returns an object with the URL parameter names and values as key-value pairs.
     * @memberof queryUrlParameterService
     * @method
     * @example
     * var params = getUrlParameters();
     * var id = params.id;
     * @returns An object of parameters from the URL of the current page.
     */
    function getUrlParameters() {
        var url = window.location.href;
        var regex = /[\?|\&amp;]([^=]+)\=([^&amp;]+)/g;
        var params = {};

        while ((match = regex.exec(url)) != null) {
            params[match[1]] = match[2];
        }

        return params;
    }

    var parameterService = {
        getUrlParameters: getUrlParameters
    }

    return parameterService;
}]);

angular.element(document).ready(function () {
    $("[data-toggle=popover]").popover({ container: 'body' });
    $('[data-toggle=popover]').on('shown.bs.popover', function () {
        $('[data-toggle=popover]').not(this).popover('hide');
    })
    $('#initialBlock').remove();
    $('#waitModal').removeClass('in');
    $('#waitModal').removeAttr('style');
    //OpenIZ.locale = OpenIZ.Localization.getLocale();
});
</contentText>
  </asset>
  <asset name="controllers/layouts/root.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-24
 */
var layoutApp=angular.module("layout",["openiz","ngSanitize","ui.router"]).config(["$compileProvider","$stateProvider","$urlRouterProvider",function(n,t){n.aHrefSanitizationWhitelist(/^\s*(http|tel):/);n.imgSrcSanitizationWhitelist(/^\s*(http|tel):/);OpenIZ.UserInterface.states.forEach(function(n){t.state(n)})}]).run(function(n){window.location.hash==""&amp;&amp;(window.location.hash="#/");OpenIZ.Configuration.getConfigurationAsync({continueWith:function(t){n.system={};n.system.config=t;n.$apply()}});n.$on("$stateChangeError",console.log.bind(console));n.page={title:OpenIZ.App.getCurrentAssetTitle(),loadTime:new Date,maxEventTime:(new Date).tomorrow(),minEventTime:(new Date).yesterday(),locale:OpenIZ.Localization.getLocale(),onlineState:OpenIZ.App.getOnlineState()};setInterval(function(){n.page.onlineState=OpenIZ.App.getOnlineState();n.$applyAsync()},1e4);OpenIZ.Authentication.getSessionAsync({continueWith:function(t){n.session=t;t!=null&amp;&amp;t.entity!=null&amp;&amp;(t.entity.telecom=t.entity.telecom||{},Object.keys(t.entity.telecom).length==0&amp;&amp;(t.entity.telecom.MobilePhone={value:""}));n.$apply()}});n.changeInputType=function(n,t){$(n).attr("type",t);$(n).attr("data-max-"+t)!=null&amp;&amp;$(n).attr("max",$(n).attr("data-max-"+t))};n.OpenIZ=OpenIZ});layoutApp.service("queryUrlParameterService",[function(){function n(){for(var t=window.location.href,i=/[\?|\&amp;]([^=]+)\=([^&amp;]+)/g,n={};(match=i.exec(t))!=null;)n[match[1]]=match[2];return n}return{getUrlParameters:n}}]);angular.element(document).ready(function(){$("[data-toggle=popover]").popover({container:"body"});$("[data-toggle=popover]").on("shown.bs.popover",function(){$("[data-toggle=popover]").not(this).popover("hide")});$("#initialBlock").remove();$("#waitModal").removeClass("in");$("#waitModal").removeAttr("style")});</contentText>
  </asset>
  <asset name="controllers/settings/password.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="../../js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */

/// &lt;reference path="../../js/openiz.js"/&gt;

layoutApp.controller('UserPasswordController', ['$scope', '$rootScope', function ($scope, $rootScope) {
    
    $scope.changePassword = function (userName, existing, password, confirmation) {

        // Are we even online?
        if (!$rootScope.page.onlineState)
            alert(OpenIZ.Localization.getString("locale.error.onlineOnly"));
        else if(password != confirmation) 
            alert(OpenIZ.Localization.getString("locale.settings.passwordNoMatch"));
        else {
            
            OpenIZ.App.showWait();

            // Re-authenticate the user to verify their current password
            OpenIZ.Authentication.loginAsync({
                userName: userName,
                password: existing,
                continueWith: function (session) {
                    if(session != null) // success for auth, let's change the password
                        OpenIZ.Authentication.setPasswordAsync({
                            userName: userName,
                            password: password,
                            continueWith: function (result) {
                                OpenIZ.App.toast(OpenIZ.Localization.getString("locale.preferences.passwordChanged"));
                            },
                            onException: function (ex) {
                                if (ex.message != null)
                                    alert(ex.message);
                                else
                                    alert(ex);
                            },
                            finally: function () {
                                OpenIZ.App.hideWait();
                            }
                        })
                },
                onException: function (ex) { // Some error with authentication
                    if (ex.message != null)
                        alert(ex.message);
                    else
                        alert(ex);
                    OpenIZ.App.hideWait(); // We won't make it to the other finally :( 
                }
            })
        }
    };
}]);</contentText>
  </asset>
  <asset name="controllers/settings/preferences.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="../../js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */

/// &lt;reference path="../../js/openiz.js"/&gt;

layoutApp.controller('PreferencesController', ['$scope', function ($scope) {
    $scope.isNetworkAvailable = function () {
        return OpenIZ.App.networkAvailable();
    };
}]);</contentText>
  </asset>
  <asset name="controllers/settings/profile.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="../../js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */

/// &lt;reference path="~/lib/angular.min.js"/&gt;
/// &lt;reference path="../../js/openiz.js"/&gt;
layoutApp.controller('UserProfileController', ['$scope', '$rootScope', function ($scope, $rootScope) {
    $scope.editObject = {};

    $rootScope.$watch('session', function (n, o) {
        if ($rootScope.session != null) {
            $scope.editObject = $rootScope.session;
            angular.copy($rootScope.session, $scope.editObject);
            
        }
    });

    $scope.saveProfile = function (userEntity) {

        OpenIZ.App.showWait();

        // Fix the type of telecom
        var telKey = Object.keys(userEntity.telecom)[0];
        userEntity.telecom.$other = userEntity.telecom[telKey];
        delete userEntity.telecom[telKey];
        
        // When we update the facility we clear the model properties
        userEntity.relationship.DedicatedServiceDeliveryLocation.targetModel = null;
        userEntity.securityUser = $rootScope.session.user.id;
        userEntity.statusConcept = 'C8064CBD-FA06-4530-B430-1A52F1530C27';

        // Update async
        OpenIZ.UserEntity.updateAsync({
            data: userEntity,
            continueWith: function (data) {
                OpenIZ.App.toast("Profile updated successfully");

                if (data.language !== undefined)
                {
                    OpenIZ.Localization.setLocale(data.language[0].languageCode);
                }

                window.location.reload();
            },
            onException: function (ex) {
                console.log(ex);
                OpenIZ.App.hideWait();

                OpenIZ.App.toast("Unable to update profile");
            }
        });
    };

    // HACK: Copy first telecom to $other for view

}]);</contentText>
  </asset>
  <asset name="controllers/settings/settings.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="../../js/openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */

/// &lt;reference path="../../js/openiz.js"/&gt;

layoutApp.controller('SettingsController', ['$scope', function ($scope) {

    if (OpenIZ.Authentication.$session == null)
        OpenIZ.Authentication.$session = {};

    OpenIZ.App.showWait();
    OpenIZ.Configuration.getConfigurationAsync({
        continueWith: function (config) {
            $scope.config = config;
            $scope.config.network.useProxy = $scope.config.network.proxyAddress != null;
            $scope.config.network.proxyAddress = $scope.config.network.proxyAddress || null;
            $scope.ui = {
                dataCollapsed: true,
                securityCollapsed: true
            };

            $scope.config.data.mode = "sync"; //OpenIZ.App.getService("SynchronizationManagerService") == null ?
            //OpenIZ.App.getService("ImsiPersistenceService") == null ? "offline" : "online" : "sync";
            $scope.config.data.sync = {
                event: [],
                enablePoll: OpenIZ.App.getService("ImsiPollingService") != null,
                pollInterval: OpenIZ.Configuration.getApplicationSetting("imsi.poll.interval")
            };
            $scope.config.log.mode = $scope.config.log.trace[0].filter || "Warning";
            $scope.config.security.hasher = OpenIZ.App.getService("IPasswordHashingService") || "SHA256PasswordHasher";

            $scope.config.security.offline = {
                enable: false
            };
            $scope.$apply();
        },
        onException : function(error) {
            if(error.message != null)
                alert(error.message);
            else
                alert(error);
        },
        finally: function () {
            OpenIZ.App.hideWait();
        }
    });
    
    
    $scope.master = {};

    // leave realm
    $scope.leaveRealm = function (realm) {
        if (confirm(OpenIZ.Localization.getString("locale.settings.confirm.leaveRealm")))
            OpenIZ.Configuration.leaveRealmAsync();
    };

    // join realm
    $scope.joinRealm = function (realm) {

        var doJoin = function (force) {
            OpenIZ.App.showWait();

            OpenIZ.Configuration.joinRealmAsync({
                domain: realm.domain,
                deviceName: realm.deviceName,
                force: force,
                continueWith: function (data) {
                    $scope.config.realmName = data.realmName;
                    alert(OpenIZ.Localization.getString("locale.settings.status.joinRealm"));
                },
                onException: function (error) {
                    if (error.type == 'DuplicateNameException')
                        if (confirm(OpenIZ.Localization.getString('locale.settings.status.duplicateName')))
                            doJoin(true);
                        else {
                            if (error.message != null)
                                alert(error.message);
                            else
                                alert(error);
                        }
                },
                finally: function () {
                    OpenIZ.App.hideWait();
                }
            });
        };
        OpenIZ.Authentication.$elevationCredentials.continueWith = doJoin;
        doJoin();
    };

    // Save config
    $scope.save = function (config) {
        
        if ($scope.config.realmName == null)
            alert(OpenIZ.Localization.getString("locale.settings.error.noRealm"));
        else {
            OpenIZ.App.showWait();
            OpenIZ.Configuration.saveAsync({
                data: config,
                continueWith: function () {
                    OpenIZ.App.close();
                }
            });
        }
    };
}]);
</contentText>
  </asset>
  <asset name="controllers/settings/settings.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-24
 */
layoutApp.controller("SettingsController",["$scope",function(n){OpenIZ.Authentication.$session==null&amp;&amp;(OpenIZ.Authentication.$session={});OpenIZ.App.showWait();OpenIZ.Configuration.getConfigurationAsync({continueWith:function(t){n.config=t;n.config.network.useProxy=n.config.network.proxyAddress!=null;n.config.network.proxyAddress=n.config.network.proxyAddress||null;n.ui={dataCollapsed:!0,securityCollapsed:!0};n.config.data.mode="sync";n.config.data.sync={event:[],enablePoll:OpenIZ.App.getService("ImsiPollingService")!=null,pollInterval:OpenIZ.Configuration.getApplicationSetting("imsi.poll.interval")};n.config.log.mode=n.config.log.trace[0].filter||"Warning";n.config.security.hasher=OpenIZ.App.getService("IPasswordHashingService")||"SHA256PasswordHasher";n.config.security.offline={enable:!1};n.$apply()},onException:function(n){n.message!=null?alert(n.message):alert(n)},"finally":function(){OpenIZ.App.hideWait()}});n.master={};n.leaveRealm=function(){confirm(OpenIZ.Localization.getString("locale.settings.confirm.leaveRealm"))&amp;&amp;OpenIZ.Configuration.leaveRealmAsync()};n.joinRealm=function(t){var i=function(r){OpenIZ.App.showWait();OpenIZ.Configuration.joinRealmAsync({domain:t.domain,deviceName:t.deviceName,force:r,continueWith:function(t){n.config.realmName=t.realmName;alert(OpenIZ.Localization.getString("locale.settings.status.joinRealm"))},onException:function(n){n.type=="DuplicateNameException"&amp;&amp;(confirm(OpenIZ.Localization.getString("locale.settings.status.duplicateName"))?i(!0):n.message!=null?alert(n.message):alert(n))},"finally":function(){OpenIZ.App.hideWait()}})};OpenIZ.Authentication.$elevationCredentials.continueWith=i;i()};n.save=function(t){n.config.realmName==null?alert(OpenIZ.Localization.getString("locale.settings.error.noRealm")):(OpenIZ.App.showWait(),OpenIZ.Configuration.saveAsync({data:t,continueWith:function(){OpenIZ.App.close()}}))}}]);</contentText>
  </asset>
  <asset name="css/bootstrap-tokenfield.min.css" mimeType="text/css">
    <contentText>/*!
 * bootstrap-tokenfield
 * https://github.com/sliptree/bootstrap-tokenfield
 * Copyright 2013-2014 Sliptree and other contributors; Licensed MIT
 */@-webkit-keyframes blink{0%{border-color:#ededed}100%{border-color:#b94a48}}@-moz-keyframes blink{0%{border-color:#ededed}100%{border-color:#b94a48}}@keyframes blink{0%{border-color:#ededed}100%{border-color:#b94a48}}.tokenfield{height:auto;min-height:34px;padding-bottom:0}.tokenfield.focus{border-color:#66afe9;outline:0;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.tokenfield .token{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;display:inline-block;border:1px solid #d9d9d9;background-color:#ededed;white-space:nowrap;margin:-1px 5px 5px 0;height:22px;vertical-align:top;cursor:default}.tokenfield .token:hover{border-color:#b9b9b9}.tokenfield .token.active{border-color:#52a8ec;border-color:rgba(82,168,236,.8)}.tokenfield .token.duplicate{border-color:#ebccd1;-webkit-animation-name:blink;animation-name:blink;-webkit-animation-duration:.1s;animation-duration:.1s;-webkit-animation-direction:normal;animation-direction:normal;-webkit-animation-timing-function:ease;animation-timing-function:ease;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.tokenfield .token.invalid{background:0 0;border:1px solid transparent;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;border-bottom:1px dotted #d9534f}.tokenfield .token.invalid.active{background:#ededed;border:1px solid #ededed;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.tokenfield .token .token-label{display:inline-block;overflow:hidden;text-overflow:ellipsis;padding-left:4px;vertical-align:top}.tokenfield .token .close{font-family:Arial;display:inline-block;line-height:100%;font-size:1.1em;line-height:1.49em;margin-left:5px;float:none;height:100%;vertical-align:top;padding-right:4px}.tokenfield .token-input{background:0 0;width:60px;min-width:60px;border:0;height:20px;padding:0;margin-bottom:6px;-webkit-box-shadow:none;box-shadow:none}.tokenfield .token-input:focus{border-color:transparent;outline:0;-webkit-box-shadow:none;box-shadow:none}.tokenfield.disabled{cursor:not-allowed;background-color:#eee}.tokenfield.disabled .token-input{cursor:not-allowed}.tokenfield.disabled .token:hover{cursor:not-allowed;border-color:#d9d9d9}.tokenfield.disabled .token:hover .close{cursor:not-allowed;opacity:.2;filter:alpha(opacity=20)}.has-warning .tokenfield.focus{border-color:#66512c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-error .tokenfield.focus{border-color:#843534;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-success .tokenfield.focus{border-color:#2b542c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.tokenfield.input-sm,.input-group-sm .tokenfield{min-height:30px;padding-bottom:0}.input-group-sm .token,.tokenfield.input-sm .token{height:20px;margin-bottom:4px}.input-group-sm .token-input,.tokenfield.input-sm .token-input{height:18px;margin-bottom:5px}.tokenfield.input-lg,.input-group-lg .tokenfield{height:auto;min-height:45px;padding-bottom:4px}.input-group-lg .token,.tokenfield.input-lg .token{height:25px}.input-group-lg .token-label,.tokenfield.input-lg .token-label{line-height:23px}.input-group-lg .token .close,.tokenfield.input-lg .token .close{line-height:1.3em}.input-group-lg .token-input,.tokenfield.input-lg .token-input{height:23px;line-height:23px;margin-bottom:6px;vertical-align:top}.tokenfield.rtl{direction:rtl;text-align:right}.tokenfield.rtl .token{margin:-1px 0 5px 5px}.tokenfield.rtl .token .token-label{padding-left:0;padding-right:4px}</contentText>
  </asset>
  <asset name="css/bootstrap.min.css" mimeType="text/css">
    <contentText>html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0;font-size:2em}mark{color:#000;background:#ff0}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{height:0;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{margin:0;font:inherit;color:inherit}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{padding:.35em .625em .75em;margin:0 2px;border:1px solid silver}legend{padding:0;border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-spacing:0;border-collapse:collapse}td,th{padding:0}/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */@media print{*,:after,:before{color:#000!important;text-shadow:none!important;background:0 0!important;-webkit-box-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="javascript:"]:after,a[href^="#"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.navbar{display:none}.btn&gt;.caret,.dropup&gt;.btn&gt;.caret{border-top-color:#000!important}.label{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}@font-face{font-family:'Glyphicons Halflings';src:url(fonts/glyphicons-halflings-regular.eot);src:url(fonts/glyphicons-halflings-regular.eot?#iefix) format('embedded-opentype'),url(fonts/glyphicons-halflings-regular.woff2) format('woff2'),url(fonts/glyphicons-halflings-regular.woff) format('woff'),url(fonts/glyphicons-halflings-regular.ttf) format('truetype'),url(fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular) format('svg')}.glyphicon{position:relative;top:1px;display:inline-block;font-family:'Glyphicons Halflings';font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.glyphicon-asterisk:before{content:"\002a"}.glyphicon-plus:before{content:"\002b"}.glyphicon-eur:before,.glyphicon-euro:before{content:"\20ac"}.glyphicon-minus:before{content:"\2212"}.glyphicon-cloud:before{content:"\2601"}.glyphicon-envelope:before{content:"\2709"}.glyphicon-pencil:before{content:"\270f"}.glyphicon-glass:before{content:"\e001"}.glyphicon-music:before{content:"\e002"}.glyphicon-search:before{content:"\e003"}.glyphicon-heart:before{content:"\e005"}.glyphicon-star:before{content:"\e006"}.glyphicon-star-empty:before{content:"\e007"}.glyphicon-user:before{content:"\e008"}.glyphicon-film:before{content:"\e009"}.glyphicon-th-large:before{content:"\e010"}.glyphicon-th:before{content:"\e011"}.glyphicon-th-list:before{content:"\e012"}.glyphicon-ok:before{content:"\e013"}.glyphicon-remove:before{content:"\e014"}.glyphicon-zoom-in:before{content:"\e015"}.glyphicon-zoom-out:before{content:"\e016"}.glyphicon-off:before{content:"\e017"}.glyphicon-signal:before{content:"\e018"}.glyphicon-cog:before{content:"\e019"}.glyphicon-trash:before{content:"\e020"}.glyphicon-home:before{content:"\e021"}.glyphicon-file:before{content:"\e022"}.glyphicon-time:before{content:"\e023"}.glyphicon-road:before{content:"\e024"}.glyphicon-download-alt:before{content:"\e025"}.glyphicon-download:before{content:"\e026"}.glyphicon-upload:before{content:"\e027"}.glyphicon-inbox:before{content:"\e028"}.glyphicon-play-circle:before{content:"\e029"}.glyphicon-repeat:before{content:"\e030"}.glyphicon-refresh:before{content:"\e031"}.glyphicon-list-alt:before{content:"\e032"}.glyphicon-lock:before{content:"\e033"}.glyphicon-flag:before{content:"\e034"}.glyphicon-headphones:before{content:"\e035"}.glyphicon-volume-off:before{content:"\e036"}.glyphicon-volume-down:before{content:"\e037"}.glyphicon-volume-up:before{content:"\e038"}.glyphicon-qrcode:before{content:"\e039"}.glyphicon-barcode:before{content:"\e040"}.glyphicon-tag:before{content:"\e041"}.glyphicon-tags:before{content:"\e042"}.glyphicon-book:before{content:"\e043"}.glyphicon-bookmark:before{content:"\e044"}.glyphicon-print:before{content:"\e045"}.glyphicon-camera:before{content:"\e046"}.glyphicon-font:before{content:"\e047"}.glyphicon-bold:before{content:"\e048"}.glyphicon-italic:before{content:"\e049"}.glyphicon-text-height:before{content:"\e050"}.glyphicon-text-width:before{content:"\e051"}.glyphicon-align-left:before{content:"\e052"}.glyphicon-align-center:before{content:"\e053"}.glyphicon-align-right:before{content:"\e054"}.glyphicon-align-justify:before{content:"\e055"}.glyphicon-list:before{content:"\e056"}.glyphicon-indent-left:before{content:"\e057"}.glyphicon-indent-right:before{content:"\e058"}.glyphicon-facetime-video:before{content:"\e059"}.glyphicon-picture:before{content:"\e060"}.glyphicon-map-marker:before{content:"\e062"}.glyphicon-adjust:before{content:"\e063"}.glyphicon-tint:before{content:"\e064"}.glyphicon-edit:before{content:"\e065"}.glyphicon-share:before{content:"\e066"}.glyphicon-check:before{content:"\e067"}.glyphicon-move:before{content:"\e068"}.glyphicon-step-backward:before{content:"\e069"}.glyphicon-fast-backward:before{content:"\e070"}.glyphicon-backward:before{content:"\e071"}.glyphicon-play:before{content:"\e072"}.glyphicon-pause:before{content:"\e073"}.glyphicon-stop:before{content:"\e074"}.glyphicon-forward:before{content:"\e075"}.glyphicon-fast-forward:before{content:"\e076"}.glyphicon-step-forward:before{content:"\e077"}.glyphicon-eject:before{content:"\e078"}.glyphicon-chevron-left:before{content:"\e079"}.glyphicon-chevron-right:before{content:"\e080"}.glyphicon-plus-sign:before{content:"\e081"}.glyphicon-minus-sign:before{content:"\e082"}.glyphicon-remove-sign:before{content:"\e083"}.glyphicon-ok-sign:before{content:"\e084"}.glyphicon-question-sign:before{content:"\e085"}.glyphicon-info-sign:before{content:"\e086"}.glyphicon-screenshot:before{content:"\e087"}.glyphicon-remove-circle:before{content:"\e088"}.glyphicon-ok-circle:before{content:"\e089"}.glyphicon-ban-circle:before{content:"\e090"}.glyphicon-arrow-left:before{content:"\e091"}.glyphicon-arrow-right:before{content:"\e092"}.glyphicon-arrow-up:before{content:"\e093"}.glyphicon-arrow-down:before{content:"\e094"}.glyphicon-share-alt:before{content:"\e095"}.glyphicon-resize-full:before{content:"\e096"}.glyphicon-resize-small:before{content:"\e097"}.glyphicon-exclamation-sign:before{content:"\e101"}.glyphicon-gift:before{content:"\e102"}.glyphicon-leaf:before{content:"\e103"}.glyphicon-fire:before{content:"\e104"}.glyphicon-eye-open:before{content:"\e105"}.glyphicon-eye-close:before{content:"\e106"}.glyphicon-warning-sign:before{content:"\e107"}.glyphicon-plane:before{content:"\e108"}.glyphicon-calendar:before{content:"\e109"}.glyphicon-random:before{content:"\e110"}.glyphicon-comment:before{content:"\e111"}.glyphicon-magnet:before{content:"\e112"}.glyphicon-chevron-up:before{content:"\e113"}.glyphicon-chevron-down:before{content:"\e114"}.glyphicon-retweet:before{content:"\e115"}.glyphicon-shopping-cart:before{content:"\e116"}.glyphicon-folder-close:before{content:"\e117"}.glyphicon-folder-open:before{content:"\e118"}.glyphicon-resize-vertical:before{content:"\e119"}.glyphicon-resize-horizontal:before{content:"\e120"}.glyphicon-hdd:before{content:"\e121"}.glyphicon-bullhorn:before{content:"\e122"}.glyphicon-bell:before{content:"\e123"}.glyphicon-certificate:before{content:"\e124"}.glyphicon-thumbs-up:before{content:"\e125"}.glyphicon-thumbs-down:before{content:"\e126"}.glyphicon-hand-right:before{content:"\e127"}.glyphicon-hand-left:before{content:"\e128"}.glyphicon-hand-up:before{content:"\e129"}.glyphicon-hand-down:before{content:"\e130"}.glyphicon-circle-arrow-right:before{content:"\e131"}.glyphicon-circle-arrow-left:before{content:"\e132"}.glyphicon-circle-arrow-up:before{content:"\e133"}.glyphicon-circle-arrow-down:before{content:"\e134"}.glyphicon-globe:before{content:"\e135"}.glyphicon-wrench:before{content:"\e136"}.glyphicon-tasks:before{content:"\e137"}.glyphicon-filter:before{content:"\e138"}.glyphicon-briefcase:before{content:"\e139"}.glyphicon-fullscreen:before{content:"\e140"}.glyphicon-dashboard:before{content:"\e141"}.glyphicon-paperclip:before{content:"\e142"}.glyphicon-heart-empty:before{content:"\e143"}.glyphicon-link:before{content:"\e144"}.glyphicon-phone:before{content:"\e145"}.glyphicon-pushpin:before{content:"\e146"}.glyphicon-usd:before{content:"\e148"}.glyphicon-gbp:before{content:"\e149"}.glyphicon-sort:before{content:"\e150"}.glyphicon-sort-by-alphabet:before{content:"\e151"}.glyphicon-sort-by-alphabet-alt:before{content:"\e152"}.glyphicon-sort-by-order:before{content:"\e153"}.glyphicon-sort-by-order-alt:before{content:"\e154"}.glyphicon-sort-by-attributes:before{content:"\e155"}.glyphicon-sort-by-attributes-alt:before{content:"\e156"}.glyphicon-unchecked:before{content:"\e157"}.glyphicon-expand:before{content:"\e158"}.glyphicon-collapse-down:before{content:"\e159"}.glyphicon-collapse-up:before{content:"\e160"}.glyphicon-log-in:before{content:"\e161"}.glyphicon-flash:before{content:"\e162"}.glyphicon-log-out:before{content:"\e163"}.glyphicon-new-window:before{content:"\e164"}.glyphicon-record:before{content:"\e165"}.glyphicon-save:before{content:"\e166"}.glyphicon-open:before{content:"\e167"}.glyphicon-saved:before{content:"\e168"}.glyphicon-import:before{content:"\e169"}.glyphicon-export:before{content:"\e170"}.glyphicon-send:before{content:"\e171"}.glyphicon-floppy-disk:before{content:"\e172"}.glyphicon-floppy-saved:before{content:"\e173"}.glyphicon-floppy-remove:before{content:"\e174"}.glyphicon-floppy-save:before{content:"\e175"}.glyphicon-floppy-open:before{content:"\e176"}.glyphicon-credit-card:before{content:"\e177"}.glyphicon-transfer:before{content:"\e178"}.glyphicon-cutlery:before{content:"\e179"}.glyphicon-header:before{content:"\e180"}.glyphicon-compressed:before{content:"\e181"}.glyphicon-earphone:before{content:"\e182"}.glyphicon-phone-alt:before{content:"\e183"}.glyphicon-tower:before{content:"\e184"}.glyphicon-stats:before{content:"\e185"}.glyphicon-sd-video:before{content:"\e186"}.glyphicon-hd-video:before{content:"\e187"}.glyphicon-subtitles:before{content:"\e188"}.glyphicon-sound-stereo:before{content:"\e189"}.glyphicon-sound-dolby:before{content:"\e190"}.glyphicon-sound-5-1:before{content:"\e191"}.glyphicon-sound-6-1:before{content:"\e192"}.glyphicon-sound-7-1:before{content:"\e193"}.glyphicon-copyright-mark:before{content:"\e194"}.glyphicon-registration-mark:before{content:"\e195"}.glyphicon-cloud-download:before{content:"\e197"}.glyphicon-cloud-upload:before{content:"\e198"}.glyphicon-tree-conifer:before{content:"\e199"}.glyphicon-tree-deciduous:before{content:"\e200"}.glyphicon-cd:before{content:"\e201"}.glyphicon-save-file:before{content:"\e202"}.glyphicon-open-file:before{content:"\e203"}.glyphicon-level-up:before{content:"\e204"}.glyphicon-copy:before{content:"\e205"}.glyphicon-paste:before{content:"\e206"}.glyphicon-alert:before{content:"\e209"}.glyphicon-equalizer:before{content:"\e210"}.glyphicon-king:before{content:"\e211"}.glyphicon-queen:before{content:"\e212"}.glyphicon-pawn:before{content:"\e213"}.glyphicon-bishop:before{content:"\e214"}.glyphicon-knight:before{content:"\e215"}.glyphicon-baby-formula:before{content:"\e216"}.glyphicon-tent:before{content:"\26fa"}.glyphicon-blackboard:before{content:"\e218"}.glyphicon-bed:before{content:"\e219"}.glyphicon-apple:before{content:"\f8ff"}.glyphicon-erase:before{content:"\e221"}.glyphicon-hourglass:before{content:"\231b"}.glyphicon-lamp:before{content:"\e223"}.glyphicon-duplicate:before{content:"\e224"}.glyphicon-piggy-bank:before{content:"\e225"}.glyphicon-scissors:before{content:"\e226"}.glyphicon-bitcoin:before{content:"\e227"}.glyphicon-btc:before{content:"\e227"}.glyphicon-xbt:before{content:"\e227"}.glyphicon-yen:before{content:"\00a5"}.glyphicon-jpy:before{content:"\00a5"}.glyphicon-ruble:before{content:"\20bd"}.glyphicon-rub:before{content:"\20bd"}.glyphicon-scale:before{content:"\e230"}.glyphicon-ice-lolly:before{content:"\e231"}.glyphicon-ice-lolly-tasted:before{content:"\e232"}.glyphicon-education:before{content:"\e233"}.glyphicon-option-horizontal:before{content:"\e234"}.glyphicon-option-vertical:before{content:"\e235"}.glyphicon-menu-hamburger:before{content:"\e236"}.glyphicon-modal-window:before{content:"\e237"}.glyphicon-oil:before{content:"\e238"}.glyphicon-grain:before{content:"\e239"}.glyphicon-sunglasses:before{content:"\e240"}.glyphicon-text-size:before{content:"\e241"}.glyphicon-text-color:before{content:"\e242"}.glyphicon-text-background:before{content:"\e243"}.glyphicon-object-align-top:before{content:"\e244"}.glyphicon-object-align-bottom:before{content:"\e245"}.glyphicon-object-align-horizontal:before{content:"\e246"}.glyphicon-object-align-left:before{content:"\e247"}.glyphicon-object-align-vertical:before{content:"\e248"}.glyphicon-object-align-right:before{content:"\e249"}.glyphicon-triangle-right:before{content:"\e250"}.glyphicon-triangle-left:before{content:"\e251"}.glyphicon-triangle-bottom:before{content:"\e252"}.glyphicon-triangle-top:before{content:"\e253"}.glyphicon-console:before{content:"\e254"}.glyphicon-superscript:before{content:"\e255"}.glyphicon-subscript:before{content:"\e256"}.glyphicon-menu-left:before{content:"\e257"}.glyphicon-menu-right:before{content:"\e258"}.glyphicon-menu-down:before{content:"\e259"}.glyphicon-menu-up:before{content:"\e260"}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857143;color:#333;background-color:#fff}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#337ab7;text-decoration:none}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.carousel-inner&gt;.item&gt;a&gt;img,.carousel-inner&gt;.item&gt;img,.img-responsive,.thumbnail a&gt;img,.thumbnail&gt;img{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{display:inline-block;max-width:100%;height:auto;padding:4px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}[role=button]{cursor:pointer}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-weight:400;line-height:1;color:#777}.h1,.h2,.h3,h1,h2,h3{margin-top:20px;margin-bottom:10px}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small{font-size:65%}.h4,.h5,.h6,h4,h5,h6{margin-top:10px;margin-bottom:10px}.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-size:75%}.h1,h1{font-size:36px}.h2,h2{font-size:30px}.h3,h3{font-size:24px}.h4,h4{font-size:18px}.h5,h5{font-size:14px}.h6,h6{font-size:12px}p{margin:0 0 10px}.lead{margin-bottom:20px;font-size:16px;font-weight:300;line-height:1.4}@media (min-width:768px){.lead{font-size:21px}}.small,small{font-size:85%}.mark,mark{padding:.2em;background-color:#fcf8e3}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-justify{text-align:justify}.text-nowrap{white-space:nowrap}.text-lowercase{text-transform:lowercase}.text-uppercase{text-transform:uppercase}.text-capitalize{text-transform:capitalize}.text-muted{color:#777}.text-primary{color:#337ab7}a.text-primary:focus,a.text-primary:hover{color:#286090}.text-success{color:#3c763d}a.text-success:focus,a.text-success:hover{color:#2b542c}.text-info{color:#31708f}a.text-info:focus,a.text-info:hover{color:#245269}.text-warning{color:#8a6d3b}a.text-warning:focus,a.text-warning:hover{color:#66512c}.text-danger{color:#a94442}a.text-danger:focus,a.text-danger:hover{color:#843534}.bg-primary{color:#fff;background-color:#337ab7}a.bg-primary:focus,a.bg-primary:hover{background-color:#286090}.bg-success{background-color:#dff0d8}a.bg-success:focus,a.bg-success:hover{background-color:#c1e2b3}.bg-info{background-color:#d9edf7}a.bg-info:focus,a.bg-info:hover{background-color:#afd9ee}.bg-warning{background-color:#fcf8e3}a.bg-warning:focus,a.bg-warning:hover{background-color:#f7ecb5}.bg-danger{background-color:#f2dede}a.bg-danger:focus,a.bg-danger:hover{background-color:#e4b9b9}.page-header{padding-bottom:9px;margin:40px 0 20px;border-bottom:1px solid #eee}ol,ul{margin-top:0;margin-bottom:10px}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;margin-left:-5px;list-style:none}.list-inline&gt;li{display:inline-block;padding-right:5px;padding-left:5px}dl{margin-top:0;margin-bottom:20px}dd,dt{line-height:1.42857143}dt{font-weight:700}dd{margin-left:0}@media (min-width:768px){.dl-horizontal dt{float:left;width:160px;overflow:hidden;clear:left;text-align:right;text-overflow:ellipsis;white-space:nowrap}.dl-horizontal dd{margin-left:180px}}abbr[data-original-title],abbr[title]{cursor:help;border-bottom:1px dotted #777}.initialism{font-size:90%;text-transform:uppercase}blockquote{padding:10px 20px;margin:0 0 20px;font-size:17.5px;border-left:5px solid #eee}blockquote ol:last-child,blockquote p:last-child,blockquote ul:last-child{margin-bottom:0}blockquote .small,blockquote footer,blockquote small{display:block;font-size:80%;line-height:1.42857143;color:#777}blockquote .small:before,blockquote footer:before,blockquote small:before{content:'\2014 \00A0'}.blockquote-reverse,blockquote.pull-right{padding-right:15px;padding-left:0;text-align:right;border-right:5px solid #eee;border-left:0}.blockquote-reverse .small:before,.blockquote-reverse footer:before,.blockquote-reverse small:before,blockquote.pull-right .small:before,blockquote.pull-right footer:before,blockquote.pull-right small:before{content:''}.blockquote-reverse .small:after,.blockquote-reverse footer:after,.blockquote-reverse small:after,blockquote.pull-right .small:after,blockquote.pull-right footer:after,blockquote.pull-right small:after{content:'\00A0 \2014'}address{margin-bottom:20px;font-style:normal;line-height:1.42857143}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,"Courier New",monospace}code{padding:2px 4px;font-size:90%;color:#c7254e;background-color:#f9f2f4;border-radius:4px}kbd{padding:2px 4px;font-size:90%;color:#fff;background-color:#333;border-radius:3px;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,.25);box-shadow:inset 0 -1px 0 rgba(0,0,0,.25)}kbd kbd{padding:0;font-size:100%;font-weight:700;-webkit-box-shadow:none;box-shadow:none}pre{display:block;padding:9.5px;margin:0 0 10px;font-size:13px;line-height:1.42857143;color:#333;word-break:break-all;word-wrap:break-word;background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px}pre code{padding:0;font-size:inherit;color:inherit;white-space:pre-wrap;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{margin-right:-15px;margin-left:-15px}.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9{position:relative;min-height:1px;padding-right:15px;padding-left:15px}.col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}table{background-color:transparent}caption{padding-top:8px;padding-bottom:8px;color:#777;text-align:left}th{text-align:left}.table{width:100%;max-width:100%;margin-bottom:20px}.table&gt;tbody&gt;tr&gt;td,.table&gt;tbody&gt;tr&gt;th,.table&gt;tfoot&gt;tr&gt;td,.table&gt;tfoot&gt;tr&gt;th,.table&gt;thead&gt;tr&gt;td,.table&gt;thead&gt;tr&gt;th{padding:8px;line-height:1.42857143;vertical-align:top;border-top:1px solid #ddd}.table&gt;thead&gt;tr&gt;th{vertical-align:bottom;border-bottom:2px solid #ddd}.table&gt;caption+thead&gt;tr:first-child&gt;td,.table&gt;caption+thead&gt;tr:first-child&gt;th,.table&gt;colgroup+thead&gt;tr:first-child&gt;td,.table&gt;colgroup+thead&gt;tr:first-child&gt;th,.table&gt;thead:first-child&gt;tr:first-child&gt;td,.table&gt;thead:first-child&gt;tr:first-child&gt;th{border-top:0}.table&gt;tbody+tbody{border-top:2px solid #ddd}.table .table{background-color:#fff}.table-condensed&gt;tbody&gt;tr&gt;td,.table-condensed&gt;tbody&gt;tr&gt;th,.table-condensed&gt;tfoot&gt;tr&gt;td,.table-condensed&gt;tfoot&gt;tr&gt;th,.table-condensed&gt;thead&gt;tr&gt;td,.table-condensed&gt;thead&gt;tr&gt;th{padding:5px}.table-bordered{border:1px solid #ddd}.table-bordered&gt;tbody&gt;tr&gt;td,.table-bordered&gt;tbody&gt;tr&gt;th,.table-bordered&gt;tfoot&gt;tr&gt;td,.table-bordered&gt;tfoot&gt;tr&gt;th,.table-bordered&gt;thead&gt;tr&gt;td,.table-bordered&gt;thead&gt;tr&gt;th{border:1px solid #ddd}.table-bordered&gt;thead&gt;tr&gt;td,.table-bordered&gt;thead&gt;tr&gt;th{border-bottom-width:2px}.table-striped&gt;tbody&gt;tr:nth-of-type(odd){background-color:#f9f9f9}.table-hover&gt;tbody&gt;tr:hover{background-color:#f5f5f5}table col[class*=col-]{position:static;display:table-column;float:none}table td[class*=col-],table th[class*=col-]{position:static;display:table-cell;float:none}.table&gt;tbody&gt;tr.active&gt;td,.table&gt;tbody&gt;tr.active&gt;th,.table&gt;tbody&gt;tr&gt;td.active,.table&gt;tbody&gt;tr&gt;th.active,.table&gt;tfoot&gt;tr.active&gt;td,.table&gt;tfoot&gt;tr.active&gt;th,.table&gt;tfoot&gt;tr&gt;td.active,.table&gt;tfoot&gt;tr&gt;th.active,.table&gt;thead&gt;tr.active&gt;td,.table&gt;thead&gt;tr.active&gt;th,.table&gt;thead&gt;tr&gt;td.active,.table&gt;thead&gt;tr&gt;th.active{background-color:#f5f5f5}.table-hover&gt;tbody&gt;tr.active:hover&gt;td,.table-hover&gt;tbody&gt;tr.active:hover&gt;th,.table-hover&gt;tbody&gt;tr:hover&gt;.active,.table-hover&gt;tbody&gt;tr&gt;td.active:hover,.table-hover&gt;tbody&gt;tr&gt;th.active:hover{background-color:#e8e8e8}.table&gt;tbody&gt;tr.success&gt;td,.table&gt;tbody&gt;tr.success&gt;th,.table&gt;tbody&gt;tr&gt;td.success,.table&gt;tbody&gt;tr&gt;th.success,.table&gt;tfoot&gt;tr.success&gt;td,.table&gt;tfoot&gt;tr.success&gt;th,.table&gt;tfoot&gt;tr&gt;td.success,.table&gt;tfoot&gt;tr&gt;th.success,.table&gt;thead&gt;tr.success&gt;td,.table&gt;thead&gt;tr.success&gt;th,.table&gt;thead&gt;tr&gt;td.success,.table&gt;thead&gt;tr&gt;th.success{background-color:#dff0d8}.table-hover&gt;tbody&gt;tr.success:hover&gt;td,.table-hover&gt;tbody&gt;tr.success:hover&gt;th,.table-hover&gt;tbody&gt;tr:hover&gt;.success,.table-hover&gt;tbody&gt;tr&gt;td.success:hover,.table-hover&gt;tbody&gt;tr&gt;th.success:hover{background-color:#d0e9c6}.table&gt;tbody&gt;tr.info&gt;td,.table&gt;tbody&gt;tr.info&gt;th,.table&gt;tbody&gt;tr&gt;td.info,.table&gt;tbody&gt;tr&gt;th.info,.table&gt;tfoot&gt;tr.info&gt;td,.table&gt;tfoot&gt;tr.info&gt;th,.table&gt;tfoot&gt;tr&gt;td.info,.table&gt;tfoot&gt;tr&gt;th.info,.table&gt;thead&gt;tr.info&gt;td,.table&gt;thead&gt;tr.info&gt;th,.table&gt;thead&gt;tr&gt;td.info,.table&gt;thead&gt;tr&gt;th.info{background-color:#d9edf7}.table-hover&gt;tbody&gt;tr.info:hover&gt;td,.table-hover&gt;tbody&gt;tr.info:hover&gt;th,.table-hover&gt;tbody&gt;tr:hover&gt;.info,.table-hover&gt;tbody&gt;tr&gt;td.info:hover,.table-hover&gt;tbody&gt;tr&gt;th.info:hover{background-color:#c4e3f3}.table&gt;tbody&gt;tr.warning&gt;td,.table&gt;tbody&gt;tr.warning&gt;th,.table&gt;tbody&gt;tr&gt;td.warning,.table&gt;tbody&gt;tr&gt;th.warning,.table&gt;tfoot&gt;tr.warning&gt;td,.table&gt;tfoot&gt;tr.warning&gt;th,.table&gt;tfoot&gt;tr&gt;td.warning,.table&gt;tfoot&gt;tr&gt;th.warning,.table&gt;thead&gt;tr.warning&gt;td,.table&gt;thead&gt;tr.warning&gt;th,.table&gt;thead&gt;tr&gt;td.warning,.table&gt;thead&gt;tr&gt;th.warning{background-color:#fcf8e3}.table-hover&gt;tbody&gt;tr.warning:hover&gt;td,.table-hover&gt;tbody&gt;tr.warning:hover&gt;th,.table-hover&gt;tbody&gt;tr:hover&gt;.warning,.table-hover&gt;tbody&gt;tr&gt;td.warning:hover,.table-hover&gt;tbody&gt;tr&gt;th.warning:hover{background-color:#faf2cc}.table&gt;tbody&gt;tr.danger&gt;td,.table&gt;tbody&gt;tr.danger&gt;th,.table&gt;tbody&gt;tr&gt;td.danger,.table&gt;tbody&gt;tr&gt;th.danger,.table&gt;tfoot&gt;tr.danger&gt;td,.table&gt;tfoot&gt;tr.danger&gt;th,.table&gt;tfoot&gt;tr&gt;td.danger,.table&gt;tfoot&gt;tr&gt;th.danger,.table&gt;thead&gt;tr.danger&gt;td,.table&gt;thead&gt;tr.danger&gt;th,.table&gt;thead&gt;tr&gt;td.danger,.table&gt;thead&gt;tr&gt;th.danger{background-color:#f2dede}.table-hover&gt;tbody&gt;tr.danger:hover&gt;td,.table-hover&gt;tbody&gt;tr.danger:hover&gt;th,.table-hover&gt;tbody&gt;tr:hover&gt;.danger,.table-hover&gt;tbody&gt;tr&gt;td.danger:hover,.table-hover&gt;tbody&gt;tr&gt;th.danger:hover{background-color:#ebcccc}.table-responsive{min-height:.01%;overflow-x:auto}@media screen and (max-width:767px){.table-responsive{width:100%;margin-bottom:15px;overflow-y:hidden;-ms-overflow-style:-ms-autohiding-scrollbar;border:1px solid #ddd}.table-responsive&gt;.table{margin-bottom:0}.table-responsive&gt;.table&gt;tbody&gt;tr&gt;td,.table-responsive&gt;.table&gt;tbody&gt;tr&gt;th,.table-responsive&gt;.table&gt;tfoot&gt;tr&gt;td,.table-responsive&gt;.table&gt;tfoot&gt;tr&gt;th,.table-responsive&gt;.table&gt;thead&gt;tr&gt;td,.table-responsive&gt;.table&gt;thead&gt;tr&gt;th{white-space:nowrap}.table-responsive&gt;.table-bordered{border:0}.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;td:first-child,.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;th:first-child,.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;td:first-child,.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;th:first-child,.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;td:first-child,.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;th:first-child{border-left:0}.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;td:last-child,.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;th:last-child,.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;td:last-child,.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;th:last-child,.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;td:last-child,.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;th:last-child{border-right:0}.table-responsive&gt;.table-bordered&gt;tbody&gt;tr:last-child&gt;td,.table-responsive&gt;.table-bordered&gt;tbody&gt;tr:last-child&gt;th,.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr:last-child&gt;td,.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr:last-child&gt;th{border-bottom:0}}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333;border:0;border-bottom:1px solid #e5e5e5}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}input[type=search]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}input[type=checkbox],input[type=radio]{margin:4px 0 0;margin-top:1px\9;line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=file]:focus,input[type=checkbox]:focus,input[type=radio]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{display:block;padding-top:7px;font-size:14px;line-height:1.42857143;color:#555}.form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);-webkit-transition:border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;-o-transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}.form-control:focus{border-color:#66afe9;outline:0;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-control::-moz-placeholder{color:#999;opacity:1}.form-control:-ms-input-placeholder{color:#999}.form-control::-webkit-input-placeholder{color:#999}.form-control::-ms-expand{background-color:transparent;border:0}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{background-color:#eee;opacity:1}.form-control[disabled],fieldset[disabled] .form-control{cursor:not-allowed}textarea.form-control{height:auto}input[type=search]{-webkit-appearance:none}@media screen and (-webkit-min-device-pixel-ratio:0){input[type=date].form-control,input[type=time].form-control,input[type=datetime-local].form-control,input[type=month].form-control{line-height:34px}.input-group-sm input[type=date],.input-group-sm input[type=time],.input-group-sm input[type=datetime-local],.input-group-sm input[type=month],input[type=date].input-sm,input[type=time].input-sm,input[type=datetime-local].input-sm,input[type=month].input-sm{line-height:30px}.input-group-lg input[type=date],.input-group-lg input[type=time],.input-group-lg input[type=datetime-local],.input-group-lg input[type=month],input[type=date].input-lg,input[type=time].input-lg,input[type=datetime-local].input-lg,input[type=month].input-lg{line-height:46px}}.form-group{margin-bottom:15px}.checkbox,.radio{position:relative;display:block;margin-top:10px;margin-bottom:10px}.checkbox label,.radio label{min-height:20px;padding-left:20px;margin-bottom:0;font-weight:400;cursor:pointer}.checkbox input[type=checkbox],.checkbox-inline input[type=checkbox],.radio input[type=radio],.radio-inline input[type=radio]{position:absolute;margin-top:4px\9;margin-left:-20px}.checkbox+.checkbox,.radio+.radio{margin-top:-5px}.checkbox-inline,.radio-inline{position:relative;display:inline-block;padding-left:20px;margin-bottom:0;font-weight:400;vertical-align:middle;cursor:pointer}.checkbox-inline+.checkbox-inline,.radio-inline+.radio-inline{margin-top:0;margin-left:10px}fieldset[disabled] input[type=checkbox],fieldset[disabled] input[type=radio],input[type=checkbox].disabled,input[type=checkbox][disabled],input[type=radio].disabled,input[type=radio][disabled]{cursor:not-allowed}.checkbox-inline.disabled,.radio-inline.disabled,fieldset[disabled] .checkbox-inline,fieldset[disabled] .radio-inline{cursor:not-allowed}.checkbox.disabled label,.radio.disabled label,fieldset[disabled] .checkbox label,fieldset[disabled] .radio label{cursor:not-allowed}.form-control-static{min-height:34px;padding-top:7px;padding-bottom:7px;margin-bottom:0}.form-control-static.input-lg,.form-control-static.input-sm{padding-right:0;padding-left:0}.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-sm{height:30px;line-height:30px}select[multiple].input-sm,textarea.input-sm{height:auto}.form-group-sm .form-control{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.form-group-sm select.form-control{height:30px;line-height:30px}.form-group-sm select[multiple].form-control,.form-group-sm textarea.form-control{height:auto}.form-group-sm .form-control-static{height:30px;min-height:32px;padding:6px 10px;font-size:12px;line-height:1.5}.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-lg{height:46px;line-height:46px}select[multiple].input-lg,textarea.input-lg{height:auto}.form-group-lg .form-control{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.form-group-lg select.form-control{height:46px;line-height:46px}.form-group-lg select[multiple].form-control,.form-group-lg textarea.form-control{height:auto}.form-group-lg .form-control-static{height:46px;min-height:38px;padding:11px 16px;font-size:18px;line-height:1.3333333}.has-feedback{position:relative}.has-feedback .form-control{padding-right:42.5px}.form-control-feedback{position:absolute;top:0;right:0;z-index:2;display:block;width:34px;height:34px;line-height:34px;text-align:center;pointer-events:none}.form-group-lg .form-control+.form-control-feedback,.input-group-lg+.form-control-feedback,.input-lg+.form-control-feedback{width:46px;height:46px;line-height:46px}.form-group-sm .form-control+.form-control-feedback,.input-group-sm+.form-control-feedback,.input-sm+.form-control-feedback{width:30px;height:30px;line-height:30px}.has-success .checkbox,.has-success .checkbox-inline,.has-success .control-label,.has-success .help-block,.has-success .radio,.has-success .radio-inline,.has-success.checkbox label,.has-success.checkbox-inline label,.has-success.radio label,.has-success.radio-inline label{color:#3c763d}.has-success .form-control{border-color:#3c763d;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-success .form-control:focus{border-color:#2b542c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.has-success .input-group-addon{color:#3c763d;background-color:#dff0d8;border-color:#3c763d}.has-success .form-control-feedback{color:#3c763d}.has-warning .checkbox,.has-warning .checkbox-inline,.has-warning .control-label,.has-warning .help-block,.has-warning .radio,.has-warning .radio-inline,.has-warning.checkbox label,.has-warning.checkbox-inline label,.has-warning.radio label,.has-warning.radio-inline label{color:#8a6d3b}.has-warning .form-control{border-color:#8a6d3b;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-warning .form-control:focus{border-color:#66512c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-warning .input-group-addon{color:#8a6d3b;background-color:#fcf8e3;border-color:#8a6d3b}.has-warning .form-control-feedback{color:#8a6d3b}.has-error .checkbox,.has-error .checkbox-inline,.has-error .control-label,.has-error .help-block,.has-error .radio,.has-error .radio-inline,.has-error.checkbox label,.has-error.checkbox-inline label,.has-error.radio label,.has-error.radio-inline label{color:#a94442}.has-error .form-control{border-color:#a94442;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-error .form-control:focus{border-color:#843534;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-error .input-group-addon{color:#a94442;background-color:#f2dede;border-color:#a94442}.has-error .form-control-feedback{color:#a94442}.has-feedback label~.form-control-feedback{top:25px}.has-feedback label.sr-only~.form-control-feedback{top:0}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373}@media (min-width:768px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group&gt;.form-control{width:100%}.form-inline .control-label{margin-bottom:0;vertical-align:middle}.form-inline .checkbox,.form-inline .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.form-inline .checkbox label,.form-inline .radio label{padding-left:0}.form-inline .checkbox input[type=checkbox],.form-inline .radio input[type=radio]{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.form-horizontal .checkbox,.form-horizontal .checkbox-inline,.form-horizontal .radio,.form-horizontal .radio-inline{padding-top:7px;margin-top:0;margin-bottom:0}.form-horizontal .checkbox,.form-horizontal .radio{min-height:27px}.form-horizontal .form-group{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.form-horizontal .control-label{padding-top:7px;margin-bottom:0;text-align:right}}.form-horizontal .has-feedback .form-control-feedback{right:15px}@media (min-width:768px){.form-horizontal .form-group-lg .control-label{padding-top:11px;font-size:18px}}@media (min-width:768px){.form-horizontal .form-group-sm .control-label{padding-top:6px;font-size:12px}}.btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0;-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;filter:alpha(opacity=65);-webkit-box-shadow:none;box-shadow:none;opacity:.65}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-default{color:#333;background-color:#fff;border-color:#ccc}.btn-default.focus,.btn-default:focus{color:#333;background-color:#e6e6e6;border-color:#8c8c8c}.btn-default:hover{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active,.btn-default:active,.open&gt;.dropdown-toggle.btn-default{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active.focus,.btn-default.active:focus,.btn-default.active:hover,.btn-default:active.focus,.btn-default:active:focus,.btn-default:active:hover,.open&gt;.dropdown-toggle.btn-default.focus,.open&gt;.dropdown-toggle.btn-default:focus,.open&gt;.dropdown-toggle.btn-default:hover{color:#333;background-color:#d4d4d4;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.open&gt;.dropdown-toggle.btn-default{background-image:none}.btn-default.disabled.focus,.btn-default.disabled:focus,.btn-default.disabled:hover,.btn-default[disabled].focus,.btn-default[disabled]:focus,.btn-default[disabled]:hover,fieldset[disabled] .btn-default.focus,fieldset[disabled] .btn-default:focus,fieldset[disabled] .btn-default:hover{background-color:#fff;border-color:#ccc}.btn-default .badge{color:#fff;background-color:#333}.btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary:hover{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active,.btn-primary:active,.open&gt;.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open&gt;.dropdown-toggle.btn-primary.focus,.open&gt;.dropdown-toggle.btn-primary:focus,.open&gt;.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open&gt;.dropdown-toggle.btn-primary{background-image:none}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary[disabled].focus,.btn-primary[disabled]:focus,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary.focus,fieldset[disabled] .btn-primary:focus,fieldset[disabled] .btn-primary:hover{background-color:#337ab7;border-color:#2e6da4}.btn-primary .badge{color:#337ab7;background-color:#fff}.btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#449d44;border-color:#255625}.btn-success:hover{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active,.btn-success:active,.open&gt;.dropdown-toggle.btn-success{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open&gt;.dropdown-toggle.btn-success.focus,.open&gt;.dropdown-toggle.btn-success:focus,.open&gt;.dropdown-toggle.btn-success:hover{color:#fff;background-color:#398439;border-color:#255625}.btn-success.active,.btn-success:active,.open&gt;.dropdown-toggle.btn-success{background-image:none}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success[disabled].focus,.btn-success[disabled]:focus,.btn-success[disabled]:hover,fieldset[disabled] .btn-success.focus,fieldset[disabled] .btn-success:focus,fieldset[disabled] .btn-success:hover{background-color:#5cb85c;border-color:#4cae4c}.btn-success .badge{color:#5cb85c;background-color:#fff}.btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#31b0d5;border-color:#1b6d85}.btn-info:hover{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active,.btn-info:active,.open&gt;.dropdown-toggle.btn-info{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open&gt;.dropdown-toggle.btn-info.focus,.open&gt;.dropdown-toggle.btn-info:focus,.open&gt;.dropdown-toggle.btn-info:hover{color:#fff;background-color:#269abc;border-color:#1b6d85}.btn-info.active,.btn-info:active,.open&gt;.dropdown-toggle.btn-info{background-image:none}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info[disabled].focus,.btn-info[disabled]:focus,.btn-info[disabled]:hover,fieldset[disabled] .btn-info.focus,fieldset[disabled] .btn-info:focus,fieldset[disabled] .btn-info:hover{background-color:#5bc0de;border-color:#46b8da}.btn-info .badge{color:#5bc0de;background-color:#fff}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236}.btn-warning.focus,.btn-warning:focus{color:#fff;background-color:#ec971f;border-color:#985f0d}.btn-warning:hover{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active,.btn-warning:active,.open&gt;.dropdown-toggle.btn-warning{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open&gt;.dropdown-toggle.btn-warning.focus,.open&gt;.dropdown-toggle.btn-warning:focus,.open&gt;.dropdown-toggle.btn-warning:hover{color:#fff;background-color:#d58512;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.open&gt;.dropdown-toggle.btn-warning{background-image:none}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning[disabled].focus,.btn-warning[disabled]:focus,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning.focus,fieldset[disabled] .btn-warning:focus,fieldset[disabled] .btn-warning:hover{background-color:#f0ad4e;border-color:#eea236}.btn-warning .badge{color:#f0ad4e;background-color:#fff}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c9302c;border-color:#761c19}.btn-danger:hover{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active,.btn-danger:active,.open&gt;.dropdown-toggle.btn-danger{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open&gt;.dropdown-toggle.btn-danger.focus,.open&gt;.dropdown-toggle.btn-danger:focus,.open&gt;.dropdown-toggle.btn-danger:hover{color:#fff;background-color:#ac2925;border-color:#761c19}.btn-danger.active,.btn-danger:active,.open&gt;.dropdown-toggle.btn-danger{background-image:none}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger[disabled].focus,.btn-danger[disabled]:focus,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger.focus,fieldset[disabled] .btn-danger:focus,fieldset[disabled] .btn-danger:hover{background-color:#d9534f;border-color:#d43f3a}.btn-danger .badge{color:#d9534f;background-color:#fff}.btn-link{font-weight:400;color:#337ab7;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;-webkit-box-shadow:none;box-shadow:none}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#23527c;text-decoration:underline;background-color:transparent}.btn-link[disabled]:focus,.btn-link[disabled]:hover,fieldset[disabled] .btn-link:focus,fieldset[disabled] .btn-link:hover{color:#777;text-decoration:none}.btn-group-lg&gt;.btn,.btn-lg{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.btn-group-sm&gt;.btn,.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.btn-group-xs&gt;.btn,.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:5px}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;-webkit-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in{display:block}tr.collapse.in{display:table-row}tbody.collapse.in{display:table-row-group}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition-timing-function:ease;-o-transition-timing-function:ease;transition-timing-function:ease;-webkit-transition-duration:.35s;-o-transition-duration:.35s;transition-duration:.35s;-webkit-transition-property:height,visibility;-o-transition-property:height,visibility;transition-property:height,visibility}.caret{display:inline-block;width:0;height:0;margin-left:2px;vertical-align:middle;border-top:4px dashed;border-top:4px solid\9;border-right:4px solid transparent;border-left:4px solid transparent}.dropdown,.dropup{position:relative}.dropdown-toggle:focus{outline:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;font-size:14px;text-align:left;list-style:none;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.15);border-radius:4px;-webkit-box-shadow:0 6px 12px rgba(0,0,0,.175);box-shadow:0 6px 12px rgba(0,0,0,.175)}.dropdown-menu.pull-right{right:0;left:auto}.dropdown-menu .divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.dropdown-menu&gt;li&gt;a{display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:nowrap}.dropdown-menu&gt;li&gt;a:focus,.dropdown-menu&gt;li&gt;a:hover{color:#262626;text-decoration:none;background-color:#f5f5f5}.dropdown-menu&gt;.active&gt;a,.dropdown-menu&gt;.active&gt;a:focus,.dropdown-menu&gt;.active&gt;a:hover{color:#fff;text-decoration:none;background-color:#337ab7;outline:0}.dropdown-menu&gt;.disabled&gt;a,.dropdown-menu&gt;.disabled&gt;a:focus,.dropdown-menu&gt;.disabled&gt;a:hover{color:#777}.dropdown-menu&gt;.disabled&gt;a:focus,.dropdown-menu&gt;.disabled&gt;a:hover{text-decoration:none;cursor:not-allowed;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.open&gt;.dropdown-menu{display:block}.open&gt;a{outline:0}.dropdown-menu-right{right:0;left:auto}.dropdown-menu-left{right:auto;left:0}.dropdown-header{display:block;padding:3px 20px;font-size:12px;line-height:1.42857143;color:#777;white-space:nowrap}.dropdown-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:990}.pull-right&gt;.dropdown-menu{right:0;left:auto}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{content:"";border-top:0;border-bottom:4px dashed;border-bottom:4px solid\9}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:2px}@media (min-width:768px){.navbar-right .dropdown-menu{right:0;left:auto}.navbar-right .dropdown-menu-left{right:auto;left:0}}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical&gt;.btn,.btn-group&gt;.btn{position:relative;float:left}.btn-group-vertical&gt;.btn.active,.btn-group-vertical&gt;.btn:active,.btn-group-vertical&gt;.btn:focus,.btn-group-vertical&gt;.btn:hover,.btn-group&gt;.btn.active,.btn-group&gt;.btn:active,.btn-group&gt;.btn:focus,.btn-group&gt;.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-5px}.btn-toolbar .btn,.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar&gt;.btn,.btn-toolbar&gt;.btn-group,.btn-toolbar&gt;.input-group{margin-left:5px}.btn-group&gt;.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group&gt;.btn:first-child{margin-left:0}.btn-group&gt;.btn:first-child:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group&gt;.btn:last-child:not(:first-child),.btn-group&gt;.dropdown-toggle:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.btn-group&gt;.btn-group{float:left}.btn-group&gt;.btn-group:not(:first-child):not(:last-child)&gt;.btn{border-radius:0}.btn-group&gt;.btn-group:first-child:not(:last-child)&gt;.btn:last-child,.btn-group&gt;.btn-group:first-child:not(:last-child)&gt;.dropdown-toggle{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group&gt;.btn-group:last-child:not(:first-child)&gt;.btn:first-child{border-top-left-radius:0;border-bottom-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group&gt;.btn+.dropdown-toggle{padding-right:8px;padding-left:8px}.btn-group&gt;.btn-lg+.dropdown-toggle{padding-right:12px;padding-left:12px}.btn-group.open .dropdown-toggle{-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.open .dropdown-toggle.btn-link{-webkit-box-shadow:none;box-shadow:none}.btn .caret{margin-left:0}.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0}.dropup .btn-lg .caret{border-width:0 5px 5px}.btn-group-vertical&gt;.btn,.btn-group-vertical&gt;.btn-group,.btn-group-vertical&gt;.btn-group&gt;.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical&gt;.btn-group&gt;.btn{float:none}.btn-group-vertical&gt;.btn+.btn,.btn-group-vertical&gt;.btn+.btn-group,.btn-group-vertical&gt;.btn-group+.btn,.btn-group-vertical&gt;.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical&gt;.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical&gt;.btn:first-child:not(:last-child){border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical&gt;.btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.btn-group-vertical&gt;.btn-group:not(:first-child):not(:last-child)&gt;.btn{border-radius:0}.btn-group-vertical&gt;.btn-group:first-child:not(:last-child)&gt;.btn:last-child,.btn-group-vertical&gt;.btn-group:first-child:not(:last-child)&gt;.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical&gt;.btn-group:last-child:not(:first-child)&gt;.btn:first-child{border-top-left-radius:0;border-top-right-radius:0}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate}.btn-group-justified&gt;.btn,.btn-group-justified&gt;.btn-group{display:table-cell;float:none;width:1%}.btn-group-justified&gt;.btn-group .btn{width:100%}.btn-group-justified&gt;.btn-group .dropdown-menu{left:auto}[data-toggle=buttons]&gt;.btn input[type=checkbox],[data-toggle=buttons]&gt;.btn input[type=radio],[data-toggle=buttons]&gt;.btn-group&gt;.btn input[type=checkbox],[data-toggle=buttons]&gt;.btn-group&gt;.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:table;border-collapse:separate}.input-group[class*=col-]{float:none;padding-right:0;padding-left:0}.input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.input-group .form-control:focus{z-index:3}.input-group-lg&gt;.form-control,.input-group-lg&gt;.input-group-addon,.input-group-lg&gt;.input-group-btn&gt;.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-group-lg&gt;.form-control,select.input-group-lg&gt;.input-group-addon,select.input-group-lg&gt;.input-group-btn&gt;.btn{height:46px;line-height:46px}select[multiple].input-group-lg&gt;.form-control,select[multiple].input-group-lg&gt;.input-group-addon,select[multiple].input-group-lg&gt;.input-group-btn&gt;.btn,textarea.input-group-lg&gt;.form-control,textarea.input-group-lg&gt;.input-group-addon,textarea.input-group-lg&gt;.input-group-btn&gt;.btn{height:auto}.input-group-sm&gt;.form-control,.input-group-sm&gt;.input-group-addon,.input-group-sm&gt;.input-group-btn&gt;.btn{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-group-sm&gt;.form-control,select.input-group-sm&gt;.input-group-addon,select.input-group-sm&gt;.input-group-btn&gt;.btn{height:30px;line-height:30px}select[multiple].input-group-sm&gt;.form-control,select[multiple].input-group-sm&gt;.input-group-addon,select[multiple].input-group-sm&gt;.input-group-btn&gt;.btn,textarea.input-group-sm&gt;.form-control,textarea.input-group-sm&gt;.input-group-addon,textarea.input-group-sm&gt;.input-group-btn&gt;.btn{height:auto}.input-group .form-control,.input-group-addon,.input-group-btn{display:table-cell}.input-group .form-control:not(:first-child):not(:last-child),.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:400;line-height:1;color:#555;text-align:center;background-color:#eee;border:1px solid #ccc;border-radius:4px}.input-group-addon.input-sm{padding:5px 10px;font-size:12px;border-radius:3px}.input-group-addon.input-lg{padding:10px 16px;font-size:18px;border-radius:6px}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group .form-control:first-child,.input-group-addon:first-child,.input-group-btn:first-child&gt;.btn,.input-group-btn:first-child&gt;.btn-group&gt;.btn,.input-group-btn:first-child&gt;.dropdown-toggle,.input-group-btn:last-child&gt;.btn-group:not(:last-child)&gt;.btn,.input-group-btn:last-child&gt;.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.input-group-addon:first-child{border-right:0}.input-group .form-control:last-child,.input-group-addon:last-child,.input-group-btn:first-child&gt;.btn-group:not(:first-child)&gt;.btn,.input-group-btn:first-child&gt;.btn:not(:first-child),.input-group-btn:last-child&gt;.btn,.input-group-btn:last-child&gt;.btn-group&gt;.btn,.input-group-btn:last-child&gt;.dropdown-toggle{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-addon:last-child{border-left:0}.input-group-btn{position:relative;font-size:0;white-space:nowrap}.input-group-btn&gt;.btn{position:relative}.input-group-btn&gt;.btn+.btn{margin-left:-1px}.input-group-btn&gt;.btn:active,.input-group-btn&gt;.btn:focus,.input-group-btn&gt;.btn:hover{z-index:2}.input-group-btn:first-child&gt;.btn,.input-group-btn:first-child&gt;.btn-group{margin-right:-1px}.input-group-btn:last-child&gt;.btn,.input-group-btn:last-child&gt;.btn-group{z-index:2;margin-left:-1px}.nav{padding-left:0;margin-bottom:0;list-style:none}.nav&gt;li{position:relative;display:block}.nav&gt;li&gt;a{position:relative;display:block;padding:10px 15px}.nav&gt;li&gt;a:focus,.nav&gt;li&gt;a:hover{text-decoration:none;background-color:#eee}.nav&gt;li.disabled&gt;a{color:#777}.nav&gt;li.disabled&gt;a:focus,.nav&gt;li.disabled&gt;a:hover{color:#777;text-decoration:none;cursor:not-allowed;background-color:transparent}.nav .open&gt;a,.nav .open&gt;a:focus,.nav .open&gt;a:hover{background-color:#eee;border-color:#337ab7}.nav .nav-divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.nav&gt;li&gt;a&gt;img{max-width:none}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs&gt;li{float:left;margin-bottom:-1px}.nav-tabs&gt;li&gt;a{margin-right:2px;line-height:1.42857143;border:1px solid transparent;border-radius:4px 4px 0 0}.nav-tabs&gt;li&gt;a:hover{border-color:#eee #eee #ddd}.nav-tabs&gt;li.active&gt;a,.nav-tabs&gt;li.active&gt;a:focus,.nav-tabs&gt;li.active&gt;a:hover{color:#555;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-tabs.nav-justified{width:100%;border-bottom:0}.nav-tabs.nav-justified&gt;li{float:none}.nav-tabs.nav-justified&gt;li&gt;a{margin-bottom:5px;text-align:center}.nav-tabs.nav-justified&gt;.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-tabs.nav-justified&gt;li{display:table-cell;width:1%}.nav-tabs.nav-justified&gt;li&gt;a{margin-bottom:0}}.nav-tabs.nav-justified&gt;li&gt;a{margin-right:0;border-radius:4px}.nav-tabs.nav-justified&gt;.active&gt;a,.nav-tabs.nav-justified&gt;.active&gt;a:focus,.nav-tabs.nav-justified&gt;.active&gt;a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs.nav-justified&gt;li&gt;a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs.nav-justified&gt;.active&gt;a,.nav-tabs.nav-justified&gt;.active&gt;a:focus,.nav-tabs.nav-justified&gt;.active&gt;a:hover{border-bottom-color:#fff}}.nav-pills&gt;li{float:left}.nav-pills&gt;li&gt;a{border-radius:4px}.nav-pills&gt;li+li{margin-left:2px}.nav-pills&gt;li.active&gt;a,.nav-pills&gt;li.active&gt;a:focus,.nav-pills&gt;li.active&gt;a:hover{color:#fff;background-color:#337ab7}.nav-stacked&gt;li{float:none}.nav-stacked&gt;li+li{margin-top:2px;margin-left:0}.nav-justified{width:100%}.nav-justified&gt;li{float:none}.nav-justified&gt;li&gt;a{margin-bottom:5px;text-align:center}.nav-justified&gt;.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-justified&gt;li{display:table-cell;width:1%}.nav-justified&gt;li&gt;a{margin-bottom:0}}.nav-tabs-justified{border-bottom:0}.nav-tabs-justified&gt;li&gt;a{margin-right:0;border-radius:4px}.nav-tabs-justified&gt;.active&gt;a,.nav-tabs-justified&gt;.active&gt;a:focus,.nav-tabs-justified&gt;.active&gt;a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs-justified&gt;li&gt;a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs-justified&gt;.active&gt;a,.nav-tabs-justified&gt;.active&gt;a:focus,.nav-tabs-justified&gt;.active&gt;a:hover{border-bottom-color:#fff}}.tab-content&gt;.tab-pane{display:none}.tab-content&gt;.active{display:block}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.navbar{position:relative;min-height:50px;margin-bottom:20px;border:1px solid transparent}@media (min-width:768px){.navbar{border-radius:4px}}@media (min-width:768px){.navbar-header{float:left}}.navbar-collapse{padding-right:15px;padding-left:15px;overflow-x:visible;-webkit-overflow-scrolling:touch;border-top:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1)}.navbar-collapse.in{overflow-y:auto}@media (min-width:768px){.navbar-collapse{width:auto;border-top:0;-webkit-box-shadow:none;box-shadow:none}.navbar-collapse.collapse{display:block!important;height:auto!important;padding-bottom:0;overflow:visible!important}.navbar-collapse.in{overflow-y:visible}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse,.navbar-static-top .navbar-collapse{padding-right:0;padding-left:0}}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:340px}@media (max-device-width:480px) and (orientation:landscape){.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:200px}}.container-fluid&gt;.navbar-collapse,.container-fluid&gt;.navbar-header,.container&gt;.navbar-collapse,.container&gt;.navbar-header{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.container-fluid&gt;.navbar-collapse,.container-fluid&gt;.navbar-header,.container&gt;.navbar-collapse,.container&gt;.navbar-header{margin-right:0;margin-left:0}}.navbar-static-top{z-index:1000;border-width:0 0 1px}@media (min-width:768px){.navbar-static-top{border-radius:0}}.navbar-fixed-bottom,.navbar-fixed-top{position:fixed;right:0;left:0;z-index:1030}@media (min-width:768px){.navbar-fixed-bottom,.navbar-fixed-top{border-radius:0}}.navbar-fixed-top{top:0;border-width:0 0 1px}.navbar-fixed-bottom{bottom:0;margin-bottom:0;border-width:1px 0 0}.navbar-brand{float:left;height:50px;padding:15px 15px;font-size:18px;line-height:20px}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-brand&gt;img{display:block}@media (min-width:768px){.navbar&gt;.container .navbar-brand,.navbar&gt;.container-fluid .navbar-brand{margin-left:-15px}}.navbar-toggle{position:relative;float:right;padding:9px 10px;margin-top:8px;margin-right:15px;margin-bottom:8px;background-color:transparent;background-image:none;border:1px solid transparent;border-radius:4px}.navbar-toggle:focus{outline:0}.navbar-toggle .icon-bar{display:block;width:22px;height:2px;border-radius:1px}.navbar-toggle .icon-bar+.icon-bar{margin-top:4px}@media (min-width:768px){.navbar-toggle{display:none}}.navbar-nav{margin:7.5px -15px}.navbar-nav&gt;li&gt;a{padding-top:10px;padding-bottom:10px;line-height:20px}@media (max-width:767px){.navbar-nav .open .dropdown-menu{position:static;float:none;width:auto;margin-top:0;background-color:transparent;border:0;-webkit-box-shadow:none;box-shadow:none}.navbar-nav .open .dropdown-menu .dropdown-header,.navbar-nav .open .dropdown-menu&gt;li&gt;a{padding:5px 15px 5px 25px}.navbar-nav .open .dropdown-menu&gt;li&gt;a{line-height:20px}.navbar-nav .open .dropdown-menu&gt;li&gt;a:focus,.navbar-nav .open .dropdown-menu&gt;li&gt;a:hover{background-image:none}}@media (min-width:768px){.navbar-nav{float:left;margin:0}.navbar-nav&gt;li{float:left}.navbar-nav&gt;li&gt;a{padding-top:15px;padding-bottom:15px}}.navbar-form{padding:10px 15px;margin-top:8px;margin-right:-15px;margin-bottom:8px;margin-left:-15px;border-top:1px solid transparent;border-bottom:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1)}@media (min-width:768px){.navbar-form .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.navbar-form .form-control{display:inline-block;width:auto;vertical-align:middle}.navbar-form .form-control-static{display:inline-block}.navbar-form .input-group{display:inline-table;vertical-align:middle}.navbar-form .input-group .form-control,.navbar-form .input-group .input-group-addon,.navbar-form .input-group .input-group-btn{width:auto}.navbar-form .input-group&gt;.form-control{width:100%}.navbar-form .control-label{margin-bottom:0;vertical-align:middle}.navbar-form .checkbox,.navbar-form .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.navbar-form .checkbox label,.navbar-form .radio label{padding-left:0}.navbar-form .checkbox input[type=checkbox],.navbar-form .radio input[type=radio]{position:relative;margin-left:0}.navbar-form .has-feedback .form-control-feedback{top:0}}@media (max-width:767px){.navbar-form .form-group{margin-bottom:5px}.navbar-form .form-group:last-child{margin-bottom:0}}@media (min-width:768px){.navbar-form{width:auto;padding-top:0;padding-bottom:0;margin-right:0;margin-left:0;border:0;-webkit-box-shadow:none;box-shadow:none}}.navbar-nav&gt;li&gt;.dropdown-menu{margin-top:0;border-top-left-radius:0;border-top-right-radius:0}.navbar-fixed-bottom .navbar-nav&gt;li&gt;.dropdown-menu{margin-bottom:0;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.navbar-btn{margin-top:8px;margin-bottom:8px}.navbar-btn.btn-sm{margin-top:10px;margin-bottom:10px}.navbar-btn.btn-xs{margin-top:14px;margin-bottom:14px}.navbar-text{margin-top:15px;margin-bottom:15px}@media (min-width:768px){.navbar-text{float:left;margin-right:15px;margin-left:15px}}@media (min-width:768px){.navbar-left{float:left!important}.navbar-right{float:right!important;margin-right:-15px}.navbar-right~.navbar-right{margin-right:0}}.navbar-default{background-color:#f8f8f8;border-color:#e7e7e7}.navbar-default .navbar-brand{color:#777}.navbar-default .navbar-brand:focus,.navbar-default .navbar-brand:hover{color:#5e5e5e;background-color:transparent}.navbar-default .navbar-text{color:#777}.navbar-default .navbar-nav&gt;li&gt;a{color:#777}.navbar-default .navbar-nav&gt;li&gt;a:focus,.navbar-default .navbar-nav&gt;li&gt;a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav&gt;.active&gt;a,.navbar-default .navbar-nav&gt;.active&gt;a:focus,.navbar-default .navbar-nav&gt;.active&gt;a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav&gt;.disabled&gt;a,.navbar-default .navbar-nav&gt;.disabled&gt;a:focus,.navbar-default .navbar-nav&gt;.disabled&gt;a:hover{color:#ccc;background-color:transparent}.navbar-default .navbar-toggle{border-color:#ddd}.navbar-default .navbar-toggle:focus,.navbar-default .navbar-toggle:hover{background-color:#ddd}.navbar-default .navbar-toggle .icon-bar{background-color:#888}.navbar-default .navbar-collapse,.navbar-default .navbar-form{border-color:#e7e7e7}.navbar-default .navbar-nav&gt;.open&gt;a,.navbar-default .navbar-nav&gt;.open&gt;a:focus,.navbar-default .navbar-nav&gt;.open&gt;a:hover{color:#555;background-color:#e7e7e7}@media (max-width:767px){.navbar-default .navbar-nav .open .dropdown-menu&gt;li&gt;a{color:#777}.navbar-default .navbar-nav .open .dropdown-menu&gt;li&gt;a:focus,.navbar-default .navbar-nav .open .dropdown-menu&gt;li&gt;a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav .open .dropdown-menu&gt;.active&gt;a,.navbar-default .navbar-nav .open .dropdown-menu&gt;.active&gt;a:focus,.navbar-default .navbar-nav .open .dropdown-menu&gt;.active&gt;a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav .open .dropdown-menu&gt;.disabled&gt;a,.navbar-default .navbar-nav .open .dropdown-menu&gt;.disabled&gt;a:focus,.navbar-default .navbar-nav .open .dropdown-menu&gt;.disabled&gt;a:hover{color:#ccc;background-color:transparent}}.navbar-default .navbar-link{color:#777}.navbar-default .navbar-link:hover{color:#333}.navbar-default .btn-link{color:#777}.navbar-default .btn-link:focus,.navbar-default .btn-link:hover{color:#333}.navbar-default .btn-link[disabled]:focus,.navbar-default .btn-link[disabled]:hover,fieldset[disabled] .navbar-default .btn-link:focus,fieldset[disabled] .navbar-default .btn-link:hover{color:#ccc}.navbar-inverse{background-color:#222;border-color:#080808}.navbar-inverse .navbar-brand{color:#9d9d9d}.navbar-inverse .navbar-brand:focus,.navbar-inverse .navbar-brand:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-text{color:#9d9d9d}.navbar-inverse .navbar-nav&gt;li&gt;a{color:#9d9d9d}.navbar-inverse .navbar-nav&gt;li&gt;a:focus,.navbar-inverse .navbar-nav&gt;li&gt;a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav&gt;.active&gt;a,.navbar-inverse .navbar-nav&gt;.active&gt;a:focus,.navbar-inverse .navbar-nav&gt;.active&gt;a:hover{color:#fff;background-color:#080808}.navbar-inverse .navbar-nav&gt;.disabled&gt;a,.navbar-inverse .navbar-nav&gt;.disabled&gt;a:focus,.navbar-inverse .navbar-nav&gt;.disabled&gt;a:hover{color:#444;background-color:transparent}.navbar-inverse .navbar-toggle{border-color:#333}.navbar-inverse .navbar-toggle:focus,.navbar-inverse .navbar-toggle:hover{background-color:#333}.navbar-inverse .navbar-toggle .icon-bar{background-color:#fff}.navbar-inverse .navbar-collapse,.navbar-inverse .navbar-form{border-color:#101010}.navbar-inverse .navbar-nav&gt;.open&gt;a,.navbar-inverse .navbar-nav&gt;.open&gt;a:focus,.navbar-inverse .navbar-nav&gt;.open&gt;a:hover{color:#fff;background-color:#080808}@media (max-width:767px){.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.dropdown-header{border-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu .divider{background-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu&gt;li&gt;a{color:#9d9d9d}.navbar-inverse .navbar-nav .open .dropdown-menu&gt;li&gt;a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu&gt;li&gt;a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.active&gt;a,.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.active&gt;a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.active&gt;a:hover{color:#fff;background-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.disabled&gt;a,.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.disabled&gt;a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu&gt;.disabled&gt;a:hover{color:#444;background-color:transparent}}.navbar-inverse .navbar-link{color:#9d9d9d}.navbar-inverse .navbar-link:hover{color:#fff}.navbar-inverse .btn-link{color:#9d9d9d}.navbar-inverse .btn-link:focus,.navbar-inverse .btn-link:hover{color:#fff}.navbar-inverse .btn-link[disabled]:focus,.navbar-inverse .btn-link[disabled]:hover,fieldset[disabled] .navbar-inverse .btn-link:focus,fieldset[disabled] .navbar-inverse .btn-link:hover{color:#444}.breadcrumb{padding:8px 15px;margin-bottom:20px;list-style:none;background-color:#f5f5f5;border-radius:4px}.breadcrumb&gt;li{display:inline-block}.breadcrumb&gt;li+li:before{padding:0 5px;color:#ccc;content:"/\00a0"}.breadcrumb&gt;.active{color:#777}.pagination{display:inline-block;padding-left:0;margin:20px 0;border-radius:4px}.pagination&gt;li{display:inline}.pagination&gt;li&gt;a,.pagination&gt;li&gt;span{position:relative;float:left;padding:6px 12px;margin-left:-1px;line-height:1.42857143;color:#337ab7;text-decoration:none;background-color:#fff;border:1px solid #ddd}.pagination&gt;li:first-child&gt;a,.pagination&gt;li:first-child&gt;span{margin-left:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination&gt;li:last-child&gt;a,.pagination&gt;li:last-child&gt;span{border-top-right-radius:4px;border-bottom-right-radius:4px}.pagination&gt;li&gt;a:focus,.pagination&gt;li&gt;a:hover,.pagination&gt;li&gt;span:focus,.pagination&gt;li&gt;span:hover{z-index:2;color:#23527c;background-color:#eee;border-color:#ddd}.pagination&gt;.active&gt;a,.pagination&gt;.active&gt;a:focus,.pagination&gt;.active&gt;a:hover,.pagination&gt;.active&gt;span,.pagination&gt;.active&gt;span:focus,.pagination&gt;.active&gt;span:hover{z-index:3;color:#fff;cursor:default;background-color:#337ab7;border-color:#337ab7}.pagination&gt;.disabled&gt;a,.pagination&gt;.disabled&gt;a:focus,.pagination&gt;.disabled&gt;a:hover,.pagination&gt;.disabled&gt;span,.pagination&gt;.disabled&gt;span:focus,.pagination&gt;.disabled&gt;span:hover{color:#777;cursor:not-allowed;background-color:#fff;border-color:#ddd}.pagination-lg&gt;li&gt;a,.pagination-lg&gt;li&gt;span{padding:10px 16px;font-size:18px;line-height:1.3333333}.pagination-lg&gt;li:first-child&gt;a,.pagination-lg&gt;li:first-child&gt;span{border-top-left-radius:6px;border-bottom-left-radius:6px}.pagination-lg&gt;li:last-child&gt;a,.pagination-lg&gt;li:last-child&gt;span{border-top-right-radius:6px;border-bottom-right-radius:6px}.pagination-sm&gt;li&gt;a,.pagination-sm&gt;li&gt;span{padding:5px 10px;font-size:12px;line-height:1.5}.pagination-sm&gt;li:first-child&gt;a,.pagination-sm&gt;li:first-child&gt;span{border-top-left-radius:3px;border-bottom-left-radius:3px}.pagination-sm&gt;li:last-child&gt;a,.pagination-sm&gt;li:last-child&gt;span{border-top-right-radius:3px;border-bottom-right-radius:3px}.pager{padding-left:0;margin:20px 0;text-align:center;list-style:none}.pager li{display:inline}.pager li&gt;a,.pager li&gt;span{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;border-radius:15px}.pager li&gt;a:focus,.pager li&gt;a:hover{text-decoration:none;background-color:#eee}.pager .next&gt;a,.pager .next&gt;span{float:right}.pager .previous&gt;a,.pager .previous&gt;span{float:left}.pager .disabled&gt;a,.pager .disabled&gt;a:focus,.pager .disabled&gt;a:hover,.pager .disabled&gt;span{color:#777;cursor:not-allowed;background-color:#fff}.label{display:inline;padding:.2em .6em .3em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25em}a.label:focus,a.label:hover{color:#fff;text-decoration:none;cursor:pointer}.label:empty{display:none}.btn .label{position:relative;top:-1px}.label-default{background-color:#777}.label-default[href]:focus,.label-default[href]:hover{background-color:#5e5e5e}.label-primary{background-color:#337ab7}.label-primary[href]:focus,.label-primary[href]:hover{background-color:#286090}.label-success{background-color:#5cb85c}.label-success[href]:focus,.label-success[href]:hover{background-color:#449d44}.label-info{background-color:#5bc0de}.label-info[href]:focus,.label-info[href]:hover{background-color:#31b0d5}.label-warning{background-color:#f0ad4e}.label-warning[href]:focus,.label-warning[href]:hover{background-color:#ec971f}.label-danger{background-color:#d9534f}.label-danger[href]:focus,.label-danger[href]:hover{background-color:#c9302c}.badge{display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:middle;background-color:#777;border-radius:10px}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.btn-group-xs&gt;.btn .badge,.btn-xs .badge{top:0;padding:1px 5px}a.badge:focus,a.badge:hover{color:#fff;text-decoration:none;cursor:pointer}.list-group-item.active&gt;.badge,.nav-pills&gt;.active&gt;a&gt;.badge{color:#337ab7;background-color:#fff}.list-group-item&gt;.badge{float:right}.list-group-item&gt;.badge+.badge{margin-right:5px}.nav-pills&gt;li&gt;a&gt;.badge{margin-left:3px}.jumbotron{padding-top:30px;padding-bottom:30px;margin-bottom:30px;color:inherit;background-color:#eee}.jumbotron .h1,.jumbotron h1{color:inherit}.jumbotron p{margin-bottom:15px;font-size:21px;font-weight:200}.jumbotron&gt;hr{border-top-color:#d5d5d5}.container .jumbotron,.container-fluid .jumbotron{padding-right:15px;padding-left:15px;border-radius:6px}.jumbotron .container{max-width:100%}@media screen and (min-width:768px){.jumbotron{padding-top:48px;padding-bottom:48px}.container .jumbotron,.container-fluid .jumbotron{padding-right:60px;padding-left:60px}.jumbotron .h1,.jumbotron h1{font-size:63px}}.thumbnail{display:block;padding:4px;margin-bottom:20px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:border .2s ease-in-out;-o-transition:border .2s ease-in-out;transition:border .2s ease-in-out}.thumbnail a&gt;img,.thumbnail&gt;img{margin-right:auto;margin-left:auto}a.thumbnail.active,a.thumbnail:focus,a.thumbnail:hover{border-color:#337ab7}.thumbnail .caption{padding:9px;color:#333}.alert{padding:15px;margin-bottom:20px;border:1px solid transparent;border-radius:4px}.alert h4{margin-top:0;color:inherit}.alert .alert-link{font-weight:700}.alert&gt;p,.alert&gt;ul{margin-bottom:0}.alert&gt;p+p{margin-top:5px}.alert-dismissable,.alert-dismissible{padding-right:35px}.alert-dismissable .close,.alert-dismissible .close{position:relative;top:-2px;right:-21px;color:inherit}.alert-success{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.alert-success hr{border-top-color:#c9e2b3}.alert-success .alert-link{color:#2b542c}.alert-info{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.alert-info hr{border-top-color:#a6e1ec}.alert-info .alert-link{color:#245269}.alert-warning{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.alert-warning hr{border-top-color:#f7e1b5}.alert-warning .alert-link{color:#66512c}.alert-danger{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.alert-danger hr{border-top-color:#e4b9c0}.alert-danger .alert-link{color:#843534}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{height:20px;margin-bottom:20px;overflow:hidden;background-color:#f5f5f5;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}.progress-bar{float:left;width:0;height:100%;font-size:12px;line-height:20px;color:#fff;text-align:center;background-color:#337ab7;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);-webkit-transition:width .6s ease;-o-transition:width .6s ease;transition:width .6s ease}.progress-bar-striped,.progress-striped .progress-bar{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px;background-size:40px 40px}.progress-bar.active,.progress.active .progress-bar{-webkit-animation:progress-bar-stripes 2s linear infinite;-o-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite}.progress-bar-success{background-color:#5cb85c}.progress-striped .progress-bar-success{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-info{background-color:#5bc0de}.progress-striped .progress-bar-info{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-warning{background-color:#f0ad4e}.progress-striped .progress-bar-warning{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-danger{background-color:#d9534f}.progress-striped .progress-bar-danger{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.media{margin-top:15px}.media:first-child{margin-top:0}.media,.media-body{overflow:hidden;zoom:1}.media-body{width:10000px}.media-object{display:block}.media-object.img-thumbnail{max-width:none}.media-right,.media&gt;.pull-right{padding-left:10px}.media-left,.media&gt;.pull-left{padding-right:10px}.media-body,.media-left,.media-right{display:table-cell;vertical-align:top}.media-middle{vertical-align:middle}.media-bottom{vertical-align:bottom}.media-heading{margin-top:0;margin-bottom:5px}.media-list{padding-left:0;list-style:none}.list-group{padding-left:0;margin-bottom:20px}.list-group-item{position:relative;display:block;padding:10px 15px;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}a.list-group-item,button.list-group-item{color:#555}a.list-group-item .list-group-item-heading,button.list-group-item .list-group-item-heading{color:#333}a.list-group-item:focus,a.list-group-item:hover,button.list-group-item:focus,button.list-group-item:hover{color:#555;text-decoration:none;background-color:#f5f5f5}button.list-group-item{width:100%;text-align:left}.list-group-item.disabled,.list-group-item.disabled:focus,.list-group-item.disabled:hover{color:#777;cursor:not-allowed;background-color:#eee}.list-group-item.disabled .list-group-item-heading,.list-group-item.disabled:focus .list-group-item-heading,.list-group-item.disabled:hover .list-group-item-heading{color:inherit}.list-group-item.disabled .list-group-item-text,.list-group-item.disabled:focus .list-group-item-text,.list-group-item.disabled:hover .list-group-item-text{color:#777}.list-group-item.active,.list-group-item.active:focus,.list-group-item.active:hover{z-index:2;color:#fff;background-color:#337ab7;border-color:#337ab7}.list-group-item.active .list-group-item-heading,.list-group-item.active .list-group-item-heading&gt;.small,.list-group-item.active .list-group-item-heading&gt;small,.list-group-item.active:focus .list-group-item-heading,.list-group-item.active:focus .list-group-item-heading&gt;.small,.list-group-item.active:focus .list-group-item-heading&gt;small,.list-group-item.active:hover .list-group-item-heading,.list-group-item.active:hover .list-group-item-heading&gt;.small,.list-group-item.active:hover .list-group-item-heading&gt;small{color:inherit}.list-group-item.active .list-group-item-text,.list-group-item.active:focus .list-group-item-text,.list-group-item.active:hover .list-group-item-text{color:#c7ddef}.list-group-item-success{color:#3c763d;background-color:#dff0d8}a.list-group-item-success,button.list-group-item-success{color:#3c763d}a.list-group-item-success .list-group-item-heading,button.list-group-item-success .list-group-item-heading{color:inherit}a.list-group-item-success:focus,a.list-group-item-success:hover,button.list-group-item-success:focus,button.list-group-item-success:hover{color:#3c763d;background-color:#d0e9c6}a.list-group-item-success.active,a.list-group-item-success.active:focus,a.list-group-item-success.active:hover,button.list-group-item-success.active,button.list-group-item-success.active:focus,button.list-group-item-success.active:hover{color:#fff;background-color:#3c763d;border-color:#3c763d}.list-group-item-info{color:#31708f;background-color:#d9edf7}a.list-group-item-info,button.list-group-item-info{color:#31708f}a.list-group-item-info .list-group-item-heading,button.list-group-item-info .list-group-item-heading{color:inherit}a.list-group-item-info:focus,a.list-group-item-info:hover,button.list-group-item-info:focus,button.list-group-item-info:hover{color:#31708f;background-color:#c4e3f3}a.list-group-item-info.active,a.list-group-item-info.active:focus,a.list-group-item-info.active:hover,button.list-group-item-info.active,button.list-group-item-info.active:focus,button.list-group-item-info.active:hover{color:#fff;background-color:#31708f;border-color:#31708f}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}a.list-group-item-warning,button.list-group-item-warning{color:#8a6d3b}a.list-group-item-warning .list-group-item-heading,button.list-group-item-warning .list-group-item-heading{color:inherit}a.list-group-item-warning:focus,a.list-group-item-warning:hover,button.list-group-item-warning:focus,button.list-group-item-warning:hover{color:#8a6d3b;background-color:#faf2cc}a.list-group-item-warning.active,a.list-group-item-warning.active:focus,a.list-group-item-warning.active:hover,button.list-group-item-warning.active,button.list-group-item-warning.active:focus,button.list-group-item-warning.active:hover{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.list-group-item-danger{color:#a94442;background-color:#f2dede}a.list-group-item-danger,button.list-group-item-danger{color:#a94442}a.list-group-item-danger .list-group-item-heading,button.list-group-item-danger .list-group-item-heading{color:inherit}a.list-group-item-danger:focus,a.list-group-item-danger:hover,button.list-group-item-danger:focus,button.list-group-item-danger:hover{color:#a94442;background-color:#ebcccc}a.list-group-item-danger.active,a.list-group-item-danger.active:focus,a.list-group-item-danger.active:hover,button.list-group-item-danger.active,button.list-group-item-danger.active:focus,button.list-group-item-danger.active:hover{color:#fff;background-color:#a94442;border-color:#a94442}.list-group-item-heading{margin-top:0;margin-bottom:5px}.list-group-item-text{margin-bottom:0;line-height:1.3}.panel{margin-bottom:20px;background-color:#fff;border:1px solid transparent;border-radius:4px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.05);box-shadow:0 1px 1px rgba(0,0,0,.05)}.panel-body{padding:15px}.panel-heading{padding:10px 15px;border-bottom:1px solid transparent;border-top-left-radius:3px;border-top-right-radius:3px}.panel-heading&gt;.dropdown .dropdown-toggle{color:inherit}.panel-title{margin-top:0;margin-bottom:0;font-size:16px;color:inherit}.panel-title&gt;.small,.panel-title&gt;.small&gt;a,.panel-title&gt;a,.panel-title&gt;small,.panel-title&gt;small&gt;a{color:inherit}.panel-footer{padding:10px 15px;background-color:#f5f5f5;border-top:1px solid #ddd;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel&gt;.list-group,.panel&gt;.panel-collapse&gt;.list-group{margin-bottom:0}.panel&gt;.list-group .list-group-item,.panel&gt;.panel-collapse&gt;.list-group .list-group-item{border-width:1px 0;border-radius:0}.panel&gt;.list-group:first-child .list-group-item:first-child,.panel&gt;.panel-collapse&gt;.list-group:first-child .list-group-item:first-child{border-top:0;border-top-left-radius:3px;border-top-right-radius:3px}.panel&gt;.list-group:last-child .list-group-item:last-child,.panel&gt;.panel-collapse&gt;.list-group:last-child .list-group-item:last-child{border-bottom:0;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel&gt;.panel-heading+.panel-collapse&gt;.list-group .list-group-item:first-child{border-top-left-radius:0;border-top-right-radius:0}.panel-heading+.list-group .list-group-item:first-child{border-top-width:0}.list-group+.panel-footer{border-top-width:0}.panel&gt;.panel-collapse&gt;.table,.panel&gt;.table,.panel&gt;.table-responsive&gt;.table{margin-bottom:0}.panel&gt;.panel-collapse&gt;.table caption,.panel&gt;.table caption,.panel&gt;.table-responsive&gt;.table caption{padding-right:15px;padding-left:15px}.panel&gt;.table-responsive:first-child&gt;.table:first-child,.panel&gt;.table:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child,.panel&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child,.panel&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child td:first-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child th:first-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child td:first-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child th:first-child,.panel&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child td:first-child,.panel&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child th:first-child,.panel&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child td:first-child,.panel&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child th:first-child{border-top-left-radius:3px}.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child td:last-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child th:last-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child td:last-child,.panel&gt;.table-responsive:first-child&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child th:last-child,.panel&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child td:last-child,.panel&gt;.table:first-child&gt;tbody:first-child&gt;tr:first-child th:last-child,.panel&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child td:last-child,.panel&gt;.table:first-child&gt;thead:first-child&gt;tr:first-child th:last-child{border-top-right-radius:3px}.panel&gt;.table-responsive:last-child&gt;.table:last-child,.panel&gt;.table:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child,.panel&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child,.panel&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child td:first-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child th:first-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child td:first-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child th:first-child,.panel&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child td:first-child,.panel&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child th:first-child,.panel&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child td:first-child,.panel&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child th:first-child{border-bottom-left-radius:3px}.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child td:last-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child th:last-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child td:last-child,.panel&gt;.table-responsive:last-child&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child th:last-child,.panel&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child td:last-child,.panel&gt;.table:last-child&gt;tbody:last-child&gt;tr:last-child th:last-child,.panel&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child td:last-child,.panel&gt;.table:last-child&gt;tfoot:last-child&gt;tr:last-child th:last-child{border-bottom-right-radius:3px}.panel&gt;.panel-body+.table,.panel&gt;.panel-body+.table-responsive,.panel&gt;.table+.panel-body,.panel&gt;.table-responsive+.panel-body{border-top:1px solid #ddd}.panel&gt;.table&gt;tbody:first-child&gt;tr:first-child td,.panel&gt;.table&gt;tbody:first-child&gt;tr:first-child th{border-top:0}.panel&gt;.table-bordered,.panel&gt;.table-responsive&gt;.table-bordered{border:0}.panel&gt;.table-bordered&gt;tbody&gt;tr&gt;td:first-child,.panel&gt;.table-bordered&gt;tbody&gt;tr&gt;th:first-child,.panel&gt;.table-bordered&gt;tfoot&gt;tr&gt;td:first-child,.panel&gt;.table-bordered&gt;tfoot&gt;tr&gt;th:first-child,.panel&gt;.table-bordered&gt;thead&gt;tr&gt;td:first-child,.panel&gt;.table-bordered&gt;thead&gt;tr&gt;th:first-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;td:first-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;th:first-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;td:first-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;th:first-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;td:first-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;th:first-child{border-left:0}.panel&gt;.table-bordered&gt;tbody&gt;tr&gt;td:last-child,.panel&gt;.table-bordered&gt;tbody&gt;tr&gt;th:last-child,.panel&gt;.table-bordered&gt;tfoot&gt;tr&gt;td:last-child,.panel&gt;.table-bordered&gt;tfoot&gt;tr&gt;th:last-child,.panel&gt;.table-bordered&gt;thead&gt;tr&gt;td:last-child,.panel&gt;.table-bordered&gt;thead&gt;tr&gt;th:last-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;td:last-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr&gt;th:last-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;td:last-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr&gt;th:last-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;td:last-child,.panel&gt;.table-responsive&gt;.table-bordered&gt;thead&gt;tr&gt;th:last-child{border-right:0}.panel&gt;.table-bordered&gt;tbody&gt;tr:first-child&gt;td,.panel&gt;.table-bordered&gt;tbody&gt;tr:first-child&gt;th,.panel&gt;.table-bordered&gt;thead&gt;tr:first-child&gt;td,.panel&gt;.table-bordered&gt;thead&gt;tr:first-child&gt;th,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr:first-child&gt;td,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr:first-child&gt;th,.panel&gt;.table-responsive&gt;.table-bordered&gt;thead&gt;tr:first-child&gt;td,.panel&gt;.table-responsive&gt;.table-bordered&gt;thead&gt;tr:first-child&gt;th{border-bottom:0}.panel&gt;.table-bordered&gt;tbody&gt;tr:last-child&gt;td,.panel&gt;.table-bordered&gt;tbody&gt;tr:last-child&gt;th,.panel&gt;.table-bordered&gt;tfoot&gt;tr:last-child&gt;td,.panel&gt;.table-bordered&gt;tfoot&gt;tr:last-child&gt;th,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr:last-child&gt;td,.panel&gt;.table-responsive&gt;.table-bordered&gt;tbody&gt;tr:last-child&gt;th,.panel&gt;.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr:last-child&gt;td,.panel&gt;.table-responsive&gt;.table-bordered&gt;tfoot&gt;tr:last-child&gt;th{border-bottom:0}.panel&gt;.table-responsive{margin-bottom:0;border:0}.panel-group{margin-bottom:20px}.panel-group .panel{margin-bottom:0;border-radius:4px}.panel-group .panel+.panel{margin-top:5px}.panel-group .panel-heading{border-bottom:0}.panel-group .panel-heading+.panel-collapse&gt;.list-group,.panel-group .panel-heading+.panel-collapse&gt;.panel-body{border-top:1px solid #ddd}.panel-group .panel-footer{border-top:0}.panel-group .panel-footer+.panel-collapse .panel-body{border-bottom:1px solid #ddd}.panel-default{border-color:#ddd}.panel-default&gt;.panel-heading{color:#333;background-color:#f5f5f5;border-color:#ddd}.panel-default&gt;.panel-heading+.panel-collapse&gt;.panel-body{border-top-color:#ddd}.panel-default&gt;.panel-heading .badge{color:#f5f5f5;background-color:#333}.panel-default&gt;.panel-footer+.panel-collapse&gt;.panel-body{border-bottom-color:#ddd}.panel-primary{border-color:#337ab7}.panel-primary&gt;.panel-heading{color:#fff;background-color:#337ab7;border-color:#337ab7}.panel-primary&gt;.panel-heading+.panel-collapse&gt;.panel-body{border-top-color:#337ab7}.panel-primary&gt;.panel-heading .badge{color:#337ab7;background-color:#fff}.panel-primary&gt;.panel-footer+.panel-collapse&gt;.panel-body{border-bottom-color:#337ab7}.panel-success{border-color:#d6e9c6}.panel-success&gt;.panel-heading{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.panel-success&gt;.panel-heading+.panel-collapse&gt;.panel-body{border-top-color:#d6e9c6}.panel-success&gt;.panel-heading .badge{color:#dff0d8;background-color:#3c763d}.panel-success&gt;.panel-footer+.panel-collapse&gt;.panel-body{border-bottom-color:#d6e9c6}.panel-info{border-color:#bce8f1}.panel-info&gt;.panel-heading{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.panel-info&gt;.panel-heading+.panel-collapse&gt;.panel-body{border-top-color:#bce8f1}.panel-info&gt;.panel-heading .badge{color:#d9edf7;background-color:#31708f}.panel-info&gt;.panel-footer+.panel-collapse&gt;.panel-body{border-bottom-color:#bce8f1}.panel-warning{border-color:#faebcc}.panel-warning&gt;.panel-heading{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.panel-warning&gt;.panel-heading+.panel-collapse&gt;.panel-body{border-top-color:#faebcc}.panel-warning&gt;.panel-heading .badge{color:#fcf8e3;background-color:#8a6d3b}.panel-warning&gt;.panel-footer+.panel-collapse&gt;.panel-body{border-bottom-color:#faebcc}.panel-danger{border-color:#ebccd1}.panel-danger&gt;.panel-heading{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.panel-danger&gt;.panel-heading+.panel-collapse&gt;.panel-body{border-top-color:#ebccd1}.panel-danger&gt;.panel-heading .badge{color:#f2dede;background-color:#a94442}.panel-danger&gt;.panel-footer+.panel-collapse&gt;.panel-body{border-bottom-color:#ebccd1}.embed-responsive{position:relative;display:block;height:0;padding:0;overflow:hidden}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-16by9{padding-bottom:56.25%}.embed-responsive-4by3{padding-bottom:75%}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.05);box-shadow:inset 0 1px 1px rgba(0,0,0,.05)}.well blockquote{border-color:#ddd;border-color:rgba(0,0,0,.15)}.well-lg{padding:24px;border-radius:6px}.well-sm{padding:9px;border-radius:3px}.close{float:right;font-size:21px;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;filter:alpha(opacity=20);opacity:.2}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer;filter:alpha(opacity=50);opacity:.5}button.close{-webkit-appearance:none;padding:0;cursor:pointer;background:0 0;border:0}.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;-webkit-overflow-scrolling:touch;outline:0}.modal.fade .modal-dialog{-webkit-transition:-webkit-transform .3s ease-out;-o-transition:-o-transform .3s ease-out;transition:transform .3s ease-out;-webkit-transform:translate(0,-25%);-ms-transform:translate(0,-25%);-o-transform:translate(0,-25%);transform:translate(0,-25%)}.modal.in .modal-dialog{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #999;border:1px solid rgba(0,0,0,.2);border-radius:6px;outline:0;-webkit-box-shadow:0 3px 9px rgba(0,0,0,.5);box-shadow:0 3px 9px rgba(0,0,0,.5)}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{filter:alpha(opacity=0);opacity:0}.modal-backdrop.in{filter:alpha(opacity=50);opacity:.5}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.42857143}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer .btn+.btn{margin-bottom:0;margin-left:5px}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.modal-footer .btn-block+.btn-block{margin-left:0}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:768px){.modal-dialog{width:600px;margin:30px auto}.modal-content{-webkit-box-shadow:0 5px 15px rgba(0,0,0,.5);box-shadow:0 5px 15px rgba(0,0,0,.5)}.modal-sm{width:300px}}@media (min-width:992px){.modal-lg{width:900px}}.tooltip{position:absolute;z-index:1070;display:block;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:12px;font-style:normal;font-weight:400;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;filter:alpha(opacity=0);opacity:0;line-break:auto}.tooltip.in{filter:alpha(opacity=90);opacity:.9}.tooltip.top{padding:5px 0;margin-top:-3px}.tooltip.right{padding:0 5px;margin-left:3px}.tooltip.bottom{padding:5px 0;margin-top:3px}.tooltip.left{padding:0 5px;margin-left:-3px}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:4px}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-left .tooltip-arrow{right:5px;bottom:0;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-right .tooltip-arrow{bottom:0;left:5px;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-left .tooltip-arrow{top:0;right:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-right .tooltip-arrow{top:0;left:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#000}.popover{position:absolute;top:0;left:0;z-index:1060;display:none;max-width:276px;padding:1px;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;font-style:normal;font-weight:400;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.2);border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);line-break:auto}.popover.top{margin-top:-10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-left:-10px}.popover-title{padding:8px 14px;margin:0;font-size:14px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px}.popover&gt;.arrow,.popover&gt;.arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover&gt;.arrow{border-width:11px}.popover&gt;.arrow:after{content:"";border-width:10px}.popover.top&gt;.arrow{bottom:-11px;left:50%;margin-left:-11px;border-top-color:#999;border-top-color:rgba(0,0,0,.25);border-bottom-width:0}.popover.top&gt;.arrow:after{bottom:1px;margin-left:-10px;content:" ";border-top-color:#fff;border-bottom-width:0}.popover.right&gt;.arrow{top:50%;left:-11px;margin-top:-11px;border-right-color:#999;border-right-color:rgba(0,0,0,.25);border-left-width:0}.popover.right&gt;.arrow:after{bottom:-10px;left:1px;content:" ";border-right-color:#fff;border-left-width:0}.popover.bottom&gt;.arrow{top:-11px;left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:#999;border-bottom-color:rgba(0,0,0,.25)}.popover.bottom&gt;.arrow:after{top:1px;margin-left:-10px;content:" ";border-top-width:0;border-bottom-color:#fff}.popover.left&gt;.arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:#999;border-left-color:rgba(0,0,0,.25)}.popover.left&gt;.arrow:after{right:1px;bottom:-10px;content:" ";border-right-width:0;border-left-color:#fff}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner&gt;.item{position:relative;display:none;-webkit-transition:.6s ease-in-out left;-o-transition:.6s ease-in-out left;transition:.6s ease-in-out left}.carousel-inner&gt;.item&gt;a&gt;img,.carousel-inner&gt;.item&gt;img{line-height:1}@media all and (transform-3d),(-webkit-transform-3d){.carousel-inner&gt;.item{-webkit-transition:-webkit-transform .6s ease-in-out;-o-transition:-o-transform .6s ease-in-out;transition:transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-inner&gt;.item.active.right,.carousel-inner&gt;.item.next{left:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}.carousel-inner&gt;.item.active.left,.carousel-inner&gt;.item.prev{left:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}.carousel-inner&gt;.item.active,.carousel-inner&gt;.item.next.left,.carousel-inner&gt;.item.prev.right{left:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.carousel-inner&gt;.active,.carousel-inner&gt;.next,.carousel-inner&gt;.prev{display:block}.carousel-inner&gt;.active{left:0}.carousel-inner&gt;.next,.carousel-inner&gt;.prev{position:absolute;top:0;width:100%}.carousel-inner&gt;.next{left:100%}.carousel-inner&gt;.prev{left:-100%}.carousel-inner&gt;.next.left,.carousel-inner&gt;.prev.right{left:0}.carousel-inner&gt;.active.left{left:-100%}.carousel-inner&gt;.active.right{left:100%}.carousel-control{position:absolute;top:0;bottom:0;left:0;width:15%;font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);background-color:rgba(0,0,0,0);filter:alpha(opacity=50);opacity:.5}.carousel-control.left{background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);background-image:-o-linear-gradient(left,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.0001)));background-image:linear-gradient(to right,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);background-repeat:repeat-x}.carousel-control.right{right:0;left:auto;background-image:-webkit-linear-gradient(left,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);background-image:-o-linear-gradient(left,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.0001)),to(rgba(0,0,0,.5)));background-image:linear-gradient(to right,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);background-repeat:repeat-x}.carousel-control:focus,.carousel-control:hover{color:#fff;text-decoration:none;filter:alpha(opacity=90);outline:0;opacity:.9}.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;z-index:5;display:inline-block;margin-top:-10px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-next,.carousel-control .icon-prev{width:20px;height:20px;font-family:serif;line-height:1}.carousel-control .icon-prev:before{content:'\2039'}.carousel-control .icon-next:before{content:'\203a'}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;padding-left:0;margin-left:-30%;text-align:center;list-style:none}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;cursor:pointer;background-color:#000\9;background-color:rgba(0,0,0,0);border:1px solid #fff;border-radius:10px}.carousel-indicators .active{width:12px;height:12px;margin:0;background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media screen and (min-width:768px){.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-10px;font-size:30px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{margin-right:-10px}.carousel-caption{right:20%;left:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}.btn-group-vertical&gt;.btn-group:after,.btn-group-vertical&gt;.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.dl-horizontal dd:after,.dl-horizontal dd:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.modal-footer:after,.modal-footer:before,.modal-header:after,.modal-header:before,.nav:after,.nav:before,.navbar-collapse:after,.navbar-collapse:before,.navbar-header:after,.navbar-header:before,.navbar:after,.navbar:before,.pager:after,.pager:before,.panel-body:after,.panel-body:before,.row:after,.row:before{display:table;content:" "}.btn-group-vertical&gt;.btn-group:after,.btn-toolbar:after,.clearfix:after,.container-fluid:after,.container:after,.dl-horizontal dd:after,.form-horizontal .form-group:after,.modal-footer:after,.modal-header:after,.nav:after,.navbar-collapse:after,.navbar-header:after,.navbar:after,.pager:after,.panel-body:after,.row:after{clear:both}.center-block{display:block;margin-right:auto;margin-left:auto}.pull-right{float:right!important}.pull-left{float:left!important}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none!important}.affix{position:fixed}@-ms-viewport{width:device-width}.visible-lg,.visible-md,.visible-sm,.visible-xs{display:none!important}.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block{display:none!important}@media (max-width:767px){.visible-xs{display:block!important}table.visible-xs{display:table!important}tr.visible-xs{display:table-row!important}td.visible-xs,th.visible-xs{display:table-cell!important}}@media (max-width:767px){.visible-xs-block{display:block!important}}@media (max-width:767px){.visible-xs-inline{display:inline!important}}@media (max-width:767px){.visible-xs-inline-block{display:inline-block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block!important}table.visible-sm{display:table!important}tr.visible-sm{display:table-row!important}td.visible-sm,th.visible-sm{display:table-cell!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-block{display:block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline{display:inline!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline-block{display:inline-block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block!important}table.visible-md{display:table!important}tr.visible-md{display:table-row!important}td.visible-md,th.visible-md{display:table-cell!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-block{display:block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline{display:inline!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline-block{display:inline-block!important}}@media (min-width:1200px){.visible-lg{display:block!important}table.visible-lg{display:table!important}tr.visible-lg{display:table-row!important}td.visible-lg,th.visible-lg{display:table-cell!important}}@media (min-width:1200px){.visible-lg-block{display:block!important}}@media (min-width:1200px){.visible-lg-inline{display:inline!important}}@media (min-width:1200px){.visible-lg-inline-block{display:inline-block!important}}@media (max-width:767px){.hidden-xs{display:none!important}}@media (min-width:768px) and (max-width:991px){.hidden-sm{display:none!important}}@media (min-width:992px) and (max-width:1199px){.hidden-md{display:none!important}}@media (min-width:1200px){.hidden-lg{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:block!important}table.visible-print{display:table!important}tr.visible-print{display:table-row!important}td.visible-print,th.visible-print{display:table-cell!important}}.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}
/*# sourceMappingURL=bootstrap.min.css.map */</contentText>
  </asset>
  <asset name="css/fullcalendar.css" mimeType="text/css">
    <contentText>/*!
 * FullCalendar v3.0.1 Stylesheet
 * Docs &amp; License: http://fullcalendar.io/
 * (c) 2016 Adam Shaw
 */


.fc {
	direction: ltr;
	text-align: left;
}

.fc-rtl {
	text-align: right;
}

body .fc { /* extra precedence to overcome jqui */
	font-size: 1em;
}


/* Colors
--------------------------------------------------------------------------------------------------*/

.fc-unthemed th,
.fc-unthemed td,
.fc-unthemed thead,
.fc-unthemed tbody,
.fc-unthemed .fc-divider,
.fc-unthemed .fc-row,
.fc-unthemed .fc-content, /* for gutter border */
.fc-unthemed .fc-popover,
.fc-unthemed .fc-list-view,
.fc-unthemed .fc-list-heading td {
	border-color: #ddd;
}

.fc-unthemed .fc-popover {
	background-color: #fff;
}

.fc-unthemed .fc-divider,
.fc-unthemed .fc-popover .fc-header,
.fc-unthemed .fc-list-heading td {
	background: #eee;
}

.fc-unthemed .fc-popover .fc-header .fc-close {
	color: #666;
}

.fc-unthemed .fc-today {
	background: #fcf8e3;
}

.fc-highlight { /* when user is selecting cells */
	background: #bce8f1;
	opacity: .3;
}

.fc-bgevent { /* default look for background events */
	background: rgb(143, 223, 130);
	opacity: .3;
}

.fc-nonbusiness { /* default look for non-business-hours areas */
	/* will inherit .fc-bgevent's styles */
	background: #d7d7d7;
}


/* Icons (inline elements with styled text that mock arrow icons)
--------------------------------------------------------------------------------------------------*/

.fc-icon {
	display: inline-block;
	height: 1em;
	line-height: 1em;
	font-size: 1em;
	text-align: center;
	overflow: hidden;
	font-family: "Courier New", Courier, monospace;

	/* don't allow browser text-selection */
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	}

/*
Acceptable font-family overrides for individual icons:
	"Arial", sans-serif
	"Times New Roman", serif

NOTE: use percentage font sizes or else old IE chokes
*/

.fc-icon:after {
	position: relative;
}

.fc-icon-left-single-arrow:after {
	content: "\02039";
	font-weight: bold;
	font-size: 200%;
	top: -7%;
}

.fc-icon-right-single-arrow:after {
	content: "\0203A";
	font-weight: bold;
	font-size: 200%;
	top: -7%;
}

.fc-icon-left-double-arrow:after {
	content: "\000AB";
	font-size: 160%;
	top: -7%;
}

.fc-icon-right-double-arrow:after {
	content: "\000BB";
	font-size: 160%;
	top: -7%;
}

.fc-icon-left-triangle:after {
	content: "\25C4";
	font-size: 125%;
	top: 3%;
}

.fc-icon-right-triangle:after {
	content: "\25BA";
	font-size: 125%;
	top: 3%;
}

.fc-icon-down-triangle:after {
	content: "\25BC";
	font-size: 125%;
	top: 2%;
}

.fc-icon-x:after {
	content: "\000D7";
	font-size: 200%;
	top: 6%;
}


/* Buttons (styled &lt;button&gt; tags, normalized to work cross-browser)
--------------------------------------------------------------------------------------------------*/

.fc button {
	/* force height to include the border and padding */
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;

	/* dimensions */
	margin: 0;
	height: 2.1em;
	padding: 0 .6em;

	/* text &amp; cursor */
	font-size: 1em; /* normalize */
	white-space: nowrap;
	cursor: pointer;
}

/* Firefox has an annoying inner border */
.fc button::-moz-focus-inner { margin: 0; padding: 0; }
	
.fc-state-default { /* non-theme */
	border: 1px solid;
}

.fc-state-default.fc-corner-left { /* non-theme */
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
}

.fc-state-default.fc-corner-right { /* non-theme */
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
}

/* icons in buttons */

.fc button .fc-icon { /* non-theme */
	position: relative;
	top: -0.05em; /* seems to be a good adjustment across browsers */
	margin: 0 .2em;
	vertical-align: middle;
}
	
/*
  button states
  borrowed from twitter bootstrap (http://twitter.github.com/bootstrap/)
*/

.fc-state-default {
	background-color: #f5f5f5;
	background-image: -moz-linear-gradient(top, #ffffff, #e6e6e6);
	background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6));
	background-image: -webkit-linear-gradient(top, #ffffff, #e6e6e6);
	background-image: -o-linear-gradient(top, #ffffff, #e6e6e6);
	background-image: linear-gradient(to bottom, #ffffff, #e6e6e6);
	background-repeat: repeat-x;
	border-color: #e6e6e6 #e6e6e6 #bfbfbf;
	border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
	color: #333;
	text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
	box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
}

.fc-state-hover,
.fc-state-down,
.fc-state-active,
.fc-state-disabled {
	color: #333333;
	background-color: #e6e6e6;
}

.fc-state-hover {
	color: #333333;
	text-decoration: none;
	background-position: 0 -15px;
	-webkit-transition: background-position 0.1s linear;
	   -moz-transition: background-position 0.1s linear;
	     -o-transition: background-position 0.1s linear;
	        transition: background-position 0.1s linear;
}

.fc-state-down,
.fc-state-active {
	background-color: #cccccc;
	background-image: none;
	box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
}

.fc-state-disabled {
	cursor: default;
	background-image: none;
	opacity: 0.65;
	box-shadow: none;
}


/* Buttons Groups
--------------------------------------------------------------------------------------------------*/

.fc-button-group {
	display: inline-block;
}

/*
every button that is not first in a button group should scootch over one pixel and cover the
previous button's border...
*/

.fc .fc-button-group &gt; * { /* extra precedence b/c buttons have margin set to zero */
	float: left;
	margin: 0 0 0 -1px;
}

.fc .fc-button-group &gt; :first-child { /* same */
	margin-left: 0;
}


/* Popover
--------------------------------------------------------------------------------------------------*/

.fc-popover {
	position: absolute;
	box-shadow: 0 2px 6px rgba(0,0,0,.15);
}

.fc-popover .fc-header { /* TODO: be more consistent with fc-head/fc-body */
	padding: 2px 4px;
}

.fc-popover .fc-header .fc-title {
	margin: 0 2px;
}

.fc-popover .fc-header .fc-close {
	cursor: pointer;
}

.fc-ltr .fc-popover .fc-header .fc-title,
.fc-rtl .fc-popover .fc-header .fc-close {
	float: left;
}

.fc-rtl .fc-popover .fc-header .fc-title,
.fc-ltr .fc-popover .fc-header .fc-close {
	float: right;
}

/* unthemed */

.fc-unthemed .fc-popover {
	border-width: 1px;
	border-style: solid;
}

.fc-unthemed .fc-popover .fc-header .fc-close {
	font-size: .9em;
	margin-top: 2px;
}

/* jqui themed */

.fc-popover &gt; .ui-widget-header + .ui-widget-content {
	border-top: 0; /* where they meet, let the header have the border */
}


/* Misc Reusable Components
--------------------------------------------------------------------------------------------------*/

.fc-divider {
	border-style: solid;
	border-width: 1px;
}

hr.fc-divider {
	height: 0;
	margin: 0;
	padding: 0 0 2px; /* height is unreliable across browsers, so use padding */
	border-width: 1px 0;
}

.fc-clear {
	clear: both;
}

.fc-bg,
.fc-bgevent-skeleton,
.fc-highlight-skeleton,
.fc-helper-skeleton {
	/* these element should always cling to top-left/right corners */
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
}

.fc-bg {
	bottom: 0; /* strech bg to bottom edge */
}

.fc-bg table {
	height: 100%; /* strech bg to bottom edge */
}


/* Tables
--------------------------------------------------------------------------------------------------*/

.fc table {
	width: 100%;
	box-sizing: border-box; /* fix scrollbar issue in firefox */
	table-layout: fixed;
	border-collapse: collapse;
	border-spacing: 0;
	font-size: 1em; /* normalize cross-browser */
}

.fc th {
	text-align: center;
}

.fc th,
.fc td {
	border-style: solid;
	border-width: 1px;
	padding: 0;
	vertical-align: top;
}

.fc td.fc-today {
	border-style: double; /* overcome neighboring borders */
}


/* Internal Nav Links
--------------------------------------------------------------------------------------------------*/

a[data-goto] {
	cursor: pointer;
}

a[data-goto]:hover {
	text-decoration: underline;
}


/* Fake Table Rows
--------------------------------------------------------------------------------------------------*/

.fc .fc-row { /* extra precedence to overcome themes w/ .ui-widget-content forcing a 1px border */
	/* no visible border by default. but make available if need be (scrollbar width compensation) */
	border-style: solid;
	border-width: 0;
}

.fc-row table {
	/* don't put left/right border on anything within a fake row.
	   the outer tbody will worry about this */
	border-left: 0 hidden transparent;
	border-right: 0 hidden transparent;

	/* no bottom borders on rows */
	border-bottom: 0 hidden transparent; 
}

.fc-row:first-child table {
	border-top: 0 hidden transparent; /* no top border on first row */
}


/* Day Row (used within the header and the DayGrid)
--------------------------------------------------------------------------------------------------*/

.fc-row {
	position: relative;
}

.fc-row .fc-bg {
	z-index: 1;
}

/* highlighting cells &amp; background event skeleton */

.fc-row .fc-bgevent-skeleton,
.fc-row .fc-highlight-skeleton {
	bottom: 0; /* stretch skeleton to bottom of row */
}

.fc-row .fc-bgevent-skeleton table,
.fc-row .fc-highlight-skeleton table {
	height: 100%; /* stretch skeleton to bottom of row */
}

.fc-row .fc-highlight-skeleton td,
.fc-row .fc-bgevent-skeleton td {
	border-color: transparent;
}

.fc-row .fc-bgevent-skeleton {
	z-index: 2;

}

.fc-row .fc-highlight-skeleton {
	z-index: 3;
}

/*
row content (which contains day/week numbers and events) as well as "helper" (which contains
temporary rendered events).
*/

.fc-row .fc-content-skeleton {
	position: relative;
	z-index: 4;
	padding-bottom: 2px; /* matches the space above the events */
}

.fc-row .fc-helper-skeleton {
	z-index: 5;
}

.fc-row .fc-content-skeleton td,
.fc-row .fc-helper-skeleton td {
	/* see-through to the background below */
	background: none; /* in case &lt;td&gt;s are globally styled */
	border-color: transparent;

	/* don't put a border between events and/or the day number */
	border-bottom: 0;
}

.fc-row .fc-content-skeleton tbody td, /* cells with events inside (so NOT the day number cell) */
.fc-row .fc-helper-skeleton tbody td {
	/* don't put a border between event cells */
	border-top: 0;
}


/* Scrolling Container
--------------------------------------------------------------------------------------------------*/

.fc-scroller {
	-webkit-overflow-scrolling: touch;
}

/* TODO: move to agenda/basic */
.fc-scroller &gt; .fc-day-grid,
.fc-scroller &gt; .fc-time-grid {
	position: relative; /* re-scope all positions */
	width: 100%; /* hack to force re-sizing this inner element when scrollbars appear/disappear */
}


/* Global Event Styles
--------------------------------------------------------------------------------------------------*/

.fc-event {
	position: relative; /* for resize handle and other inner positioning */
	display: block; /* make the &lt;a&gt; tag block */
	font-size: .85em;
	line-height: 1.3;
	border-radius: 3px;
	border: 1px solid #3a87ad; /* default BORDER color */
	font-weight: normal; /* undo jqui's ui-widget-header bold */
}

.fc-event,
.fc-event-dot {
	background-color: #3a87ad; /* default BACKGROUND color */
}

/* overpower some of bootstrap's and jqui's styles on &lt;a&gt; tags */
.fc-event,
.fc-event:hover,
.ui-widget .fc-event {
	color: #fff; /* default TEXT color */
	text-decoration: none; /* if &lt;a&gt; has an href */
}

.fc-event[href],
.fc-event.fc-draggable {
	cursor: pointer; /* give events with links and draggable events a hand mouse pointer */
}

.fc-not-allowed, /* causes a "warning" cursor. applied on body */
.fc-not-allowed .fc-event { /* to override an event's custom cursor */
	cursor: not-allowed;
}

.fc-event .fc-bg { /* the generic .fc-bg already does position */
	z-index: 1;
	background: #fff;
	opacity: .25;
}

.fc-event .fc-content {
	position: relative;
	z-index: 2;
}

/* resizer (cursor AND touch devices) */

.fc-event .fc-resizer {
	position: absolute;
	z-index: 4;
}

/* resizer (touch devices) */

.fc-event .fc-resizer {
	display: none;
}

.fc-event.fc-allow-mouse-resize .fc-resizer,
.fc-event.fc-selected .fc-resizer {
	/* only show when hovering or selected (with touch) */
	display: block;
}

/* hit area */

.fc-event.fc-selected .fc-resizer:before {
	/* 40x40 touch area */
	content: "";
	position: absolute;
	z-index: 9999; /* user of this util can scope within a lower z-index */
	top: 50%;
	left: 50%;
	width: 40px;
	height: 40px;
	margin-left: -20px;
	margin-top: -20px;
}


/* Event Selection (only for touch devices)
--------------------------------------------------------------------------------------------------*/

.fc-event.fc-selected {
	z-index: 9999 !important; /* overcomes inline z-index */
	box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.fc-event.fc-selected.fc-dragging {
	box-shadow: 0 2px 7px rgba(0, 0, 0, 0.3);
}


/* Horizontal Events
--------------------------------------------------------------------------------------------------*/

/* bigger touch area when selected */
.fc-h-event.fc-selected:before {
	content: "";
	position: absolute;
	z-index: 3; /* below resizers */
	top: -10px;
	bottom: -10px;
	left: 0;
	right: 0;
}

/* events that are continuing to/from another week. kill rounded corners and butt up against edge */

.fc-ltr .fc-h-event.fc-not-start,
.fc-rtl .fc-h-event.fc-not-end {
	margin-left: 0;
	border-left-width: 0;
	padding-left: 1px; /* replace the border with padding */
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
}

.fc-ltr .fc-h-event.fc-not-end,
.fc-rtl .fc-h-event.fc-not-start {
	margin-right: 0;
	border-right-width: 0;
	padding-right: 1px; /* replace the border with padding */
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}

/* resizer (cursor AND touch devices) */

/* left resizer  */
.fc-ltr .fc-h-event .fc-start-resizer,
.fc-rtl .fc-h-event .fc-end-resizer {
	cursor: w-resize;
	left: -1px; /* overcome border */
}

/* right resizer */
.fc-ltr .fc-h-event .fc-end-resizer,
.fc-rtl .fc-h-event .fc-start-resizer {
	cursor: e-resize;
	right: -1px; /* overcome border */
}

/* resizer (mouse devices) */

.fc-h-event.fc-allow-mouse-resize .fc-resizer {
	width: 7px;
	top: -1px; /* overcome top border */
	bottom: -1px; /* overcome bottom border */
}

/* resizer (touch devices) */

.fc-h-event.fc-selected .fc-resizer {
	/* 8x8 little dot */
	border-radius: 4px;
	border-width: 1px;
	width: 6px;
	height: 6px;
	border-style: solid;
	border-color: inherit;
	background: #fff;
	/* vertically center */
	top: 50%;
	margin-top: -4px;
}

/* left resizer  */
.fc-ltr .fc-h-event.fc-selected .fc-start-resizer,
.fc-rtl .fc-h-event.fc-selected .fc-end-resizer {
	margin-left: -4px; /* centers the 8x8 dot on the left edge */
}

/* right resizer */
.fc-ltr .fc-h-event.fc-selected .fc-end-resizer,
.fc-rtl .fc-h-event.fc-selected .fc-start-resizer {
	margin-right: -4px; /* centers the 8x8 dot on the right edge */
}


/* DayGrid events
----------------------------------------------------------------------------------------------------
We use the full "fc-day-grid-event" class instead of using descendants because the event won't
be a descendant of the grid when it is being dragged.
*/

.fc-day-grid-event {
	margin: 1px 2px 0; /* spacing between events and edges */
	padding: 0 1px;
}

tr:first-child &gt; td &gt; .fc-day-grid-event {
	margin-top: 2px; /* a little bit more space before the first event */
}

.fc-day-grid-event.fc-selected:after {
	content: "";
	position: absolute;
	z-index: 1; /* same z-index as fc-bg, behind text */
	/* overcome the borders */
	top: -1px;
	right: -1px;
	bottom: -1px;
	left: -1px;
	/* darkening effect */
	background: #000;
	opacity: .25;
}

.fc-day-grid-event .fc-content { /* force events to be one-line tall */
	white-space: nowrap;
	overflow: hidden;
}

.fc-day-grid-event .fc-time {
	font-weight: bold;
}

/* resizer (cursor devices) */

/* left resizer  */
.fc-ltr .fc-day-grid-event.fc-allow-mouse-resize .fc-start-resizer,
.fc-rtl .fc-day-grid-event.fc-allow-mouse-resize .fc-end-resizer {
	margin-left: -2px; /* to the day cell's edge */
}

/* right resizer */
.fc-ltr .fc-day-grid-event.fc-allow-mouse-resize .fc-end-resizer,
.fc-rtl .fc-day-grid-event.fc-allow-mouse-resize .fc-start-resizer {
	margin-right: -2px; /* to the day cell's edge */
}


/* Event Limiting
--------------------------------------------------------------------------------------------------*/

/* "more" link that represents hidden events */

a.fc-more {
	margin: 1px 3px;
	font-size: .85em;
	cursor: pointer;
	text-decoration: none;
}

a.fc-more:hover {
	text-decoration: underline;
}

.fc-limited { /* rows and cells that are hidden because of a "more" link */
	display: none;
}

/* popover that appears when "more" link is clicked */

.fc-day-grid .fc-row {
	z-index: 1; /* make the "more" popover one higher than this */
}

.fc-more-popover {
	z-index: 2;
	width: 220px;
}

.fc-more-popover .fc-event-container {
	padding: 10px;
}


/* Now Indicator
--------------------------------------------------------------------------------------------------*/

.fc-now-indicator {
	position: absolute;
	border: 0 solid red;
}


/* Utilities
--------------------------------------------------------------------------------------------------*/

.fc-unselectable {
	-webkit-user-select: none;
	 -khtml-user-select: none;
	   -moz-user-select: none;
	    -ms-user-select: none;
	        user-select: none;
	-webkit-touch-callout: none;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}



/* Toolbar
--------------------------------------------------------------------------------------------------*/

.fc-toolbar {
	text-align: center;
	margin-bottom: 1em;
}

.fc-toolbar .fc-left {
	float: left;
}

.fc-toolbar .fc-right {
	float: right;
}

.fc-toolbar .fc-center {
	display: inline-block;
}

/* the things within each left/right/center section */
.fc .fc-toolbar &gt; * &gt; * { /* extra precedence to override button border margins */
	float: left;
	margin-left: .75em;
}

/* the first thing within each left/center/right section */
.fc .fc-toolbar &gt; * &gt; :first-child { /* extra precedence to override button border margins */
	margin-left: 0;
}
	
/* title text */

.fc-toolbar h2 {
	margin: 0;
}

/* button layering (for border precedence) */

.fc-toolbar button {
	position: relative;
}

.fc-toolbar .fc-state-hover,
.fc-toolbar .ui-state-hover {
	z-index: 2;
}
	
.fc-toolbar .fc-state-down {
	z-index: 3;
}

.fc-toolbar .fc-state-active,
.fc-toolbar .ui-state-active {
	z-index: 4;
}

.fc-toolbar button:focus {
	z-index: 5;
}


/* View Structure
--------------------------------------------------------------------------------------------------*/

/* undo twitter bootstrap's box-sizing rules. normalizes positioning techniques */
/* don't do this for the toolbar because we'll want bootstrap to style those buttons as some pt */
.fc-view-container *,
.fc-view-container *:before,
.fc-view-container *:after {
	-webkit-box-sizing: content-box;
	   -moz-box-sizing: content-box;
	        box-sizing: content-box;
}

.fc-view, /* scope positioning and z-index's for everything within the view */
.fc-view &gt; table { /* so dragged elements can be above the view's main element */
	position: relative;
	z-index: 1;
}



/* BasicView
--------------------------------------------------------------------------------------------------*/

/* day row structure */

.fc-basicWeek-view .fc-content-skeleton,
.fc-basicDay-view .fc-content-skeleton {
	/* there may be week numbers in these views, so no padding-top */
	padding-bottom: 1em; /* ensure a space at bottom of cell for user selecting/clicking */
}

.fc-basic-view .fc-body .fc-row {
	min-height: 4em; /* ensure that all rows are at least this tall */
}

/* a "rigid" row will take up a constant amount of height because content-skeleton is absolute */

.fc-row.fc-rigid {
	overflow: hidden;
}

.fc-row.fc-rigid .fc-content-skeleton {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
}

/* week and day number styling */

.fc-day-top.fc-other-month {
	opacity: 0.3;
}

.fc-basic-view .fc-week-number,
.fc-basic-view .fc-day-number {
	padding: 2px;
}

.fc-basic-view th.fc-week-number,
.fc-basic-view th.fc-day-number {
	padding: 0 2px; /* column headers can't have as much v space */
}

.fc-ltr .fc-basic-view .fc-day-top .fc-day-number { float: right; }
.fc-rtl .fc-basic-view .fc-day-top .fc-day-number { float: left; }

.fc-ltr .fc-basic-view .fc-day-top .fc-week-number { float: left; border-radius: 0 0 3px 0; }
.fc-rtl .fc-basic-view .fc-day-top .fc-week-number { float: right; border-radius: 0 0 0 3px; }

.fc-basic-view .fc-day-top .fc-week-number {
	min-width: 1.5em;
	text-align: center;
	background-color: #f2f2f2;
	color: #808080;
}

/* when week/day number have own column */

.fc-basic-view td.fc-week-number {
	text-align: center;
}

.fc-basic-view td.fc-week-number &gt; * {
	/* work around the way we do column resizing and ensure a minimum width */
	display: inline-block;
	min-width: 1.25em;
}


/* AgendaView all-day area
--------------------------------------------------------------------------------------------------*/

.fc-agenda-view .fc-day-grid {
	position: relative;
	z-index: 2; /* so the "more.." popover will be over the time grid */
}

.fc-agenda-view .fc-day-grid .fc-row {
	min-height: 3em; /* all-day section will never get shorter than this */
}

.fc-agenda-view .fc-day-grid .fc-row .fc-content-skeleton {
	padding-bottom: 1em; /* give space underneath events for clicking/selecting days */
}


/* TimeGrid axis running down the side (for both the all-day area and the slot area)
--------------------------------------------------------------------------------------------------*/

.fc .fc-axis { /* .fc to overcome default cell styles */
	vertical-align: middle;
	padding: 0 4px;
	white-space: nowrap;
}

.fc-ltr .fc-axis {
	text-align: right;
}

.fc-rtl .fc-axis {
	text-align: left;
}

.ui-widget td.fc-axis {
	font-weight: normal; /* overcome jqui theme making it bold */
}


/* TimeGrid Structure
--------------------------------------------------------------------------------------------------*/

.fc-time-grid-container, /* so scroll container's z-index is below all-day */
.fc-time-grid { /* so slats/bg/content/etc positions get scoped within here */
	position: relative;
	z-index: 1;
}

.fc-time-grid {
	min-height: 100%; /* so if height setting is 'auto', .fc-bg stretches to fill height */
}

.fc-time-grid table { /* don't put outer borders on slats/bg/content/etc */
	border: 0 hidden transparent;
}

.fc-time-grid &gt; .fc-bg {
	z-index: 1;
}

.fc-time-grid .fc-slats,
.fc-time-grid &gt; hr { /* the &lt;hr&gt; AgendaView injects when grid is shorter than scroller */
	position: relative;
	z-index: 2;
}

.fc-time-grid .fc-content-col {
	position: relative; /* because now-indicator lives directly inside */
}

.fc-time-grid .fc-content-skeleton {
	position: absolute;
	z-index: 3;
	top: 0;
	left: 0;
	right: 0;
}

/* divs within a cell within the fc-content-skeleton */

.fc-time-grid .fc-business-container {
	position: relative;
	z-index: 1;
}

.fc-time-grid .fc-bgevent-container {
	position: relative;
	z-index: 2;
}

.fc-time-grid .fc-highlight-container {
	position: relative;
	z-index: 3;
}

.fc-time-grid .fc-event-container {
	position: relative;
	z-index: 4;
}

.fc-time-grid .fc-now-indicator-line {
	z-index: 5;
}

.fc-time-grid .fc-helper-container { /* also is fc-event-container */
	position: relative;
	z-index: 6;
}


/* TimeGrid Slats (lines that run horizontally)
--------------------------------------------------------------------------------------------------*/

.fc-time-grid .fc-slats td {
	height: 1.5em;
	border-bottom: 0; /* each cell is responsible for its top border */
}

.fc-time-grid .fc-slats .fc-minor td {
	border-top-style: dotted;
}

.fc-time-grid .fc-slats .ui-widget-content { /* for jqui theme */
	background: none; /* see through to fc-bg */
}


/* TimeGrid Highlighting Slots
--------------------------------------------------------------------------------------------------*/

.fc-time-grid .fc-highlight-container { /* a div within a cell within the fc-highlight-skeleton */
	position: relative; /* scopes the left/right of the fc-highlight to be in the column */
}

.fc-time-grid .fc-highlight {
	position: absolute;
	left: 0;
	right: 0;
	/* top and bottom will be in by JS */
}


/* TimeGrid Event Containment
--------------------------------------------------------------------------------------------------*/

.fc-ltr .fc-time-grid .fc-event-container { /* space on the sides of events for LTR (default) */
	margin: 0 2.5% 0 2px;
}

.fc-rtl .fc-time-grid .fc-event-container { /* space on the sides of events for RTL */
	margin: 0 2px 0 2.5%;
}

.fc-time-grid .fc-event,
.fc-time-grid .fc-bgevent {
	position: absolute;
	z-index: 1; /* scope inner z-index's */
}

.fc-time-grid .fc-bgevent {
	/* background events always span full width */
	left: 0;
	right: 0;
}


/* Generic Vertical Event
--------------------------------------------------------------------------------------------------*/

.fc-v-event.fc-not-start { /* events that are continuing from another day */
	/* replace space made by the top border with padding */
	border-top-width: 0;
	padding-top: 1px;

	/* remove top rounded corners */
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}

.fc-v-event.fc-not-end {
	/* replace space made by the top border with padding */
	border-bottom-width: 0;
	padding-bottom: 1px;

	/* remove bottom rounded corners */
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}


/* TimeGrid Event Styling
----------------------------------------------------------------------------------------------------
We use the full "fc-time-grid-event" class instead of using descendants because the event won't
be a descendant of the grid when it is being dragged.
*/

.fc-time-grid-event {
	overflow: hidden; /* don't let the bg flow over rounded corners */
}

.fc-time-grid-event.fc-selected {
	/* need to allow touch resizers to extend outside event's bounding box */
	/* common fc-selected styles hide the fc-bg, so don't need this anyway */
	overflow: visible;
}

.fc-time-grid-event.fc-selected .fc-bg {
	display: none; /* hide semi-white background, to appear darker */
}

.fc-time-grid-event .fc-content {
	overflow: hidden; /* for when .fc-selected */
}

.fc-time-grid-event .fc-time,
.fc-time-grid-event .fc-title {
	padding: 0 1px;
}

.fc-time-grid-event .fc-time {
	font-size: .85em;
	white-space: nowrap;
}

/* short mode, where time and title are on the same line */

.fc-time-grid-event.fc-short .fc-content {
	/* don't wrap to second line (now that contents will be inline) */
	white-space: nowrap;
}

.fc-time-grid-event.fc-short .fc-time,
.fc-time-grid-event.fc-short .fc-title {
	/* put the time and title on the same line */
	display: inline-block;
	vertical-align: top;
}

.fc-time-grid-event.fc-short .fc-time span {
	display: none; /* don't display the full time text... */
}

.fc-time-grid-event.fc-short .fc-time:before {
	content: attr(data-start); /* ...instead, display only the start time */
}

.fc-time-grid-event.fc-short .fc-time:after {
	content: "\000A0-\000A0"; /* seperate with a dash, wrapped in nbsp's */
}

.fc-time-grid-event.fc-short .fc-title {
	font-size: .85em; /* make the title text the same size as the time */
	padding: 0; /* undo padding from above */
}

/* resizer (cursor device) */

.fc-time-grid-event.fc-allow-mouse-resize .fc-resizer {
	left: 0;
	right: 0;
	bottom: 0;
	height: 8px;
	overflow: hidden;
	line-height: 8px;
	font-size: 11px;
	font-family: monospace;
	text-align: center;
	cursor: s-resize;
}

.fc-time-grid-event.fc-allow-mouse-resize .fc-resizer:after {
	content: "=";
}

/* resizer (touch device) */

.fc-time-grid-event.fc-selected .fc-resizer {
	/* 10x10 dot */
	border-radius: 5px;
	border-width: 1px;
	width: 8px;
	height: 8px;
	border-style: solid;
	border-color: inherit;
	background: #fff;
	/* horizontally center */
	left: 50%;
	margin-left: -5px;
	/* center on the bottom edge */
	bottom: -5px;
}


/* Now Indicator
--------------------------------------------------------------------------------------------------*/

.fc-time-grid .fc-now-indicator-line {
	border-top-width: 1px;
	left: 0;
	right: 0;
}

/* arrow on axis */

.fc-time-grid .fc-now-indicator-arrow {
	margin-top: -5px; /* vertically center on top coordinate */
}

.fc-ltr .fc-time-grid .fc-now-indicator-arrow {
	left: 0;
	/* triangle pointing right... */
	border-width: 5px 0 5px 6px;
	border-top-color: transparent;
	border-bottom-color: transparent;
}

.fc-rtl .fc-time-grid .fc-now-indicator-arrow {
	right: 0;
	/* triangle pointing left... */
	border-width: 5px 6px 5px 0;
	border-top-color: transparent;
	border-bottom-color: transparent;
}



/* List View
--------------------------------------------------------------------------------------------------*/

/* possibly reusable */

.fc-event-dot {
	display: inline-block;
	width: 10px;
	height: 10px;
	border-radius: 5px;
}

/* view wrapper */

.fc-rtl .fc-list-view {
	direction: rtl; /* unlike core views, leverage browser RTL */
}

.fc-list-view {
	border-width: 1px;
	border-style: solid;
}

/* table resets */

.fc .fc-list-table {
	table-layout: auto; /* for shrinkwrapping cell content */
}

.fc-list-table td {
	border-width: 1px 0 0;
	padding: 8px 14px;
}

.fc-list-table tr:first-child td {
	border-top-width: 0;
}

/* day headings with the list */

.fc-list-heading {
	border-bottom-width: 1px;
}

.fc-list-heading td {
	font-weight: bold;
}

.fc-ltr .fc-list-heading-main { float: left; }
.fc-ltr .fc-list-heading-alt { float: right; }

.fc-rtl .fc-list-heading-main { float: right; }
.fc-rtl .fc-list-heading-alt { float: left; }

/* event list items */

.fc-list-item.fc-has-url {
	cursor: pointer; /* whole row will be clickable */
}

.fc-list-item:hover td {
	background-color: #f5f5f5;
}

.fc-list-item-marker,
.fc-list-item-time {
	white-space: nowrap;
	width: 1px;
}

/* make the dot closer to the event title */
.fc-ltr .fc-list-item-marker { padding-right: 0; }
.fc-rtl .fc-list-item-marker { padding-left: 0; }

.fc-list-item-title a {
	/* every event title cell has an &lt;a&gt; tag */
	text-decoration: none;
	color: inherit;
}

.fc-list-item-title a[href]:hover {
	/* hover effect only on titles with hrefs */
	text-decoration: underline;
}

/* message when no events */

.fc-list-empty-wrap2 {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

.fc-list-empty-wrap1 {
	width: 100%;
	height: 100%;
	display: table;
}

.fc-list-empty {
	display: table-cell;
	vertical-align: middle;
	text-align: center;
}

.fc-unthemed .fc-list-empty { /* theme will provide own background */
	background-color: #eee;
}
</contentText>
  </asset>
  <asset name="css/fullcalendar.print.css" mimeType="text/css">
    <contentText>/*!
 * FullCalendar v3.0.1 Print Stylesheet
 * Docs &amp; License: http://fullcalendar.io/
 * (c) 2016 Adam Shaw
 */

/*
 * Include this stylesheet on your page to get a more printer-friendly calendar.
 * When including this stylesheet, use the media='print' attribute of the &lt;link&gt; tag.
 * Make sure to include this stylesheet IN ADDITION to the regular fullcalendar.css.
 */

.fc {
	max-width: 100% !important;
}


/* Global Event Restyling
--------------------------------------------------------------------------------------------------*/

.fc-event {
	background: #fff !important;
	color: #000 !important;
	page-break-inside: avoid;
}

.fc-event .fc-resizer {
	display: none;
}


/* Table &amp; Day-Row Restyling
--------------------------------------------------------------------------------------------------*/

.fc th,
.fc td,
.fc hr,
.fc thead,
.fc tbody,
.fc-row {
	border-color: #ccc !important;
	background: #fff !important;
}

/* kill the overlaid, absolutely-positioned components */
/* common... */
.fc-bg,
.fc-bgevent-skeleton,
.fc-highlight-skeleton,
.fc-helper-skeleton,
/* for timegrid. within cells within table skeletons... */
.fc-bgevent-container,
.fc-business-container,
.fc-highlight-container,
.fc-helper-container {
	display: none;
}

/* don't force a min-height on rows (for DayGrid) */
.fc tbody .fc-row {
	height: auto !important; /* undo height that JS set in distributeHeight */
	min-height: 0 !important; /* undo the min-height from each view's specific stylesheet */
}

.fc tbody .fc-row .fc-content-skeleton {
	position: static; /* undo .fc-rigid */
	padding-bottom: 0 !important; /* use a more border-friendly method for this... */
}

.fc tbody .fc-row .fc-content-skeleton tbody tr:last-child td { /* only works in newer browsers */
	padding-bottom: 1em; /* ...gives space within the skeleton. also ensures min height in a way */
}

.fc tbody .fc-row .fc-content-skeleton table {
	/* provides a min-height for the row, but only effective for IE, which exaggerates this value,
	   making it look more like 3em. for other browers, it will already be this tall */
	height: 1em;
}


/* Undo month-view event limiting. Display all events and hide the "more" links
--------------------------------------------------------------------------------------------------*/

.fc-more-cell,
.fc-more {
	display: none !important;
}

.fc tr.fc-limited {
	display: table-row !important;
}

.fc td.fc-limited {
	display: table-cell !important;
}

.fc-popover {
	display: none; /* never display the "more.." popover in print mode */
}


/* TimeGrid Restyling
--------------------------------------------------------------------------------------------------*/

/* undo the min-height 100% trick used to fill the container's height */
.fc-time-grid {
	min-height: 0 !important;
}

/* don't display the side axis at all ("all-day" and time cells) */
.fc-agenda-view .fc-axis {
	display: none;
}

/* don't display the horizontal lines */
.fc-slats,
.fc-time-grid hr { /* this hr is used when height is underused and needs to be filled */
	display: none !important; /* important overrides inline declaration */
}

/* let the container that holds the events be naturally positioned and create real height */
.fc-time-grid .fc-content-skeleton {
	position: static;
}

/* in case there are no events, we still want some height */
.fc-time-grid .fc-content-skeleton table {
	height: 4em;
}

/* kill the horizontal spacing made by the event container. event margins will be done below */
.fc-time-grid .fc-event-container {
	margin: 0 !important;
}


/* TimeGrid *Event* Restyling
--------------------------------------------------------------------------------------------------*/

/* naturally position events, vertically stacking them */
.fc-time-grid .fc-event {
	position: static !important;
	margin: 3px 2px !important;
}

/* for events that continue to a future day, give the bottom border back */
.fc-time-grid .fc-event.fc-not-end {
	border-bottom-width: 1px !important;
}

/* indicate the event continues via "..." text */
.fc-time-grid .fc-event.fc-not-end:after {
	content: "...";
}

/* for events that are continuations from previous days, give the top border back */
.fc-time-grid .fc-event.fc-not-start {
	border-top-width: 1px !important;
}

/* indicate the event is a continuation via "..." text */
.fc-time-grid .fc-event.fc-not-start:before {
	content: "...";
}

/* time */

/* undo a previous declaration and let the time text span to a second line */
.fc-time-grid .fc-event .fc-time {
	white-space: normal !important;
}

/* hide the the time that is normally displayed... */
.fc-time-grid .fc-event .fc-time span {
	display: none;
}

/* ...replace it with a more verbose version (includes AM/PM) stored in an html attribute */
.fc-time-grid .fc-event .fc-time:after {
	content: attr(data-full);
}


/* Vertical Scroller &amp; Containers
--------------------------------------------------------------------------------------------------*/

/* kill the scrollbars and allow natural height */
.fc-scroller,
.fc-day-grid-container,    /* these divs might be assigned height, which we need to cleared */
.fc-time-grid-container {  /* */
	overflow: visible !important;
	height: auto !important;
}

/* kill the horizontal border/padding used to compensate for scrollbars */
.fc-row {
	border: 0 !important;
	margin: 0 !important;
}


/* Button Controls
--------------------------------------------------------------------------------------------------*/

.fc-button-group,
.fc button {
	display: none; /* don't display any button-related controls */
}
</contentText>
  </asset>
  <asset name="css/select2.min.css" mimeType="text/css">
    <contentText>.select2-container{box-sizing:border-box;display:inline-block;margin:0;position:relative;vertical-align:middle}.select2-container .select2-selection--single{font-size:14px; box-sizing:border-box;cursor:pointer;display:block;height:34px;user-select:none;-webkit-user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{display:block;padding-left:8px;padding-right:20px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-selection--single .select2-selection__clear{position:relative}.select2-container[dir="rtl"] .select2-selection--single .select2-selection__rendered{padding-right:8px;padding-left:20px}.select2-container .select2-selection--multiple{box-sizing:border-box;cursor:pointer;display:block;min-height:32px;user-select:none;-webkit-user-select:none}.select2-container .select2-selection--multiple .select2-selection__rendered{display:inline-block;overflow:hidden;padding-left:8px;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-search--inline{float:left}.select2-container .select2-search--inline .select2-search__field{box-sizing:border-box;border:none;font-size:100%;margin-top:5px;padding:0}.select2-container .select2-search--inline .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-dropdown{background-color:white;border:1px solid #aaa;border-radius:4px;box-sizing:border-box;display:block;position:absolute;left:-100000px;width:100%;z-index:1051}.select2-results{display:block}.select2-results__options{list-style:none;margin:0;padding:0}.select2-results__option{padding:6px;user-select:none;-webkit-user-select:none}.select2-results__option[aria-selected]{cursor:pointer}.select2-container--open .select2-dropdown{left:0}.select2-container--open .select2-dropdown--above{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--open .select2-dropdown--below{border-top:none;border-top-left-radius:0;border-top-right-radius:0}.select2-search--dropdown{display:block;padding:4px}.select2-search--dropdown .select2-search__field{padding:4px;width:100%;box-sizing:border-box}.select2-search--dropdown .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-search--dropdown.select2-search--hide{display:none}.select2-close-mask{border:0;margin:0;padding:0;display:block;position:fixed;left:0;top:0;min-height:100%;min-width:100%;height:auto;width:auto;opacity:0;z-index:99;background-color:#fff;filter:alpha(opacity=0)}.select2-hidden-accessible{border:0 !important;clip:rect(0 0 0 0) !important;height:1px !important;margin:-1px !important;overflow:hidden !important;padding:0 !important;position:absolute !important;width:1px !important}.select2-container--default .select2-selection--single{background-color:#fff;border:1px solid #aaa;border-radius:4px}.select2-container--default .select2-selection--single .select2-selection__rendered{color:#444;line-height:28px}.select2-container--default .select2-selection--single .select2-selection__clear{cursor:pointer;float:right;font-weight:bold}.select2-container--default .select2-selection--single .select2-selection__placeholder{color:#999}.select2-container--default .select2-selection--single .select2-selection__arrow{height:26px;position:absolute;top:1px;right:1px;width:20px}.select2-container--default .select2-selection--single .select2-selection__arrow b{border-color:#888 transparent transparent transparent;border-style:solid;border-width:5px 4px 0 4px;height:0;left:50%;margin-left:-4px;margin-top:-2px;position:absolute;top:50%;width:0}.select2-container--default[dir="rtl"] .select2-selection--single .select2-selection__clear{float:left}.select2-container--default[dir="rtl"] .select2-selection--single .select2-selection__arrow{left:1px;right:auto}.select2-container--default.select2-container--disabled .select2-selection--single{background-color:#eee;cursor:default}.select2-container--default.select2-container--disabled .select2-selection--single .select2-selection__clear{display:none}.select2-container--default.select2-container--open .select2-selection--single .select2-selection__arrow b{border-color:transparent transparent #888 transparent;border-width:0 4px 5px 4px}.select2-container--default .select2-selection--multiple{background-color:white;border:1px solid #aaa;border-radius:4px;cursor:text}.select2-container--default .select2-selection--multiple .select2-selection__rendered{box-sizing:border-box;list-style:none;margin:0;padding:0 5px;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__placeholder{color:#999;margin-top:5px;float:left}.select2-container--default .select2-selection--multiple .select2-selection__clear{cursor:pointer;float:right;font-weight:bold;margin-top:5px;margin-right:10px}.select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#e4e4e4;border:1px solid #aaa;border-radius:4px;cursor:default;float:left;margin-right:5px;margin-top:5px;padding:0 5px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:#999;cursor:pointer;display:inline-block;font-weight:bold;margin-right:2px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#333}.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice,.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__placeholder,.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-search--inline{float:right}.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice{margin-left:5px;margin-right:auto}.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice__remove{margin-left:2px;margin-right:auto}.select2-container--default.select2-container--focus .select2-selection--multiple{border:solid black 1px;outline:0}.select2-container--default.select2-container--disabled .select2-selection--multiple{background-color:#eee;cursor:default}.select2-container--default.select2-container--disabled .select2-selection__choice__remove{display:none}.select2-container--default.select2-container--open.select2-container--above .select2-selection--single,.select2-container--default.select2-container--open.select2-container--above .select2-selection--multiple{border-top-left-radius:0;border-top-right-radius:0}.select2-container--default.select2-container--open.select2-container--below .select2-selection--single,.select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple{border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--default .select2-search--dropdown .select2-search__field{border:1px solid #aaa}.select2-container--default .select2-search--inline .select2-search__field{background:transparent;border:none;outline:0;box-shadow:none;-webkit-appearance:textfield}.select2-container--default .select2-results&gt;.select2-results__options{max-height:200px;overflow-y:auto}.select2-container--default .select2-results__option[role=group]{padding:0}.select2-container--default .select2-results__option[aria-disabled=true]{color:#999}.select2-container--default .select2-results__option[aria-selected=true]{background-color:#ddd}.select2-container--default .select2-results__option .select2-results__option{padding-left:1em}.select2-container--default .select2-results__option .select2-results__option .select2-results__group{padding-left:0}.select2-container--default .select2-results__option .select2-results__option .select2-results__option{margin-left:-1em;padding-left:2em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-2em;padding-left:3em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-3em;padding-left:4em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-4em;padding-left:5em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-5em;padding-left:6em}.select2-container--default .select2-results__option--highlighted[aria-selected]{background-color:#5897fb;color:white}.select2-container--default .select2-results__group{cursor:default;display:block;padding:6px}.select2-container--classic .select2-selection--single{background-color:#f7f7f7;border:1px solid #aaa;border-radius:4px;outline:0;background-image:-webkit-linear-gradient(top, #fff 50%, #eee 100%);background-image:-o-linear-gradient(top, #fff 50%, #eee 100%);background-image:linear-gradient(to bottom, #fff 50%, #eee 100%);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFFFF', endColorstr='#FFEEEEEE', GradientType=0)}.select2-container--classic .select2-selection--single:focus{border:1px solid #5897fb}.select2-container--classic .select2-selection--single .select2-selection__rendered{color:#444;line-height:28px}.select2-container--classic .select2-selection--single .select2-selection__clear{cursor:pointer;float:right;font-weight:bold;margin-right:10px}.select2-container--classic .select2-selection--single .select2-selection__placeholder{color:#999}.select2-container--classic .select2-selection--single .select2-selection__arrow{background-color:#ddd;border:none;border-left:1px solid #aaa;border-top-right-radius:4px;border-bottom-right-radius:4px;height:26px;position:absolute;top:1px;right:1px;width:20px;background-image:-webkit-linear-gradient(top, #eee 50%, #ccc 100%);background-image:-o-linear-gradient(top, #eee 50%, #ccc 100%);background-image:linear-gradient(to bottom, #eee 50%, #ccc 100%);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFEEEEEE', endColorstr='#FFCCCCCC', GradientType=0)}.select2-container--classic .select2-selection--single .select2-selection__arrow b{border-color:#888 transparent transparent transparent;border-style:solid;border-width:5px 4px 0 4px;height:0;left:50%;margin-left:-4px;margin-top:-2px;position:absolute;top:50%;width:0}.select2-container--classic[dir="rtl"] .select2-selection--single .select2-selection__clear{float:left}.select2-container--classic[dir="rtl"] .select2-selection--single .select2-selection__arrow{border:none;border-right:1px solid #aaa;border-radius:0;border-top-left-radius:4px;border-bottom-left-radius:4px;left:1px;right:auto}.select2-container--classic.select2-container--open .select2-selection--single{border:1px solid #5897fb}.select2-container--classic.select2-container--open .select2-selection--single .select2-selection__arrow{background:transparent;border:none}.select2-container--classic.select2-container--open .select2-selection--single .select2-selection__arrow b{border-color:transparent transparent #888 transparent;border-width:0 4px 5px 4px}.select2-container--classic.select2-container--open.select2-container--above .select2-selection--single{border-top:none;border-top-left-radius:0;border-top-right-radius:0;background-image:-webkit-linear-gradient(top, #fff 0%, #eee 50%);background-image:-o-linear-gradient(top, #fff 0%, #eee 50%);background-image:linear-gradient(to bottom, #fff 0%, #eee 50%);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFFFF', endColorstr='#FFEEEEEE', GradientType=0)}.select2-container--classic.select2-container--open.select2-container--below .select2-selection--single{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0;background-image:-webkit-linear-gradient(top, #eee 50%, #fff 100%);background-image:-o-linear-gradient(top, #eee 50%, #fff 100%);background-image:linear-gradient(to bottom, #eee 50%, #fff 100%);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFEEEEEE', endColorstr='#FFFFFFFF', GradientType=0)}.select2-container--classic .select2-selection--multiple{background-color:white;border:1px solid #aaa;border-radius:4px;cursor:text;outline:0}.select2-container--classic .select2-selection--multiple:focus{border:1px solid #5897fb}.select2-container--classic .select2-selection--multiple .select2-selection__rendered{list-style:none;margin:0;padding:0 5px}.select2-container--classic .select2-selection--multiple .select2-selection__clear{display:none}.select2-container--classic .select2-selection--multiple .select2-selection__choice{background-color:#e4e4e4;border:1px solid #aaa;border-radius:4px;cursor:default;float:left;margin-right:5px;margin-top:5px;padding:0 5px}.select2-container--classic .select2-selection--multiple .select2-selection__choice__remove{color:#888;cursor:pointer;display:inline-block;font-weight:bold;margin-right:2px}.select2-container--classic .select2-selection--multiple .select2-selection__choice__remove:hover{color:#555}.select2-container--classic[dir="rtl"] .select2-selection--multiple .select2-selection__choice{float:right}.select2-container--classic[dir="rtl"] .select2-selection--multiple .select2-selection__choice{margin-left:5px;margin-right:auto}.select2-container--classic[dir="rtl"] .select2-selection--multiple .select2-selection__choice__remove{margin-left:2px;margin-right:auto}.select2-container--classic.select2-container--open .select2-selection--multiple{border:1px solid #5897fb}.select2-container--classic.select2-container--open.select2-container--above .select2-selection--multiple{border-top:none;border-top-left-radius:0;border-top-right-radius:0}.select2-container--classic.select2-container--open.select2-container--below .select2-selection--multiple{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--classic .select2-search--dropdown .select2-search__field{border:1px solid #aaa;outline:0}.select2-container--classic .select2-search--inline .select2-search__field{outline:0;box-shadow:none}.select2-container--classic .select2-dropdown{background-color:#fff;border:1px solid transparent}.select2-container--classic .select2-dropdown--above{border-bottom:none}.select2-container--classic .select2-dropdown--below{border-top:none}.select2-container--classic .select2-results&gt;.select2-results__options{max-height:200px;overflow-y:auto}.select2-container--classic .select2-results__option[role=group]{padding:0}.select2-container--classic .select2-results__option[aria-disabled=true]{color:grey}.select2-container--classic .select2-results__option--highlighted[aria-selected]{background-color:#3875d7;color:#fff}.select2-container--classic .select2-results__group{cursor:default;display:block;padding:6px}.select2-container--classic.select2-container--open .select2-dropdown{border-color:#5897fb}
</contentText>
  </asset>
  <asset name="css/theme.css" mimeType="text/css">
    <contentText>/*----------------------------------------------------*/
/*-------------- Bootstrap Alterations ---------------*/
/*----------------------------------------------------*/

select{
    -webkit-appearance: none;
    -moz-appearance: none;
}
fieldset{
    margin-right:30px;
    margin: 0 30px 0 0 !important;
}
.patient-panel small { color: #fff }
.glyphicon-question-sign:before {
    content: "\e086";
}
.tooltip-inner {
    white-space:pre-wrap;
    max-width:none;
}
.btn-default{
    background: #ccd4e0;
    border: none;
    height: 52px;
}
.form-horizontal .control-label {
    padding: 7px 0 0 0;
    margin-bottom: 0;
    text-align: right;
}
.tokenfield .token{
    height: 32px;
    padding-left: 3px;
    border: 1px solid #0887d9;
    background-color: white;
}

.tokenfield .token-input{
    margin-bottom: 0;
    height: initial;
}

.input-group .form-control{
    border-radius: 0;
    background: #ebeff5;
    border: none;
    padding: 12px 10px;
    font-size: 20px;
    height:52px;
}

.tokenfield .token .close{
    opacity: 0.3;
    color: #0d8bde;
    padding-right: 6px;
}
.page-header, .page-header h3 { 
  margin-top:0px; 
  padding:0px;
  font-size:1.2em;
  color: #666;
}
.has-error .form-control {
    border:1px solid #843534;
}
.select2-container--default .select2-selection--single {
    border-radius: 0;
    background: #ebeff5;
    border: none;
    padding: 12px 10px;
    font-size: 20px;
    height: 52px;
}
.select2-container--default .select2-selection--single .select2-selection__arrow {
    top: 10px;
    right: 20px;
}
.select2-container--default .select2-selection--single .select2-selection__arrow b {
    border-width: 10px 8px 0 8px;
}
.input-group { width:100%; }
.input-group .form-control:last-child {
    border-radius: 4px;
}

a.not-active {
    pointer-events:none;
    cursor:default;
}
.patient-panel small { color: #fff }

.text-danger {
    color:#d9534f
}

.vaccine-table-column {
    width:20%;
}

.page-header, .page-header h3 { 
  margin-top:0px; 
  padding:0px;
  font-size:1.2em;
  color: #666;
}


.btn &gt; .glyphicon {
    font-size: 1.4em;
}

@media (max-width: 767px) {
    .message-summary-panel h5, .message-summary-subject, .message-summary-subject-sender {
        color:#FFFFF
    }

    .navbar-inverse .navbar-nav .open .dropdown-menu &gt; li &gt; a {
        color: #FFFFFF;
    }
    .dropdown-menu .navbar-icon {
        filter:invert(100%);
        -webkit-filter:invert(100%);
        -moz-filter: invert(100%);
        -ms-filter: invert(100%);
    }
    .oiz-menu-text {
        display: inline
    }
}

@media (min-width: 768px) {
    .oiz-menu-text {
        display:none;
    }
}

.input-group label { margin-bottom: 0px; }

/**navbar*/
.navbar-inverse {
  background-image: -webkit-linear-gradient(top, #118FE2 0%, #007FD1 100%);
  background-image:      -o-linear-gradient(top, #118FE2 0%, #007FD1 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#3c3c3c), to(#007FD1));
  background-image:         linear-gradient(to bottom, #118FE2 0%, #007FD1 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#118FE2', endColorstr='#007FD122', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-radius: 0;
  background-color: #007FD1;
  border-color: #007FD1;
  margin-bottom: 0;
}

.navbar-inverse .navbar-nav &gt; .open &gt; a,
.navbar-inverse .navbar-nav &gt; .active &gt; a {
  background-image: -webkit-linear-gradient(top, #007FD1 0%, #007FD1 100%);
  background-image:      -o-linear-gradient(top, #007FD1 0%, #007FD1 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#007FD1), to(#007FD1));
  background-image:         linear-gradient(to bottom, #007FD1 0%, #007FD1 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#007FD1', endColorstr='#007FD1', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
}

@media (max-width: 767px) {
    .navbar-inverse .navbar-nav .open .dropdown-menu &gt; li &gt; a {
        color: #FFFFFF;
    }
    .dropdown-menu .navbar-icon {
        filter:invert(100%);
        -webkit-filter:invert(100%);
        -moz-filter: invert(100%);
        -ms-filter: invert(100%);
    }
}
.navbar-inverse .navbar-nav &gt; li &gt; a {
     color: #FFFFFF;
     padding: 7px 10px 6px 6px;

}
.navbar-inverse .navbar-brand { 
  color:#ffffff;
  padding-top: 16px;
}

.navbar-inverse .navbar-nav &gt; li &gt; a &gt; .navbar-icon {
    filter:invert(100%);
    -webkit-filter:invert(100%);
    -moz-filter: invert(100%);
    -ms-filter: invert(100%);
}

.navbar-icon {
    height: 38px;
    width: 38px;
    vertical-align:middle;
}

/**Panels*/
.panel-default &gt; .panel-heading{
    background: #3BA2E4;
    color: white;
    font-size: 17px;
    padding: 20px;
    border-radius: 0;
    border: none;
    background-image: none !important;
    position:relative;
}

.panel-primary &gt; .panel-heading{
    background: #23527c;
    color: white;
    font-size: 17px;
    padding: 20px;
    border-radius: 0;
    border: none;
    background-image: none !important;
    position:relative;
}

.panel-info &gt; .panel-heading{
    background: #d9edf7;
    color: #23527c;
    font-size: 17px;
    padding: 20px;
    border-radius: 0;
    border: none;
    background-image: none !important;
    position:relative;
}

.panel-chevron{
    right: 20px;
    position: absolute;
    top: 26px;
    pointer-events: none;
}
.panel{
    margin: 0;
}

.panel-default{
    margin-top:20px;
}

.panel-group .panel+.panel {
    margin-top: 20px;
}

.panel-title{
    font-size:17px;
    line-height: inherit;
}

.panel-title a{
    text-decoration:none;
    display: block;
}

/*----------------------------------------------------*/
/*-------------------- Custom CSS --------------------*/
/*----------------------------------------------------*/

body{
    background: #f6f8ff;
}
.panel-default &gt; .patient-panel {
    background-color: #007FD1;
    color: #fff;
}

.fixed-panel {
  max-height: 500px;
  overflow-y: auto;
}
.addon-background {
    background-color: #fff;
    border-color: #ccc;
}

.no-padding-all {
    padding: 0;
}

.no-padding-top {
    padding-top: 0;
}

.no-padding-bottom {
    padding-bottom: 0;
}

.no-padding-left {
    padding-left: 0;
}

.no-padding-right {
    padding-right: 0;
}

.btn-custom {
    padding-top: 9px;
    padding-bottom: 9px;
}

.navbar-brand-img {
    position: absolute;
    left: 15px;
    top: 9px;
    border-right: 3px solid white;
    padding-right: 10px;
}
.navbar-brand-text{
    font-size: 18px;
    font-weight: 600;
    padding-left: 55px;
}


.header-dock{
    background: #007FD1;
    color: whitesmoke;
    padding: 20px 0px;
    box-shadow: 0 1px 5px rgba(0, 0, 0, .7) !important;
}


.button-icon-text{
    padding-left: 40px;
}

.button-icon{
    width: 25px;
    position: absolute;
    left: 10px;
    top: 5px;
}

.select-arrow-container-alt{
    position: absolute;
    z-index: 10000;
    top: 28px;
    right: 55px;
}

.select-arrow-container{
    position: absolute;
    z-index: 10000;
    top: 28px;
    right: 10px;
}

.select-arrow{
    border-width: 10px 8px 0 8px;
    border-color: #888 transparent transparent transparent;
    border-style: solid;
}
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
.btn-default,
.btn-primary,
.btn-success,
.btn-info,
.btn-warning,
.btn-danger {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
}
.btn-default:active,
.btn-primary:active,
.btn-success:active,
.btn-info:active,
.btn-warning:active,
.btn-danger:active,
.btn-default.active,
.btn-primary.active,
.btn-success.active,
.btn-info.active,
.btn-warning.active,
.btn-danger.active {
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
          box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
}
.btn-default.disabled,
.btn-primary.disabled,
.btn-success.disabled,
.btn-info.disabled,
.btn-warning.disabled,
.btn-danger.disabled,
.btn-default[disabled],
.btn-primary[disabled],
.btn-success[disabled],
.btn-info[disabled],
.btn-warning[disabled],
.btn-danger[disabled],
fieldset[disabled] .btn-default,
fieldset[disabled] .btn-primary,
fieldset[disabled] .btn-success,
fieldset[disabled] .btn-info,
fieldset[disabled] .btn-warning,
fieldset[disabled] .btn-danger {
  -webkit-box-shadow: none;
          box-shadow: none;
}
.btn-default .badge,
.btn-primary .badge,
.btn-success .badge,
.btn-info .badge,
.btn-warning .badge,
.btn-danger .badge {
  text-shadow: none;
}
.btn:active,
.btn.active {
  background-image: none;
}
.btn-default {
  text-shadow: 0 1px 0 #fff;
  background-image: -webkit-linear-gradient(top, #fff 0%, #e0e0e0 100%);
  background-image:      -o-linear-gradient(top, #fff 0%, #e0e0e0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#e0e0e0));
  background-image:         linear-gradient(to bottom, #fff 0%, #e0e0e0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe0e0e0', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #dbdbdb;
  border-color: #ccc;
}
.btn-default:hover,
.btn-default:focus {
  background-color: #e0e0e0;
  background-position: 0 -15px;
}
.btn-default:active,
.btn-default.active {
  background-color: #e0e0e0;
  border-color: #dbdbdb;
}
.btn-default.disabled,
.btn-default[disabled],
fieldset[disabled] .btn-default,
.btn-default.disabled:hover,
.btn-default[disabled]:hover,
fieldset[disabled] .btn-default:hover,
.btn-default.disabled:focus,
.btn-default[disabled]:focus,
fieldset[disabled] .btn-default:focus,
.btn-default.disabled.focus,
.btn-default[disabled].focus,
fieldset[disabled] .btn-default.focus,
.btn-default.disabled:active,
.btn-default[disabled]:active,
fieldset[disabled] .btn-default:active,
.btn-default.disabled.active,
.btn-default[disabled].active,
fieldset[disabled] .btn-default.active {
  background-color: #e0e0e0;
  background-image: none;
}
.btn-primary {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #265a88 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #265a88 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#265a88));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #265a88 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff265a88', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #245580;
}
.btn-primary:hover,
.btn-primary:focus {
  background-color: #265a88;
  background-position: 0 -15px;
}
.btn-primary:active,
.btn-primary.active {
  background-color: #265a88;
  border-color: #245580;
}
.btn-primary.disabled,
.btn-primary[disabled],
fieldset[disabled] .btn-primary,
.btn-primary.disabled:hover,
.btn-primary[disabled]:hover,
fieldset[disabled] .btn-primary:hover,
.btn-primary.disabled:focus,
.btn-primary[disabled]:focus,
fieldset[disabled] .btn-primary:focus,
.btn-primary.disabled.focus,
.btn-primary[disabled].focus,
fieldset[disabled] .btn-primary.focus,
.btn-primary.disabled:active,
.btn-primary[disabled]:active,
fieldset[disabled] .btn-primary:active,
.btn-primary.disabled.active,
.btn-primary[disabled].active,
fieldset[disabled] .btn-primary.active {
  background-color: #265a88;
  background-image: none;
}
.btn-success {
  background-image: -webkit-linear-gradient(top, #5cb85c 0%, #419641 100%);
  background-image:      -o-linear-gradient(top, #5cb85c 0%, #419641 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5cb85c), to(#419641));
  background-image:         linear-gradient(to bottom, #5cb85c 0%, #419641 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c', endColorstr='#ff419641', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #3e8f3e;
}
.btn-success:hover,
.btn-success:focus {
  background-color: #419641;
  background-position: 0 -15px;
}
.btn-success:active,
.btn-success.active {
  background-color: #419641;
  border-color: #3e8f3e;
}
.btn-success.disabled,
.btn-success[disabled],
fieldset[disabled] .btn-success,
.btn-success.disabled:hover,
.btn-success[disabled]:hover,
fieldset[disabled] .btn-success:hover,
.btn-success.disabled:focus,
.btn-success[disabled]:focus,
fieldset[disabled] .btn-success:focus,
.btn-success.disabled.focus,
.btn-success[disabled].focus,
fieldset[disabled] .btn-success.focus,
.btn-success.disabled:active,
.btn-success[disabled]:active,
fieldset[disabled] .btn-success:active,
.btn-success.disabled.active,
.btn-success[disabled].active,
fieldset[disabled] .btn-success.active {
  background-color: #419641;
  background-image: none;
}
.btn-info {
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #2aabd2 100%);
  background-image:      -o-linear-gradient(top, #5bc0de 0%, #2aabd2 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5bc0de), to(#2aabd2));
  background-image:         linear-gradient(to bottom, #5bc0de 0%, #2aabd2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff2aabd2', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #28a4c9;
}
.btn-info:hover,
.btn-info:focus {
  background-color: #2aabd2;
  background-position: 0 -15px;
}
.btn-info:active,
.btn-info.active {
  background-color: #2aabd2;
  border-color: #28a4c9;
}
.btn-info.disabled,
.btn-info[disabled],
fieldset[disabled] .btn-info,
.btn-info.disabled:hover,
.btn-info[disabled]:hover,
fieldset[disabled] .btn-info:hover,
.btn-info.disabled:focus,
.btn-info[disabled]:focus,
fieldset[disabled] .btn-info:focus,
.btn-info.disabled.focus,
.btn-info[disabled].focus,
fieldset[disabled] .btn-info.focus,
.btn-info.disabled:active,
.btn-info[disabled]:active,
fieldset[disabled] .btn-info:active,
.btn-info.disabled.active,
.btn-info[disabled].active,
fieldset[disabled] .btn-info.active {
  background-color: #2aabd2;
  background-image: none;
}
.btn-warning {
  background-image: -webkit-linear-gradient(top, #f0ad4e 0%, #eb9316 100%);
  background-image:      -o-linear-gradient(top, #f0ad4e 0%, #eb9316 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f0ad4e), to(#eb9316));
  background-image:         linear-gradient(to bottom, #f0ad4e 0%, #eb9316 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffeb9316', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #e38d13;
}
.btn-warning:hover,
.btn-warning:focus {
  background-color: #eb9316;
  background-position: 0 -15px;
}
.btn-warning:active,
.btn-warning.active {
  background-color: #eb9316;
  border-color: #e38d13;
}
.btn-warning.disabled,
.btn-warning[disabled],
fieldset[disabled] .btn-warning,
.btn-warning.disabled:hover,
.btn-warning[disabled]:hover,
fieldset[disabled] .btn-warning:hover,
.btn-warning.disabled:focus,
.btn-warning[disabled]:focus,
fieldset[disabled] .btn-warning:focus,
.btn-warning.disabled.focus,
.btn-warning[disabled].focus,
fieldset[disabled] .btn-warning.focus,
.btn-warning.disabled:active,
.btn-warning[disabled]:active,
fieldset[disabled] .btn-warning:active,
.btn-warning.disabled.active,
.btn-warning[disabled].active,
fieldset[disabled] .btn-warning.active {
  background-color: #eb9316;
  background-image: none;
}
.btn-danger {
  background-image: -webkit-linear-gradient(top, #d9534f 0%, #c12e2a 100%);
  background-image:      -o-linear-gradient(top, #d9534f 0%, #c12e2a 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9534f), to(#c12e2a));
  background-image:         linear-gradient(to bottom, #d9534f 0%, #c12e2a 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f', endColorstr='#ffc12e2a', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-color: #b92c28;
}
.btn-danger:hover,
.btn-danger:focus {
  background-color: #c12e2a;
  background-position: 0 -15px;
}
.btn-danger:active,
.btn-danger.active {
  background-color: #c12e2a;
  border-color: #b92c28;
}
.btn-danger.disabled,
.btn-danger[disabled],
fieldset[disabled] .btn-danger,
.btn-danger.disabled:hover,
.btn-danger[disabled]:hover,
fieldset[disabled] .btn-danger:hover,
.btn-danger.disabled:focus,
.btn-danger[disabled]:focus,
fieldset[disabled] .btn-danger:focus,
.btn-danger.disabled.focus,
.btn-danger[disabled].focus,
fieldset[disabled] .btn-danger.focus,
.btn-danger.disabled:active,
.btn-danger[disabled]:active,
fieldset[disabled] .btn-danger:active,
.btn-danger.disabled.active,
.btn-danger[disabled].active,
fieldset[disabled] .btn-danger.active {
  background-color: #c12e2a;
  background-image: none;
}
.thumbnail,
.img-thumbnail {
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
}
.dropdown-menu &gt; li &gt; a:hover,
.dropdown-menu &gt; li &gt; a:focus {
  background-color: #e8e8e8;
  background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image:      -o-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#e8e8e8));
  background-image:         linear-gradient(to bottom, #f5f5f5 0%, #e8e8e8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#ffe8e8e8', GradientType=0);
  background-repeat: repeat-x;
}
.dropdown-menu &gt; .active &gt; a,
.dropdown-menu &gt; .active &gt; a:hover,
.dropdown-menu &gt; .active &gt; a:focus {
  background-color: #2e6da4;
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
  background-repeat: repeat-x;
}
.navbar-default {
  background-image: -webkit-linear-gradient(top, #fff 0%, #f8f8f8 100%);
  background-image:      -o-linear-gradient(top, #fff 0%, #f8f8f8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#f8f8f8));
  background-image:         linear-gradient(to bottom, #fff 0%, #f8f8f8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#fff8f8f8', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
}
.navbar-default .navbar-nav &gt; .open &gt; a,
.navbar-default .navbar-nav &gt; .active &gt; a {
  background-image: -webkit-linear-gradient(top, #dbdbdb 0%, #e2e2e2 100%);
  background-image:      -o-linear-gradient(top, #dbdbdb 0%, #e2e2e2 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dbdbdb), to(#e2e2e2));
  background-image:         linear-gradient(to bottom, #dbdbdb 0%, #e2e2e2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdbdbdb', endColorstr='#ffe2e2e2', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .075);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .075);
}
.navbar-brand,
.navbar-nav &gt; li &gt; a {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .25);
}
.navbar-inverse .navbar-brand,
.navbar-inverse .navbar-nav &gt; li &gt; a {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .25);
}
.navbar-static-top,
.navbar-fixed-top,
.navbar-fixed-bottom {
  border-radius: 0;
}
@media (max-width: 767px) {
  .navbar .navbar-nav .open .dropdown-menu &gt; .active &gt; a,
  .navbar .navbar-nav .open .dropdown-menu &gt; .active &gt; a:hover,
  .navbar .navbar-nav .open .dropdown-menu &gt; .active &gt; a:focus {
    color: #fff;
    background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
    background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
    background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
    background-repeat: repeat-x;
  }
}
.alert {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
}
.alert-success {
  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);
  background-image:      -o-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dff0d8), to(#c8e5bc));
  background-image:         linear-gradient(to bottom, #dff0d8 0%, #c8e5bc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffc8e5bc', GradientType=0);
  background-repeat: repeat-x;
  border-color: #b2dba1;
}
.alert-info {
  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #b9def0 100%);
  background-image:      -o-linear-gradient(top, #d9edf7 0%, #b9def0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9edf7), to(#b9def0));
  background-image:         linear-gradient(to bottom, #d9edf7 0%, #b9def0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffb9def0', GradientType=0);
  background-repeat: repeat-x;
  border-color: #9acfea;
}
.alert-warning {
  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);
  background-image:      -o-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fcf8e3), to(#f8efc0));
  background-image:         linear-gradient(to bottom, #fcf8e3 0%, #f8efc0 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fff8efc0', GradientType=0);
  background-repeat: repeat-x;
  border-color: #f5e79e;
}
.alert-danger {
  background-image: -webkit-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);
  background-image:      -o-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f2dede), to(#e7c3c3));
  background-image:         linear-gradient(to bottom, #f2dede 0%, #e7c3c3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffe7c3c3', GradientType=0);
  background-repeat: repeat-x;
  border-color: #dca7a7;
}
.progress {
  background-image: -webkit-linear-gradient(top, #ebebeb 0%, #f5f5f5 100%);
  background-image:      -o-linear-gradient(top, #ebebeb 0%, #f5f5f5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#ebebeb), to(#f5f5f5));
  background-image:         linear-gradient(to bottom, #ebebeb 0%, #f5f5f5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffebebeb', endColorstr='#fff5f5f5', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #286090 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #286090 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#286090));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #286090 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff286090', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-success {
  background-image: -webkit-linear-gradient(top, #5cb85c 0%, #449d44 100%);
  background-image:      -o-linear-gradient(top, #5cb85c 0%, #449d44 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5cb85c), to(#449d44));
  background-image:         linear-gradient(to bottom, #5cb85c 0%, #449d44 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c', endColorstr='#ff449d44', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-info {
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #31b0d5 100%);
  background-image:      -o-linear-gradient(top, #5bc0de 0%, #31b0d5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#5bc0de), to(#31b0d5));
  background-image:         linear-gradient(to bottom, #5bc0de 0%, #31b0d5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff31b0d5', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-warning {
  background-image: -webkit-linear-gradient(top, #f0ad4e 0%, #ec971f 100%);
  background-image:      -o-linear-gradient(top, #f0ad4e 0%, #ec971f 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f0ad4e), to(#ec971f));
  background-image:         linear-gradient(to bottom, #f0ad4e 0%, #ec971f 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffec971f', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-danger {
  background-image: -webkit-linear-gradient(top, #d9534f 0%, #c9302c 100%);
  background-image:      -o-linear-gradient(top, #d9534f 0%, #c9302c 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9534f), to(#c9302c));
  background-image:         linear-gradient(to bottom, #d9534f 0%, #c9302c 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f', endColorstr='#ffc9302c', GradientType=0);
  background-repeat: repeat-x;
}
.progress-bar-striped {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.list-group {
  border-radius: 4px;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .075);
}
.list-group-item.active,
.list-group-item.active:hover,
.list-group-item.active:focus {
  text-shadow: 0 -1px 0 #286090;
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2b669a 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2b669a 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2b669a));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2b669a 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2b669a', GradientType=0);
  background-repeat: repeat-x;
  border-color: #2b669a;
}
.list-group-item.active .badge,
.list-group-item.active:hover .badge,
.list-group-item.active:focus .badge {
  text-shadow: none;
}
.panel {
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: 0 1px 2px rgba(0, 0, 0, .05);
}
.panel-default &gt; .panel-heading {
  background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image:      -o-linear-gradient(top, #f5f5f5 0%, #e8e8e8 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#e8e8e8));
  background-image:         linear-gradient(to bottom, #f5f5f5 0%, #e8e8e8 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#ffe8e8e8', GradientType=0);
  background-repeat: repeat-x;
}
.panel-primary &gt; .panel-heading {
  background-image: -webkit-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image:      -o-linear-gradient(top, #337ab7 0%, #2e6da4 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#337ab7), to(#2e6da4));
  background-image:         linear-gradient(to bottom, #337ab7 0%, #2e6da4 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
  background-repeat: repeat-x;
}
.panel-success &gt; .panel-heading {
  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #d0e9c6 100%);
  background-image:      -o-linear-gradient(top, #dff0d8 0%, #d0e9c6 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dff0d8), to(#d0e9c6));
  background-image:         linear-gradient(to bottom, #dff0d8 0%, #d0e9c6 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffd0e9c6', GradientType=0);
  background-repeat: repeat-x;
}
.panel-info &gt; .panel-heading {
  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #c4e3f3 100%);
  background-image:      -o-linear-gradient(top, #d9edf7 0%, #c4e3f3 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#d9edf7), to(#c4e3f3));
  background-image:         linear-gradient(to bottom, #d9edf7 0%, #c4e3f3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffc4e3f3', GradientType=0);
  background-repeat: repeat-x;
}
.panel-warning &gt; .panel-heading {
  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #faf2cc 100%);
  background-image:      -o-linear-gradient(top, #fcf8e3 0%, #faf2cc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fcf8e3), to(#faf2cc));
  background-image:         linear-gradient(to bottom, #fcf8e3 0%, #faf2cc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fffaf2cc', GradientType=0);
  background-repeat: repeat-x;
}
.panel-danger &gt; .panel-heading {
  background-image: -webkit-linear-gradient(top, #f2dede 0%, #ebcccc 100%);
  background-image:      -o-linear-gradient(top, #f2dede 0%, #ebcccc 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f2dede), to(#ebcccc));
  background-image:         linear-gradient(to bottom, #f2dede 0%, #ebcccc 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffebcccc', GradientType=0);
  background-repeat: repeat-x;
}
.well {
  background-image: -webkit-linear-gradient(top, #e8e8e8 0%, #f5f5f5 100%);
  background-image:      -o-linear-gradient(top, #e8e8e8 0%, #f5f5f5 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#e8e8e8), to(#f5f5f5));
  background-image:         linear-gradient(to bottom, #e8e8e8 0%, #f5f5f5 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffe8e8e8', endColorstr='#fff5f5f5', GradientType=0);
  background-repeat: repeat-x;
  border-color: #dcdcdc;
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
          box-shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
}
/*# sourceMappingURL=bootstrap-theme.css.map */
</contentText>
  </asset>
  <asset name="css/theme.min.css" mimeType="text/css">
    <contentText>.input-group{width:100%}.input-group .form-control:last-child{border-radius:4px}.patient-panel small{color:#fff}.input-group .form-control:first-child{border-radius:4px}.page-header,.page-header h3{margin-top:0;padding:0;font-size:1.2em;color:#666}.btn&gt;.glyphicon{font-size:1.4em}@media(max-width:767px){.navbar-inverse .navbar-nav .open .dropdown-menu&gt;li&gt;a{color:#fff}.dropdown-menu .navbar-icon{filter:invert(100%);-webkit-filter:invert(100%);-moz-filter:invert(100%);-ms-filter:invert(100%)}.oiz-menu-text{display:inline}}@media(min-width:768px){.oiz-menu-text{display:none}}.input-group label{margin-bottom:0}.navbar-inverse .navbar-nav&gt;li&gt;a{color:#fff;padding-top:7px;padding-bottom:6px}.navbar-inverse .navbar-brand{color:#fff}.navbar-inverse .navbar-nav&gt;li&gt;a&gt;.navbar-icon{filter:invert(100%);-webkit-filter:invert(100%);-moz-filter:invert(100%);-ms-filter:invert(100%)}.navbar-icon{height:38px;width:38px;vertical-align:middle}.panel-default&gt;.patient-panel{background-color:#007fd1;color:#fff}.fixed-panel{max-height:500px;overflow-y:auto}.addon-background{background-color:#fff;border-color:#ccc}.no-padding-all{padding:0}.no-padding-top{padding-top:0}.no-padding-bottom{padding-bottom:0}.no-padding-left{padding-left:0}.no-padding-right{padding-right:0}.btn-custom{padding-top:9px;padding-bottom:9px}
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
.btn-default,.btn-primary,.btn-success,.btn-info,.btn-warning,.btn-danger{text-shadow:0 -1px 0 rgba(0,0,0,.2);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.15),0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 0 rgba(255,255,255,.15),0 1px 1px rgba(0,0,0,.075)}.btn-default:active,.btn-primary:active,.btn-success:active,.btn-info:active,.btn-warning:active,.btn-danger:active,.btn-default.active,.btn-primary.active,.btn-success.active,.btn-info.active,.btn-warning.active,.btn-danger.active{-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-default.disabled,.btn-primary.disabled,.btn-success.disabled,.btn-info.disabled,.btn-warning.disabled,.btn-danger.disabled,.btn-default[disabled],.btn-primary[disabled],.btn-success[disabled],.btn-info[disabled],.btn-warning[disabled],.btn-danger[disabled],fieldset[disabled] .btn-default,fieldset[disabled] .btn-primary,fieldset[disabled] .btn-success,fieldset[disabled] .btn-info,fieldset[disabled] .btn-warning,fieldset[disabled] .btn-danger{-webkit-box-shadow:none;box-shadow:none}.btn-default .badge,.btn-primary .badge,.btn-success .badge,.btn-info .badge,.btn-warning .badge,.btn-danger .badge{text-shadow:none}.btn:active,.btn.active{background-image:none}.btn-default{text-shadow:0 1px 0 #fff;background-image:-webkit-linear-gradient(top,#fff 0%,#e0e0e0 100%);background-image:-o-linear-gradient(top,#fff 0%,#e0e0e0 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#e0e0e0));background-image:linear-gradient(to bottom,#fff 0%,#e0e0e0 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff',endColorstr='#ffe0e0e0',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-color:#dbdbdb;border-color:#ccc}.btn-default:hover,.btn-default:focus{background-color:#e0e0e0;background-position:0 -15px}.btn-default:active,.btn-default.active{background-color:#e0e0e0;border-color:#dbdbdb}.btn-default.disabled,.btn-default[disabled],fieldset[disabled] .btn-default,.btn-default.disabled:hover,.btn-default[disabled]:hover,fieldset[disabled] .btn-default:hover,.btn-default.disabled:focus,.btn-default[disabled]:focus,fieldset[disabled] .btn-default:focus,.btn-default.disabled.focus,.btn-default[disabled].focus,fieldset[disabled] .btn-default.focus,.btn-default.disabled:active,.btn-default[disabled]:active,fieldset[disabled] .btn-default:active,.btn-default.disabled.active,.btn-default[disabled].active,fieldset[disabled] .btn-default.active{background-color:#e0e0e0;background-image:none}.btn-primary{background-image:-webkit-linear-gradient(top,#337ab7 0%,#265a88 100%);background-image:-o-linear-gradient(top,#337ab7 0%,#265a88 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#337ab7),to(#265a88));background-image:linear-gradient(to bottom,#337ab7 0%,#265a88 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7',endColorstr='#ff265a88',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-color:#245580}.btn-primary:hover,.btn-primary:focus{background-color:#265a88;background-position:0 -15px}.btn-primary:active,.btn-primary.active{background-color:#265a88;border-color:#245580}.btn-primary.disabled,.btn-primary[disabled],fieldset[disabled] .btn-primary,.btn-primary.disabled:hover,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary:hover,.btn-primary.disabled:focus,.btn-primary[disabled]:focus,fieldset[disabled] .btn-primary:focus,.btn-primary.disabled.focus,.btn-primary[disabled].focus,fieldset[disabled] .btn-primary.focus,.btn-primary.disabled:active,.btn-primary[disabled]:active,fieldset[disabled] .btn-primary:active,.btn-primary.disabled.active,.btn-primary[disabled].active,fieldset[disabled] .btn-primary.active{background-color:#265a88;background-image:none}.btn-success{background-image:-webkit-linear-gradient(top,#5cb85c 0%,#419641 100%);background-image:-o-linear-gradient(top,#5cb85c 0%,#419641 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#5cb85c),to(#419641));background-image:linear-gradient(to bottom,#5cb85c 0%,#419641 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c',endColorstr='#ff419641',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-color:#3e8f3e}.btn-success:hover,.btn-success:focus{background-color:#419641;background-position:0 -15px}.btn-success:active,.btn-success.active{background-color:#419641;border-color:#3e8f3e}.btn-success.disabled,.btn-success[disabled],fieldset[disabled] .btn-success,.btn-success.disabled:hover,.btn-success[disabled]:hover,fieldset[disabled] .btn-success:hover,.btn-success.disabled:focus,.btn-success[disabled]:focus,fieldset[disabled] .btn-success:focus,.btn-success.disabled.focus,.btn-success[disabled].focus,fieldset[disabled] .btn-success.focus,.btn-success.disabled:active,.btn-success[disabled]:active,fieldset[disabled] .btn-success:active,.btn-success.disabled.active,.btn-success[disabled].active,fieldset[disabled] .btn-success.active{background-color:#419641;background-image:none}.btn-info{background-image:-webkit-linear-gradient(top,#5bc0de 0%,#2aabd2 100%);background-image:-o-linear-gradient(top,#5bc0de 0%,#2aabd2 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#5bc0de),to(#2aabd2));background-image:linear-gradient(to bottom,#5bc0de 0%,#2aabd2 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de',endColorstr='#ff2aabd2',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-color:#28a4c9}.btn-info:hover,.btn-info:focus{background-color:#2aabd2;background-position:0 -15px}.btn-info:active,.btn-info.active{background-color:#2aabd2;border-color:#28a4c9}.btn-info.disabled,.btn-info[disabled],fieldset[disabled] .btn-info,.btn-info.disabled:hover,.btn-info[disabled]:hover,fieldset[disabled] .btn-info:hover,.btn-info.disabled:focus,.btn-info[disabled]:focus,fieldset[disabled] .btn-info:focus,.btn-info.disabled.focus,.btn-info[disabled].focus,fieldset[disabled] .btn-info.focus,.btn-info.disabled:active,.btn-info[disabled]:active,fieldset[disabled] .btn-info:active,.btn-info.disabled.active,.btn-info[disabled].active,fieldset[disabled] .btn-info.active{background-color:#2aabd2;background-image:none}.btn-warning{background-image:-webkit-linear-gradient(top,#f0ad4e 0%,#eb9316 100%);background-image:-o-linear-gradient(top,#f0ad4e 0%,#eb9316 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#f0ad4e),to(#eb9316));background-image:linear-gradient(to bottom,#f0ad4e 0%,#eb9316 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e',endColorstr='#ffeb9316',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-color:#e38d13}.btn-warning:hover,.btn-warning:focus{background-color:#eb9316;background-position:0 -15px}.btn-warning:active,.btn-warning.active{background-color:#eb9316;border-color:#e38d13}.btn-warning.disabled,.btn-warning[disabled],fieldset[disabled] .btn-warning,.btn-warning.disabled:hover,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning:hover,.btn-warning.disabled:focus,.btn-warning[disabled]:focus,fieldset[disabled] .btn-warning:focus,.btn-warning.disabled.focus,.btn-warning[disabled].focus,fieldset[disabled] .btn-warning.focus,.btn-warning.disabled:active,.btn-warning[disabled]:active,fieldset[disabled] .btn-warning:active,.btn-warning.disabled.active,.btn-warning[disabled].active,fieldset[disabled] .btn-warning.active{background-color:#eb9316;background-image:none}.btn-danger{background-image:-webkit-linear-gradient(top,#d9534f 0%,#c12e2a 100%);background-image:-o-linear-gradient(top,#d9534f 0%,#c12e2a 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#d9534f),to(#c12e2a));background-image:linear-gradient(to bottom,#d9534f 0%,#c12e2a 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f',endColorstr='#ffc12e2a',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-color:#b92c28}.btn-danger:hover,.btn-danger:focus{background-color:#c12e2a;background-position:0 -15px}.btn-danger:active,.btn-danger.active{background-color:#c12e2a;border-color:#b92c28}.btn-danger.disabled,.btn-danger[disabled],fieldset[disabled] .btn-danger,.btn-danger.disabled:hover,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger:hover,.btn-danger.disabled:focus,.btn-danger[disabled]:focus,fieldset[disabled] .btn-danger:focus,.btn-danger.disabled.focus,.btn-danger[disabled].focus,fieldset[disabled] .btn-danger.focus,.btn-danger.disabled:active,.btn-danger[disabled]:active,fieldset[disabled] .btn-danger:active,.btn-danger.disabled.active,.btn-danger[disabled].active,fieldset[disabled] .btn-danger.active{background-color:#c12e2a;background-image:none}.thumbnail,.img-thumbnail{-webkit-box-shadow:0 1px 2px rgba(0,0,0,.075);box-shadow:0 1px 2px rgba(0,0,0,.075)}.dropdown-menu&gt;li&gt;a:hover,.dropdown-menu&gt;li&gt;a:focus{background-color:#e8e8e8;background-image:-webkit-linear-gradient(top,#f5f5f5 0%,#e8e8e8 100%);background-image:-o-linear-gradient(top,#f5f5f5 0%,#e8e8e8 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#e8e8e8));background-image:linear-gradient(to bottom,#f5f5f5 0%,#e8e8e8 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5',endColorstr='#ffe8e8e8',GradientType=0);background-repeat:repeat-x}.dropdown-menu&gt;.active&gt;a,.dropdown-menu&gt;.active&gt;a:hover,.dropdown-menu&gt;.active&gt;a:focus{background-color:#2e6da4;background-image:-webkit-linear-gradient(top,#337ab7 0%,#2e6da4 100%);background-image:-o-linear-gradient(top,#337ab7 0%,#2e6da4 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#337ab7),to(#2e6da4));background-image:linear-gradient(to bottom,#337ab7 0%,#2e6da4 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7',endColorstr='#ff2e6da4',GradientType=0);background-repeat:repeat-x}.navbar-default{background-image:-webkit-linear-gradient(top,#fff 0%,#f8f8f8 100%);background-image:-o-linear-gradient(top,#fff 0%,#f8f8f8 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#f8f8f8));background-image:linear-gradient(to bottom,#fff 0%,#f8f8f8 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff',endColorstr='#fff8f8f8',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-radius:4px;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.15),0 1px 5px rgba(0,0,0,.075);box-shadow:inset 0 1px 0 rgba(255,255,255,.15),0 1px 5px rgba(0,0,0,.075)}.navbar-default .navbar-nav&gt;.open&gt;a,.navbar-default .navbar-nav&gt;.active&gt;a{background-image:-webkit-linear-gradient(top,#dbdbdb 0%,#e2e2e2 100%);background-image:-o-linear-gradient(top,#dbdbdb 0%,#e2e2e2 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#dbdbdb),to(#e2e2e2));background-image:linear-gradient(to bottom,#dbdbdb 0%,#e2e2e2 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdbdbdb',endColorstr='#ffe2e2e2',GradientType=0);background-repeat:repeat-x;-webkit-box-shadow:inset 0 3px 9px rgba(0,0,0,.075);box-shadow:inset 0 3px 9px rgba(0,0,0,.075)}.navbar-brand,.navbar-nav&gt;li&gt;a{text-shadow:0 1px 0 rgba(255,255,255,.25)}.navbar-inverse{background-image:-webkit-linear-gradient(top,#3c3c3c 0%,#222 100%);background-image:-o-linear-gradient(top,#3c3c3c 0%,#222 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#3c3c3c),to(#222));background-image:linear-gradient(to bottom,#3c3c3c 0%,#222 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff3c3c3c',endColorstr='#ff222222',GradientType=0);filter:progid:DXImageTransform.Microsoft.gradient(enabled=false);background-repeat:repeat-x;border-radius:4px}.navbar-inverse .navbar-nav&gt;.open&gt;a,.navbar-inverse .navbar-nav&gt;.active&gt;a{background-image:-webkit-linear-gradient(top,#080808 0%,#0f0f0f 100%);background-image:-o-linear-gradient(top,#080808 0%,#0f0f0f 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#080808),to(#0f0f0f));background-image:linear-gradient(to bottom,#080808 0%,#0f0f0f 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff080808',endColorstr='#ff0f0f0f',GradientType=0);background-repeat:repeat-x;-webkit-box-shadow:inset 0 3px 9px rgba(0,0,0,.25);box-shadow:inset 0 3px 9px rgba(0,0,0,.25)}.navbar-inverse .navbar-brand,.navbar-inverse .navbar-nav&gt;li&gt;a{text-shadow:0 -1px 0 rgba(0,0,0,.25)}.navbar-static-top,.navbar-fixed-top,.navbar-fixed-bottom{border-radius:0}@media(max-width:767px){.navbar .navbar-nav .open .dropdown-menu&gt;.active&gt;a,.navbar .navbar-nav .open .dropdown-menu&gt;.active&gt;a:hover,.navbar .navbar-nav .open .dropdown-menu&gt;.active&gt;a:focus{color:#fff;background-image:-webkit-linear-gradient(top,#337ab7 0%,#2e6da4 100%);background-image:-o-linear-gradient(top,#337ab7 0%,#2e6da4 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#337ab7),to(#2e6da4));background-image:linear-gradient(to bottom,#337ab7 0%,#2e6da4 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7',endColorstr='#ff2e6da4',GradientType=0);background-repeat:repeat-x}}.alert{text-shadow:0 1px 0 rgba(255,255,255,.2);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.25),0 1px 2px rgba(0,0,0,.05);box-shadow:inset 0 1px 0 rgba(255,255,255,.25),0 1px 2px rgba(0,0,0,.05)}.alert-success{background-image:-webkit-linear-gradient(top,#dff0d8 0%,#c8e5bc 100%);background-image:-o-linear-gradient(top,#dff0d8 0%,#c8e5bc 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#dff0d8),to(#c8e5bc));background-image:linear-gradient(to bottom,#dff0d8 0%,#c8e5bc 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8',endColorstr='#ffc8e5bc',GradientType=0);background-repeat:repeat-x;border-color:#b2dba1}.alert-info{background-image:-webkit-linear-gradient(top,#d9edf7 0%,#b9def0 100%);background-image:-o-linear-gradient(top,#d9edf7 0%,#b9def0 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#d9edf7),to(#b9def0));background-image:linear-gradient(to bottom,#d9edf7 0%,#b9def0 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7',endColorstr='#ffb9def0',GradientType=0);background-repeat:repeat-x;border-color:#9acfea}.alert-warning{background-image:-webkit-linear-gradient(top,#fcf8e3 0%,#f8efc0 100%);background-image:-o-linear-gradient(top,#fcf8e3 0%,#f8efc0 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#fcf8e3),to(#f8efc0));background-image:linear-gradient(to bottom,#fcf8e3 0%,#f8efc0 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3',endColorstr='#fff8efc0',GradientType=0);background-repeat:repeat-x;border-color:#f5e79e}.alert-danger{background-image:-webkit-linear-gradient(top,#f2dede 0%,#e7c3c3 100%);background-image:-o-linear-gradient(top,#f2dede 0%,#e7c3c3 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#f2dede),to(#e7c3c3));background-image:linear-gradient(to bottom,#f2dede 0%,#e7c3c3 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede',endColorstr='#ffe7c3c3',GradientType=0);background-repeat:repeat-x;border-color:#dca7a7}.progress{background-image:-webkit-linear-gradient(top,#ebebeb 0%,#f5f5f5 100%);background-image:-o-linear-gradient(top,#ebebeb 0%,#f5f5f5 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#ebebeb),to(#f5f5f5));background-image:linear-gradient(to bottom,#ebebeb 0%,#f5f5f5 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffebebeb',endColorstr='#fff5f5f5',GradientType=0);background-repeat:repeat-x}.progress-bar{background-image:-webkit-linear-gradient(top,#337ab7 0%,#286090 100%);background-image:-o-linear-gradient(top,#337ab7 0%,#286090 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#337ab7),to(#286090));background-image:linear-gradient(to bottom,#337ab7 0%,#286090 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7',endColorstr='#ff286090',GradientType=0);background-repeat:repeat-x}.progress-bar-success{background-image:-webkit-linear-gradient(top,#5cb85c 0%,#449d44 100%);background-image:-o-linear-gradient(top,#5cb85c 0%,#449d44 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#5cb85c),to(#449d44));background-image:linear-gradient(to bottom,#5cb85c 0%,#449d44 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5cb85c',endColorstr='#ff449d44',GradientType=0);background-repeat:repeat-x}.progress-bar-info{background-image:-webkit-linear-gradient(top,#5bc0de 0%,#31b0d5 100%);background-image:-o-linear-gradient(top,#5bc0de 0%,#31b0d5 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#5bc0de),to(#31b0d5));background-image:linear-gradient(to bottom,#5bc0de 0%,#31b0d5 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de',endColorstr='#ff31b0d5',GradientType=0);background-repeat:repeat-x}.progress-bar-warning{background-image:-webkit-linear-gradient(top,#f0ad4e 0%,#ec971f 100%);background-image:-o-linear-gradient(top,#f0ad4e 0%,#ec971f 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#f0ad4e),to(#ec971f));background-image:linear-gradient(to bottom,#f0ad4e 0%,#ec971f 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e',endColorstr='#ffec971f',GradientType=0);background-repeat:repeat-x}.progress-bar-danger{background-image:-webkit-linear-gradient(top,#d9534f 0%,#c9302c 100%);background-image:-o-linear-gradient(top,#d9534f 0%,#c9302c 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#d9534f),to(#c9302c));background-image:linear-gradient(to bottom,#d9534f 0%,#c9302c 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9534f',endColorstr='#ffc9302c',GradientType=0);background-repeat:repeat-x}.progress-bar-striped{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.list-group{border-radius:4px;-webkit-box-shadow:0 1px 2px rgba(0,0,0,.075);box-shadow:0 1px 2px rgba(0,0,0,.075)}.list-group-item.active,.list-group-item.active:hover,.list-group-item.active:focus{text-shadow:0 -1px 0 #286090;background-image:-webkit-linear-gradient(top,#337ab7 0%,#2b669a 100%);background-image:-o-linear-gradient(top,#337ab7 0%,#2b669a 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#337ab7),to(#2b669a));background-image:linear-gradient(to bottom,#337ab7 0%,#2b669a 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7',endColorstr='#ff2b669a',GradientType=0);background-repeat:repeat-x;border-color:#2b669a}.list-group-item.active .badge,.list-group-item.active:hover .badge,.list-group-item.active:focus .badge{text-shadow:none}.panel{-webkit-box-shadow:0 1px 2px rgba(0,0,0,.05);box-shadow:0 1px 2px rgba(0,0,0,.05)}.panel-default&gt;.panel-heading{background-image:-webkit-linear-gradient(top,#f5f5f5 0%,#e8e8e8 100%);background-image:-o-linear-gradient(top,#f5f5f5 0%,#e8e8e8 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#e8e8e8));background-image:linear-gradient(to bottom,#f5f5f5 0%,#e8e8e8 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5',endColorstr='#ffe8e8e8',GradientType=0);background-repeat:repeat-x}.panel-primary&gt;.panel-heading{background-image:-webkit-linear-gradient(top,#337ab7 0%,#2e6da4 100%);background-image:-o-linear-gradient(top,#337ab7 0%,#2e6da4 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#337ab7),to(#2e6da4));background-image:linear-gradient(to bottom,#337ab7 0%,#2e6da4 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7',endColorstr='#ff2e6da4',GradientType=0);background-repeat:repeat-x}.panel-success&gt;.panel-heading{background-image:-webkit-linear-gradient(top,#dff0d8 0%,#d0e9c6 100%);background-image:-o-linear-gradient(top,#dff0d8 0%,#d0e9c6 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#dff0d8),to(#d0e9c6));background-image:linear-gradient(to bottom,#dff0d8 0%,#d0e9c6 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8',endColorstr='#ffd0e9c6',GradientType=0);background-repeat:repeat-x}.panel-info&gt;.panel-heading{background-image:-webkit-linear-gradient(top,#d9edf7 0%,#c4e3f3 100%);background-image:-o-linear-gradient(top,#d9edf7 0%,#c4e3f3 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#d9edf7),to(#c4e3f3));background-image:linear-gradient(to bottom,#d9edf7 0%,#c4e3f3 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7',endColorstr='#ffc4e3f3',GradientType=0);background-repeat:repeat-x}.panel-warning&gt;.panel-heading{background-image:-webkit-linear-gradient(top,#fcf8e3 0%,#faf2cc 100%);background-image:-o-linear-gradient(top,#fcf8e3 0%,#faf2cc 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#fcf8e3),to(#faf2cc));background-image:linear-gradient(to bottom,#fcf8e3 0%,#faf2cc 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3',endColorstr='#fffaf2cc',GradientType=0);background-repeat:repeat-x}.panel-danger&gt;.panel-heading{background-image:-webkit-linear-gradient(top,#f2dede 0%,#ebcccc 100%);background-image:-o-linear-gradient(top,#f2dede 0%,#ebcccc 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#f2dede),to(#ebcccc));background-image:linear-gradient(to bottom,#f2dede 0%,#ebcccc 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede',endColorstr='#ffebcccc',GradientType=0);background-repeat:repeat-x}.well{background-image:-webkit-linear-gradient(top,#e8e8e8 0%,#f5f5f5 100%);background-image:-o-linear-gradient(top,#e8e8e8 0%,#f5f5f5 100%);background-image:-webkit-gradient(linear,left top,left bottom,from(#e8e8e8),to(#f5f5f5));background-image:linear-gradient(to bottom,#e8e8e8 0%,#f5f5f5 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffe8e8e8',endColorstr='#fff5f5f5',GradientType=0);background-repeat:repeat-x;border-color:#dcdcdc;-webkit-box-shadow:inset 0 1px 3px rgba(0,0,0,.05),0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 3px rgba(0,0,0,.05),0 1px 0 rgba(255,255,255,.1)}</contentText>
  </asset>
  <asset name="css/xeditable.css" mimeType="text/css">
    <contentText>
/* ==== editable-form ==== */

/* class for single editable element */
.editable-wrap {
  display: inline-block;
  white-space: pre;
  margin: 0;
}

/* remove bottom-margin for bootstrap */
.editable-wrap .editable-controls,
.editable-wrap .editable-error {
  margin-bottom: 0;
}

/* remove bottom-margin of inputs */
.editable-wrap .editable-controls &gt; input,
.editable-wrap .editable-controls &gt; select,
.editable-wrap .editable-controls &gt; textarea {
  margin-bottom: 0;
}

/* keep buttons on the same line */
.editable-wrap .editable-input {
  display: inline-block;
}

.editable-buttons {
  display: inline-block;
  vertical-align: top;
}

.editable-buttons button {
  margin-left: 5px;
}

/* in bootstrap width: 100% =&gt; buttons go outside the box */
.editable-input.editable-has-buttons {
  width: auto;
}

/* ==== editable-text ==== */

/* fix padding issue on typeahead */
.editable-text {
    white-space: nowrap;
}

/* ==== editable-bsdate ==== */

/* fix padding issue on bsdate popup */
.editable-bsdate {
    white-space: nowrap;
}

/* ==== editable-bstime ==== */

/* fix padding issue on bstime */
.editable-bstime {
    white-space: nowrap;
}

/* workaround for bootstrap that sets width: 100% and inputs become too wide */
.editable-bstime .editable-input input[type="text"] {
  width: 46px;
}

/* less padding for .well */
.editable-bstime .well-small {
  margin-bottom: 0;
  padding: 10px;
}

/* ==== editable-range ==== */

.editable-range output {
  display: inline-block;
  min-width: 30px;
  vertical-align: top;
  text-align: center;
}

/* ==== editable-color ==== */

.editable-color input[type="color"] {
  width: 50px;
}


/* ==== editable-checkbox ==== */
/* ==== editable-checklist ==== */
/* ==== editable-radiolist ==== */

.editable-checkbox label span,
.editable-checklist label span,
.editable-radiolist label span {
  margin-left: 7px;
  margin-right: 10px;
}

/* ==== element ==== */

/* hiding element */
.editable-hide {
  display: none !important;
}

.editable-click,
a.editable-click {
  text-decoration: none;
  color: #428bca;
  border-bottom: dashed 1px #428bca;
}

.editable-click:hover, 
a.editable-click:hover {
  text-decoration: none;
  color: #2a6496;
  border-bottom-color: #2a6496;
}

/* editable-empty */
.editable-empty, 
.editable-empty:hover, 
.editable-empty:focus,
a.editable-empty, 
a.editable-empty:hover, 
a.editable-empty:focus {
  font-style: italic; 
  color: #DD1144;  
  text-decoration: none;
}

/* editable popover */
.popover-wrapper &gt; a {
  /* make the link always show up */
  display: inline !important;
}

.popover-wrapper {
  /* make absolutely positioned children constrained to this box*/
  display: inline;
  position: relative;
}

.popover-wrapper form {
  position: absolute;
  top: -53px;
  background: #FFF;
  border: 1px solid #AAA;
  border-radius: 5px;
  padding: 7px;
  width: auto;
  display: inline-block;
  left: 50%;
  z-index: 101;
}

.popover-wrapper form:before {
  content:"";
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 10px solid #AAA;
  position:absolute;
  bottom:-10px;
}

.popover-wrapper form:after {
  content:"";
  width:0;
  height:0;
  border-left: 9px solid transparent;
  border-right: 9px solid transparent;
  border-top: 9px solid #FFF;
  position:absolute;
  bottom:-9px;
}


@media screen and (max-width: 750px) {
    .popover-wrapper form {
        margin-left: -60px;
    }

    .popover-wrapper form:before {
        left:50px;
    }

    .popover-wrapper form:after {
        left:51px;
    }
}

@media screen and (min-width: 750px) {
    .popover-wrapper form {
        margin-left: -110px;
    }

    .popover-wrapper form:before {
        left:100px;
    }

    .popover-wrapper form:after {
        left:101px;
    }
}

</contentText>
  </asset>
  <asset name="css/fonts/glyphicons-halflings-regular.eot" mimeType="application/vnd.ms-fontobject">
    <contentBin></contentBin>
  </asset>
  <asset name="css/fonts/glyphicons-halflings-regular.ttf" mimeType="application/octet-stream">
    <contentBin></contentBin>
  </asset>
  <asset name="css/fonts/glyphicons-halflings-regular.woff" mimeType="application/font-woff">
    <contentBin></contentBin>
  </asset>
  <asset name="css/fonts/glyphicons-halflings-regular.woff2" mimeType="application/font-woff2">
    <contentBin></contentBin>
  </asset>
  <asset name="img/appbar.blank.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAMAAADwSaEZAAAABGdBTUEAALGPC/xhBQAAAwszD0iAAAAQB0Uk5T////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AFP3ByUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuOWwzfk4AAAA7SURBVFhH7cxBDQAgAAMx/JseGprw4yqgZw+VuTJX5spcmStzZa7MlbkyV+bKXJkrc2WuzJW5MvdFtl0i/Xq7HiYs2wAAAABJRU5ErkJggg==</contentBin>
  </asset>
  <asset name="img/appbar.book.list.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADESURBVHhe7djRCoJQEEVR7f//2RAUhAw6oXdGWOtFego3zDQ0AQAAAABAjXl73mHZnvt37J9HueXdXtuTHwkWEiwkWKhs6S/Ltb8B8/zxKpZ+B4KFykZyACPZgWAhwUKChcqW/vEOO95Q/9xnJzfYytLvQLBQ2UgOYCQ7ECwkWEiwUNnSv+oO+3KDrSz9DgQLlY3kAEayA8FCgoUEC5Ut/Sv/D1ud3GOWfgeChcpGcgAj2YFgIcFCgoUEAwAAAACAJ5imN2UXJ0QZabXOAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/appbar.bug.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANoSURBVHhe7ZpLqE1RGMcviSRR5FGSJJLHiGQiBhIjeQwkj1AGSmYmksjIo5CJJBMDMykxEgOJxMT7mTwz8CZJ+P3v2Z+27TvHOfecvdnnfL/6tdbd66zVXuvu9Z211zpdQRAEQRAEQRAEQRAEQRAEQdAZjMRT+Amv4BhslFa0URrO44+U57BRWtFGafiC6c6+w0ZRnWbb6DG9k7QoLiWpcSdJGyFb52aStiXp+KOn4wNOwHpZiKr3LbHtY1iaY6jO38XBuvAXxuMbVJ0NutBpDMTbqAE4gTNxL95APYFS+aO4GO2zh7BjmYqfUQNRjxq0/vjPKDroZ1H80kDUy1hcXsl2HivwO2afor+pOquxo2h0Kmb9irOwIxiAFsCb8SWqrULJK4ZNxNGV7B/o21Adbhbd+7xK9g+0TNFTXAq2oAZEseY0LsF+mEWL2EW4G8/iLXyNWsxqUar6mra6pjJ95jCuR28wNICzUes7ewXbgS2lV5K2Eq3kF1Syv9CC8wi+QHXmJD7BZtA6bi4OweG4FrOr/jM4v5JtDXkM2BTch3O6/6rOA7yI1/Eh3sPn+BYV1EVf1PSSI1DLisk4A6ej9+QaipOr8HL3XyVAnduOj9ECdb0aXlkt9SQfxGlYWiy2XECvk56GV+Z5FavFytKigO111tPwyjzVdiEU+Wo0KknzIM+2f6PIARuXpHmQZ9u5sxO1lvKmTr0aXlkjHsCWkseyQjfaLHZfzbb1HgdVsq0hjym5Bz9Wsv+c40laSu5jerrU0vDKPLUzWwhFBn0NWF7k2fZvFDlgT5M0D/Sa1Tb0wWWoHQdvOnkaXpnnI9yIeiEvLdrcUye0K+F1spaGV1bLV7gNh2Fp0A6D1mJ2htgTDa+sHrWFpOO4wndke4J2KLIdsP/8/tS1WhpeWdZdWO1J1r3892xGu2F1Ih1bNFXsZwK1NLyytNqRtemnWLkStcSw8q3436MpqWMwnR+qE1n0RKQ77Wl4ZWnVVhZ982uXdRO2xXbPUHyG3gCYhldmapqXKrg3g84UddDhDYQ0vDKpA5JqJ0ZtyxqsdvJteGWqo7odyVL0vgSM7HUdjqzDjmYS6swxPTBG+to11CFwkKCDEp1dpo/F9Mqjc079PqzI994gCIIgCIIgCIIgCIIgCIIgZ7q6fgJKdPq6Dh8xUgAAAABJRU5ErkJggg==</contentBin>
  </asset>
  <asset name="img/appbar.cog.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANTSURBVHhe7ZpNyA1RGMdvyEfykVAWykJKUrIg+Ug2lGKnJLJggZKFkp2yshMLJUlJUrIjSmFrgZJY+Ei+SiJfRQm/f3fmbZqeM3PfOzP3zsz7/OrXjLf7HvOc95w5z3nO7TiO4ziO4ziO4ziO4ziO4zjOcBgfXYfFONyKn/GnfhBgAZ7HH/gC/+GYYiYewVeo4I9iFsdQn5Pv8DiqE1uPgjyF3zHuAPkRJ2GIuGOT/sW92GpWYDrw2N1osR6tz8sl2HruoBX8G7yLGk1/UO80Tb9PaH3+Po4JtqDVAaN1Pw4crVKD5ga+794WYnJ0bTX6A51Ea8T04zmciK1EgV1BK/AiXscJmESLwfzubTPYg0u7tyOUObLSnkGxEW+hUg6NvkYwD7XKKZBHqJezUoZ0kGm1eu7DRTgVZ6NGyg68iuoE6/ditaIm/61Vdi7WHmXtyQfP8yVuwDw0Yh+j1UbIvB1ELbCy8pDKuzSSekUjT1POasvyA6bfb7UiKytPq47VnnK0TMMnaLVpuRNrywW0HtpyNfbLSrTaTPoFT2CtV0u98FWFeIpWELGaVkVROmG1rWl4EDUSG8UqVJ3LCuoAFiW08t7ExqKyjRVUGVWGhWi1/RwbixWQzKp99cp0tNr+ipUxjM23+B1dixDq9DLaDlJ1h72NrmnKWLlCbXyLrpUwrA5bE12LoEXFQlN1Mw5r9vSFsuvt+Bqt94xSgqLkZfzaWyoPW4y1JT4NUrnZCiJp1Ylr7EWsLdqGWA9tqe1Nv1ujZ2i1aantWm3RVFSmbT24ZdWbb+1Xa08/5Z11mMcyfIhWGyEbUd5R0U7Fu+SDh47Kkt7DQ7gcZ6DyLB386pTpEuYVEHWouwtvoz6rIqb2to1A5WEF8QBVMdVUPR39rArPYhJ1tP7fxqAHXtu9HUF50TW0Ai6i3mlTsJWo05Qb5U2vXtXhR6MS1H7p5VAkT1VCBn4m2eS/zhzc1L1tP6EvpGg11ZZGq6xWOeVRytVCOwe103q0IFjBy1BWnjWF9RWqVrMNf2E68KysXDlZunqrEXgZa725LotZeBiTB7P6WmYW8Q5C5wS1Pw2qElUelOhqqmahHYS+s1FGedtxHMdxHMdxHMdxHMdxHMdxmkWn8x9660xsQgPtoQAAAABJRU5ErkJggg==</contentBin>
  </asset>
  <asset name="img/appbar.database.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHPSURBVHhe7do/SxtxHMfxVFoVad1EFCylaEUQcXH1Mfgg3Fxc3NzaycnFrX0OPgXHtg6lUKgiCOIfpLjUIrYV6vtbMxwhgTu53yUX3i94k7gludzdJ2BDkiRJkiRJkqTueNJ8rMoQLdIcjdM8vaYxGqUXNEJZN3RNP+mKzuiU9umcvtEl9Y03tEF7dEf/EnRE27RMT6mWVugjtXuDKTumVaqVt9TuzVRZfONKl+oadktxveqm3zT88LQ8qT6wOMK9oPT3N9B87EfxDStdqg/sXfOxmz40H2sj7pKfqPVinLpa3iWzurXDktx0Ul30N6ndadm69BdohmLpx8qPtf+Msv5SrPxY+z8oVv4JfaYLOqBY/63WaOfhae+Lo75LS///qtYrek/xGmoje7oc0hal/NkyTevUetqXruodFrf6L/Sd4gfzV4oPNE61XxSn3h/KGqQ4VZ9TnLpT9JLi2ztBszRJ7ZT+/hyuBTlcC3K49hCH6yM5XHNwuBYUR93hWkD2dHG45tDpxTpcO0hydB/B4VqAw7Ugh2vOHK45crhmOFwTc7jm4HDNcLhWyOFagMO1IIdrzhyuOarsXzZTXfQ7qXK4SpIkSZIkSZLUPxqNe8YWwkkr20cmAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/appbar.email.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAH5SURBVHhe7Zq9LgVBHMUvER/RqCReQOcjIhqNJ0Cn9w6eQCda0UnQicIDKBQSDyAKD6DVSRDBObl7k7/JLLuzs3f/ifNLfplr7uw4OXLXNW5PCCGEEEIIIYQQQgghhBBCCNE1S/ASPsOvjv2Ad3AdumQRvsNY+C5lcWvQHdcwFtiDzJaFkWLMwSuc6D90xxuc7D/0Q+wnO/AADoN9+AljGdwRC2ltuzTuH/u+A90RBtyLzLVVWlhWrDx3xAIOo7RYWcTOUXeUBdyF4X0lV2llZRE7T93xW8A2SgvLOoYW+xx1x18Bd2D4xjaltFF4Au0+/JrzFvs8dUeVgNuwSWlVyyJ2DXVH1YCb8AXatVVKi5V1DmNlEbuOuqNOwA1Yp7RYWVdwHJZh11J31A1YtbSUsohdT92REnAZhkdBh3DwMmMpKWURew11R2rAFRiW9gBPi9HO38ApWAV7HXVHk4AL8AmGe1hZ1jSsSni9O5oGnIdlpdUti4R7uCNHQJZ2D+0+PGauWxaxe9As5DxADEOl7j0Gt+AqfIRnkH9W1SVXnh94LCwXreQpe5csSlBhNWmzsLli7ILZYnQN7xnWC8jfesNmBh7BME8Wct6Y/8W/2XK+JG+L0SMus+mjAgnw9IGnCfowihBCCCGEEEIIIYQQQgghhBCiT6/3Dc8s1+T9ZjHQAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/appbar.futurama.bender.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJ0SURBVHhe7Zq/axRBGIZPBUUFEVFBSBpRQQQRtNZK7NJJCAQC+h/YiI2taG8jdhaCpaUgKBaKhWAhprAQRIQoSvAHBoL6PtkZWI/b7O1Fdsbd94GH+W6WW26/m5n9bvYGxhhjjDHGGGOMMcYYY4yBs/KV/CRn6DDr80H+Dr6lIzc2hzYX3ocWvobWrMMRuShJ3Ak6TD335O0izI/cpiRMy6kizI8cE7ZP7i9CMw4/5VIRmjp2yVhWmAp2ykvyqfwuY8KIKWJvyL3SiHPynYxJqvKLnJW95rz8JUclqMp52Uu4C5an37jynqR30FRlxYLcUYSN4D0Xi7BfPJejRtA4PpG9g1prVDLGMWmNtim0bcOFb4RUnzvLn0ZZ44Q1pO2EHZR35Me1V5PxQz6Qx9detUybCTsmn0m2oc/ILZK1qKls/zyUjyXn7CxsDF6T8UHHXblVRvjybsl4N6w6Hh+QXJWcs7NQSlClM8LeyO1yGBLEsbrjPCBhpHV6GyiWErSMtEgcUZGbsu54fF3ub4Uc75Iroa2i7nhn+JdTknNwrmXZWe7L8qJPeVEe4cOLftXx8qLPOTsLJQCLNDuoh+iYkD3ysmRTsdNlBRyVjJzPMo6kpjK1kxWuFIIp4MI3QqrPnQwSdl3y1wBiFvPdIWYxZ6oR8/CDxZ+Y41dC3Du46G1F+FcC6mLeU+5vHU/J/wQS9kJytxw1kmA4Zqo+CnHv4KJxNbQX5KkQR4hZ4+ZCXH7KlAxPyYak+i3JftakSXsZ2iSkXDwPyNPypKSMOBz6KCP4IilQv0m2cl5LHs2xhvGzyhhjjDHGGGOMMcYYY4zpF4PBH9yG03UYAW00AAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/appbar.globe.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAATQSURBVHhe7ZtfyFRFGIe3MNPCjNIioojQIqIEb8S7yEQUiy7qIhSvDC+CiP5cdJGIIlKKRBCRRNCFSBJRQfTHEDXFCBGjLIgoQqKIyLooKqL6Pbs78DLM2W/n7Pm+M+frfeBh9xzYs3Nmz8y878xsz3Ecx3Ecx3Ecx3Ecx+kyFwxfS2GuvFJe2j/q9X6Tf8qf+0cF0HaFLZHr5Cp5i7xBXiRjfpGfy0PyPXlS/m+4XD4sT8l/a/q13C6vkrMWmtk2eV6mKqGONNnn5CI5q7hbnpOpmw7+LWmaN8r5Q6+VNNV7JU8UTTP12R/lJtl5LpRPy39k6kbxd/m+PCxHcbH8Q4bPUcH2OviSZODoJDTBt2R8U1aa1G0S5gxfq7hD2s8elC/K+MdgUAijbGegwEekvZGUu+W40P/Zz3J8jdwj40o7ITtTaTTDN6S9gSpvl+OyVfKZb+Vj8gGZapbBt+VUT20R7JKpG0i5V+Zw3fCVH+UjmbqmNff6M849MlXwKvfJXBbKV2R8rV8lg8eH5hzeL4tkgfxO2sKO8hNJZJ/LCzJ1vdclLJY2hPlBEiwXBx24vYGUVGioVPLDOpH6TZK+i+s8IR+RPw3P3SyBvpFwJXxvzuAyI3DjhAihgCkJLkOMtFzmdPhAU/xShspZKQOEJsfk5v7RAPsDUrai0ih+aVs5sQz7O+WkPCS53vP9o9HEP+KTshjOylAwEuPwfo2k4KQ5TcAoSbgQnlTisLUyfnrICu6SzGqEslDGIrhVhkIhze17yajVNIQTSF9FpB8CVlKmByV5J+lRVYJPWVvnKRkKREUBMwhfDN42CqOqfZpjR+WsSFlbx6ZA73BCEGJcP3jbKPRdtgJyfVe2DqOfLdQyOV2clva7ciU+a5XLpC0QTYKkeDqgc6dftN9XRwaE1og7fEZFZgqa5k75l7TfVVcygdow4jQJc1EkxQz3TcJMRWpxZMZpusKAlaiNg7f96LwJJnoqIuYNX2sxHRX2meSJYE6MeOhN+ajcIOtyfPjaBMRsrRF3+qwzwn5pzwfrLlRw3VGThTm22umDDSuYD4Oq4Z9R7lXJalAuO2TqmkjAnDof23pYATZwfYYTwuZwKb+RdSqN/NDmqiTXNPf7zLlRFhG42tQoJLjkebagKT+VV8hcGEiYHeGJC1PWzN2TiqW+x1pEahTHYsxzkQDbc1Uy67pUNgETi1PNyRWRfINNiFl4sE/dVDJqUcG5E4opmHNLfQcWM70DTM6FgvErx4uu4/qanGTujAWP1HWxiOYYiGc3n5Ufm+McQ9Bbh3ixN0jZipqiBjuHThL+uMxNlg/Iq2VdqsKZ4hZBIF5mI3QYpyMO0pdNElTGg0+w2GU2iBdyP5A0T3uuyiY65VQ3UOxCboBR0haY6Z5xpmZoTpNAXhynZOOsLrUOBR93MwoyMq6Wk8RjrCLF2wc6sxkF2Gp0VNobSMk+iElvihWkM9Jel6e1k3vEptpQx7JYXbg+2zjj5t7JDXUBmmfVlk1GrxUyF1ajCJTjxRfs9JZNy6hNwV/Jl+UWyX4JEnJumsomVGEtcr0k7WGreqryZ82mYAvNxLed16DTf2zwv85kUuKfs1iiu6R/NNgUR7NjT5jjOI7jOI7jOI7jOI7jTEav9x+kGR1AGPjSbQAAAABJRU5ErkJggg==</contentBin>
  </asset>
  <asset name="img/appbar.lightbulb.hue.on.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAOxSURBVHhe7ZpLqE1RGMcveSaSRBJJImRAKMkjEwNTMhBJSR4Dz0w9BhLJxEAhDA3kkTySEIVEiUJkwECIkFcJ/98+a2l37t73nL3POXc/zverX2s/7tn37O9+a61vr307DMMwDMMwDMMwDMMwjDq4LG9XNo1pcqPsFexF89cZR0+5Vi4I9krOWUkwNgR70dQKGMHi/IVgr+TMldzsOzmYAxF0FbCBks9yvi0yDM5IbnhfsNcZxrD7lc1O8Bk+ez7YKwlxmeMZK9/K48FeMvbLr3JcsBcPmVgIVkgy4KqczoEYuhr0a9HXtVFMkKfkH7maA3mHMeqDJGh86ZOykeAk4aD8Lfnd3+Qi2VR6uLbZ0CW3yk2ytxwqv8gwBHGqnC1nyIlyuOwv+0nO/5AfJd2XP8JjeUvelHTLMIMkP0fJcVTulEwOhWKInFLZ/A83tEq+lmRCGgnEZtlHhhkvR1c2ywE3eFFy03TXS3KNJMNGyqiuyzHO8TOL5TH5U3INngbIyNKyS3KjryQBSAsD+3PJtfZwoKw8ldzk+mCvMbgG1+Ka3QbjSSuproX8JNOMwfiza6snrlo1YEO0ImDL5GH5RHJT4S5zxLVzXNsIM117wrWwXX6S/EFOSyaG7ippUsFKBN3ES03EoO4ZILkZaqRhHEiJvw6y7aFoJmDh7zBL5ha/7MJKBPVV1AxGxnEjcc+R9bBNco24AZ/HpiUy9xlWDyMkmZc2y3x2cQ2u1RawjpU2y3x2lXotjEeeMZXNgOWSmybL9koG6AeS6v+75ByyzbF7koVHJg2yi3MrpYcnismVzeLCisJSSSZQ1T+THrqif0hOa7g7P5IcuyvXyZaWFq3CLxIimUKVH+a69OeTSskSZov0KyR4RRYOaqJrMu4vvkOGg5DEQ7Ian9Hn5G4OlI2FMioY9UjJ0HYwBkUFox4LP8Cnxc94SWRpJzNa/fBdC0qJpDx0bSZkHbA7rk1C9QzZrWQdsBeuTcJL12ZC1gF749okUPlnRhED9t61bQnFZtRM2JW13ni3lKwz7JczCX5pum1J+n4yU7LOMCjUmJSHgLV9F0sKa//hRcM4eWM+ShrigIwKUti2Wb+vh/myOkA8mPN/Xrzhzs3qRKv+3Skp1GPMlqzC3nAtk8E8STAxF0HLS8CA9bFwgCbJMLn4rnkKGN0wDBkWzrhMVyk8eQoYY5Z1yQRYl0xIIbpknqguI8i4tnw7lBTeOZJNvh4zDMMwDMMwDMMwDMMwjObQ0fEPx4RQ96jXVz4AAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/appbar.magnify.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJASURBVHhe7Zo/axRBHIYvEmIhJBZREUkTv4GNhRAsxMbGP9jbST6An0DEJoitfwixsLOwsdFGsBAsRA1YpQkohkSECII2xuclszIMe8nu7eoms+8DD3PFzsC8zMzN/u4GxhhjjDHGGGOMMcYYY4wxxgzGQrvXOICn8QrO4XE8ghv4BT/iE3yBv7C3KKiruIJbFVzD6ziOvUOr6BWWBbObyziLveEUaquVhVHVb6htnD0n8DOmAfzAB3gBZ/BgaM/gbfyKaZ911DPZorPnDaYT14F+FHfiMN7HtO97zPZMu4bphBewDrcwHUPjZodWQfpt+BhH4RHG42hcbeGsOIfxJHVm7bYNh6F+6h+Pp/FbR/eerrgU2oIl1KE9Cuq3uP3xL+n4+563GK+Is9gE9Y/He41ZoVURT3ASm6DrRDyezrGsiCcnm6LA4/E2sXW6PMNSmq6wqdAWfA9tq3QZmCoOMXo9asLJ0BZ8Cm2rdBnYy9AWqErRBJWCYj6ENhsuY3zm7It7WJfoJp5+U7Z101/F7G764gbGE5V+lxzCBD7FdLLS1YqEncIq1Jl0D1UPO4YKQa3qYTexN/WwKmGNoiquTV+v9hz/Kqwsa/pVwtLdbB7LtluZ2f5qVDWsQyj0/Hm8i+9Q59lvVECqcqgUdBGL57Oibli9xmHVwGHV5A6WhVTosCL0HvcTy4KSDitBrzVlQUmHNYTn6LBqoH/jPEPdnxTWQ3RYFVCtfXr7ozHGGGOMMcYYY4wxxhhjzP9gMPgDEKtGYdlXcLYAAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/appbar.man.suitcase.fast.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAATVSURBVHhe7ZtbqBVVGMdPaUUXKsMMKyMqpZJKJIUwqEiIokKKChEriAqUSLrTQ/QSQgpl0fWhC9FD9dKFIJ+6aVGIRBb1EGWpL4VadrGi2/83M4vWXn1rz9777HP2DH0/+DEze+/xzHx7rW99a812zHEcx3Ecx3Ecx3Ecx3H+R+xTbZvChfJyOUt+JB+SO6Rj8KT8O3GXnCedhGUyDVZwi3QS3pJWsIInyUawb7UdNUdW2xyHVtuR05SAvV9tLfbKreWuEzhOkuCt7nivdAzmSlpaCNSvcq2cKp0unCDPktOLo4Yxpdo2id/l2fIKSQ32jdwjHYP5cpuMcxgBvEo6CQdLpkFxsII/yjnSiaALWsEKEsyRB60pdRjUFa9HyzflacXRiGhSwHqBoL0tyXUjYZjLOwfKBfKo4igPo94H5W4HK+Qj5W4tu+Viubk4aiF0p8+llXss75MpBMz6bE5Gz43yfnmpPEK2BqYv1k3lpIpPqQtYbgSN/VQ+ISl+J4Rh5bADqm0/9HvOy/KOcjfLqfIGuUlSpgydYQXsMfldudsTT8vfyt2+WCOZBWyQtKgc0yT5NOYwSe4kdazkhUEYZtJn7neenFEc5WGp5vVyt4O6pP+ojG+Uv3OOPFcukqfLcD8MCifLb+Vlcom8Wr4gr5TA9qVyt53U5bC6EZSkT/K/XbJcRBDj1Q8CxsrtH9XxF7LVKyHjDViAwvZVmZ5PgCh9Ho5eu1X2xXi75P7yfNnLqJTrioEb5ePlrsk6uarcNeFaKGy/lLn7YtB4Vn4lD5I7JQMFXXfCoTlTB8XfYp08Z8zxjLTOCVJ3LZQWLD5+KLkmAmKdjwTmcHlP9BoDyaRAso0vphet+gsoMXJL1LG0DKtcCF3wekme+qU6tiRA/BsEj2M+OyElSMqgAbPqr7qVilge+KYwReI9gsDNE5T0vODPkhRC9w6vTcrclBruFRlfTJ3WlAjIbelnWQNLXwvy4DdmtQzvMUpS4oQWZEn3p/syEPB3ep5WDaMO49s5sdztynZpPU6bKVllTZfLaSUk8puLo05+kmdIEjxQk4VEzntczzWSeabFn/JMOVuy/L1etgZahNUKqNQJ2GfRa7HvyLiOulOG90KwaUHxOUFSw3WylTC6pTfEJDpABZ9L4gQ7QO6ixfE6IyrJP/3Nxl/yRTnw5HyQLskjMOZz3UYWLowWwG8munGxfK3c7YB6KR7uGf2sZP+1PL7cLbhWMk8FyguO+UJore/JW6S1Fjdh3CTjb6xOpio5aDmMWNZ55LUU5oHp59KCk4HoDcl7fGnUbYzmS+VIyOWEnDR/i2Nk+jgt+Ly0sKZOacCAvEaLfFAynxwpH8v0ortJt0ihK1t5Cxnic/ml14A1igvkDzK9cEtuJv31IF2GhUDr83QhlmFyNCJggyR9Wsgp8pDiyIYllE/k98XRv1Bg3lXu/oe7Je/nIGDpigWLlnXrb61luUxbSPA5WUcru+SgUFVTG6U3jKx4sE5VRyMCNqw1/TpYqNuv3O2ANbJLJL8ybAWTFbBjq20Mc76LJMs6rWGyAvZAtQ3QnXgIwTxxPAzy5Kk1sObFasW7kv/x0S+siqQ57CnpdOE2GepAFg2ZMTg1kEY8UI7jOI7jOI7jOI7jOE7/jI39A46cIxxaz1dfAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/appbar.network.home.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAG/SURBVHhe7dqxLgRRFIfxpdDoRCM6EY14ANFoRDQ6jdoDeAmRqHQa2WjVCqEXiVY0CtGIRESnEcH/xNzk5iRj9+5OZtbc75d8wdrZ3Tkx15XVAQAAAAAAAAAAwbjaV6dq0m5w5ouPkCl1rr6L7tScCk7U5++nWFQPKgwr9KY2lAm3ZW9Lvat4UHFfajf6OlsT6kjFw7HsJ+3S3RaXpRl1pfwwLtS0ssX/sLjNt6SysqyelB/EgbJBxXbUh4rvZ5fvtspC2QBsHSuzql5VfIx1rOyybiXbU3WVP+lntaJ6se3FrfLHX6tZ1Sp2md2oYU/W79NCL8rWxFbZU/5EB7mcbPj+cc5U69gladuFeLEfVDj+Xtn6F/810CrrakFVNTC7nO2XSOtVNbDajRUf6xZO1j9/2RDK7lf76/ebRPTAwBIxsEQMLBEDS8TAEjW9rRgW2wogb02tYX/x69tIvUbWsEQMLBEDS8TAEjGwRAwsUZMDW1P270y2jYjz/PftDd1NlR17A9cPo98eVSOq3hTayfTDnrff+5ZJeYzKzpM1LBEDS8TA/pFhFn07Njtl24peZbutAAAAAAAAADDSOp0f+c65B2/Q14cAAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/appbar.network.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAD/SURBVHhe7dYBSsMwFAbg6mkEbyN4FD2E3s4LaQIJhNCxPU3SDr8PHmHdSrK/yds2AAAAAAAAgMkeyrjCdxmzlfMONWvhe+Hceu3UzhZY+3qUod/xsYzcSGBBAgs6Ww/7q70eqIcdSWBBKwPLR6PW3bLDgmY97d/8AR2xFk3/bAQWJLCgWYHVX8Nc7/nCjs9U7edovKXKDbnWR6oZ2jlqDbXyybaLnzXvXkBD59LDggQWdOSRHN5fLnAkjySwIIEFHdnDrul73Mq1XmSHBQksaGVg+UjV6j2lykewrV7//nOq5c6yw17LGPFSxn/pK1W/g65VvgcAAAAAAACW27YfSz40vysWhCwAAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/appbar.settings.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANOSURBVHhe7ZpNyA1RGMdfH/kIkXwkRJQUSTZWyk7YSClKkeyUhUhioSxsbCwkZcECJUkJSwvJRyIJC2RhoST5SCFfv/97Z+rc6bl37tw7M3fuvM+vfp15b3fOPee8Z87HM2fIcRzHcRzHcRzHcRzHcRzHqRFTozSNVbiycTkyWYNX8RtO1wcp3MZ/+AB34XisPWNxGz5CVT72ALZjGYbfl5/wBE7C2nISkxWXH7BdjzmF1n1vsdZYPSV2J1qoB6k3WfccwlIZFaVlcgM3NC6beINbcTnO1AfwHpfi4eG/mvmD81HfqTXr0OotWb2MI4bnaDVCFjdi6YyO0jLRmPS5cdkTO7AWM6QqoeWDxRx8jFaP6Ub11IXYinFRWmmOowbiYxhWZgo+QaviP/AKbsclOA0n4gJcj6fxC1r3PsWwp2kRvB9fospSadSz1FhxZf7iLdyMF6LPkl7HRZjGbDyHVh7XcC3qN9T48ecqS6veXgm2YFiRdqoxD2LWcXQ3/kYrT0uVqbLE+71O3IfdsgetPC1VpkrSbhWf9BL2ivKw8rZU2SqHCqVVvB41q9Cx33Eu9orGNOVl/UaoohursbJoZtTs9BGtCmjgzotWk4Aa8iwOVPxM0YejmKxMnoOwNcnon6VlSSEUudL/ia8bl03cj9I8eBGlIfcwj52ESdFbI0UTkij2lRdWXvOitBD6sZdUz8sLK68JUVoIRTeY1QPiWFcezIrSkHdRWghFNpgGfeuR1BYmL1ZEaYjeLhU26BeBLys6xBeuGfGtURf45jsjHt7JiGZGLSXiwnYSQFSktagAYtoL4krQKkStMPJDDCsaG4ao1XgKZyser8khLUT9DMNlxECFqEXaS5C7aFW8G9VYA/8SJA1V4jxaDZBFbeJnYKn0Yy/5Cy82LntCj60WxyMCvea3ek1WdeygVPpxGEXjmDbIY4b/akYThV7OarCfjF/xFeqY1GJMchP7cmSgTHREyeotOtLU6tW/jkJZ98jKruLzQofgrIrr0Fwrkuu70DNYW1TxI6hHMlnxtJ6iY53h9xX+3osa/GuP1mmbMI5udLLf04JU0Yk7qJ1DP2b4SqCFZ6fjkCYMx3Ecx3Ecx3Ecx3Ecx3EcpwYMDf0H8uUHASuXoMAAAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/appbar.shield.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJ9SURBVHhe7ZpNqE1RGIav/2IiosQQI5kxYSAlMwMlGZAUA2ZKUmbmpiZSpoSMqKsoRAaYEOVnQBEx8p/wvPeuW6fTd497W+uevfY571NP3z3ndG57vXuvdfZea40YY4wxxhhjjDHGGGOMMc0wJ9XaWImL8Qv+1RsmZhM+RoUkX+F2NAHH8A9OhNXpKTSJ2XgGo6A6PY/zcahZgtcwCijyHmp8Gwi24VW8jodRg/Zk6KrahRqjomB6+R6P4AKcDH22Gy/gA9yLRZiVai6r8SnOG3s1znccxfv4HD+jQlyD+3Ad5vAWL+Fd/IQLcTluxh24FCdQ0GvxxdirCjiB3VdCbR7FbNQ1SrAq1ZpZlmoWpQJrAz9TzWKYAiuCA5smpQL7mGrNvEk1i2EKTLch2ZQKrJr7mx4UOamlAtNNa+0UOaml7vTFD+z1uNIkurr0FJBNyV/Jmq+yl6lmUzIwzSTUysNUsykZ2JVUa+RWqlWh8UvjWPTg27RFxi9R8grTs5qmcmrjDn4Y/zOfkoGJy6nWxMVUq2QF/saoWzSljqlqbmB04E14E4tSuksKre7UwrlUq2Yu6jEkOuP9VMegY2kF+zFqRD/VqlFr0Jl9hFFD+qGW1lrHBmzqF3MrtpLTGDVoJj2LrWURPsOoYTPha+y14t4K1uM3jBpY0l+4EQcCbQ2IGllKbZPaiQOF9n9FjS3hIRxIjmPU4BwHfrOduqfGm6jx01H/4yAOBVvwHUZBTEXNb2k/7FChWVDNn0WB9FLfKTaD2kbURbWMH4XTqXYeHkADWg/Qhjd1te6gvuJJ1E2w6ULB7cHb+AT/t1fWGGOMMcYYY4wxxpipMzLyD19XR8bGkZGZAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/appbar.user.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHDSURBVHhe7dmxShxRFIfxVQQRwXSKmCKkMEQbsYsgWNj5Dj5EOjsJ2NqnSZdCsLWxERQfQIIWIjYqgsFKVGzU78AVRA67c2eWvTN7/z/4uM0M7Jyd2ZlhWyIiIiIiIiIiIiIieRuiVfpLZ/QQOqdd+kkjJJimY3rp0AV9p6yNkg3CG5CXbWv7ZOsXeYNp1wZlq8il+DHbJ0vj5A2kSGOUxGBYU/gc1jJs2EmkHFiVsyTLM+wprGVU2beSlAO7DWsZd2HNhj3ZH5L3g16kIxqmbKyQN4iYlqnnUl2Sl2Gt4n9Ys7FJz+SdPZ2yl/QsrZE3kHatU7YmyRtKu2yfrG2RNxivbcreBN2TN6D32TZTJNgjb0jvs22SS/mk30gaWCQNLJIGFmkgrL1kX9I8LdAPmqFvVORl2l6HTshe3PdDj9SXZuk33ZB3FyyT/Xdpz2aL1DfmaIe8A+5mB7REjWX/VFd5wS7bH/pEjWJP5P/IO6BedEpfqRHsr/8r8g6kl12T3Vxq7QvVYVhv2Q3GvsDaskvB++Apsy+wa7r9HGYfsI66dpx60o+kgUXSwCJpYJE0sEgamIiIiIiIiIiIiIhIE7Rar6srkG/Wx7AJAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/icon.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC45bDN+TgAABrRJREFUWEe912lQk2cCB/Bsu7sf7PTLzn5t1+2xWg9EENAqKrulSxUHQQULW63V1mtQ5FCQgkKQgBIBEyHcyJFAJIRLQpEIcqkEISThkEIC5IBCW9AWtt2t+ffJm7ciQhCt7X8mk0nmzfP/5Tl4A2OuAHhpZGLijcs1d7edyKsJ+CS9kuPNKyveyS255cEt6drOFQ+6cUu+duOKH2xPKrnvnlw6uiOlQr0zrULlnSlp2JNTLTwskMYHlzb7pTcptnYPjy8mY/6BHn7ukAsWRYrqd+/miIUfxBaOWYdkGJedSsOy4HQsD8nA8tMZWPF5JlaEZWFleDaszlyBVcQVrIrMwSpmLqyj8mAdnY/VLPKI4cMmVgDbCwWwjSuE4yURdmRLRvcLbgjibsq99Hr9IrrWnMCc6zucInJHl/rzsDQgBe8EkkdQKl4UYA1biDUXhbBLuAr7xCK4ZVZ+FVrV4kWVs0qaNq4MSHm4xC8ZvwfAjgDsyYysvyx+GH291ZXxYYIo4x/Hk/B7A+w5xTggvJHL2MUuEj0NsOkcH0nSdkgUasRXt8KelD0JcE4UgVevQFXnABJq27E+/urTAUV1QsaB5HLWfID3Ygqg1I3CN7cG78cJEVx0Ey3qYYLIfwTYyhVDrh2Ff1E9tiaV4sy122hSG+BIyiwBHAjAr7yRyYgpbfBYMg8gv7kTPsnlM5bgXMVthIobHwHKOvrhnSGZsQScOjlOljbNAxAZExoU7ox+/bevryZFlgD1PUOwIWv+OGBfpgRZjapHgOOFtVhL1vxxwN7caqQ0KS0CNvJK/q8ZH19MnQTXGIHOEiCtVo5PSeHjgEs1dxEgrIPj+QIKsJrsiU2k5BeADQGkNatwXFRvEeDDr1FT5ab4JBYXWAI4krVuJWseXX4LH6dXgittg7R7EBtYAtzoHoJnagXsWHx80TWA/bnX4UFepzYqUU2uede0ES0AjhTfTKHrGQz/nOrDS07MDTCdAluy41kEUHinByfJN7c+S04Aec8rpRylHX3UKXBPLqMQ6U0qsKV34UCKLZ2CtRzRw8hqmTddz2DU92itlgXwYBeSjqBzLKQzj6KS6YPbkW5QMLdgID8UU7pudGefgjR2H/LiAhGUwMWB7CqUys0AD145JOQIBokb0EZOhBuZCUsAJ17pDyqy9+h66j7w8iluxtd1QY5oObgYssNvoPXIW2g7+jbafZfgvqoWXeGboDixAqoAaxiKomAQRmByRI38W0qElzVDNjACn6wqag8cEkiR3KCwCNgrkLbR1dPpvOCZdeezv80CyP2WY1IjhzJwNQVQBqyC5vI+/He4D3r+aQxw9uC7MT2y62TYk1yIbUlieKRVoLZXOyfAdC/wLa6PpGun08cPc79zcDZAeXo9HnQ1QOFvZQaQ584gG2iz/TGpvgv1+e3QZZ/AZJ8MQ5yP0H/WCUPJBzCp64EsyRcSXihSU9n4JK0Q9gSw7lLxj3z5PQe6djrGsbFX20+tnXwS0BXhjAmFlJSvnAYEWqPLhLgSgK/K2LgX4gBd5jF8cz0F/WEbMMDaiql+GQaj3scg81/QRjlDS97LS2VhD7+m17TkdO3MdMZ55rcc+vsMQE+MG8bbJVT5kwDNpY8w3iykAAOJ3rjfWmEGRLtgqq8Fg6wPHgF05/4NbawrVJKsMLpudgyViZtaDr9pnAVok6BjDoD6oicedFRTAA17F77vqp8XYEjwmphSVr1G182O6WeTKsq1Y6GA/rid+E51wwyI24HJe80UQEOmfqr3NoZit00vQbSLcVQQGk5XWU5fpt9eGZmFBQHOu+P7nkYz4II7+dYyi4Bhjs+gcaj5L3SN5QD6RcrwzbpfAIqTa9B7cTc6yHF8EnAvzBGDvE8pQB/Z/br0IxRAfXYzDJm+ZBM6mwHRLv8bFUebf4ItJKZZaD36ttEEMP0hkh97Z05A90lb9ATbUYDe0HXo+/xdM+DMRmgIYiDCiQKMZPheA2r/SA//9ECl+rMqakvHiwBo49y/nahNe4seeuHRFEasa/e3+ulXAZjv/TQiDD9ID/ns+ZK7P6b92FLj8wGcoE89VAC0/oke7tkzLP/ilS7mFtnzAIbivTof1Ob/lR7q+TMsiV+sCt0w8iwADcv1m5Fr7JX0EL8+an6Ygypk3cRCAGqm8/1hEeuf9EdfXAxXo9Z0h28eng/QT8oNIqYL/ZEXH11V5mtfsj2rVUE2xhmA02uhZu/qHqtItKUv/e1C7hcvGap4LhrOvhz1xQ87NIn/adTmBR/Tt5bN/I93QWEwfgYbnMW69fOI0QAAAABJRU5ErkJggg==</contentBin>
  </asset>
  <asset name="img/msg/acknowledged.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAH5SURBVHhe7Zq9LgVBHMUvER/RqCReQOcjIhqNJ0Cn9w6eQCda0UnQicIDKBQSDyAKD6DVSRDBObl7k7/JLLuzs3f/ifNLfplr7uw4OXLXNW5PCCGEEEIIIYQQQgghhBBCCNE1S/ASPsOvjv2Ad3AdumQRvsNY+C5lcWvQHdcwFtiDzJaFkWLMwSuc6D90xxuc7D/0Q+wnO/AADoN9+AljGdwRC2ltuzTuH/u+A90RBtyLzLVVWlhWrDx3xAIOo7RYWcTOUXeUBdyF4X0lV2llZRE7T93xW8A2SgvLOoYW+xx1x18Bd2D4xjaltFF4Au0+/JrzFvs8dUeVgNuwSWlVyyJ2DXVH1YCb8AXatVVKi5V1DmNlEbuOuqNOwA1Yp7RYWVdwHJZh11J31A1YtbSUsohdT92REnAZhkdBh3DwMmMpKWURew11R2rAFRiW9gBPi9HO38ApWAV7HXVHk4AL8AmGe1hZ1jSsSni9O5oGnIdlpdUti4R7uCNHQJZ2D+0+PGauWxaxe9As5DxADEOl7j0Gt+AqfIRnkH9W1SVXnh94LCwXreQpe5csSlBhNWmzsLli7ILZYnQN7xnWC8jfesNmBh7BME8Wct6Y/8W/2XK+JG+L0SMus+mjAgnw9IGnCfowihBCCCGEEEIIIYQQQgghhBCiT6/3Dc8s1+T9ZjHQAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="img/msg/alert.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKpSURBVHhe7Zk7iNVAFIavz2LFB6Jb6CKiFoJYCFpYabeVIoJYrJWlvYUgFjYWgoilWAgWgpUWCy4s2Fq5y1YqWoiIsqwigiL4/P87MzKMJy+4yW6S/4OPTMK5N8nJSWYmGQghhBBCCCGEEEIIIYQQQgixIlkPb8H7cAM3iGyYrIfwj3fWbxMZ3IQhWcHbUBicgmmyglNQRGyDi9BKFl2C41B47kErUbEPoAAnoZUgy7Ow13DY8A5aybH8AHs91LgGrcTkeQMuG6v8cjk4COfgmuGa4zV85pr/OAonXHPIL3gYzg/XesQ0TKvnDkx5AtM4/rZXTMI0CdTqCVlxViw7i16wFr6CVhJYTSlZsW9g4x3Aar9sknNwr2v+x2a/jNnklym74AXX7C4bYd4wgtWUYsUFOTvYAjvLdWideJAJiGF1WXGx/M9OwrngV2iddGzMdmjFxPI/d8LOUVRdQSYpcABaMal3YafgA7pMddF9MMBBqxWT+hPGv6uNpnrJq3DMNQuJe8WsHjKFs4XLrtl+eOVZAVZlWB6HgTPQirFspMqaqDBe+Xi+WET8DIvbRTRSZXVPvvfAl7BKwp7Ct645rJhDrlkKTsz3Q2s81wrYe1m3Txm/GdvK2Noecyv8Dq2TypPDD84I+Li44rdVkfvkvlvHRWidUJ7PYQq3WbF5XoKtgm8k3kPrZPJ8BFMeQys2T+6bx9AaqnzYiP0M489p/Pz2CVqxRZ6GrcF6m1pW9pC8pc5Dvoa2Yso4A1sBK6TKQLUueQwj//hbx8D1GKwy7qoLHsMJ1xwddSRsJb1q4TNwpNQ10t8Nj0C+ntkBOS7iNCecwDrIiTUvGN/Ll52Y/4BfIG83Lrn+27fZOXyE7CFfwAUvY4UQQgghhBBCCCGEEEIIIUQ2g8Ff3TvDdQEEk3YAAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/msg/none.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAG5SURBVHhe7dixLkRBGIbhpZCodDqlXu8C9BKtygXotDrRiE5DQiVR6F2AXq3V6SgUCnwfNpkc/87uZGeZI++TvEGyKzNz/j27DAAAAAAAAAAAAAAA/9umelTvjfSkdlTTltWVijbwm92oFdUb28pXONrMLHtRu2pe9Y6vsK90tLFZdKtWVe/5ivvKR5us0avaV72bqmvle1jEV94TEG14mu7UmoosqdOvb9vkDfhdcuvzp588AXvKE9HdeGlv6lAtqMiGelB+bLPSDfmdctS0eSI8GenjS7pX6yoynKr08c1KF+ly0+bJOFCelO7zcp2oRRVJpyqtWd2FDstNmyfFExM9L80H4QOJRFOV1qxoscNy0+aJOVajpu1C+VAio6YqrVnRYrvlpq27+dwhj5uqtGZFi40adxDnKvcRZZKpSmtWtNhcl2rUSy3il65v+tHvytWsaLHjyt3MU5O+OUQ1K1rspPl+FE2bp+pIlX78SGtWtNiSutM2zVSlVTP3/bWWWos7U8/Kf7TXWGO1fbZ6YLVV22cv/8n2lziwQhxYIQ6sEAdWiAMrxIEBAAAAAAAAAAAAAPpsMPgAhtzP+9Pu5MoAAAAASUVORK5CYII=</contentBin>
  </asset>
  <asset name="img/msg/system.png" mimeType="image/png">
    <contentBin>iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAYAAADHl1ErAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAWSSURBVHhe7Zx5yDZTGIdfSyRrPmtSkl2EP0giiRBKSpIl/0h9StZEipQUQgpZkpJEEkoou1CUJVmz/GHLkjWShN/lmaPzjXtm7jPLM/M8M1ddzbzfN+88Z85ztvucM+/KxMTExMREm2wrL5Gb/fvTRCF7yfvln/JveaucMNhe3if/kmRUkJ8PkxMZ68mL5W8yzqjYD+W6cvTsI9+UViblPUOOnkNkaKuqfF0uLGtlxza4Ql4+O63kPPmdpAcN0otuLbeRz8uT5VJDG/aGtEpVqt/IUXCMtDKgjnvKUfCqtDIg1bPl4Fg7O7bJDdmxKXtkx6VnK2mVmFSfk4OjixJGg/3u7LQ2b8kHZ6fj4GZplZoyyejrJDHo6DhfWpmSlzCKAP1YOeqQ6VRpZVDew+VC0UUbBp9nxyoIpxaKNkOjmAPly7PTUo6ST85O58LDcpX8Wf4qv5YfyxdkrzHuodKqgnnJ2HmxibTSgHRSLrqqkiTOw7fZcR7slx0t1s+OlXSVYd448Kfs6GWL7FgHSn0R3i+4swzbNzuWQTviLWFMUD4jX5N1F1PK0uQuYV3BINRqK2I9oQ9h1m0yXh94StYZs5Wl6VnZGwdLK1F5qxraE2XRQ14lU6CJsO4TfEX2xl3SSlTeJyQrTBYbyO+l9XtIiTtJeiHzrfsE35G9sJP0zu0jY6ELpNWGXC+t3wn+IneVeTaVRBCXyYckVf8rad0j+InsJTQjLrQSVOX78kgZ48l8lu3oBKhyV0omL1O+sNgf5AOSsG5z2TnetqtMSkRcTR+V1nWxPKj1702k5F8ri5qMxmwpv5DWh6dKYg+S4I0YuvJ3eZpsFVaLWBazPrCOJDKuEsR41nXzkrb0P5oOXMmseyULuW3xtKSHDNySHfvCHQVUQddP9G99K01kCBBDO1K3IW/DR2RjdpZvS+sDiuT6I+Q1knGPdc1HMu7ed5Spn9O2jaIAHoZl/rIdOpZ/yP1lDCXnLEkpZUzFdfFGlR1kWx1JE2tFATTCbGX6TFo3rfJcWQZtIXvHQumi12WMZd0rRaoyYzy+FCKQ2yVtLtWMkuup6q4SxgPsLSkB3Jyey7qZxztlCk173fckW0QZF1bNQhAVsL2BTCx6RgazhTBYK4vhUn1MkgGwobxJHi3pMIq4UVr3qpIQqGzOqwpq0YUyH/DfIwupit9SZPxEJgUukuH/aAMfl+dIQqDA8TK+h0faueNkWxBqUSvC/SmthbABJE5MXQlp4szivGw+it6R0ueZR4tlLy3VqgtOkEQd+WHOGrQRitCQsjEuZrW0rm0iJbZrmOmNa8D/oJG0EpcquxFj2toCFZxHZrmh8bQSmSLzT2GIsJu0rqnr1XJQUDqshKYaonxG6yxgWNek+qLsZaKvDNbvrMQGmX96KfdvllTDmNNl3YEvEi3sLgfJpzJOLF33HZJBHuMqZjk8s6v5lW16NMZZdQbCjBEHyymScIZwpWjxdGNJ2GE9XLBolMxcfEo1pXtnyW3h2UWWTRHzoGXzSd5R/RqTeItO0eicdo5poDIIO6zfzbt0W9DjnpUSR8jjmc0tmheL7W3NsEvIHAJt3on0bhhhkOxp/EtnC8ZE1fJ9kP2yg6Gr3TsevIsLg6qSi5Bh3v2yc2ERMmxQ9JlhC0mfGebtTVkQGS3bSVafUtYaB/kaYJew4MHryGy1zP9pBo/uLeHLAC9bsVPaygivSznSL6KN2VvkJfpB0HWj39brKCwojwLvW21VsvzW+176edDW68x4phwFnikcj/xhkN5nXbt6/S+G2YYDJNXqS8kSHK/dIeeESGTqOrIKNsYwYTl67pZWqbIc3UDWIuWFCJbb8nv658Y8qqSXSyV7O9i4spEkc36UtF1swWLqm71fH2TGG4cnJibGyMrKP8XLJdVAIXstAAAAAElFTkSuQmCC</contentBin>
  </asset>
  <asset name="js/openiz-bre.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-11-14
 */

/**
 * @summary Execution environment for BRE in Javascript
 * @class
 * @static
 * @description The BRE normally runs in the server as a series of rules, however bcause some rules may
 * need to be run as local rules for the user interface, this class simulates the BRE back-end service
 */
var OpenIZBre = OpenIZBre || {
    /**
     * @summary Issue priority
     * @enum
     */
    IssuePriority : {
        Error : 1,
        Warning : 2,
        Information : 3
    },
    /** 
     * @summary Represents a detected issue
     * @constructor
     * @param {string} text The textual content of the issue
     * @param {OpenIZBre.IssuePriority} priority
     * @memberof OpenIZBre
     */
    DetectedIssue: function(text, priority) {
        this.text = text;
        this.priority = priority;
    },
    /**
     * @summary Allows rules to know they're running in the UI rather than the back-end
     * @memberof OpenIZBre
     */
    $inFrontEnd: true,
    /**
     * @summary Reference sets loaded
     */
    $refSets : {},
    /** 
     * @summary Reference set base URLs
     */
    $refSetBase : [],
    /**
     * @summary The current list of triggers registered for javascript
     * @memberof OpenIZBre
     */
    _triggers: [],
    /**
     * @summary The current list of validators registered for javascript
     * @memberof OpenIZBre
     */
    _validators: [],
    /**
     * @method
     * @memberof OpenIZBre
     * @summary Simulates the simplify 
     * @deprecated
     */
    ExpandObject: function (object) { return object; },
    /**
     * @method
     * @memberof OpenIZBre
     * @summary Simulates the expand object method
     * @deprecated
     */
    SimplifyObject: function (object) { return object; },
    /**
     * @method
     * @memberof OpenIZBre
     * @summary Adds a trigger event to the triggers collection
     * @param {string} type The type of object being registered
     * @param {string} trigger The name of the BRE trigger to subscribe to
     * @param {function} callback The callback function
     */
    AddBusinessRule: function (type, trigger, callback) {
        this._triggers.push({
            type: type,
            trigger: trigger,
            callback: callback
        });
    },
    /**
     * @method
     * @memberof OpenIZBre
     * @summary Adds a validator to the validatos collection
     * @param {string} type The type of object being registered
     * @param {function} callback The callback function
     */
    AddValidator: function (type, callback) {
        this._validators.push({
            type: type,
            callback: callback
        });
    },
    /** 
     * @method
     * @memberof OpenIZBre
     * @summary Simulates the rule being executed
     */
    ExecuteRule: function (trigger, instance) {
        // Execute the rule
        var retVal = instance;
        for (var t in this._triggers)
            if (this._triggers[t].type == instance.$type) {
                var triggerResult = this._triggers[t].callback(retVal);
                retVal = triggerResult[Object.keys(triggerResult)[0]] || retVal;
            }
        return retVal;
    },
    /** 
     * @method
     * @memberof OpenIZBre
     * @summary Simulates the validation method being run
     */
    Validate: function (instance) {

        // Execute the rule
        var retVal = [];
        for (var t in this._validators)
            if (this._validators[t].type == instance.$type) {
                var issues = this._validators[t].callback(instance);
                for (var i in issues)
                    retVal.push(issues[i]);
            }
        return retVal;

    }
};</contentText>
  </asset>
  <asset name="js/openiz-model.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="openiz.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */

/**
 * @summary A documented namespace
 * @namespace
 * @property {uuid} EmptyGuid A property which represents an empty UUID
 */
var OpenIZModel = OpenIZModel || {
    // OpenIZ.Core.Model.BaseEntityData, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.IdentifiedData
     * @summary             Represents the root of all model classes in the OpenIZ Core            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.BaseEntityData} copyData Copy constructor (if present)
     */
    BaseEntityData: function (copyData) {
        this.$type = 'BaseEntityData';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
        }
    },  // BaseEntityData 
    // OpenIZ.Core.Model.Association`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.IdentifiedData
     * @summary             Represents a bse class for bound relational data            
     * @property {date} modifiedOn            Get the modification date            
     * @property {uuid} source            Gets or sets the source entity's key (where the relationship is FROM)            
     * @property {OpenIZModel.IdentifiedData} sourceModel [Delay loaded from source],             The entity that this relationship targets            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.Association} copyData Copy constructor (if present)
     */
    Association: function (copyData) {
        this.$type = 'Association';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
        }
    },  // Association 
    // OpenIZ.Core.Model.IdentifiedData, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @summary             Represents data that is identified by a key            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {date} modifiedOn            Gets or sets the modified on time            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.IdentifiedData} copyData Copy constructor (if present)
     */
    IdentifiedData: function (copyData) {
        this.$type = 'IdentifiedData';
        if (copyData) {
            this.etag = copyData.etag;
            this.modifiedOn = copyData.modifiedOn;
            this.id = copyData.id;
        }
    },  // IdentifiedData 
    // OpenIZ.Core.Model.NonVersionedEntityData, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Updateable entity data which is not versioned            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.NonVersionedEntityData} copyData Copy constructor (if present)
     */
    NonVersionedEntityData: function (copyData) {
        this.$type = 'NonVersionedEntityData';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
        }
    },  // NonVersionedEntityData 
    // OpenIZ.Core.Model.VersionedAssociation`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.Association
     * @summary             Represents a relational class which is bound on a version boundary            
     * @property {number} effectiveVersionSequence            Gets or sets the effective version of this type            
     * @property {number} obsoleteVersionSequence            Gets or sets the obsoleted version identifier            
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.VersionedEntityData} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.VersionedAssociation} copyData Copy constructor (if present)
     */
    VersionedAssociation: function (copyData) {
        this.$type = 'VersionedAssociation';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
        }
    },  // VersionedAssociation 
    // OpenIZ.Core.Model.VersionedEntityData`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents versioned based data, that is base data which has versions            
     * @property {string} etag            Override the ETag            
     * @property {uuid} previousVersion            Gets or sets the previous version key            
     * @property {OpenIZModel.VersionedEntityData} previousVersionModel [Delay loaded from previousVersion],             Gets or sets the previous version            
     * @property {uuid} version            Gets or sets the key which represents the version of the entity            
     * @property {number} sequence            The sequence number of the version (for ordering)            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.VersionedEntityData} copyData Copy constructor (if present)
     */
    VersionedEntityData: function (copyData) {
        this.$type = 'VersionedEntityData';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
        }
    },  // VersionedEntityData 
    // OpenIZ.Core.Model.Security.SecurityApplication, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Represents a security application            
     * @property {string} applicationSecret            Gets or sets the application secret used for authenticating the application            
     * @property {string} name            Gets or sets the name of the security device/user/role/devie            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.SecurityApplication} copyData Copy constructor (if present)
     */
    SecurityApplication: function (copyData) {
        this.$type = 'SecurityApplication';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.name = copyData.name;
            this.applicationSecret = copyData.applicationSecret;
        }
    },  // SecurityApplication 
    // OpenIZ.Core.Model.Security.SecurityDevice, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Represents a security device            
     * @property {string} deviceSecret            Gets or sets the device secret            
     * @property {string} name            Gets or sets the name of the security device/user/role/devie            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.SecurityDevice} copyData Copy constructor (if present)
     */
    SecurityDevice: function (copyData) {
        this.$type = 'SecurityDevice';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.name = copyData.name;
            this.deviceSecret = copyData.deviceSecret;
        }
    },  // SecurityDevice 
    // OpenIZ.Core.Model.Security.SecurityEntity, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Security Entity base class            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.NonVersionedEntityData} copyData Copy constructor (if present)
     */
    NonVersionedEntityData: function (copyData) {
        this.$type = 'NonVersionedEntityData';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
        }
    },  // NonVersionedEntityData 
    // OpenIZ.Core.Model.Security.SecurityPolicy, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents a simply security policy            
     * @property {string} handler            Gets or sets the handler which may handle this policy            
     * @property {string} name            Gets or sets the name of the policy            
     * @property {string} oid            Gets or sets the universal ID            
     * @property {bool} isPublic            Whether the property is public            
     * @property {bool} canOverride            Whether the policy can be elevated over            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.SecurityPolicy} copyData Copy constructor (if present)
     */
    SecurityPolicy: function (copyData) {
        this.$type = 'SecurityPolicy';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.canOverride = copyData.canOverride;
            this.isPublic = copyData.isPublic;
            this.oid = copyData.oid;
            this.name = copyData.name;
            this.handler = copyData.handler;
        }
    },  // SecurityPolicy 
    // OpenIZ.Core.Model.Security.SecurityPolicyInstance, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Association
     * @summary             Represents a security policy instance            
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.NonVersionedEntityData} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.SecurityPolicyInstance} copyData Copy constructor (if present)
     */
    SecurityPolicyInstance: function (copyData) {
        this.$type = 'SecurityPolicyInstance';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
        }
    },  // SecurityPolicyInstance 
    // OpenIZ.Core.Model.Security.SecurityRole, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Security role            
     * @property {string} name            Gets or sets the name of the security role            
     * @property {string} description            Description of the role            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.NonVersionedEntityData} copyData Copy constructor (if present)
     */
    NonVersionedEntityData: function (copyData) {
        this.$type = 'NonVersionedEntityData';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.description = copyData.description;
            this.name = copyData.name;
        }
    },  // NonVersionedEntityData 
    // OpenIZ.Core.Model.Security.SecurityUser, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Security user represents a user for the purpose of security             
     * @property {string} email            Gets or sets the email address of the user            
     * @property {bool} emailConfirmed            Gets or sets whether the email address is confirmed            
     * @property {number} invalidLoginAttempts            Gets or sets the number of invalid login attempts by the user            
     * @property {string} lockout            Gets or sets the creation time in XML format            
     * @property {string} passwordHash            Gets or sets whether the password hash is enabled            
     * @property {string} securityStamp            Gets or sets whether the security has is enabled            
     * @property {bool} twoFactorEnabled            Gets or sets whether two factor authentication is required            
     * @property {string} userName            Gets or sets the logical user name ofthe user            
     * @property {bytea} photo            Gets or sets the binary representation of the user's photo            
     * @property {string} lastLoginTime            Gets or sets the creation time in XML format            
     * @property {string} phoneNumber            Gets or sets the patient's phone number            
     * @property {bool} phoneNumberConfirmed            Gets or sets whether the phone number was confirmed            
     * @property {uuid} userClass            Gets or sets the user class key            (see: {@link OpenIZModel.UserClassKeys} for values)
     * @property {string} etag            Gets the etag            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.SecurityUser} copyData Copy constructor (if present)
     */
    SecurityUser: function (copyData) {
        this.$type = 'SecurityUser';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.etag = copyData.etag;
            this.userClass = copyData.userClass;
            this.phoneNumberConfirmed = copyData.phoneNumberConfirmed;
            this.phoneNumber = copyData.phoneNumber;
            this.lastLoginTime = copyData.lastLoginTime;
            this.photo = copyData.photo;
            this.userName = copyData.userName;
            this.twoFactorEnabled = copyData.twoFactorEnabled;
            this.securityStamp = copyData.securityStamp;
            this.passwordHash = copyData.passwordHash;
            this.lockout = copyData.lockout;
            this.invalidLoginAttempts = copyData.invalidLoginAttempts;
            this.emailConfirmed = copyData.emailConfirmed;
            this.email = copyData.email;
        }
    },  // SecurityUser 
    // OpenIZ.Core.Model.Roles.Patient, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Person
     * @summary             Represents an entity which is a patient            
     * @property {date} deceasedDate            Gets or sets the date the patient was deceased            
     * @property {DatePrecision} deceasedDatePrecision            Gets or sets the precision of the date of deceased            
     * @property {number} multipleBirthOrder            Gets or sets the multiple birth order of the patient             
     * @property {uuid} genderConcept            Gets or sets the gender concept key            
     * @property {OpenIZModel.Concept} genderConceptModel [Delay loaded from genderConcept],             Gets or sets the gender concept            
     * @property {date} dateOfBirth            Gets or sets the person's date of birth            
     * @property {DatePrecision} dateOfBirthPrecision            Gets or sets the precision ofthe date of birth            
     * @property {OpenIZModel.PersonLanguageCommunication} language            Gets the person's languages of communication            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Patient} copyData Copy constructor (if present)
     */
    Patient: function (copyData) {
        this.$type = 'Patient';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.language = copyData.language;
            this.dateOfBirthPrecision = copyData.dateOfBirthPrecision;
            this.dateOfBirth = copyData.dateOfBirth;
            this.genderConceptModel = copyData.genderConceptModel;
            this.genderConcept = copyData.genderConcept;
            this.multipleBirthOrder = copyData.multipleBirthOrder;
            this.deceasedDatePrecision = copyData.deceasedDatePrecision;
            this.deceasedDate = copyData.deceasedDate;
        }
    },  // Patient 
    // OpenIZ.Core.Model.Roles.Provider, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Person
     * @summary             Represents a provider role of a person            
     * @property {uuid} providerSpecialty            Gets or sets the provider specialty key            
     * @property {OpenIZModel.Concept} providerSpecialtyModel [Delay loaded from providerSpecialty],             Gets or sets the provider specialty            
     * @property {date} dateOfBirth            Gets or sets the person's date of birth            
     * @property {DatePrecision} dateOfBirthPrecision            Gets or sets the precision ofthe date of birth            
     * @property {OpenIZModel.PersonLanguageCommunication} language            Gets the person's languages of communication            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Provider} copyData Copy constructor (if present)
     */
    Provider: function (copyData) {
        this.$type = 'Provider';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.language = copyData.language;
            this.dateOfBirthPrecision = copyData.dateOfBirthPrecision;
            this.dateOfBirth = copyData.dateOfBirth;
            this.providerSpecialtyModel = copyData.providerSpecialtyModel;
            this.providerSpecialty = copyData.providerSpecialty;
        }
    },  // Provider 
    // OpenIZ.Core.Model.Entities.UserEntity, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Person
     * @summary             Represents a user entity            
     * @property {uuid} securityUser            Gets or sets the security user key            
     * @property {OpenIZModel.SecurityUser} securityUserModel [Delay loaded from securityUser],             Gets or sets the security user key            
     * @property {date} dateOfBirth            Gets or sets the person's date of birth            
     * @property {DatePrecision} dateOfBirthPrecision            Gets or sets the precision ofthe date of birth            
     * @property {OpenIZModel.PersonLanguageCommunication} language            Gets the person's languages of communication            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.UserEntity} copyData Copy constructor (if present)
     */
    UserEntity: function (copyData) {
        this.$type = 'UserEntity';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.language = copyData.language;
            this.dateOfBirthPrecision = copyData.dateOfBirthPrecision;
            this.dateOfBirth = copyData.dateOfBirth;
            this.securityUserModel = copyData.securityUserModel;
            this.securityUser = copyData.securityUser;
        }
    },  // UserEntity 
    // OpenIZ.Core.Model.Entities.ApplicationEntity, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Entity
     * @summary             An associative entity which links a SecurityApplication to an Entity            
     * @property {uuid} securityApplication            Gets or sets the security application            
     * @property {OpenIZModel.SecurityApplication} securityApplicationModel [Delay loaded from securityApplication],             Gets or sets the security application            
     * @property {string} softwareName            Gets or sets the name of the software            
     * @property {string} versionName            Gets or sets the version of the software            
     * @property {string} vendorName            Gets or sets the vendoer name of the software            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.ApplicationEntity} copyData Copy constructor (if present)
     */
    ApplicationEntity: function (copyData) {
        this.$type = 'ApplicationEntity';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.vendorName = copyData.vendorName;
            this.versionName = copyData.versionName;
            this.softwareName = copyData.softwareName;
            this.securityApplicationModel = copyData.securityApplicationModel;
            this.securityApplication = copyData.securityApplication;
        }
    },  // ApplicationEntity 
    // OpenIZ.Core.Model.Entities.DeviceEntity, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Entity
     * @summary             Represents a device entity            
     * @property {uuid} securityDevice            Gets or sets the security device key            
     * @property {OpenIZModel.SecurityDevice} securityDeviceModel [Delay loaded from securityDevice],             Gets or sets the security device            
     * @property {string} manufacturerModelName            Gets or sets the manufacturer model name            
     * @property {string} operatingSystemName            Gets or sets the operating system name            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.DeviceEntity} copyData Copy constructor (if present)
     */
    DeviceEntity: function (copyData) {
        this.$type = 'DeviceEntity';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.operatingSystemName = copyData.operatingSystemName;
            this.manufacturerModelName = copyData.manufacturerModelName;
            this.securityDeviceModel = copyData.securityDeviceModel;
            this.securityDevice = copyData.securityDevice;
        }
    },  // DeviceEntity 
    // OpenIZ.Core.Model.Entities.Entity, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedEntityData
     * @summary             Represents the base of all entities            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Entity} copyData Copy constructor (if present)
     */
    Entity: function (copyData) {
        this.$type = 'Entity';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
        }
    },  // Entity 
    // OpenIZ.Core.Model.Entities.EntityAddress, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Entity address            
     * @property {uuid} use            Gets or sets the address use key            (see: {@link OpenIZModel.AddressUseKeys} for values)
     * @property {OpenIZModel.Concept} useModel [Delay loaded from use],             Gets or sets the address use            
     * @property {object} component            Gets or sets the component types            
     * @property {string} component.AdditionalLocator 
     * @property {string} component.AddressLine 
     * @property {string} component.BuildingNumber 
     * @property {string} component.BuildingNumberNumeric 
     * @property {string} component.BuildingNumberSuffix 
     * @property {string} component.CareOf 
     * @property {string} component.CensusTract 
     * @property {string} component.City 
     * @property {string} component.Country 
     * @property {string} component.County 
     * @property {string} component.Delimiter 
     * @property {string} component.DeliveryAddressLine 
     * @property {string} component.DeliveryInstallationArea 
     * @property {string} component.DeliveryInstallationQualifier 
     * @property {string} component.DeliveryInstallationType 
     * @property {string} component.DeliveryMode 
     * @property {string} component.DeliveryModeIdentifier 
     * @property {string} component.Direction 
     * @property {string} component.PostalCode 
     * @property {string} component.PostBox 
     * @property {string} component.Precinct 
     * @property {string} component.State 
     * @property {string} component.StreetAddressLine 
     * @property {string} component.StreetName 
     * @property {string} component.StreetNameBase 
     * @property {string} component.StreetType 
     * @property {string} component.UnitDesignator 
     * @property {string} component.UnitIdentifier 
     * @property {string} component.$other Unclassified
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityAddress} copyData Copy constructor (if present)
     */
    EntityAddress: function (copyData) {
        this.$type = 'EntityAddress';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.component = copyData.component;
            this.useModel = copyData.useModel;
            this.use = copyData.use;
        }
    },  // EntityAddress 
    // OpenIZ.Core.Model.Entities.EntityAddressComponent, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.GenericComponentValues
     * @summary             A single address component            
     * @property {uuid} type            Gets or sets the component type key            (see: {@link OpenIZModel.AddressComponentKeys} for values)
     * @property {OpenIZModel.Concept} typeModel [Delay loaded from type], 
     * @property {string} value
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.EntityAddress} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.AddressComponent} copyData Copy constructor (if present)
     */
    AddressComponent: function (copyData) {
        this.$type = 'AddressComponent';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.value = copyData.value;
            this.typeModel = copyData.typeModel;
            this.type = copyData.type;
        }
    },  // AddressComponent 
    // OpenIZ.Core.Model.Entities.EntityName, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a name for an entity            
     * @property {uuid} use            Gets or sets the name use key            (see: {@link OpenIZModel.NameUseKeys} for values)
     * @property {OpenIZModel.Concept} useModel [Delay loaded from use],             Gets or sets the name use            
     * @property {object} component            Gets or sets the component types            
     * @property {string} component.Delimiter             The name component represents a delimeter in a name such as hyphen or space            
     * @property {string} component.Family             The name component represents the surname            
     * @property {string} component.Given             The name component represents the given name            
     * @property {string} component.Prefix             The name component represents the prefix such as Von or Van            
     * @property {string} component.Suffix             The name component represents a suffix such as III or Esq.            
     * @property {string} component.Title             The name component represents a formal title like Mr, Dr, Capt.            
     * @property {string} component.$other Unclassified
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityName} copyData Copy constructor (if present)
     */
    EntityName: function (copyData) {
        this.$type = 'EntityName';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.component = copyData.component;
            this.useModel = copyData.useModel;
            this.use = copyData.use;
        }
    },  // EntityName 
    // OpenIZ.Core.Model.Entities.EntityNameComponent, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.GenericComponentValues
     * @summary             Represents a name component which is bound to a name            
     * @property {string} phoneticCode            Gets or sets the phonetic code of the reference term            
     * @property {uuid} type            Gets or sets the component type key            (see: {@link OpenIZModel.NameComponentKeys} for values)
     * @property {uuid} phoneticAlgorithm            Gets or sets the identifier of the phonetic code            (see: {@link OpenIZModel.PhoneticAlgorithmKeys} for values)
     * @property {OpenIZModel.PhoneticAlgorithm} phoneticAlgorithmModel [Delay loaded from phoneticAlgorithm],             Gets or sets the phonetic algorithm            
     * @property {OpenIZModel.Concept} typeModel [Delay loaded from type], 
     * @property {string} value
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.EntityName} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityNameComponent} copyData Copy constructor (if present)
     */
    EntityNameComponent: function (copyData) {
        this.$type = 'EntityNameComponent';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.value = copyData.value;
            this.typeModel = copyData.typeModel;
            this.phoneticAlgorithmModel = copyData.phoneticAlgorithmModel;
            this.phoneticAlgorithm = copyData.phoneticAlgorithm;
            this.type = copyData.type;
            this.phoneticCode = copyData.phoneticCode;
        }
    },  // EntityNameComponent 
    // OpenIZ.Core.Model.Entities.EntityRelationship, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents an association between two entities            
     * @property {uuid} target            The target of the association            
     * @property {uuid} holder            The entity that this relationship targets            
     * @property {OpenIZModel.Entity} holderModel [Delay loaded from holder],             The entity that this relationship targets            
     * @property {OpenIZModel.Entity} targetModel [Delay loaded from target],             Target entity reference            
     * @property {uuid} relationshipType            Association type key            (see: {@link OpenIZModel.EntityRelationshipTypeKeys} for values)
     * @property {bool} inversionInd            The inversion indicator            
     * @property {OpenIZModel.Concept} relationshipTypeModel [Delay loaded from relationshipType],             Gets or sets the association type            
     * @property {number} quantity            Represents the quantity of target in source            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityRelationship} copyData Copy constructor (if present)
     */
    EntityRelationship: function (copyData) {
        this.$type = 'EntityRelationship';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.quantity = copyData.quantity;
            this.relationshipTypeModel = copyData.relationshipTypeModel;
            this.inversionInd = copyData.inversionInd;
            this.relationshipType = copyData.relationshipType;
            this.targetModel = copyData.targetModel;
            this.holderModel = copyData.holderModel;
            this.holder = copyData.holder;
            this.target = copyData.target;
        }
    },  // EntityRelationship 
    // OpenIZ.Core.Model.Entities.EntityTelecomAddress, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents an entity telecom address            
     * @property {uuid} use            Gets or sets the name use key            (see: {@link OpenIZModel.TelecomAddressUseKeys} for values)
     * @property {OpenIZModel.Concept} useModel [Delay loaded from use],             Gets or sets the name use            
     * @property {string} value            Gets or sets the value of the telecom address            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityTelecomAddress} copyData Copy constructor (if present)
     */
    EntityTelecomAddress: function (copyData) {
        this.$type = 'EntityTelecomAddress';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.value = copyData.value;
            this.useModel = copyData.useModel;
            this.use = copyData.use;
        }
    },  // EntityTelecomAddress 
    // OpenIZ.Core.Model.Entities.GenericComponentValues`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.Association
     * @summary             A generic class representing components of a larger item (i.e. address, name, etc);            
     * @property {uuid} type            Component type key            
     * @property {OpenIZModel.Concept} typeModel [Delay loaded from type],             Gets or sets the type of address component            
     * @property {string} value            Gets or sets the value of the name component            
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.IdentifiedData} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.GenericComponentValues} copyData Copy constructor (if present)
     */
    GenericComponentValues: function (copyData) {
        this.$type = 'GenericComponentValues';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.value = copyData.value;
            this.typeModel = copyData.typeModel;
            this.type = copyData.type;
        }
    },  // GenericComponentValues 
    // OpenIZ.Core.Model.Entities.ManufacturedMaterial, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Material
     * @summary             Manufactured material            
     * @property {string} lotNumber            Gets or sets the lot number of the manufactured material            
     * @property {number} quantity            The base quantity of the object in the units. This differs from quantity on the relationship            which is a /per ...             
     * @property {uuid} formConcept            Gets or sets the form concept's key            
     * @property {uuid} quantityConcept            Gets or sets the quantity concept ref            
     * @property {OpenIZModel.Concept} formConceptModel [Delay loaded from formConcept],             Gets or sets the concept which dictates the form of the material (solid, liquid, capsule, injection, etc.)            
     * @property {OpenIZModel.Concept} quantityConceptModel [Delay loaded from quantityConcept],             Gets or sets the concept which dictates the unit of measure for a single instance of this entity            
     * @property {date} expiryDate            Gets or sets the expiry date of the material            
     * @property {bool} isAdministrative            True if the material is simply administrative            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.ManufacturedMaterial} copyData Copy constructor (if present)
     */
    ManufacturedMaterial: function (copyData) {
        this.$type = 'ManufacturedMaterial';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.isAdministrative = copyData.isAdministrative;
            this.expiryDate = copyData.expiryDate;
            this.quantityConceptModel = copyData.quantityConceptModel;
            this.formConceptModel = copyData.formConceptModel;
            this.quantityConcept = copyData.quantityConcept;
            this.formConcept = copyData.formConcept;
            this.quantity = copyData.quantity;
            this.lotNumber = copyData.lotNumber;
        }
    },  // ManufacturedMaterial 
    // OpenIZ.Core.Model.Entities.Material, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Entity
     * @summary             Represents a material             
     * @property {number} quantity            The base quantity of the object in the units. This differs from quantity on the relationship            which is a /per ...             
     * @property {uuid} formConcept            Gets or sets the form concept's key            
     * @property {uuid} quantityConcept            Gets or sets the quantity concept ref            
     * @property {OpenIZModel.Concept} formConceptModel [Delay loaded from formConcept],             Gets or sets the concept which dictates the form of the material (solid, liquid, capsule, injection, etc.)            
     * @property {OpenIZModel.Concept} quantityConceptModel [Delay loaded from quantityConcept],             Gets or sets the concept which dictates the unit of measure for a single instance of this entity            
     * @property {date} expiryDate            Gets or sets the expiry date of the material            
     * @property {bool} isAdministrative            True if the material is simply administrative            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Material} copyData Copy constructor (if present)
     */
    Material: function (copyData) {
        this.$type = 'Material';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.isAdministrative = copyData.isAdministrative;
            this.expiryDate = copyData.expiryDate;
            this.quantityConceptModel = copyData.quantityConceptModel;
            this.formConceptModel = copyData.formConceptModel;
            this.quantityConcept = copyData.quantityConcept;
            this.formConcept = copyData.formConcept;
            this.quantity = copyData.quantity;
        }
    },  // Material 
    // OpenIZ.Core.Model.Entities.Organization, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Entity
     * @summary             Organization entity            
     * @property {uuid} industryConcept            Gets or sets the industry concept key            
     * @property {OpenIZModel.Concept} industryConceptModel [Delay loaded from industryConcept],             Gets or sets the industry in which the organization operates            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Organization} copyData Copy constructor (if present)
     */
    Organization: function (copyData) {
        this.$type = 'Organization';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.industryConceptModel = copyData.industryConceptModel;
            this.industryConcept = copyData.industryConcept;
        }
    },  // Organization 
    // OpenIZ.Core.Model.Entities.Person, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Entity
     * @summary             Represents an entity which is a person            
     * @property {date} dateOfBirth            Gets or sets the person's date of birth            
     * @property {DatePrecision} dateOfBirthPrecision            Gets or sets the precision ofthe date of birth            
     * @property {OpenIZModel.PersonLanguageCommunication} language            Gets the person's languages of communication            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Person} copyData Copy constructor (if present)
     */
    Person: function (copyData) {
        this.$type = 'Person';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.classConcept = copyData.classConcept;
            this.template = copyData.template;
            this.language = copyData.language;
            this.dateOfBirthPrecision = copyData.dateOfBirthPrecision;
            this.dateOfBirth = copyData.dateOfBirth;
        }
    },  // Person 
    // OpenIZ.Core.Model.Entities.PersonLanguageCommunication, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a single preferred communication method for the entity            
     * @property {string} languageCode            Gets or sets the language code            
     * @property {bool} isPreferred            Gets or set the user's preference indicator            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.PersonLanguageCommunication} copyData Copy constructor (if present)
     */
    PersonLanguageCommunication: function (copyData) {
        this.$type = 'PersonLanguageCommunication';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.isPreferred = copyData.isPreferred;
            this.languageCode = copyData.languageCode;
        }
    },  // PersonLanguageCommunication 
    // OpenIZ.Core.Model.Entities.Place, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Entity
     * @summary             An entity which is a place where healthcare services are delivered            
     * @property {uuid} classConcept            Gets or sets the class concept key            (see: {@link OpenIZModel.EntityClassKeys} for values)
     * @property {bool} isMobile            True if location is mobile            
     * @property {Double} lat            Gets or sets the latitude            
     * @property {Double} lng            Gets or sets the longitude            
     * @property {OpenIZModel.PlaceService} service            Gets the services            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {uuid} determinerConcept            Determiner concept            (see: {@link OpenIZModel.DeterminerKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} creationAct            Creation act reference            
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} determinerConceptModel [Delay loaded from determinerConcept],             Determiner concept            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Act} creationActModel [Delay loaded from creationAct],             Creation act reference            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this entity            
     * @property {OpenIZModel.EntityIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated entities for this entity            
     * @property {OpenIZModel.EntityRelationship} relationship.Access 
     * @property {OpenIZModel.EntityRelationship} relationship.ActiveMoiety 
     * @property {OpenIZModel.EntityRelationship} relationship.AdministerableMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedChild 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.AdoptedSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Affiliate 
     * @property {OpenIZModel.EntityRelationship} relationship.Agent 
     * @property {OpenIZModel.EntityRelationship} relationship.Aliquot 
     * @property {OpenIZModel.EntityRelationship} relationship.Assigned 
     * @property {OpenIZModel.EntityRelationship} relationship.AssignedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Aunt 
     * @property {OpenIZModel.EntityRelationship} relationship.Birthplace 
     * @property {OpenIZModel.EntityRelationship} relationship.Brother 
     * @property {OpenIZModel.EntityRelationship} relationship.Brotherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Caregiver 
     * @property {OpenIZModel.EntityRelationship} relationship.CaseSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.Child 
     * @property {OpenIZModel.EntityRelationship} relationship.ChildInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Citizen 
     * @property {OpenIZModel.EntityRelationship} relationship.Claimant 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchInvestigator 
     * @property {OpenIZModel.EntityRelationship} relationship.ClinicalResearchSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CommissioningParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Contact 
     * @property {OpenIZModel.EntityRelationship} relationship.Cousin 
     * @property {OpenIZModel.EntityRelationship} relationship.CoverageSponsor 
     * @property {OpenIZModel.EntityRelationship} relationship.CoveredParty 
     * @property {OpenIZModel.EntityRelationship} relationship.Daughter 
     * @property {OpenIZModel.EntityRelationship} relationship.DaughterInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.DedicatedServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Dependent 
     * @property {OpenIZModel.EntityRelationship} relationship.DistributedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.DomesticPartner 
     * @property {OpenIZModel.EntityRelationship} relationship.EmergencyContact 
     * @property {OpenIZModel.EntityRelationship} relationship.Employee 
     * @property {OpenIZModel.EntityRelationship} relationship.ExposedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.FamilyMember 
     * @property {OpenIZModel.EntityRelationship} relationship.Father 
     * @property {OpenIZModel.EntityRelationship} relationship.Fatherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterChild 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.FosterSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandchild 
     * @property {OpenIZModel.EntityRelationship} relationship.Granddaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Grandson 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.GreatGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.Guarantor 
     * @property {OpenIZModel.EntityRelationship} relationship.GUARD 
     * @property {OpenIZModel.EntityRelationship} relationship.Guardian 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Halfsister 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthcareProvider 
     * @property {OpenIZModel.EntityRelationship} relationship.HealthChart 
     * @property {OpenIZModel.EntityRelationship} relationship.HeldEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Husband 
     * @property {OpenIZModel.EntityRelationship} relationship.IdentifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.IncidentalServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Individual 
     * @property {OpenIZModel.EntityRelationship} relationship.InvestigationSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.InvoicePayor 
     * @property {OpenIZModel.EntityRelationship} relationship.Isolate 
     * @property {OpenIZModel.EntityRelationship} relationship.LicensedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.MaintainedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.ManufacturedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.MaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.MilitaryPerson 
     * @property {OpenIZModel.EntityRelationship} relationship.Mother 
     * @property {OpenIZModel.EntityRelationship} relationship.Motherinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.NamedInsured 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalBrother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalChild 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalDaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFather 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalFatherOfFetus 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalMother 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalParent 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSister 
     * @property {OpenIZModel.EntityRelationship} relationship.NaturalSon 
     * @property {OpenIZModel.EntityRelationship} relationship.Nephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NextOfKin 
     * @property {OpenIZModel.EntityRelationship} relationship.Niece 
     * @property {OpenIZModel.EntityRelationship} relationship.NieceNephew 
     * @property {OpenIZModel.EntityRelationship} relationship.NotaryPublic 
     * @property {OpenIZModel.EntityRelationship} relationship.OwnedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.Parent 
     * @property {OpenIZModel.EntityRelationship} relationship.ParentInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Part 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalAunt 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalCousin 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandfather 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandmother 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalGreatgrandparent 
     * @property {OpenIZModel.EntityRelationship} relationship.PaternalUncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Patient 
     * @property {OpenIZModel.EntityRelationship} relationship.Payee 
     * @property {OpenIZModel.EntityRelationship} relationship.PersonalRelationship 
     * @property {OpenIZModel.EntityRelationship} relationship.PlaceOfDeath 
     * @property {OpenIZModel.EntityRelationship} relationship.PolicyHolder 
     * @property {OpenIZModel.EntityRelationship} relationship.ProgramEligible 
     * @property {OpenIZModel.EntityRelationship} relationship.QualifiedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.RegulatedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.ResearchSubject 
     * @property {OpenIZModel.EntityRelationship} relationship.RetailedMaterial 
     * @property {OpenIZModel.EntityRelationship} relationship.Roomate 
     * @property {OpenIZModel.EntityRelationship} relationship.ServiceDeliveryLocation 
     * @property {OpenIZModel.EntityRelationship} relationship.Sibling 
     * @property {OpenIZModel.EntityRelationship} relationship.SiblingInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.SignificantOther 
     * @property {OpenIZModel.EntityRelationship} relationship.SigningAuthorityOrOfficer 
     * @property {OpenIZModel.EntityRelationship} relationship.Sister 
     * @property {OpenIZModel.EntityRelationship} relationship.Sisterinlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Son 
     * @property {OpenIZModel.EntityRelationship} relationship.SonInlaw 
     * @property {OpenIZModel.EntityRelationship} relationship.Specimen 
     * @property {OpenIZModel.EntityRelationship} relationship.Spouse 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepbrother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepChild 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepdaughter 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepfather 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepmother 
     * @property {OpenIZModel.EntityRelationship} relationship.StepParent 
     * @property {OpenIZModel.EntityRelationship} relationship.StepSibling 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepsister 
     * @property {OpenIZModel.EntityRelationship} relationship.Stepson 
     * @property {OpenIZModel.EntityRelationship} relationship.Student 
     * @property {OpenIZModel.EntityRelationship} relationship.Subscriber 
     * @property {OpenIZModel.EntityRelationship} relationship.TerritoryOfAuthority 
     * @property {OpenIZModel.EntityRelationship} relationship.TherapeuticAgent 
     * @property {OpenIZModel.EntityRelationship} relationship.Uncle 
     * @property {OpenIZModel.EntityRelationship} relationship.Underwriter 
     * @property {OpenIZModel.EntityRelationship} relationship.UsedEntity 
     * @property {OpenIZModel.EntityRelationship} relationship.WarrantedProduct 
     * @property {OpenIZModel.EntityRelationship} relationship.Wife 
     * @property {OpenIZModel.EntityRelationship} relationship.$other Unclassified
     * @property {object} telecom            Gets a list of all telecommunications addresses associated with the entity            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.AnsweringService             answering service            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.EmergencyContact             Emergency contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.MobileContact             Mobile phone contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Pager             pager            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.Public             public (800 number example) contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.TemporaryAddress             temporary contact            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.WorkPlace             For use in the workplace            
     * @property {OpenIZModel.EntityTelecomAddress} telecom.$other Unclassified
     * @property {object} extension            Gets a list of all extensions associated with the entity            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {object} name            Gets a list of all names associated with the entity            
     * @property {OpenIZModel.EntityName} name.Alphabetic             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
     * @property {OpenIZModel.EntityName} name.Anonymous             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
     * @property {OpenIZModel.EntityName} name.Artist             The name represents an artist name or stage name            
     * @property {OpenIZModel.EntityName} name.Assigned             The name represents an assigned name (given or bestowed by an authority)            
     * @property {OpenIZModel.EntityName} name.Ideographic             THe name represents an ideographic representation of the name            
     * @property {OpenIZModel.EntityName} name.Indigenous             The name is an indigenous name or tribal name for the patient            
     * @property {OpenIZModel.EntityName} name.Legal             The name represents the current legal name of an object (such as a corporate name)            
     * @property {OpenIZModel.EntityName} name.License             The name represents a name as displayed on a license or known to a license authority            
     * @property {OpenIZModel.EntityName} name.MaidenName             THe name is a maiden name (name of a patient before marriage)            
     * @property {OpenIZModel.EntityName} name.OfficialRecord             The name as it appears on an official record            
     * @property {OpenIZModel.EntityName} name.Phonetic             The name represents a phonetic representation of a name such as a SOUNDEX code            
     * @property {OpenIZModel.EntityName} name.Pseudonym             The name is a pseudonym for the object or an synonym name            
     * @property {OpenIZModel.EntityName} name.Religious             The name is to be used for religious purposes (such as baptismal name)            
     * @property {OpenIZModel.EntityName} name.Search             The name is to be used in the performing of matches only            
     * @property {OpenIZModel.EntityName} name.Soundex             The name represents the computed soundex code of a name            
     * @property {OpenIZModel.EntityName} name.Syllabic 
     * @property {OpenIZModel.EntityName} name.$other Unclassified
     * @property {object} address            Gets a list of all addresses associated with the entity            
     * @property {OpenIZModel.EntityAddress} address.Alphabetic 
     * @property {OpenIZModel.EntityAddress} address.BadAddress 
     * @property {OpenIZModel.EntityAddress} address.Direct 
     * @property {OpenIZModel.EntityAddress} address.HomeAddress 
     * @property {OpenIZModel.EntityAddress} address.Ideographic 
     * @property {OpenIZModel.EntityAddress} address.Phonetic 
     * @property {OpenIZModel.EntityAddress} address.PhysicalVisit 
     * @property {OpenIZModel.EntityAddress} address.PostalAddress 
     * @property {OpenIZModel.EntityAddress} address.PrimaryHome 
     * @property {OpenIZModel.EntityAddress} address.Public 
     * @property {OpenIZModel.EntityAddress} address.Soundex 
     * @property {OpenIZModel.EntityAddress} address.Syllabic 
     * @property {OpenIZModel.EntityAddress} address.TemporaryAddress 
     * @property {OpenIZModel.EntityAddress} address.VacationHome 
     * @property {OpenIZModel.EntityAddress} address.WorkPlace 
     * @property {OpenIZModel.EntityAddress} address.$other Unclassified
     * @property {string} note            Gets a list of all notes associated with the entity            
     * @property {object} tag            Gets a list of all tags associated with the entity            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Gets the acts in which this entity participates            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Entity} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Place} copyData Copy constructor (if present)
     */
    Place: function (copyData) {
        this.$type = 'Place';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.address = copyData.address;
            this.name = copyData.name;
            this.extension = copyData.extension;
            this.telecom = copyData.telecom;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.creationActModel = copyData.creationActModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.determinerConceptModel = copyData.determinerConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.creationAct = copyData.creationAct;
            this.statusConcept = copyData.statusConcept;
            this.determinerConcept = copyData.determinerConcept;
            this.template = copyData.template;
            this.service = copyData.service;
            this.lng = copyData.lng;
            this.lat = copyData.lat;
            this.isMobile = copyData.isMobile;
            this.classConcept = copyData.classConcept;
        }
    },  // Place 
    // OpenIZ.Core.Model.Entities.PlaceService, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a service for a place            
     * @property {Object} serviceSchedule            The schedule that the service is offered            
     * @property {uuid} serviceConcept            Gets or sets the service concept key            
     * @property {OpenIZModel.Concept} serviceConceptModel [Delay loaded from serviceConcept],             Gets or sets the service concept            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.PlaceService} copyData Copy constructor (if present)
     */
    PlaceService: function (copyData) {
        this.$type = 'PlaceService';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.serviceConceptModel = copyData.serviceConceptModel;
            this.serviceConcept = copyData.serviceConcept;
            this.serviceSchedule = copyData.serviceSchedule;
        }
    },  // PlaceService 
    // OpenIZ.Core.Model.DataTypes.AssigningAuthority, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents a model class which is an assigning authority            
     * @property {string} name            Gets or sets the name of the assigning authority            
     * @property {string} domainName            Gets or sets the domain name of the assigning authority            
     * @property {string} description            Gets or sets the description of the assigning authority            
     * @property {string} oid            Gets or sets the oid of the assigning authority            
     * @property {string} url            The URL of the assigning authority            
     * @property {uuid} scope            Represents scopes to which the authority is bound            
     * @property {uuid} assigningDevice            Assigning device identifier            
     * @property {object} scopeModel [Delay loaded from scope],             Gets concept sets to which this concept is a member            
     * @property {OpenIZModel.Concept} scope.classifier  where classifier is from {@link OpenIZModel.Concept} mnemonic
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.AssigningAuthority} copyData Copy constructor (if present)
     */
    AssigningAuthority: function (copyData) {
        this.$type = 'AssigningAuthority';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.scopeModel = copyData.scopeModel;
            this.assigningDevice = copyData.assigningDevice;
            this.scope = copyData.scope;
            this.url = copyData.url;
            this.oid = copyData.oid;
            this.description = copyData.description;
            this.domainName = copyData.domainName;
            this.name = copyData.name;
        }
    },  // AssigningAuthority 
    // OpenIZ.Core.Model.DataTypes.CodeSystem, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Represents a code system which is a collection of reference terms            
     * @property {string} name            Gets or sets the name of the code system            
     * @property {string} oid            Gets or sets the Oid of the code system            
     * @property {string} authority            Gets or sets the authority of the code system            
     * @property {string} obsoletionReason            Gets or sets the obsoletion reason of the code system            
     * @property {string} url            Gets or sets the URL of the code system            
     * @property {string} version            Gets or sets the version text of the code system            
     * @property {string} description            Gets or sets the human description            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.CodeSystem} copyData Copy constructor (if present)
     */
    CodeSystem: function (copyData) {
        this.$type = 'CodeSystem';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.description = copyData.description;
            this.version = copyData.version;
            this.url = copyData.url;
            this.obsoletionReason = copyData.obsoletionReason;
            this.authority = copyData.authority;
            this.oid = copyData.oid;
            this.name = copyData.name;
        }
    },  // CodeSystem 
    // OpenIZ.Core.Model.DataTypes.Concept, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedEntityData
     * @summary             A class representing a generic concept used in the OpenIZ datamodel            
     * @property {bool} isReadonly            Gets or sets an indicator which dictates whether the concept is a system concept            
     * @property {string} mnemonic            Gets or sets the unchanging mnemonic for the concept            
     * @property {uuid} statusConcept            Gets or sets the status concept key            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Gets or sets the status of the concept            
     * @property {object} relationship            Gets a list of concept relationships            
     * @property {OpenIZModel.ConceptRelationship} relationship.InverseOf             Inverse of            
     * @property {OpenIZModel.ConceptRelationship} relationship.MemberOf             Member of            
     * @property {OpenIZModel.ConceptRelationship} relationship.NegationOf             Negation of            
     * @property {OpenIZModel.ConceptRelationship} relationship.SameAs             Same as relationship            
     * @property {OpenIZModel.ConceptRelationship} relationship.$other Unclassified
     * @property {uuid} conceptClass            Gets or sets the class identifier            (see: {@link OpenIZModel.ConceptClassKeys} for values)
     * @property {OpenIZModel.ConceptClass} conceptClassModel [Delay loaded from conceptClass],             Gets or sets the classification of the concept            
     * @property {object} referenceTerm            Gets a list of concept reference terms            
     * @property {OpenIZModel.ConceptReferenceTerm} referenceTerm.classifier  where classifier is from {@link OpenIZModel.ConceptReferenceTerm} term
     * @property {object} name            Gets the concept names            
     * @property {string} name.classifier  where classifier is from {@link OpenIZModel.ConceptName} language
     * @property {uuid} conceptSet            Concept sets as identifiers for XML purposes only            
     * @property {object} conceptSetModel [Delay loaded from conceptSet],             Gets concept sets to which this concept is a member            
     * @property {OpenIZModel.ConceptSet} conceptSet.classifier  where classifier is from {@link OpenIZModel.ConceptSet} mnemonic
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Concept} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Concept} copyData Copy constructor (if present)
     */
    Concept: function (copyData) {
        this.$type = 'Concept';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.conceptSetModel = copyData.conceptSetModel;
            this.conceptSet = copyData.conceptSet;
            this.name = copyData.name;
            this.referenceTerm = copyData.referenceTerm;
            this.conceptClassModel = copyData.conceptClassModel;
            this.conceptClass = copyData.conceptClass;
            this.relationship = copyData.relationship;
            this.statusConceptModel = copyData.statusConceptModel;
            this.statusConcept = copyData.statusConcept;
            this.mnemonic = copyData.mnemonic;
            this.isReadonly = copyData.isReadonly;
        }
    },  // Concept 
    // OpenIZ.Core.Model.DataTypes.ConceptClass, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Identifies a classification for a concept            
     * @property {string} name            Gets or sets the name of the concept class            
     * @property {string} mnemonic            Gets or sets the mnemonic            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ConceptClass} copyData Copy constructor (if present)
     */
    ConceptClass: function (copyData) {
        this.$type = 'ConceptClass';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.mnemonic = copyData.mnemonic;
            this.name = copyData.name;
        }
    },  // ConceptClass 
    // OpenIZ.Core.Model.DataTypes.ConceptName, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a name (human name) that a concept may have            
     * @property {string} language            Gets or sets the language code of the object            
     * @property {string} value            Gets or sets the name of the reference term            
     * @property {string} phoneticCode            Gets or sets the phonetic code of the reference term            
     * @property {uuid} phoneticAlgorithm            Gets or sets the identifier of the phonetic code            (see: {@link OpenIZModel.PhoneticAlgorithmKeys} for values)
     * @property {OpenIZModel.PhoneticAlgorithm} phoneticAlgorithmModel [Delay loaded from phoneticAlgorithm],             Gets or sets the phonetic algorithm            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Concept} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ConceptName} copyData Copy constructor (if present)
     */
    ConceptName: function (copyData) {
        this.$type = 'ConceptName';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.phoneticAlgorithmModel = copyData.phoneticAlgorithmModel;
            this.phoneticAlgorithm = copyData.phoneticAlgorithm;
            this.phoneticCode = copyData.phoneticCode;
            this.value = copyData.value;
            this.language = copyData.language;
        }
    },  // ConceptName 
    // OpenIZ.Core.Model.DataTypes.ConceptReferenceTerm, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a reference term relationship between a concept and reference term            
     * @property {uuid} term            Gets or sets the reference term identifier            
     * @property {OpenIZModel.ReferenceTerm} termModel [Delay loaded from term],             Gets or set the reference term            
     * @property {uuid} relationshipType            Gets or sets the relationship type identifier            
     * @property {OpenIZModel.ConceptRelationshipType} relationshipTypeModel [Delay loaded from relationshipType],             Gets or sets the relationship type            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Concept} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ConceptReferenceTerm} copyData Copy constructor (if present)
     */
    ConceptReferenceTerm: function (copyData) {
        this.$type = 'ConceptReferenceTerm';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.relationshipTypeModel = copyData.relationshipTypeModel;
            this.relationshipType = copyData.relationshipType;
            this.termModel = copyData.termModel;
            this.term = copyData.term;
        }
    },  // ConceptReferenceTerm 
    // OpenIZ.Core.Model.DataTypes.ConceptRelationship, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a relationship between two concepts            
     * @property {uuid} targetConcept            Gets or sets the target concept identifier            
     * @property {OpenIZModel.Concept} targetConceptModel [Delay loaded from targetConcept],             Gets or sets the target concept            
     * @property {uuid} relationshipType            Relationship type            (see: {@link OpenIZModel.ConceptRelationshipTypeKeys} for values)
     * @property {OpenIZModel.ConceptRelationshipType} relationshipTypeModel [Delay loaded from relationshipType],             Gets or sets the relationship type            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Concept} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ConceptRelationship} copyData Copy constructor (if present)
     */
    ConceptRelationship: function (copyData) {
        this.$type = 'ConceptRelationship';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.relationshipTypeModel = copyData.relationshipTypeModel;
            this.relationshipType = copyData.relationshipType;
            this.targetConceptModel = copyData.targetConceptModel;
            this.targetConcept = copyData.targetConcept;
        }
    },  // ConceptRelationship 
    // OpenIZ.Core.Model.DataTypes.ConceptRelationshipType, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Concept relationship type            
     * @property {string} name            Gets or sets the name of the relationship            
     * @property {string} mnemonic            The invariant of the relationship type            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ConceptRelationshipType} copyData Copy constructor (if present)
     */
    ConceptRelationshipType: function (copyData) {
        this.$type = 'ConceptRelationshipType';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.mnemonic = copyData.mnemonic;
            this.name = copyData.name;
        }
    },  // ConceptRelationshipType 
    // OpenIZ.Core.Model.DataTypes.ConceptSet, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents set of concepts            
     * @property {string} name            Gets or sets the name of the concept set            
     * @property {string} mnemonic            Gets or sets the mnemonic for the concept set (used for convenient lookup)            
     * @property {string} oid            Gets or sets the oid of the concept set            
     * @property {string} url            Gets or sets the url of the concept set            
     * @property {uuid} concept            Concepts as identifiers for XML purposes only            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ConceptSet} copyData Copy constructor (if present)
     */
    ConceptSet: function (copyData) {
        this.$type = 'ConceptSet';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.concept = copyData.concept;
            this.url = copyData.url;
            this.oid = copyData.oid;
            this.mnemonic = copyData.mnemonic;
            this.name = copyData.name;
        }
    },  // ConceptSet 
    // OpenIZ.Core.Model.DataTypes.Extension`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents a base entity extension            
     * @property {bytea} value            Gets or sets the value of the extension            
     * @property {OpenIZModel.ExtensionType} extensionType            Gets or sets the extension type            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.VersionedEntityData} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.Extension} copyData Copy constructor (if present)
     */
    Extension: function (copyData) {
        this.$type = 'Extension';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.extensionType = copyData.extensionType;
            this.value = copyData.value;
        }
    },  // Extension 
    // OpenIZ.Core.Model.DataTypes.EntityExtension, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Extension
     * @summary             Extension bound to entity            
     * @property {bytea} value
     * @property {OpenIZModel.ExtensionType} extensionType
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityExtension} copyData Copy constructor (if present)
     */
    EntityExtension: function (copyData) {
        this.$type = 'EntityExtension';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.extensionType = copyData.extensionType;
            this.value = copyData.value;
        }
    },  // EntityExtension 
    // OpenIZ.Core.Model.DataTypes.ActExtension, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Extension
     * @summary             Act extension            
     * @property {bytea} value
     * @property {OpenIZModel.ExtensionType} extensionType
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActExtension} copyData Copy constructor (if present)
     */
    ActExtension: function (copyData) {
        this.$type = 'ActExtension';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.extensionType = copyData.extensionType;
            this.value = copyData.value;
        }
    },  // ActExtension 
    // OpenIZ.Core.Model.DataTypes.ExtensionType, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Instructions on how an extensionshould be handled            
     * @property {string} handlerClass            Gets or sets the description            
     * @property {string} name            Gets or sets the description            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ExtensionType} copyData Copy constructor (if present)
     */
    ExtensionType: function (copyData) {
        this.$type = 'ExtensionType';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.name = copyData.name;
            this.handlerClass = copyData.handlerClass;
        }
    },  // ExtensionType 
    // OpenIZ.Core.Model.DataTypes.EntityIdentifier, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.IdentifierBase
     * @summary             Entity identifiers            
     * @property {string} value
     * @property {OpenIZModel.IdentifierType} type
     * @property {OpenIZModel.AssigningAuthority} authority
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityIdentifier} copyData Copy constructor (if present)
     */
    EntityIdentifier: function (copyData) {
        this.$type = 'EntityIdentifier';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.authority = copyData.authority;
            this.type = copyData.type;
            this.value = copyData.value;
        }
    },  // EntityIdentifier 
    // OpenIZ.Core.Model.DataTypes.ActIdentifier, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.IdentifierBase
     * @summary             Act identifier            
     * @property {string} value
     * @property {OpenIZModel.IdentifierType} type
     * @property {OpenIZModel.AssigningAuthority} authority
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActIdentifier} copyData Copy constructor (if present)
     */
    ActIdentifier: function (copyData) {
        this.$type = 'ActIdentifier';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.authority = copyData.authority;
            this.type = copyData.type;
            this.value = copyData.value;
        }
    },  // ActIdentifier 
    // OpenIZ.Core.Model.DataTypes.IdentifierBase`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents an external assigned identifier            
     * @property {string} value            Gets or sets the value of the identifier            
     * @property {OpenIZModel.IdentifierType} type            Gets or sets the identifier type            
     * @property {OpenIZModel.AssigningAuthority} authority            Gets or sets the assigning authority             
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.VersionedEntityData} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.IdentifierBase} copyData Copy constructor (if present)
     */
    IdentifierBase: function (copyData) {
        this.$type = 'IdentifierBase';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.authority = copyData.authority;
            this.type = copyData.type;
            this.value = copyData.value;
        }
    },  // IdentifierBase 
    // OpenIZ.Core.Model.DataTypes.IdentifierType, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents a basic information class which classifies the use of an identifier            
     * @property {uuid} scopeConcept            Gets or sets the id of the scope concept            
     * @property {uuid} typeConcept            Gets or sets the concept which identifies the type            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept            
     * @property {OpenIZModel.Concept} scopeConceptModel [Delay loaded from scopeConcept],             Gets the scope of the identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.IdentifierType} copyData Copy constructor (if present)
     */
    IdentifierType: function (copyData) {
        this.$type = 'IdentifierType';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.scopeConceptModel = copyData.scopeConceptModel;
            this.typeConceptModel = copyData.typeConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.scopeConcept = copyData.scopeConcept;
        }
    },  // IdentifierType 
    // OpenIZ.Core.Model.DataTypes.Note`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Generic note class            
     * @property {string} text            Gets or sets the note text            
     * @property {uuid} author            Gets or sets the author key            
     * @property {OpenIZModel.Entity} authorModel [Delay loaded from author],             Gets or sets the author entity            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.VersionedEntityData} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.Note} copyData Copy constructor (if present)
     */
    Note: function (copyData) {
        this.$type = 'Note';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.authorModel = copyData.authorModel;
            this.author = copyData.author;
            this.text = copyData.text;
        }
    },  // Note 
    // OpenIZ.Core.Model.DataTypes.EntityNote, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Note
     * @summary             Represents a note attached to an entity            
     * @property {string} text
     * @property {uuid} author
     * @property {OpenIZModel.Entity} authorModel [Delay loaded from author], 
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityNote} copyData Copy constructor (if present)
     */
    EntityNote: function (copyData) {
        this.$type = 'EntityNote';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.authorModel = copyData.authorModel;
            this.author = copyData.author;
            this.text = copyData.text;
        }
    },  // EntityNote 
    // OpenIZ.Core.Model.DataTypes.ActNote, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Note
     * @summary             Represents a note attached to an entity            
     * @property {string} text
     * @property {uuid} author
     * @property {OpenIZModel.Entity} authorModel [Delay loaded from author], 
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActNote} copyData Copy constructor (if present)
     */
    ActNote: function (copyData) {
        this.$type = 'ActNote';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.authorModel = copyData.authorModel;
            this.author = copyData.author;
            this.text = copyData.text;
        }
    },  // ActNote 
    // OpenIZ.Core.Model.DataTypes.PhoneticAlgorithm, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Represents a phonetic algorithm record in the model            
     * @property {string} name            Gets the name of the phonetic algorithm            
     * @property {string} handler            Gets the handler (or generator) for the phonetic algorithm            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.PhoneticAlgorithm} copyData Copy constructor (if present)
     */
    PhoneticAlgorithm: function (copyData) {
        this.$type = 'PhoneticAlgorithm';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.handler = copyData.handler;
            this.name = copyData.name;
        }
    },  // PhoneticAlgorithm 
    // OpenIZ.Core.Model.DataTypes.ReferenceTerm, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Represents a basic reference term            
     * @property {string} mnemonic            Gets or sets the mnemonic for the reference term            
     * @property {OpenIZModel.CodeSystem} codeSystemModel [Delay loaded from codeSystem],             Gets or sets the code system             
     * @property {uuid} codeSystem            Gets or sets the code system identifier            (see: {@link OpenIZModel.CodeSystemKeys} for values)
     * @property {object} name            Gets display names associated with the reference term            
     * @property {string} name.classifier  where classifier is from {@link OpenIZModel.ReferenceTermName} language
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ReferenceTerm} copyData Copy constructor (if present)
     */
    ReferenceTerm: function (copyData) {
        this.$type = 'ReferenceTerm';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.name = copyData.name;
            this.codeSystem = copyData.codeSystem;
            this.codeSystemModel = copyData.codeSystemModel;
            this.mnemonic = copyData.mnemonic;
        }
    },  // ReferenceTerm 
    // OpenIZ.Core.Model.DataTypes.ReferenceTermName, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Display name of a code system or reference term            
     * @property {string} language            Gets or sets the language code of the object            
     * @property {string} value            Gets or sets the name of the reference term            
     * @property {string} phoneticCode            Gets or sets the phonetic code of the reference term            
     * @property {uuid} phoneticAlgorithm            Gets or sets the identifier of the phonetic code            (see: {@link OpenIZModel.PhoneticAlgorithmKeys} for values)
     * @property {OpenIZModel.PhoneticAlgorithm} phoneticAlgorithmModel [Delay loaded from phoneticAlgorithm],             Gets or sets the phonetic algorithm            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ReferenceTermName} copyData Copy constructor (if present)
     */
    ReferenceTermName: function (copyData) {
        this.$type = 'ReferenceTermName';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.phoneticAlgorithmModel = copyData.phoneticAlgorithmModel;
            this.phoneticAlgorithm = copyData.phoneticAlgorithm;
            this.phoneticCode = copyData.phoneticCode;
            this.value = copyData.value;
            this.language = copyData.language;
        }
    },  // ReferenceTermName 
    // OpenIZ.Core.Model.DataTypes.Tag`1, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents the base class for tags            
     * @property {string} key            Gets or sets the key of the tag            
     * @property {string} value            Gets or sets the value of the tag            
     * @property {uuid} source            Gets or sets the source entity's key (where the relationship is FROM)            
     * @property {OpenIZModel.IdentifiedData} sourceModel [Delay loaded from source],             The entity that this relationship targets            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.Tag} copyData Copy constructor (if present)
     */
    Tag: function (copyData) {
        this.$type = 'Tag';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.value = copyData.value;
            this.key = copyData.key;
        }
    },  // Tag 
    // OpenIZ.Core.Model.DataTypes.EntityTag, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Tag
     * @summary             Represents a tag associated with an entity            
     * @property {string} key
     * @property {string} value
     * @property {uuid} source
     * @property {OpenIZModel.Entity} sourceModel [Delay loaded from source], 
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.EntityTag} copyData Copy constructor (if present)
     */
    EntityTag: function (copyData) {
        this.$type = 'EntityTag';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.value = copyData.value;
            this.key = copyData.key;
        }
    },  // EntityTag 
    // OpenIZ.Core.Model.DataTypes.ActTag, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Tag
     * @summary             Represents a tag on an act            
     * @property {string} key
     * @property {string} value
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActTag} copyData Copy constructor (if present)
     */
    ActTag: function (copyData) {
        this.$type = 'ActTag';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.value = copyData.value;
            this.key = copyData.key;
        }
    },  // ActTag 
    // OpenIZ.Core.Model.DataTypes.TemplateDefinition, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.NonVersionedEntityData
     * @summary             Represents a template definition            
     * @property {string} mnemonic            Gets or sets the mnemonic            
     * @property {string} name            Gets or set the name             
     * @property {string} oid            Gets or sets the oid of the concept set            
     * @property {string} description            Gets or sets the description            
     * @property {string} updatedTime            Gets or sets the creation time in XML format            
     * @property {date} modifiedOn            Gets the time this item was modified            
     * @property {uuid} updatedBy            Gets or sets the created by identifier            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.TemplateDefinition} copyData Copy constructor (if present)
     */
    TemplateDefinition: function (copyData) {
        this.$type = 'TemplateDefinition';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.updatedBy = copyData.updatedBy;
            this.modifiedOn = copyData.modifiedOn;
            this.updatedTime = copyData.updatedTime;
            this.description = copyData.description;
            this.oid = copyData.oid;
            this.name = copyData.name;
            this.mnemonic = copyData.mnemonic;
        }
    },  // TemplateDefinition 
    // OpenIZ.Core.Model.Collection.Bundle, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.IdentifiedData
     * @summary             Represents a collection of model items             
     * @property {date} modifiedOn            Gets the time the bundle was modified            
     * @property {OpenIZModel.IdentifiedData} item            Gets or sets items in the bundle            
     * @property {uuid} entry            Entry into the bundle            
     * @property {number} offset            Gets or sets the count in this bundle            
     * @property {number} count            Gets or sets the count in this bundle            
     * @property {number} totalResults            Gets or sets the total results            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.Bundle} copyData Copy constructor (if present)
     */
    Bundle: function (copyData) {
        this.$type = 'Bundle';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.totalResults = copyData.totalResults;
            this.count = copyData.count;
            this.offset = copyData.offset;
            this.entry = copyData.entry;
            this.item = copyData.item;
            this.modifiedOn = copyData.modifiedOn;
        }
    },  // Bundle 
    // OpenIZ.Core.Model.Acts.Act, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedEntityData
     * @summary             Represents the base class for an act            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Act} copyData Copy constructor (if present)
     */
    Act: function (copyData) {
        this.$type = 'Act';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
        }
    },  // Act 
    // OpenIZ.Core.Model.Acts.ActParticipation, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Associates an entity which participates in an act            
     * @property {uuid} player            Gets or sets the target entity reference            
     * @property {uuid} participationRole            Gets or sets the participation role key            (see: {@link OpenIZModel.ActParticipationKey} for values)
     * @property {OpenIZModel.Entity} playerModel [Delay loaded from player],             Gets or sets the entity which participated in the act            
     * @property {OpenIZModel.Concept} participationRoleModel [Delay loaded from participationRole],             Gets or sets the role that the entity played in participating in the act            
     * @property {uuid} act            The entity that this relationship targets            
     * @property {OpenIZModel.Act} actModel [Delay loaded from act],             The entity that this relationship targets            
     * @property {number} quantity            Gets or sets the quantity of player in the act            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActParticipation} copyData Copy constructor (if present)
     */
    ActParticipation: function (copyData) {
        this.$type = 'ActParticipation';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.quantity = copyData.quantity;
            this.actModel = copyData.actModel;
            this.act = copyData.act;
            this.participationRoleModel = copyData.participationRoleModel;
            this.playerModel = copyData.playerModel;
            this.participationRole = copyData.participationRole;
            this.player = copyData.player;
        }
    },  // ActParticipation 
    // OpenIZ.Core.Model.Acts.ActProtocol, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Represents information related to the clinical protocol to which an act is a member of            
     * @property {uuid} protocol            Gets or sets the protocol  to which this act belongs            
     * @property {OpenIZModel.Protocol} protocolModel [Delay loaded from protocol],             Gets or sets the protocol data related to the protocol            
     * @property {string} state            Represents any state data related to the act / protocol link            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActProtocol} copyData Copy constructor (if present)
     */
    ActProtocol: function (copyData) {
        this.$type = 'ActProtocol';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.state = copyData.state;
            this.protocolModel = copyData.protocolModel;
            this.protocol = copyData.protocol;
        }
    },  // ActProtocol 
    // OpenIZ.Core.Model.Acts.ActRelationship, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.VersionedAssociation
     * @summary             Act relationships            
     * @property {uuid} target            The target of the association            
     * @property {OpenIZModel.Act} targetModel [Delay loaded from target],             Target act reference            
     * @property {uuid} relationshipType            Association type key            (see: {@link OpenIZModel.ActRelationshipTypeKeys} for values)
     * @property {OpenIZModel.Concept} relationshipTypeModel [Delay loaded from relationshipType],             Gets or sets the association type            
     * @property {number} effectiveVersionSequence
     * @property {number} obsoleteVersionSequence
     * @property {date} modifiedOn
     * @property {uuid} source
     * @property {OpenIZModel.Act} sourceModel [Delay loaded from source], 
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.ActRelationship} copyData Copy constructor (if present)
     */
    ActRelationship: function (copyData) {
        this.$type = 'ActRelationship';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.sourceModel = copyData.sourceModel;
            this.source = copyData.source;
            this.modifiedOn = copyData.modifiedOn;
            this.obsoleteVersionSequence = copyData.obsoleteVersionSequence;
            this.effectiveVersionSequence = copyData.effectiveVersionSequence;
            this.relationshipTypeModel = copyData.relationshipTypeModel;
            this.relationshipType = copyData.relationshipType;
            this.targetModel = copyData.targetModel;
            this.target = copyData.target;
        }
    },  // ActRelationship 
    // OpenIZ.Core.Model.Acts.ControlAct, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Act
     * @summary             Represents an act which indicates why data was created/changed            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.ControlAct} copyData Copy constructor (if present)
     */
    ControlAct: function (copyData) {
        this.$type = 'ControlAct';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
        }
    },  // ControlAct 
    // OpenIZ.Core.Model.Acts.Observation, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @abstract
     * @extends OpenIZModel.Act
     * @summary             Represents a class which is an observation            
     * @property {uuid} interpretationConcept            Gets or sets the interpretation concept            
     * @property {OpenIZModel.Concept} interpretationConceptModel [Delay loaded from interpretationConcept],             Gets or sets the concept which indicates the interpretation of the observtion            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.Observation} copyData Copy constructor (if present)
     */
    Observation: function (copyData) {
        this.$type = 'Observation';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
            this.interpretationConceptModel = copyData.interpretationConceptModel;
            this.interpretationConcept = copyData.interpretationConcept;
        }
    },  // Observation 
    // OpenIZ.Core.Model.Acts.QuantityObservation, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Observation
     * @summary             Represents an observation that contains a quantity            
     * @property {number} value            Gets or sets the observed quantity            
     * @property {uuid} unitOfMeasure            Gets or sets the key of the uom concept            
     * @property {OpenIZModel.Concept} unitOfMeasureModel [Delay loaded from unitOfMeasure],             Gets or sets the unit of measure            
     * @property {uuid} interpretationConcept            Gets or sets the interpretation concept            
     * @property {OpenIZModel.Concept} interpretationConceptModel [Delay loaded from interpretationConcept],             Gets or sets the concept which indicates the interpretation of the observtion            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.QuantityObservation} copyData Copy constructor (if present)
     */
    QuantityObservation: function (copyData) {
        this.$type = 'QuantityObservation';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
            this.interpretationConceptModel = copyData.interpretationConceptModel;
            this.interpretationConcept = copyData.interpretationConcept;
            this.unitOfMeasureModel = copyData.unitOfMeasureModel;
            this.unitOfMeasure = copyData.unitOfMeasure;
            this.value = copyData.value;
        }
    },  // QuantityObservation 
    // OpenIZ.Core.Model.Acts.TextObservation, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Observation
     * @summary             Represents an observation with a text value            
     * @property {string} value            Gets or sets the textual value            
     * @property {uuid} interpretationConcept            Gets or sets the interpretation concept            
     * @property {OpenIZModel.Concept} interpretationConceptModel [Delay loaded from interpretationConcept],             Gets or sets the concept which indicates the interpretation of the observtion            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.TextObservation} copyData Copy constructor (if present)
     */
    TextObservation: function (copyData) {
        this.$type = 'TextObservation';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
            this.interpretationConceptModel = copyData.interpretationConceptModel;
            this.interpretationConcept = copyData.interpretationConcept;
            this.value = copyData.value;
        }
    },  // TextObservation 
    // OpenIZ.Core.Model.Acts.CodedObservation, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Observation
     * @summary             Represents an observation with a concept value            
     * @property {uuid} value            Gets or sets the key of the uom concept            
     * @property {OpenIZModel.Concept} valueModel [Delay loaded from value],             Gets or sets the coded value of the observation            
     * @property {uuid} interpretationConcept            Gets or sets the interpretation concept            
     * @property {OpenIZModel.Concept} interpretationConceptModel [Delay loaded from interpretationConcept],             Gets or sets the concept which indicates the interpretation of the observtion            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.CodedObservation} copyData Copy constructor (if present)
     */
    CodedObservation: function (copyData) {
        this.$type = 'CodedObservation';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
            this.interpretationConceptModel = copyData.interpretationConceptModel;
            this.interpretationConcept = copyData.interpretationConcept;
            this.valueModel = copyData.valueModel;
            this.value = copyData.value;
        }
    },  // CodedObservation 
    // OpenIZ.Core.Model.Acts.PatientEncounter, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Act
     * @summary             Represents an encounter a patient has with the health system            
     * @property {uuid} dischargeDisposition            Gets or sets the key of discharge disposition            
     * @property {OpenIZModel.Concept} dischargeDispositionModel [Delay loaded from dischargeDisposition],             Gets or sets the discharge disposition (how the patient left the encounter            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.PatientEncounter} copyData Copy constructor (if present)
     */
    PatientEncounter: function (copyData) {
        this.$type = 'PatientEncounter';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
            this.dischargeDispositionModel = copyData.dischargeDispositionModel;
            this.dischargeDisposition = copyData.dischargeDisposition;
        }
    },  // PatientEncounter 
    // OpenIZ.Core.Model.Acts.Protocol, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.BaseEntityData
     * @summary             Represents the model of a protocol            
     * @property {string} name            Gets or sets the name of the protocol            
     * @property {string} handlerClass            Gets or sets the handler class AQN            
     * @property {bytea} definition            Contains instructions which the handler class can understand            
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @property {string} etag            Gets a tag which changes whenever the object is updated            
     * @param {OpenIZModel.Protocol} copyData Copy constructor (if present)
     */
    Protocol: function (copyData) {
        this.$type = 'Protocol';
        if (copyData) {
            this.etag = copyData.etag;
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.definition = copyData.definition;
            this.handlerClass = copyData.handlerClass;
            this.name = copyData.name;
        }
    },  // Protocol 
    // OpenIZ.Core.Model.Acts.SubstanceAdministration, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @class
     * @memberof OpenIZModel
     * @public
     * @extends OpenIZModel.Act
     * @summary             Represents an act whereby a substance is administered to the patient            
     * @property {uuid} route            Gets or sets the key for route            
     * @property {uuid} doseUnit            Gets or sets the key for dosing unit            
     * @property {OpenIZModel.Concept} routeModel [Delay loaded from route],             Gets or sets a concept which indicates the route of administration (eg: Oral, Injection, etc.)            
     * @property {OpenIZModel.Concept} doseUnitModel [Delay loaded from doseUnit],             Gets or sets a concept which indicates the unit of measure for the dose (eg: 5 mL, 10 mL, 1 drop, etc.)            
     * @property {number} doseQuantity            Gets or sets the amount of substance administered            
     * @property {number} doseSequence            The sequence of the dose (i.e. OPV 0 = 0 , OPV 1 = 1, etc.)            
     * @property {uuid} site            Gets or sets the site            
     * @property {OpenIZModel.Concept} siteModel [Delay loaded from site],             Gets or sets a concept which indicates the site of administration            
     * @property {bool} isNegated            Gets or sets an indicator which identifies whether the object is negated            
     * @property {OpenIZModel.TemplateDefinition} template            Gets or sets the template identifier             
     * @property {string} actTime            Gets or sets the creation time in XML format            
     * @property {string} startTime            Gets or sets the creation time in XML format            
     * @property {string} stopTime            Gets or sets the creation time in XML format            
     * @property {uuid} classConcept            Class concept            (see: {@link OpenIZModel.ActClassKeys} for values)
     * @property {uuid} moodConcept            Mood concept            (see: {@link OpenIZModel.ActMoodKeys} for values)
     * @property {uuid} reasonConcept            Reason concept            (see: {@link OpenIZModel.ActReasonKeys} for values)
     * @property {uuid} statusConcept            Status concept id            (see: {@link OpenIZModel.StatusKeys} for values)
     * @property {uuid} typeConcept            Type concept identifier            
     * @property {OpenIZModel.Concept} classConceptModel [Delay loaded from classConcept],             Class concept datal load property            
     * @property {OpenIZModel.Concept} moodConceptModel [Delay loaded from moodConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} reasonConceptModel [Delay loaded from reasonConcept],             Mood concept data load property            
     * @property {OpenIZModel.Concept} statusConceptModel [Delay loaded from statusConcept],             Status concept id            
     * @property {OpenIZModel.Concept} typeConceptModel [Delay loaded from typeConcept],             Type concept identifier            
     * @property {object} identifier            Gets the identifiers associated with this act            
     * @property {OpenIZModel.ActIdentifier} identifier.classifier  where classifier is from {@link OpenIZModel.IdentifierBase} 
     * @property {object} relationship            Gets a list of all associated acts for this act            
     * @property {OpenIZModel.ActRelationship} relationship.Appends             Indicates that the source act appends information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Arrival             Links the transortation act from another act            
     * @property {OpenIZModel.ActRelationship} relationship.Departure             Links a transporation act from another act indicating departure of the subject            
     * @property {OpenIZModel.ActRelationship} relationship.Documents             The source act documents the target act            
     * @property {OpenIZModel.ActRelationship} relationship.EpisodeLink             Links two instances of the same act over time (example: chronic conditions)            
     * @property {OpenIZModel.ActRelationship} relationship.Evaluates             Used to link a goal to an observation            
     * @property {OpenIZModel.ActRelationship} relationship.Fulfills             Indicates that the source act fulfills the target act            
     * @property {OpenIZModel.ActRelationship} relationship.HasAuthorization             Indicates that the target act authorizes the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasComponent             Indicates that the target act is a component of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasControlVariable             Relationship from an act to one or more control variables (for example: device settings, or environment)            
     * @property {OpenIZModel.ActRelationship} relationship.HasManifestation             The assertion that a new observation may be a manifestation of another            
     * @property {OpenIZModel.ActRelationship} relationship.HasPrecondition             Indicates that the target act is a pre-condition of the source act            
     * @property {OpenIZModel.ActRelationship} relationship.HasReason             Indicates a reasoning as to why the source act is occurring            
     * @property {OpenIZModel.ActRelationship} relationship.HasReferenceValues             Indicates that the source act contains reference values from the target            
     * @property {OpenIZModel.ActRelationship} relationship.HasSubject             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
     * @property {OpenIZModel.ActRelationship} relationship.HasSupport             Indicates an existing act is suggesting evidence for a new observation.            
     * @property {OpenIZModel.ActRelationship} relationship.IsCauseOf             Indicates that the source act is the cause of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsDerivedFrom             Indicates the source act is derived from information contained in the target act            
     * @property {OpenIZModel.ActRelationship} relationship.IsExcerptOf             Indicates that the source act is an excerpt of the target act            
     * @property {OpenIZModel.ActRelationship} relationship.RefersTo             Indicates that the source act refers to the target act            
     * @property {OpenIZModel.ActRelationship} relationship.Replaces             The source act replaces the target act            
     * @property {OpenIZModel.ActRelationship} relationship.StartsAfterStartOf             Indicates that the source act starts after the start of another act            
     * @property {OpenIZModel.ActRelationship} relationship.Transforms             Indicates that the source act transforms the target act            
     * @property {OpenIZModel.ActRelationship} relationship.$other Unclassified
     * @property {OpenIZModel.SecurityPolicyInstance} policy            Gets or sets the policy instances            
     * @property {object} extension            Gets a list of all extensions associated with the act            
     * @property {bytea} extension.classifier  where classifier is from {@link OpenIZModel.Extension} 
     * @property {string} note            Gets a list of all notes associated with the act            
     * @property {object} tag            Gets a list of all tags associated with the act            
     * @property {string} tag.classifier  where classifier is from {@link OpenIZModel.Tag} key
     * @property {object} participation            Participations            
     * @property {OpenIZModel.ActParticipation} participation.Admitter 
     * @property {OpenIZModel.ActParticipation} participation.Attender 
     * @property {OpenIZModel.ActParticipation} participation.Authenticator 
     * @property {OpenIZModel.ActParticipation} participation.Authororiginator 
     * @property {OpenIZModel.ActParticipation} participation.Baby 
     * @property {OpenIZModel.ActParticipation} participation.Beneficiary 
     * @property {OpenIZModel.ActParticipation} participation.CallbackContact 
     * @property {OpenIZModel.ActParticipation} participation.CausativeAgent 
     * @property {OpenIZModel.ActParticipation} participation.Consultant 
     * @property {OpenIZModel.ActParticipation} participation.Consumable 
     * @property {OpenIZModel.ActParticipation} participation.CoverageTarget 
     * @property {OpenIZModel.ActParticipation} participation.Custodian 
     * @property {OpenIZModel.ActParticipation} participation.DataEnterer 
     * @property {OpenIZModel.ActParticipation} participation.Destination 
     * @property {OpenIZModel.ActParticipation} participation.Device 
     * @property {OpenIZModel.ActParticipation} participation.DirectTarget 
     * @property {OpenIZModel.ActParticipation} participation.Discharger 
     * @property {OpenIZModel.ActParticipation} participation.Distributor 
     * @property {OpenIZModel.ActParticipation} participation.Donor 
     * @property {OpenIZModel.ActParticipation} participation.EntryLocation             The location where the act was entered            
     * @property {OpenIZModel.ActParticipation} participation.Escort 
     * @property {OpenIZModel.ActParticipation} participation.Exposure 
     * @property {OpenIZModel.ActParticipation} participation.ExposureAgent 
     * @property {OpenIZModel.ActParticipation} participation.ExposureSource 
     * @property {OpenIZModel.ActParticipation} participation.ExposureTarget 
     * @property {OpenIZModel.ActParticipation} participation.GuarantorParty 
     * @property {OpenIZModel.ActParticipation} participation.Holder 
     * @property {OpenIZModel.ActParticipation} participation.IndirectTarget             The entity not directly present in the act but which will be the focust of th act            
     * @property {OpenIZModel.ActParticipation} participation.Informant 
     * @property {OpenIZModel.ActParticipation} participation.InformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.LegalAuthenticator 
     * @property {OpenIZModel.ActParticipation} participation.Location             The location where the service was performed            
     * @property {OpenIZModel.ActParticipation} participation.NonreuseableDevice 
     * @property {OpenIZModel.ActParticipation} participation.Origin 
     * @property {OpenIZModel.ActParticipation} participation.Participation 
     * @property {OpenIZModel.ActParticipation} participation.Performer 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryInformationRecipient 
     * @property {OpenIZModel.ActParticipation} participation.PrimaryPerformer 
     * @property {OpenIZModel.ActParticipation} participation.Product 
     * @property {OpenIZModel.ActParticipation} participation.Receiver 
     * @property {OpenIZModel.ActParticipation} participation.RecordTarget 
     * @property {OpenIZModel.ActParticipation} participation.ReferredBy 
     * @property {OpenIZModel.ActParticipation} participation.ReferredTo 
     * @property {OpenIZModel.ActParticipation} participation.Referrer 
     * @property {OpenIZModel.ActParticipation} participation.Remote 
     * @property {OpenIZModel.ActParticipation} participation.ResponsibleParty 
     * @property {OpenIZModel.ActParticipation} participation.ReusableDevice 
     * @property {OpenIZModel.ActParticipation} participation.SecondaryPerformer             The secondary performing person (support clinician)            
     * @property {OpenIZModel.ActParticipation} participation.Specimen 
     * @property {OpenIZModel.ActParticipation} participation.Subject 
     * @property {OpenIZModel.ActParticipation} participation.Tracker 
     * @property {OpenIZModel.ActParticipation} participation.Transcriber             The person who transcribed data from the original act            
     * @property {OpenIZModel.ActParticipation} participation.UgentNotificationContact 
     * @property {OpenIZModel.ActParticipation} participation.Verifier 
     * @property {OpenIZModel.ActParticipation} participation.Via 
     * @property {OpenIZModel.ActParticipation} participation.Witness 
     * @property {OpenIZModel.ActParticipation} participation.$other Unclassified
     * @property {string} etag
     * @property {uuid} previousVersion
     * @property {OpenIZModel.Act} previousVersionModel [Delay loaded from previousVersion], 
     * @property {uuid} version
     * @property {number} sequence
     * @property {string} creationTime            Gets or sets the creation time in XML format            
     * @property {string} obsoletionTime            Gets or sets the creation time in XML format            
     * @property {OpenIZModel.SecurityUser} createdByModel [Delay loaded from createdBy],             Gets or sets the user that created this base data            
     * @property {date} modifiedOn            Get the modified on time            
     * @property {OpenIZModel.SecurityUser} obsoletedByModel [Delay loaded from obsoletedBy],             Gets or sets the user that obsoleted this base data            
     * @property {uuid} createdBy            Gets or sets the created by identifier            
     * @property {uuid} obsoletedBy            Gets or sets the obsoleted by identifier            
     * @property {uuid} id            The internal primary key value of the entity            
     * @property {string} $type            Gets the type            
     * @param {OpenIZModel.SubstanceAdministration} copyData Copy constructor (if present)
     */
    SubstanceAdministration: function (copyData) {
        this.$type = 'SubstanceAdministration';
        if (copyData) {
            this.id = copyData.id;
            this.obsoletedBy = copyData.obsoletedBy;
            this.createdBy = copyData.createdBy;
            this.obsoletedByModel = copyData.obsoletedByModel;
            this.modifiedOn = copyData.modifiedOn;
            this.createdByModel = copyData.createdByModel;
            this.obsoletionTime = copyData.obsoletionTime;
            this.creationTime = copyData.creationTime;
            this.sequence = copyData.sequence;
            this.version = copyData.version;
            this.previousVersionModel = copyData.previousVersionModel;
            this.previousVersion = copyData.previousVersion;
            this.etag = copyData.etag;
            this.participation = copyData.participation;
            this.tag = copyData.tag;
            this.note = copyData.note;
            this.extension = copyData.extension;
            this.policy = copyData.policy;
            this.relationship = copyData.relationship;
            this.identifier = copyData.identifier;
            this.typeConceptModel = copyData.typeConceptModel;
            this.statusConceptModel = copyData.statusConceptModel;
            this.reasonConceptModel = copyData.reasonConceptModel;
            this.moodConceptModel = copyData.moodConceptModel;
            this.classConceptModel = copyData.classConceptModel;
            this.typeConcept = copyData.typeConcept;
            this.statusConcept = copyData.statusConcept;
            this.reasonConcept = copyData.reasonConcept;
            this.moodConcept = copyData.moodConcept;
            this.classConcept = copyData.classConcept;
            this.stopTime = copyData.stopTime;
            this.startTime = copyData.startTime;
            this.actTime = copyData.actTime;
            this.template = copyData.template;
            this.isNegated = copyData.isNegated;
            this.siteModel = copyData.siteModel;
            this.site = copyData.site;
            this.doseSequence = copyData.doseSequence;
            this.doseQuantity = copyData.doseQuantity;
            this.doseUnitModel = copyData.doseUnitModel;
            this.routeModel = copyData.routeModel;
            this.doseUnit = copyData.doseUnit;
            this.route = copyData.route;
        }
    },  // SubstanceAdministration 
    // OpenIZ.Core.Model.Constants.UserClassKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Represents user classification keys            
     */
    UserClassKeys: {
        /** 
         *             Represents a user which is an application            
         */
        ApplictionUser: 'e9cd4dad-2759-4022-ab07-92fcfb236a98',
        /** 
         *             Represents a user which is a human            
         */
        HumanUser: '33932b42-6f4b-4659-8849-6aca54139d8e',
        /** 
         *             Represents a user which is a system user            
         */
        SystemUser: '9f71bb34-9691-440f-8249-9c831ea16d58',
    },  // UserClassKeys 
    // OpenIZ.Core.Model.Constants.EntityClassKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Entity class concept keys            
     */
    EntityClassKeys: {
        /** 
         *             Animal            
         */
        Animal: '61fcbf42-b5e0-4fb5-9392-108a5c6dbec7',
        /** 
         *             Chemical Substance            
         */
        ChemicalSubstance: '2e9fa332-9391-48c6-9fc8-920a750b25d3',
        /** 
         *             City or town            
         */
        CityOrTown: '79dd4f75-68e8-4722-a7f5-8bc2e08f5cd6',
        /** 
         *             Container            
         */
        Container: 'b76ff324-b174-40b7-a6ac-d1fdf8e23967',
        /** 
         *             Country or nation            
         */
        Country: '48b2ffb3-07db-47ba-ad73-fc8fb8502471',
        /** 
         *             County or parish            
         */
        CountyOrParish: 'd9489d56-ddac-4596-b5c6-8f41d73d8dc5',
        /** 
         *             Device            
         */
        Device: '1373ff04-a6ef-420a-b1d0-4a07465fe8e8',
        /** 
         *             Entity            
         */
        Entity: 'e29fcfad-ec1d-4c60-a055-039a494248ae',
        /** 
         *             Food            
         */
        Food: 'e5a09cc2-5ae5-40c2-8e32-687dba06715d',
        /** 
         *             Living Subject            
         */
        LivingSubject: '8ba5e5c9-693b-49d4-973c-d7010f3a23ee',
        /** 
         *             Manufactured material            
         */
        ManufacturedMaterial: 'fafec286-89d5-420b-9085-054aca9d1eef',
        /** 
         *             Material            
         */
        Material: 'd39073be-0f8f-440e-b8c8-7034cc138a95',
        /** 
         *             Non living subject            
         */
        NonLivingSubject: '9025e5c9-693b-49d4-973c-d7010f3a23ee',
        /** 
         *             Organization            
         */
        Organization: '7c08bd55-4d42-49cd-92f8-6388d6c4183f',
        /** 
         *             Patient            
         */
        Patient: 'bacd9c6f-3fa9-481e-9636-37457962804d',
        /** 
         *             Person            
         */
        Person: '9de2a846-ddf2-4ebc-902e-84508c5089ea',
        /** 
         *             Place            
         */
        Place: '21ab7873-8ef3-4d78-9c19-4582b3c40631',
        /** 
         *             Service delivery location            
         */
        Provider: '6b04fed8-c164-469c-910b-f824c2bda4f0',
        /** 
         *             Service delivery location            
         */
        ServiceDeliveryLocation: 'ff34dfa7-c6d3-4f8b-bc9f-14bcdc13ba6c',
        /** 
         *             State            
         */
        State: '8cf4b0b0-84e5-4122-85fe-6afa8240c218',
    },  // EntityClassKeys 
    // OpenIZ.Core.Model.Constants.DeterminerKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Determiner codes            
     */
    DeterminerKeys: {
        /** 
         *             Described            
         */
        Described: 'ad28a7ac-a66b-42c4-91b4-de40a2b11980',
        /** 
         *             QUALIFIEDKIND            
         */
        DescribedQualified: '604cf1b7-8891-49fb-b95f-3e4e875691bc',
        /** 
         *             instance            
         */
        Specific: 'f29f08de-78a7-4a5e-aeaf-7b545ba19a09',
    },  // DeterminerKeys 
    // OpenIZ.Core.Model.Constants.StatusKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Concept identifiers            
     */
    StatusKeys: {
        /** 
         *             Status - Active            
         */
        Active: 'c8064cbd-fa06-4530-b430-1a52f1530c27',
        /** 
         *             Completed status            
         */
        Completed: '93a48f6a-6808-4c70-83a2-d02178c2a883',
        /** 
         *             Status - New            
         */
        New: 'c34fcbf1-e0fe-4989-90fd-0dc49e1b9685',
        /** 
         *             Status - Nullified            
         */
        Nullfied: 'cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5',
        /** 
         *             Status - Obsolete            
         */
        Obsolete: 'bdef5f90-5497-4f26-956c-8f818cce2bd2',
    },  // StatusKeys 
    // OpenIZ.Core.Model.Constants.EntityRelationshipTypeKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Base entity relationship type keys            
     */
    EntityRelationshipTypeKeys: {
        /** 
         * 
         */
        Access: 'ddc1b705-c768-4c7a-8f69-76ad4b167b40',
        /** 
         * 
         */
        ActiveMoiety: '212b1b6b-b074-4a75-862d-e4e194252044',
        /** 
         * 
         */
        AdministerableMaterial: 'b52c7e95-88b8-4c4c-836a-934277afdb92',
        /** 
         * 
         */
        AdoptedChild: '8fa25b69-c9c2-4c40-84c1-0ea9641a12ec',
        /** 
         * 
         */
        AdoptedDaughter: '2b4b2ed8-f90c-4193-870a-f48bc39657c1',
        /** 
         * 
         */
        AdoptedSon: 'ce50ba92-cd21-43c4-8582-34e7fbb3170f',
        /** 
         * 
         */
        Affiliate: '8de7b5e7-c941-42bd-b735-52d750efc5e6',
        /** 
         * 
         */
        Agent: '867fd445-d490-4619-804e-75c04b8a0e57',
        /** 
         * 
         */
        Aliquot: 'cff670e4-965e-4288-b966-47a44479d2ad',
        /** 
         * 
         */
        Assigned: 'a87a6d21-2ca6-4aea-88f3-6135cceb58d1',
        /** 
         * 
         */
        AssignedEntity: '77b7a04b-c065-4faf-8ec0-2cdad4ae372b',
        /** 
         * 
         */
        Aunt: '0ff2ab03-6e0a-40d1-8947-04c4937b4cc4',
        /** 
         * 
         */
        Birthplace: 'f3ef7e48-d8b7-4030-b431-aff7e0e1cb76',
        /** 
         * 
         */
        Brother: '24380d53-ea22-4820-9f06-8671f774f133',
        /** 
         * 
         */
        Brotherinlaw: '0a4c87e2-16c3-4361-be3c-dd765ee4bc7d',
        /** 
         * 
         */
        Caregiver: '31b0dfcb-d7ba-452a-98b9-45ebccd30732',
        /** 
         * 
         */
        CaseSubject: 'd7ad48c0-889d-41e2-99e9-be5e6c5327b2',
        /** 
         * 
         */
        Child: '739457d0-835a-4a9c-811c-42b5e92ed1ca',
        /** 
         * 
         */
        ChildInlaw: '8bf23192-de75-48eb-abee-81a9a15332f8',
        /** 
         * 
         */
        Citizen: '35b13152-e43c-4bcb-8649-a9e83bee33a2',
        /** 
         * 
         */
        Claimant: '9d256279-f1ac-46b3-a974-dd13e2ad4f72',
        /** 
         * 
         */
        ClinicalResearchInvestigator: '43ad7bc0-2ed8-4b27-97e5-b3db00a07d17',
        /** 
         * 
         */
        ClinicalResearchSponsor: '66c96ae6-c5c4-4d66-9bd0-a00c56e831da',
        /** 
         * 
         */
        CommissioningParty: '33bd1401-dfdb-40e7-a914-0a695ad5186e',
        /** 
         * 
         */
        Contact: 'b1d2148d-bb35-4337-8fe6-021f5a3ac8a3',
        /** 
         * 
         */
        Cousin: '1c0f931c-9c49-4a52-8fbf-5217c52ea778',
        /** 
         * 
         */
        CoverageSponsor: '8ff9d9a5-a206-4566-82cd-67b770d7ce8a',
        /** 
         * 
         */
        CoveredParty: 'd4844672-c0d7-434c-8377-6dd0655b0532',
        /** 
         * 
         */
        Daughter: '8165b43f-8103-4ed3-bac6-4fc0df8c1a84',
        /** 
         * 
         */
        DaughterInlaw: '76fdf0e7-cfe0-47b4-9630-c645f254cdfd',
        /** 
         * 
         */
        DedicatedServiceDeliveryLocation: '455f1772-f580-47e8-86bd-b5ce25d351f9',
        /** 
         * 
         */
        Dependent: 'f28ed78f-85ab-47a1-ba08-b5051e62d6c3',
        /** 
         * 
         */
        DistributedMaterial: 'f5547ada-1eb9-40bb-b163-081567d869e7',
        /** 
         * 
         */
        DomesticPartner: '3db182e2-653b-4bfd-a300-32f23345d1c0',
        /** 
         * 
         */
        EmergencyContact: '25985f42-476a-4455-a977-4e97a554d710',
        /** 
         * 
         */
        Employee: 'b43c9513-1c1c-4ed0-92db-55a904c122e6',
        /** 
         * 
         */
        ExposedEntity: 'ab39087c-17d3-421a-a1e3-2de4e0ab9faf',
        /** 
         * 
         */
        FamilyMember: '38d66ec7-0cc8-4609-9675-b6ff91ede605',
        /** 
         * 
         */
        Father: '40d18ecc-8ff8-4e03-8e58-97a980f04060',
        /** 
         * 
         */
        Fatherinlaw: 'b401dd81-931c-4aad-8fd8-22a6ac2ea3dc',
        /** 
         * 
         */
        FosterChild: 'abfe2637-d338-4090-b3a5-3ec19a47be6a',
        /** 
         * 
         */
        FosterDaughter: 'e81d6773-97e3-4b2d-b6a3-a4624ba5c6a9',
        /** 
         * 
         */
        FosterSon: 'decd6250-7e8b-4b77-895d-31953cf1387a',
        /** 
         * 
         */
        Grandchild: 'c33adda2-a4ed-4092-8d9c-b8e3fbd5d90b',
        /** 
         * 
         */
        Granddaughter: '3cb1993f-3703-453f-87be-21b606db7631',
        /** 
         * 
         */
        Grandfather: '48c59444-fec0-43b8-aa2c-7aedb70733ad',
        /** 
         * 
         */
        Grandmother: 'b630ba2c-8a00-46d8-bf64-870d381d8917',
        /** 
         * 
         */
        Grandparent: 'fa646df9-7d64-4d1f-ae9a-6261fd5fd6ae',
        /** 
         * 
         */
        Grandson: 'f7a64463-bc75-44d4-a8ca-c9fbc2c87175',
        /** 
         * 
         */
        GreatGrandfather: 'bfe24b5d-9c32-4df3-ad7b-eaa19e7d4afb',
        /** 
         * 
         */
        GreatGrandmother: '02fbc345-1a25-4f78-aeea-a12584a1eec3',
        /** 
         * 
         */
        GreatGrandparent: '528feb11-ae81-426a-be1f-ce74c83009eb',
        /** 
         * 
         */
        Guarantor: 'f5b10c57-3ae1-41ea-8649-1cf8d9848ae1',
        /** 
         * 
         */
        GUARD: '845120de-e6f7-4cec-94aa-e6e943c91367',
        /** 
         * 
         */
        Guardian: '3b8e2334-4ccc-4f24-8aae-37341ea03d3e',
        /** 
         * 
         */
        Halfbrother: '25cae2f2-d1ec-4efe-a92f-d479785f7d8a',
        /** 
         * 
         */
        Halfsibling: '8452ecb9-d762-4c4a-96b2-81d130cb729b',
        /** 
         * 
         */
        Halfsister: 'ce42c680-a783-4cde-bcd1-e261d6fd68a0',
        /** 
         * 
         */
        HealthcareProvider: '6b04fed8-c164-469c-910b-f824c2bda4f0',
        /** 
         * 
         */
        HealthChart: '5b0f8c93-57c9-4dff-b59a-9564739ef445',
        /** 
         * 
         */
        HeldEntity: '9c02a621-8565-46b4-94ff-a2bd210989b1',
        /** 
         * 
         */
        Husband: '62aca44c-b57c-44fd-9703-fcdff97c04b6',
        /** 
         * 
         */
        IdentifiedEntity: 'c5c8b935-294f-4c90-9d81-cbf914bf5808',
        /** 
         * 
         */
        IncidentalServiceDeliveryLocation: '41baf7aa-5ffd-4421-831f-42d4ab3de38a',
        /** 
         * 
         */
        Individual: '47049b0f-f189-4e19-9aa8-7c38adb2491a',
        /** 
         * 
         */
        InvestigationSubject: '0c522bd1-dfa2-43cb-a98e-f6ff137968ae',
        /** 
         * 
         */
        InvoicePayor: '07c922d2-12c9-415a-95d4-9b3fed4959d6',
        /** 
         * 
         */
        Isolate: '020c28a0-7c52-42f4-a046-db9e329d5a42',
        /** 
         * 
         */
        LicensedEntity: 'b9fe057e-7f57-42eb-89d7-67c69646c0c4',
        /** 
         * 
         */
        MaintainedEntity: '77b6d8cd-05a0-4b1f-9e14-b895203bf40c',
        /** 
         * 
         */
        ManufacturedProduct: '6780df3b-afbd-44a3-8627-cbb3dc2f02f6',
        /** 
         * 
         */
        MaternalAunt: '96ea355d-0c68-481f-8b6f-1b00a101ab8f',
        /** 
         * 
         */
        MaternalCousin: 'd874cde5-7d76-4f1d-97e6-db7e82bac958',
        /** 
         * 
         */
        MaternalGrandfather: '360f6a77-fdb5-4fb6-b223-3cd1047fd08e',
        /** 
         * 
         */
        MaternalGrandmother: 'ea13832b-2e38-4bb6-b55d-ae749ccaba95',
        /** 
         * 
         */
        MaternalGrandparent: '66e0dbd1-9065-4af8-808d-89edd302f264',
        /** 
         * 
         */
        MaternalGreatgrandfather: 'abe6d0d1-4e37-4b7c-9acc-eedb2c36f9cd',
        /** 
         * 
         */
        MaternalGreatgrandmother: 'fe4f72e6-84f8-4276-ae64-2ef1f2ff406f',
        /** 
         * 
         */
        MaternalGreatgrandparent: '59bc87d3-1618-4f14-81d2-71072c1f37e9',
        /** 
         * 
         */
        MaternalUncle: '4e299c46-f06f-4efc-b3c0-b7b659a120f2',
        /** 
         * 
         */
        MilitaryPerson: '1bcfb08d-c6fa-41dd-98bf-06336a33a3b7',
        /** 
         * 
         */
        Mother: '29ff64e5-b564-411a-92c7-6818c02a9e48',
        /** 
         * 
         */
        Motherinlaw: 'f941988a-1c55-4408-ab57-e9ed35b2a24d',
        /** 
         * 
         */
        NamedInsured: '3d907f37-085c-4c26-b59b-62e40621dafd',
        /** 
         * 
         */
        NaturalBrother: 'daf11eb1-fcc2-4521-a1c0-daebaf0a923a',
        /** 
         * 
         */
        NaturalChild: '80097e75-a232-4a9f-878f-7e60ec70f921',
        /** 
         * 
         */
        NaturalDaughter: '6a181a3c-7241-4325-b011-630d3ca6dc4a',
        /** 
         * 
         */
        NaturalFather: '233d890b-04ef-4365-99ad-26cb4e1f75f3',
        /** 
         * 
         */
        NaturalFatherOfFetus: '8e88debc-d175-46f3-9b48-106f9c151cd2',
        /** 
         * 
         */
        NaturalMother: '059d689a-2392-4ffb-b6ae-682c9ded8da2',
        /** 
         * 
         */
        NaturalParent: 'e6851b39-a771-4a5e-8aa8-9ba140b3dca3',
        /** 
         * 
         */
        NaturalSibling: '0b89fb65-ca8e-4a4d-9d25-0bae3f4d7a59',
        /** 
         * 
         */
        NaturalSister: '8ea21d7d-6ee9-449b-a1dc-c4aa0ff7f5b9',
        /** 
         * 
         */
        NaturalSon: '9f17d4cf-a67f-4ac6-8c50-718af6e264ee',
        /** 
         * 
         */
        Nephew: '5c5af1d2-0e6d-458f-9574-3ad61c393a90',
        /** 
         * 
         */
        NextOfKin: '1ee4e74f-542d-4544-96f6-266a6247f274',
        /** 
         * 
         */
        Niece: '0a50962a-60b4-44d8-a7f6-1eb2aa5967cc',
        /** 
         * 
         */
        NieceNephew: 'a907e4d8-d823-478f-9c5a-6facae6b4b5b',
        /** 
         * 
         */
        NotaryPublic: 'f1ef6c46-05eb-4482-baeb-eaf0a8e5ffef',
        /** 
         * 
         */
        OwnedEntity: '117da15c-0864-4f00-a987-9b9854cba44e',
        /** 
         * 
         */
        Parent: 'bfcbb345-86db-43ba-b47e-e7411276ac7c',
        /** 
         * 
         */
        ParentInlaw: '5e2b0afe-724e-41cd-9be2-9030646f2529',
        /** 
         * 
         */
        Part: 'b2feb552-8eaf-45fe-a397-f789d6f4728a',
        /** 
         * 
         */
        PaternalAunt: '6a1e9e8b-d0c3-44f0-9906-a6458685e269',
        /** 
         * 
         */
        PaternalCousin: '60affe56-126d-43ee-9fde-5f117e41c7a8',
        /** 
         * 
         */
        PaternalGrandfather: '2fd5c939-c508-4250-8efb-13b772e56b7f',
        /** 
         * 
         */
        PaternalGrandmother: 'bfdb07db-9721-4ec3-94e1-4bd9f0d6985c',
        /** 
         * 
         */
        PaternalGrandparent: 'a3d362a4-4931-4bef-af18-ac59dd092981',
        /** 
         * 
         */
        PaternalGreatgrandfather: '0aeec758-c20f-43e4-9789-8c44629f5941',
        /** 
         * 
         */
        PaternalGreatgrandmother: '0fcba203-1238-4001-beb7-19a667506ade',
        /** 
         * 
         */
        PaternalGreatgrandparent: '08a98950-3391-4a66-a1c8-421c6fd82911',
        /** 
         * 
         */
        PaternalUncle: '853c85de-4817-4328-a121-6a3bdafbf82e',
        /** 
         * 
         */
        Patient: 'bacd9c6f-3fa9-481e-9636-37457962804d',
        /** 
         * 
         */
        Payee: '734551e1-2960-4a68-93a2-b277db072a43',
        /** 
         * 
         */
        PersonalRelationship: 'abfd3fe8-9526-48fb-b366-35baca9bd170',
        /** 
         * 
         */
        PlaceOfDeath: '9bbe0cfe-faab-4dc9-a28f-c001e3e95e6e',
        /** 
         * 
         */
        PolicyHolder: 'cec017ef-4e49-41af-8596-abad1a91c9d0',
        /** 
         * 
         */
        ProgramEligible: 'cbe2a00c-e1d5-44e9-aae3-d7d03e3c2efa',
        /** 
         * 
         */
        QualifiedEntity: '6521dd09-334b-4fbf-9c89-1ad5a804326c',
        /** 
         * 
         */
        RegulatedProduct: '20e98d17-e24d-4c64-b09e-521a177ccd05',
        /** 
         * 
         */
        ResearchSubject: 'ef597ffe-d965-4398-b55a-650530ebb997',
        /** 
         * 
         */
        RetailedMaterial: '703df8f4-b124-44c5-9506-1ab74ddfd91d',
        /** 
         * 
         */
        Roomate: 'bbfac1ed-5464-4100-93c3-8685b052a2cf',
        /** 
         * 
         */
        ServiceDeliveryLocation: 'ff34dfa7-c6d3-4f8b-bc9f-14bcdc13ba6c',
        /** 
         * 
         */
        Sibling: '685eb506-6b97-41c1-b201-b6b932a3f3aa',
        /** 
         * 
         */
        SiblingInlaw: 'fd892cf8-db4f-4e4e-a13b-4eb3bdde5be5',
        /** 
         * 
         */
        SignificantOther: '2eab5298-bc83-492c-9004-ed3499246afe',
        /** 
         * 
         */
        SigningAuthorityOrOfficer: '757f98df-14e0-446a-bd50-bb0affb34f09',
        /** 
         * 
         */
        Sister: 'cd1e8904-31dc-4374-902d-c91f1de23c46',
        /** 
         * 
         */
        Sisterinlaw: 'dcae9718-ab81-4737-b071-36cf1175804d',
        /** 
         * 
         */
        Son: 'f115c204-8485-4cf3-8815-3c6738465e30',
        /** 
         * 
         */
        SonInlaw: '34f7bc11-2288-471a-af38-553ae6b8410c',
        /** 
         * 
         */
        Specimen: 'bce17b21-05b2-4f02-bf7a-c6d3561aa948',
        /** 
         * 
         */
        Spouse: '89bdc57b-d85c-4e85-94e8-c17049540a0d',
        /** 
         * 
         */
        Stepbrother: '5951097b-1a13-4bce-bbf2-9abf52f98dc8',
        /** 
         * 
         */
        StepChild: '4cdef917-4fb0-4cdf-b44d-b73486c41845',
        /** 
         * 
         */
        Stepdaughter: 'f71e193a-0562-46e9-99dd-437d23663ec3',
        /** 
         * 
         */
        Stepfather: 'bb437e4d-7472-48c1-a6e7-576545a782fa',
        /** 
         * 
         */
        Stepmother: '5a0539cc-093b-448e-aec6-0d529ed0087f',
        /** 
         * 
         */
        StepParent: 'f172eee7-7f4b-4022-81d0-76393a1200ae',
        /** 
         * 
         */
        StepSibling: '7e6bc25d-5dea-4645-af3d-aa854b7b6f2f',
        /** 
         * 
         */
        Stepsister: 'cb73d085-026c-4bc7-a1de-356bfd636246',
        /** 
         * 
         */
        Stepson: 'cfa978f4-140c-430d-82f8-1e6f2d74f48d',
        /** 
         * 
         */
        Student: '0c157566-d1e9-4976-8542-473caa9ba2a4',
        /** 
         * 
         */
        Subscriber: 'f31a2a5b-ce13-47e1-a0fb-d704f31547db',
        /** 
         * 
         */
        TerritoryOfAuthority: 'c6b92576-1d62-4896-8799-6f931f8ab607',
        /** 
         * 
         */
        TherapeuticAgent: 'd6657fdb-4ef3-4131-af79-14e01a21faca',
        /** 
         * 
         */
        Uncle: 'cdd99260-107c-4a4e-acaf-d7c9c7e90fdd',
        /** 
         * 
         */
        Underwriter: 'a8fcd83f-808b-494b-8a1c-ec2c6dbc3dfa',
        /** 
         * 
         */
        UsedEntity: '08fff7d9-bac7-417b-b026-c9bee52f4a37',
        /** 
         * 
         */
        WarrantedProduct: '639b4b8f-afd3-4963-9e79-ef0d3928796a',
        /** 
         * 
         */
        Wife: 'a3ff423e-81d5-4571-8edf-03c295189a23',
    },  // EntityRelationshipTypeKeys 
    // OpenIZ.Core.Model.Constants.TelecomAddressUseKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Telecommunications address use keys            
     */
    TelecomAddressUseKeys: {
        /** 
         *             answering service            
         */
        AnsweringService: '1ecd7b17-b5ff-4cae-9c3b-c1258132d137',
        /** 
         *             Emergency contact            
         */
        EmergencyContact: '25985f42-476a-4455-a977-4e97a554d710',
        /** 
         *             Mobile phone contact            
         */
        MobileContact: 'e161f90e-5939-430e-861a-f8e885cc353d',
        /** 
         *             pager            
         */
        Pager: '788000b4-e37a-4055-a2aa-c650089ce3b1',
        /** 
         *             public (800 number example) contact            
         */
        Public: 'ec35ea7c-55d2-4619-a56b-f7a986412f7f',
        /** 
         *             temporary contact            
         */
        TemporaryAddress: 'cef6ea31-a097-4f59-8723-a38c727c6597',
        /** 
         *             For use in the workplace            
         */
        WorkPlace: 'eaa6f08e-bb8e-4457-9dc0-3a1555fadf5c',
    },  // TelecomAddressUseKeys 
    // OpenIZ.Core.Model.Constants.NameUseKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Name use keys            
     */
    NameUseKeys: {
        /** 
         *             The name used is an alphabetic representation of the name (ex: romaji in Japanese)            
         */
        Alphabetic: '71d1c07c-6ee6-4240-8a95-19f96583512e',
        /** 
         *             The name is an anonymous name for the object (not the real name but a name used for care delivery)            
         */
        Anonymous: '95e6843a-26ff-4046-b6f4-eb440d4b85f7',
        /** 
         *             The name represents an artist name or stage name            
         */
        Artist: '4a7bf199-f33b-42f9-8b99-32433ea67bd7',
        /** 
         *             The name represents an assigned name (given or bestowed by an authority)            
         */
        Assigned: 'a87a6d21-2ca6-4aea-88f3-6135cceb58d1',
        /** 
         *             THe name represents an ideographic representation of the name            
         */
        Ideographic: '09000479-4672-44f8-bb4a-72fb25f7356a',
        /** 
         *             The name is an indigenous name or tribal name for the patient            
         */
        Indigenous: 'a3fb2a05-5ebe-47ae-afd0-4c1b22336090',
        /** 
         *             The name represents the current legal name of an object (such as a corporate name)            
         */
        Legal: 'effe122d-8d30-491d-805d-addcb4466c35',
        /** 
         *             The name represents a name as displayed on a license or known to a license authority            
         */
        License: '48075d19-7b29-4ca5-9c73-0cbd31248446',
        /** 
         *             THe name is a maiden name (name of a patient before marriage)            
         */
        MaidenName: '0674c1c8-963a-4658-aff9-8cdcd308fa68',
        /** 
         *             The name as it appears on an official record            
         */
        OfficialRecord: '1ec9583a-b019-4baa-b856-b99caf368656',
        /** 
         *             The name represents a phonetic representation of a name such as a SOUNDEX code            
         */
        Phonetic: '2b085d38-3308-4664-9f89-48d8ef4daba7',
        /** 
         *             The name is a pseudonym for the object or an synonym name            
         */
        Pseudonym: 'c31564ef-ca8d-4528-85a8-88245fcef344',
        /** 
         *             The name is to be used for religious purposes (such as baptismal name)            
         */
        Religious: '15207687-5290-4672-a7df-2880a23dcbb5',
        /** 
         *             The name is to be used in the performing of matches only            
         */
        Search: '87964bff-e442-481d-9749-69b2a84a1fbe',
        /** 
         *             The name represents the computed soundex code of a name            
         */
        Soundex: 'e5794e3b-3025-436f-9417-5886feead55a',
        /** 
         * 
         */
        Syllabic: 'b4ca3bf0-a7fc-44f3-87d5-e126beda93ff',
    },  // NameUseKeys 
    // OpenIZ.Core.Model.Constants.AddressUseKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Address use keys            
     */
    AddressUseKeys: {
        /** 
         * 
         */
        Alphabetic: '71d1c07c-6ee6-4240-8a95-19f96583512e',
        /** 
         * 
         */
        BadAddress: 'f3132fc0-aadd-40b7-b875-961c40695389',
        /** 
         * 
         */
        Direct: 'd0db6edb-6cdc-4671-8bc2-00f1c808e188',
        /** 
         * 
         */
        HomeAddress: '493c3e9d-4f65-4e4d-9582-c9008f4f2eb4',
        /** 
         * 
         */
        Ideographic: '09000479-4672-44f8-bb4a-72fb25f7356a',
        /** 
         * 
         */
        Phonetic: '2b085d38-3308-4664-9f89-48d8ef4daba7',
        /** 
         * 
         */
        PhysicalVisit: '5724a9b6-24b6-43b7-8075-7a0d61fcb814',
        /** 
         * 
         */
        PostalAddress: '7246e98d-20c6-4ae6-85ad-4aa09649feb7',
        /** 
         * 
         */
        PrimaryHome: 'c4faafd8-fc90-4330-8b4b-e4e64c86b87b',
        /** 
         * 
         */
        Public: 'ec35ea7c-55d2-4619-a56b-f7a986412f7f',
        /** 
         * 
         */
        Soundex: 'e5794e3b-3025-436f-9417-5886feead55a',
        /** 
         * 
         */
        Syllabic: 'b4ca3bf0-a7fc-44f3-87d5-e126beda93ff',
        /** 
         * 
         */
        TemporaryAddress: 'cef6ea31-a097-4f59-8723-a38c727c6597',
        /** 
         * 
         */
        VacationHome: '5d69534c-4597-4d11-bb98-56a9918f5238',
        /** 
         * 
         */
        WorkPlace: 'eaa6f08e-bb8e-4457-9dc0-3a1555fadf5c',
    },  // AddressUseKeys 
    // OpenIZ.Core.Model.Constants.ActParticipationKey, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Represents the participation concepts which an entity can participate in an act            
     */
    ActParticipationKey: {
        /** 
         * 
         */
        Admitter: 'a0174216-6439-4351-9483-a241a48029b7',
        /** 
         * 
         */
        Attender: '6cbf29ad-ac51-48c9-885a-cfe3026ecf6e',
        /** 
         * 
         */
        Authenticator: '1b2dbf82-a503-4cf4-9ecb-a8e111b4674e',
        /** 
         * 
         */
        Authororiginator: 'f0cb3faf-435d-4704-9217-b884f757bc14',
        /** 
         * 
         */
        Baby: '479896b0-35d5-4842-8109-5fdbee14e8a4',
        /** 
         * 
         */
        Beneficiary: '28c744df-d889-4a44-bc1a-2e9e9d64af13',
        /** 
         * 
         */
        CallbackContact: '9c4c40ae-2c15-4581-a496-be1abfe4eb66',
        /** 
         * 
         */
        CausativeAgent: '7f81b83e-0d78-4685-8ba4-224eb315ce54',
        /** 
         * 
         */
        Consultant: '0a364ad7-f961-4d8a-93f0-1fd4176548b3',
        /** 
         * 
         */
        Consumable: 'a5cac7f7-e3b7-4dd8-872c-db0e7fcc2d84',
        /** 
         * 
         */
        CoverageTarget: '4b5471d4-e3fe-45f7-85a2-ae2b4f224757',
        /** 
         * 
         */
        Custodian: '649d6d69-139c-4006-ae45-aff4649d6079',
        /** 
         * 
         */
        DataEnterer: 'c50d66d2-e5da-4a34-b2b7-4cd4fe4ef2c4',
        /** 
         * 
         */
        Destination: '727b3624-ea62-46bb-a68b-b9e49e302eca',
        /** 
         * 
         */
        Device: '1373ff04-a6ef-420a-b1d0-4a07465fe8e8',
        /** 
         * 
         */
        DirectTarget: 'd9f63423-ba9b-48d9-ba38-c404b784b670',
        /** 
         * 
         */
        Discharger: 'a2594e6e-e8fe-4c68-82a5-d3a46dbec87d',
        /** 
         * 
         */
        Distributor: '693f08fa-625a-40d2-b928-6856099c0349',
        /** 
         * 
         */
        Donor: 'be1235ee-710a-4732-88fd-6e895de7c56d',
        /** 
         *             The location where the act was entered            
         */
        EntryLocation: 'ac05185b-5a80-47a8-b924-060deb6d0eb2',
        /** 
         * 
         */
        Escort: '727a61ed-2f35-4e09-8bb6-6d09e2ba8fec',
        /** 
         * 
         */
        Exposure: '5a6a6766-8e1d-4d36-ae50-9b7d82d8a182',
        /** 
         * 
         */
        ExposureAgent: 'ea60a5a9-e971-4f0d-bb5d-dc7a0c74a2c9',
        /** 
         * 
         */
        ExposureSource: 'cbb6297b-743c-453c-8476-ba4c10a1c965',
        /** 
         * 
         */
        ExposureTarget: 'ec401b5c-4c33-4229-9c72-428fc5db37ff',
        /** 
         * 
         */
        GuarantorParty: '28fb791e-179e-461a-b16c-cac13a04bd0a',
        /** 
         * 
         */
        Holder: '2452b691-f122-4121-b9df-76d990b43f35',
        /** 
         *             The entity not directly present in the act but which will be the focust of th act            
         */
        IndirectTarget: '3a9f0c2f-e322-4639-a8e7-0df67cac761b',
        /** 
         * 
         */
        Informant: '39604248-7812-4b60-bc54-8cc1fffb1de6',
        /** 
         * 
         */
        InformationRecipient: '9790b291-b8a3-4c85-a240-c2c38885ad5d',
        /** 
         * 
         */
        LegalAuthenticator: '0716a333-cd46-439d-bfd6-bf788f3885fa',
        /** 
         *             The location where the service was performed            
         */
        Location: '61848557-d78d-40e5-954f-0b9c97307a04',
        /** 
         * 
         */
        NonreuseableDevice: '6792db6c-fd5c-4ab8-96f5-ace5665bdcb9',
        /** 
         * 
         */
        Origin: '5d175f21-1963-4589-a400-b5ef5f64842c',
        /** 
         * 
         */
        Participation: 'c704a23d-86ef-4e11-9050-f8aa10919ff2',
        /** 
         * 
         */
        Performer: 'fa5e70a4-a46e-4665-8a20-94d4d7b86fc8',
        /** 
         * 
         */
        PrimaryInformationRecipient: '02bb7934-76b5-4cc5-bd42-58570f15eb4d',
        /** 
         * 
         */
        PrimaryPerformer: '79f6136c-1465-45e8-917e-e7832bc8e3b2',
        /** 
         * 
         */
        Product: '99e77288-cb09-4050-a8cf-385513f32f0a',
        /** 
         * 
         */
        Receiver: '53c694b8-27d8-43dd-95a4-bb318431d17c',
        /** 
         * 
         */
        RecordTarget: '3f92dbee-a65e-434f-98ce-841feeb02e3f',
        /** 
         * 
         */
        ReferredBy: '6da3a6ca-2ab0-4d32-9588-e094f277f06d',
        /** 
         * 
         */
        ReferredTo: '353f9255-765e-4336-8007-1d61ab09aad6',
        /** 
         * 
         */
        Referrer: '5e8e0f8b-bc23-4847-82ab-49b8dd79981e',
        /** 
         * 
         */
        Remote: '3c1225de-194e-49ce-a41a-0f9376b04c11',
        /** 
         * 
         */
        ResponsibleParty: '64474c12-b978-4bb6-a584-46dadec2d952',
        /** 
         * 
         */
        ReusableDevice: '76990d3d-3f27-4b39-836b-ba87eeba3328',
        /** 
         *             The secondary performing person (support clinician)            
         */
        SecondaryPerformer: '4ff91e06-2e39-44e3-9fbe-0d828fe318fe',
        /** 
         * 
         */
        Specimen: 'bce17b21-05b2-4f02-bf7a-c6d3561aa948',
        /** 
         * 
         */
        Subject: '03067700-ce37-405f-8ed3-e4965ba2f601',
        /** 
         * 
         */
        Tracker: 'c3be013a-20c5-4c20-840c-d9dbb15d040e',
        /** 
         *             The person who transcribed data from the original act            
         */
        Transcriber: 'de3f7527-e3c9-45ef-8574-00ca4495f767',
        /** 
         * 
         */
        UgentNotificationContact: '01b87999-85a7-4f5c-9b7e-892f1195cfe3',
        /** 
         * 
         */
        Verifier: 'f9dc5787-dd4d-42c6-a082-ac7d11956fda',
        /** 
         * 
         */
        Via: '5b0fac74-5ac6-44e6-99a4-6813c0e2f4a9',
        /** 
         * 
         */
        Witness: '0b82357f-5ae0-4543-ab8e-a33e9b315bab',
    },  // ActParticipationKey 
    // OpenIZ.Core.Model.Constants.AddressComponentKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Represents address component types            
     */
    AddressComponentKeys: {
        /** 
         * 
         */
        AdditionalLocator: 'd2312b8e-bdfb-4012-9397-f14336f8d206',
        /** 
         * 
         */
        AddressLine: '4f342d28-8850-4daf-8bca-0b44a255f7ed',
        /** 
         * 
         */
        BuildingNumber: 'f3c86e99-8afc-4947-9dd8-86412a34b1c7',
        /** 
         * 
         */
        BuildingNumberNumeric: '3258b4d6-e4dc-43e6-9f29-fd8423a2ae12',
        /** 
         * 
         */
        BuildingNumberSuffix: 'b2dbf05c-584d-46db-8cbf-026a6ea30d81',
        /** 
         * 
         */
        CareOf: '8c89a89e-08c5-4374-87f9-adb3c9261df6',
        /** 
         * 
         */
        CensusTract: '4b3a347c-28fa-4560-a1a9-3795c9db3d3b',
        /** 
         * 
         */
        City: '05b85461-578b-4988-bca6-e3e94be9db76',
        /** 
         * 
         */
        Country: '48b2ffb3-07db-47ba-ad73-fc8fb8502471',
        /** 
         * 
         */
        County: 'd9489d56-ddac-4596-b5c6-8f41d73d8dc5',
        /** 
         * 
         */
        Delimiter: '4c6b9519-a493-44a9-80e6-32d85109b04b',
        /** 
         * 
         */
        DeliveryAddressLine: 'f6139b21-3a36-4a3f-b498-0c661f06df59',
        /** 
         * 
         */
        DeliveryInstallationArea: 'ec9d5ab8-3be1-448f-9346-6a08253f9dea',
        /** 
         * 
         */
        DeliveryInstallationQualifier: '78fb6eed-6549-4f22-ab3e-f3696da050bc',
        /** 
         * 
         */
        DeliveryInstallationType: '684fb800-145c-47c5-98c5-e7aa53802b69',
        /** 
         * 
         */
        DeliveryMode: '12608636-910d-4bac-b849-7f999de20332',
        /** 
         * 
         */
        DeliveryModeIdentifier: '08bd6027-47eb-43de-8454-59b7a5d00a3e',
        /** 
         * 
         */
        Direction: '1f678716-ab8f-4856-9f76-d82fe3165c22',
        /** 
         * 
         */
        PostalCode: '78a47122-f9bf-450f-a93f-90a103c5f1e8',
        /** 
         * 
         */
        PostBox: '2047f216-f41e-4cfb-a024-05d4d3de52f5',
        /** 
         * 
         */
        Precinct: 'acafe0f2-e209-43bb-8633-3665fd7c90ba',
        /** 
         * 
         */
        State: '8cf4b0b0-84e5-4122-85fe-6afa8240c218',
        /** 
         * 
         */
        StreetAddressLine: 'f69dcfa8-df18-403b-9217-c59680bad99e',
        /** 
         * 
         */
        StreetName: '0432d671-abc3-4249-872c-afd5274c2298',
        /** 
         * 
         */
        StreetNameBase: '37c7dbc8-4ac6-464a-af65-d65fcba60238',
        /** 
         * 
         */
        StreetType: '121953f6-0465-41de-8f7a-b0e08204c771',
        /** 
         * 
         */
        UnitDesignator: 'b18e71cb-203c-4640-83f0-cc86debbbbc0',
        /** 
         * 
         */
        UnitIdentifier: '908c09df-81fe-45ac-9233-0881a278a401',
    },  // AddressComponentKeys 
    // OpenIZ.Core.Model.Constants.NameComponentKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Name component type keys            
     */
    NameComponentKeys: {
        /** 
         *             The name component represents a delimeter in a name such as hyphen or space            
         */
        Delimiter: '4c6b9519-a493-44a9-80e6-32d85109b04b',
        /** 
         *             The name component represents the surname            
         */
        Family: '29b98455-ed61-49f8-a161-2d73363e1df0',
        /** 
         *             The name component represents the given name            
         */
        Given: '2f64bde2-a696-4b0a-9690-b21ebd7e5092',
        /** 
         *             The name component represents the prefix such as Von or Van            
         */
        Prefix: 'a787187b-6be4-401e-8836-97fc000c5d16',
        /** 
         *             The name component represents a suffix such as III or Esq.            
         */
        Suffix: '064523df-bb03-4932-9323-cdf0cc9590ba',
        /** 
         *             The name component represents a formal title like Mr, Dr, Capt.            
         */
        Title: '4386d92a-d81b-4033-b968-01e57e20d5e0',
    },  // NameComponentKeys 
    // OpenIZ.Core.Model.Constants.PhoneticAlgorithmKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Phonetic algorithm keys            
     */
    PhoneticAlgorithmKeys: {
        /** 
         * 
         */
        Metaphone: 'd79a4dc6-66a6-4602-8fcb-7dc09a895793',
        /** 
         * 
         */
        None: '402cd339-d0e4-46ce-8fc2-12a4b0e17226',
        /** 
         * 
         */
        Soundex: '3352a79a-d2e0-4e0c-9b48-6fd2a202c681',
    },  // PhoneticAlgorithmKeys 
    // OpenIZ.Core.Model.Constants.ConceptRelationshipTypeKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Reference type identifiers            
     */
    ConceptRelationshipTypeKeys: {
        /** 
         *             Inverse of            
         */
        InverseOf: 'ad27293d-433c-4b75-88d2-b5360cd95450',
        /** 
         *             Member of            
         */
        MemberOf: 'a159d45b-3c34-4e1b-9b75-9193a7528ced',
        /** 
         *             Negation of            
         */
        NegationOf: 'ae8b4f2f-009f-4e0d-b35e-5a89555c5947',
        /** 
         *             Same as relationship            
         */
        SameAs: '2c4dafc2-566a-41ae-9ebc-3097d7d22f4a',
    },  // ConceptRelationshipTypeKeys 
    // OpenIZ.Core.Model.Constants.ConceptClassKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Concept classification identifiers            
     */
    ConceptClassKeys: {
        /** 
         *             Class code identifier            
         */
        ClassCode: '17fd5254-8c25-4abb-b246-083fbe9afa15',
        /** 
         *             Diagnosis class code identifier            
         */
        Diagnosis: '92cdea39-b9a3-4a5b-bc88-a6646c74240d',
        /** 
         *             Finding class identifier            
         */
        Finding: 'e445e207-60a3-401a-9b81-a8ac2479f4a6',
        /** 
         *             Represents a form code            
         */
        Form: '17ee5254-8c25-4abb-b246-083fbe9afa15',
        /** 
         *             Material class identifier            
         */
        Material: 'dc9cbc32-b8ea-4144-bef1-dc618e28f4d7',
        /** 
         *             Mood class identifier            
         */
        Mood: 'bba99722-23ce-469a-8fa5-10deba853d35',
        /** 
         *             Other class identifier            
         */
        Other: '0d6b3439-c9be-4480-af39-eeb457c052d0',
        /** 
         *             Problem class identifier            
         */
        Problem: '4bd7f8e6-e4b8-4dbc-93a7-cf14fbaf9700',
        /** 
         *             Relationship class identifier            
         */
        Relationship: 'f51dfdcd-039b-4e1f-90be-3cf56aef8da4',
        /** 
         *             Route class identifier            
         */
        Route: 'a8a900d3-a07e-4e02-b45f-580d09baf047',
        /** 
         *             Status class identifier            
         */
        Status: '54b93182-fc19-47a2-82c6-089fd70a4f45',
        /** 
         *             Stock class identifier            
         */
        Stock: 'ffd8304a-43ec-4ebc-95fc-fb4a4f2338f0',
        /** 
         *             Unit of measure identifier            
         */
        UnitOfMeasure: '1ef69347-ef03-4ff7-b3c5-6334448845e6',
    },  // ConceptClassKeys 
    // OpenIZ.Core.Model.Constants.CodeSystemKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Code system identifiers            
     */
    CodeSystemKeys: {
        /** 
         *             Parse CVX            
         */
        CVX: 'eba4f94a-2cad-4bb3-aca7-f4e54eaac4bd',
        /** 
         *             ICD10            
         */
        ICD10: 'f7a5cbd8-5425-415e-8308-d14b94f56917',
        /** 
         *             ICD-10 CM            
         */
        ICD10CM: 'ed9742e5-fa5b-4644-9fb5-2f935ed08b1e',
        /** 
         *             ICD9            
         */
        ICD9: '51ea1e1b-edc0-455a-a72b-9076860e284d',
        /** 
         *             ISO-639-1            
         */
        ISO6391: 'eb04fe20-bbbc-4c70-9eef-045bc4f70982',
        /** 
         *             ISO639-2            
         */
        ISO6392: '089044ea-dd41-4258-a497-e6247dd364f6',
        /** 
         *             LOINC            
         */
        LOINC: '08c59397-706b-456a-aeb1-9e7d5a2adc94',
        /** 
         *             SNOMED-CT            
         */
        SNOMEDCT: 'b3030751-d4db-420b-b765-e837607820cd',
        /** 
         *             UCUM            
         */
        UCUM: '4853a702-fff3-4efb-8dd7-54aacca53664',
    },  // CodeSystemKeys 
    // OpenIZ.Core.Model.Constants.ActClassKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Represents a series of class keys for use on acts            
     */
    ActClassKeys: {
        /** 
         *             The act represents generic account management            
         */
        AccountManagement: 'ca44a469-81d7-4484-9189-ca1d55afecbc',
        /** 
         *             Generic act            
         */
        Act: 'd874424e-c692-4fd8-b94e-642e1cbf83e9',
        /** 
         *             The act represents a simple battery of procedures/administrations/etc            
         */
        Battery: '676de278-64aa-44f2-9b69-60d61fc1f5f5',
        /** 
         *             The act represents some provision of care            
         */
        CareProvision: '1071d24e-6fe9-480f-8a20-b1825ae4d707',
        /** 
         *             The act represetns a condition            
         */
        Condition: '1987c53c-7ab8-4461-9ebc-0d428744a8c0',
        /** 
         *             Control act event            
         */
        ControlAct: 'b35488ce-b7cd-4dd4-b4de-5f83dc55af9f',
        /** 
         *             The act represents an encounter            
         */
        Encounter: '54b52119-1709-4098-8911-5df6d6c84140',
        /** 
         *             The act represents an informational act            
         */
        Inform: '192f1768-d39e-409d-87be-5afd0ee0d1fe',
        /** 
         *             The act represents a procedure            
         */
        Observation: '28d022c6-8a8b-47c4-9e6a-2bc67308739e',
        /** 
         *             The act represents a procedure (something done to a patient)            
         */
        Procedure: '8cc5ef0d-3911-4d99-937f-6cfdc2a27d55',
        /** 
         *             The act represents a registration            
         */
        Registration: '6be8d358-f591-4a3a-9a57-1889b0147c7e',
        /** 
         *             The act represents a substance administration            
         */
        SubstanceAdministration: '932a3c7e-ad77-450a-8a1f-030fc2855450',
        /** 
         *             The act represents a supply of some material            
         */
        Supply: 'a064984f-9847-4480-8bea-dddf64b3c77c',
        /** 
         *             The physical transporting of materials or people from one place to another            
         */
        Transport: '61677f76-dc05-466d-91de-47efc8e7a3e6',
    },  // ActClassKeys 
    // OpenIZ.Core.Model.Constants.ActMoodKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Act Mood keys            
     */
    ActMoodKeys: {
        /** 
         *             The ACT represents an appointment that was made to do something            
         */
        Appointment: 'c46eee70-5612-473f-8d24-595ea15c9c39',
        /** 
         *             The ACT represents a special type of request to create an appointment            
         */
        AppointmentRequest: '0395f357-6821-4562-8192-49ac3c94f548',
        /** 
         *             The ACT represents a definition of a type of act            
         */
        Definition: '3b14a426-6337-4f2a-b83b-e6be7dbcd5a5',
        /** 
         *             The ACT represents something that has occurred            
         */
        Eventoccurrence: 'ec74541f-87c4-4327-a4b9-97f325501747',
        /** 
         *             The ACT represents some sort of GOAL            
         */
        Goal: '13925967-e748-4dd6-b562-1e1da3ddfb06',
        /** 
         *             The ACT represents an intent made by a human to do something            
         */
        Intent: '099bcc5e-8e2f-4d50-b509-9f9d5bbeb58e',
        /** 
         *             The ACT represents a promise to do something            
         */
        Promise: 'b389dedf-be61-456b-aa70-786e1a5a69e0',
        /** 
         *             The ACT represents a proposal that a human should do something            
         */
        Propose: 'acf7baf2-221f-4bc2-8116-ceb5165be079',
        /** 
         *             The ACT represents a request to do something            
         */
        Request: 'e658ca72-3b6a-4099-ab6e-7cf6861a5b61',
    },  // ActMoodKeys 
    // OpenIZ.Core.Model.Constants.ActReasonKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Represents act reasons (reasons for an act)            
     */
    ActReasonKeys: {
        /** 
         *             The patient started too late for the therapy            
         */
        StartedTooLate: 'b75bf533-9804-4450-83c7-23f0332f87b8',
        /** 
         *             The patient is allergic or intolerant to the consumable            
         */
        AllergyOrIntolerance: '4ff3617b-bb91-4f3f-b4d2-2425f477037f',
        /** 
         *             The vaccine or drug was expired            
         */
        Expired: '4b518938-b1ea-44e3-b837-31617fa188a4',
        /** 
         *             The vaccine was considered unsafe            
         */
        VaccineSafety: 'c6718df8-c8c0-49fd-a73d-52f6981ccbf7',
        /** 
         *             The vaccine was not performed per the professional judgement of the provider            
         */
        ProfessionalJudgement: '9d947e6d-8406-42f3-bb8a-634fb3c81a08',
        /** 
         *             The patient had a religious objection            
         */
        ReligiousObjecton: '0d40c2b6-7ceb-4492-ab2a-6e7c730eaf22',
        /** 
         *             The patient refused the treatment            
         */
        PatientRefused: '42351a36-f60f-4687-b334-7a41b091bae1',
        /** 
         *             There was insufficient stock to perform the action            
         */
        OutOfStock: 'c7469fad-f190-40a2-a28d-f97d1863e8cf',
        /** 
         *             The items are broken and can no longer be used to deliver care            
         */
        Broken: 'dcff308d-cca5-4eb3-ad92-770917d88e56',
        /** 
         *             There was a cold-storage failure which resulted in the material being unusable.            
         */
        ColdStorageFailure: '06922eac-0cae-49af-a33c-fc7096349e4a',
    },  // ActReasonKeys 
    // OpenIZ.Core.Model.Constants.ActRelationshipTypeKeys, OpenIZ.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
    /**
     * @enum {uuid}
     * @memberof OpenIZModel
     * @public
     * @readonly
     * @summary             Act relationship types            
     */
    ActRelationshipTypeKeys: {
        /** 
         *             Indicates that the source act appends information contained in the target act            
         */
        Appends: 'dc3df205-18ef-4854-ac00-68c295c9c744',
        /** 
         *             Links the transortation act from another act            
         */
        Arrival: '26fe590c-3684-4574-9359-057fdd06ba61',
        /** 
         *             Links a transporation act from another act indicating departure of the subject            
         */
        Departure: '28c81cdc-ca56-4c92-b691-094e89630642',
        /** 
         *             The source act documents the target act            
         */
        Documents: '0f4ba634-5107-4eab-9658-25be293cd831',
        /** 
         *             Links two instances of the same act over time (example: chronic conditions)            
         */
        EpisodeLink: 'ebf9ac10-b5c9-407a-91a4-360bfb7e0fb9',
        /** 
         *             Used to link a goal to an observation            
         */
        Evaluates: '8dbeac94-cccb-4412-a990-09bab26dd048',
        /** 
         *             Indicates that the source act fulfills the target act            
         */
        Fulfills: '646542bc-72e4-488b-bbf4-865d452e62ec',
        /** 
         *             Indicates that the target act authorizes the source act            
         */
        HasAuthorization: '29894070-a76b-47ef-8c16-d84e0acd9ea6',
        /** 
         *             Indicates that the target act is a component of the source act            
         */
        HasComponent: '78b9540f-438b-4b6f-8d83-aaf4979dbc64',
        /** 
         *             Relationship from an act to one or more control variables (for example: device settings, or environment)            
         */
        HasControlVariable: '85f68168-2a43-4532-bc79-191fa0b47c8b',
        /** 
         *             The assertion that a new observation may be a manifestation of another            
         */
        HasManifestation: '22918d17-d3dc-4135-a003-4c1c52e57e75',
        /** 
         *             Indicates that the target act is a pre-condition of the source act            
         */
        HasPrecondition: '5a280fc0-8c26-4191-b204-b1b1e4e19462',
        /** 
         *             Indicates a reasoning as to why the source act is occurring            
         */
        HasReason: '55da61a2-7b86-47f3-9b0b-ba47dc99c950',
        /** 
         *             Indicates that the source act contains reference values from the target            
         */
        HasReferenceValues: '99488a1d-6d97-4013-8c91-ded6ad3b8e89',
        /** 
         *             Indicates the subject of a particular act (example: clinical act is a subject of a control act)            
         */
        HasSubject: '9871c3bc-b57a-479d-a031-7b56cb06fa84',
        /** 
         *             Indicates an existing act is suggesting evidence for a new observation.            
         */
        HasSupport: '3209e3f1-2258-4b63-8182-2c888da66cf0',
        /** 
         *             Indicates that the source act is the cause of the target act            
         */
        IsCauseOf: '57d81685-e399-4abd-8744-96454188a9fa',
        /** 
         *             Indicates the source act is derived from information contained in the target act            
         */
        IsDerivedFrom: '81b6a0f8-b86a-495f-9d5d-8a4073fdd882',
        /** 
         *             Indicates that the source act is an excerpt of the target act            
         */
        IsExcerptOf: 'ffc6e905-161d-4c0b-8cde-a04e9e9d0cd5',
        /** 
         *             Indicates that the source act refers to the target act            
         */
        RefersTo: '8fce259a-b859-4ae3-8160-0221f6ab1650',
        /** 
         *             The source act replaces the target act            
         */
        Replaces: 'd1578637-e1cb-415e-b319-4011da033813',
        /** 
         *             Indicates that the source act starts after the start of another act            
         */
        StartsAfterStartOf: 'c66d7ca9-c6c2-46b1-9276-ad76baf04b07',
        /** 
         *             Indicates that the source act transforms the target act            
         */
        Transforms: 'db2ae02a-ff12-4c1b-9c5b-ecdd41af8583',
    },  // ActRelationshipTypeKeys 
    // Empty guid
    EmptyGuid: "00000000-0000-0000-0000-000000000000",

    /**
         * @class
         * @summary Represents a simple exception class
         * @constructor
         * @memberof OpenIZModel
         * @property {String} message Informational message about the exception
         * @property {Object} details Any detail / diagnostic information
         * @property {OpenIZModel#Exception} caused_by The cause of the exception
         * @param {String} message Informational message about the exception
         * @param {Object} detail Any detail / diagnostic information
         * @param {OpenIZModel#Exception} cause The cause of the exception
         */
    Exception: function (type, message, detail, cause) {
        _self = this;

        this.type = type;
        this.message = message;
        this.details = detail;
        this.caused_by = cause;

    }
} // OpenIZModel
</contentText>
  </asset>
  <asset name="js/openiz-model.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */
var OpenIZModel=OpenIZModel||{BaseEntityData:function(n){this.$type="BaseEntityData";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime)},Association:function(n){this.$type="Association";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn)},IdentifiedData:function(n){this.$type="IdentifiedData";n&amp;&amp;(this.etag=n.etag,this.modifiedOn=n.modifiedOn,this.id=n.id)},NonVersionedEntityData:function(n){this.$type="NonVersionedEntityData";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime)},VersionedAssociation:function(n){this.$type="VersionedAssociation";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence)},VersionedEntityData:function(n){this.$type="VersionedEntityData";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag)},SecurityApplication:function(n){this.$type="SecurityApplication";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.name=n.name,this.applicationSecret=n.applicationSecret)},SecurityDevice:function(n){this.$type="SecurityDevice";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.name=n.name,this.deviceSecret=n.deviceSecret)},NonVersionedEntityData:function(n){this.$type="NonVersionedEntityData";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime)},SecurityPolicy:function(n){this.$type="SecurityPolicy";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.canOverride=n.canOverride,this.isPublic=n.isPublic,this.oid=n.oid,this.name=n.name,this.handler=n.handler)},SecurityPolicyInstance:function(n){this.$type="SecurityPolicyInstance";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn)},NonVersionedEntityData:function(n){this.$type="NonVersionedEntityData";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.description=n.description,this.name=n.name)},SecurityUser:function(n){this.$type="SecurityUser";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.etag=n.etag,this.userClass=n.userClass,this.phoneNumberConfirmed=n.phoneNumberConfirmed,this.phoneNumber=n.phoneNumber,this.lastLoginTime=n.lastLoginTime,this.photo=n.photo,this.userName=n.userName,this.twoFactorEnabled=n.twoFactorEnabled,this.securityStamp=n.securityStamp,this.passwordHash=n.passwordHash,this.lockout=n.lockout,this.invalidLoginAttempts=n.invalidLoginAttempts,this.emailConfirmed=n.emailConfirmed,this.email=n.email)},Patient:function(n){this.$type="Patient";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.language=n.language,this.dateOfBirthPrecision=n.dateOfBirthPrecision,this.dateOfBirth=n.dateOfBirth,this.genderConceptModel=n.genderConceptModel,this.genderConcept=n.genderConcept,this.multipleBirthOrder=n.multipleBirthOrder,this.deceasedDatePrecision=n.deceasedDatePrecision,this.deceasedDate=n.deceasedDate)},Provider:function(n){this.$type="Provider";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.language=n.language,this.dateOfBirthPrecision=n.dateOfBirthPrecision,this.dateOfBirth=n.dateOfBirth,this.providerSpecialtyModel=n.providerSpecialtyModel,this.providerSpecialty=n.providerSpecialty)},UserEntity:function(n){this.$type="UserEntity";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.language=n.language,this.dateOfBirthPrecision=n.dateOfBirthPrecision,this.dateOfBirth=n.dateOfBirth,this.securityUserModel=n.securityUserModel,this.securityUser=n.securityUser)},ApplicationEntity:function(n){this.$type="ApplicationEntity";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.vendorName=n.vendorName,this.versionName=n.versionName,this.softwareName=n.softwareName,this.securityApplicationModel=n.securityApplicationModel,this.securityApplication=n.securityApplication)},DeviceEntity:function(n){this.$type="DeviceEntity";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.operatingSystemName=n.operatingSystemName,this.manufacturerModelName=n.manufacturerModelName,this.securityDeviceModel=n.securityDeviceModel,this.securityDevice=n.securityDevice)},Entity:function(n){this.$type="Entity";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template)},EntityAddress:function(n){this.$type="EntityAddress";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.component=n.component,this.useModel=n.useModel,this.use=n.use)},AddressComponent:function(n){this.$type="AddressComponent";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.value=n.value,this.typeModel=n.typeModel,this.type=n.type)},EntityName:function(n){this.$type="EntityName";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.component=n.component,this.useModel=n.useModel,this.use=n.use)},EntityNameComponent:function(n){this.$type="EntityNameComponent";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.value=n.value,this.typeModel=n.typeModel,this.phoneticAlgorithmModel=n.phoneticAlgorithmModel,this.phoneticAlgorithm=n.phoneticAlgorithm,this.type=n.type,this.phoneticCode=n.phoneticCode)},EntityRelationship:function(n){this.$type="EntityRelationship";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.quantity=n.quantity,this.relationshipTypeModel=n.relationshipTypeModel,this.inversionInd=n.inversionInd,this.relationshipType=n.relationshipType,this.targetModel=n.targetModel,this.holderModel=n.holderModel,this.holder=n.holder,this.target=n.target)},EntityTelecomAddress:function(n){this.$type="EntityTelecomAddress";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.value=n.value,this.useModel=n.useModel,this.use=n.use)},GenericComponentValues:function(n){this.$type="GenericComponentValues";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.value=n.value,this.typeModel=n.typeModel,this.type=n.type)},ManufacturedMaterial:function(n){this.$type="ManufacturedMaterial";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.isAdministrative=n.isAdministrative,this.expiryDate=n.expiryDate,this.quantityConceptModel=n.quantityConceptModel,this.formConceptModel=n.formConceptModel,this.quantityConcept=n.quantityConcept,this.formConcept=n.formConcept,this.quantity=n.quantity,this.lotNumber=n.lotNumber)},Material:function(n){this.$type="Material";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.isAdministrative=n.isAdministrative,this.expiryDate=n.expiryDate,this.quantityConceptModel=n.quantityConceptModel,this.formConceptModel=n.formConceptModel,this.quantityConcept=n.quantityConcept,this.formConcept=n.formConcept,this.quantity=n.quantity)},Organization:function(n){this.$type="Organization";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.industryConceptModel=n.industryConceptModel,this.industryConcept=n.industryConcept)},Person:function(n){this.$type="Person";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.classConcept=n.classConcept,this.template=n.template,this.language=n.language,this.dateOfBirthPrecision=n.dateOfBirthPrecision,this.dateOfBirth=n.dateOfBirth)},PersonLanguageCommunication:function(n){this.$type="PersonLanguageCommunication";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.isPreferred=n.isPreferred,this.languageCode=n.languageCode)},Place:function(n){this.$type="Place";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.address=n.address,this.name=n.name,this.extension=n.extension,this.telecom=n.telecom,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.creationActModel=n.creationActModel,this.statusConceptModel=n.statusConceptModel,this.determinerConceptModel=n.determinerConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.creationAct=n.creationAct,this.statusConcept=n.statusConcept,this.determinerConcept=n.determinerConcept,this.template=n.template,this.service=n.service,this.lng=n.lng,this.lat=n.lat,this.isMobile=n.isMobile,this.classConcept=n.classConcept)},PlaceService:function(n){this.$type="PlaceService";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.serviceConceptModel=n.serviceConceptModel,this.serviceConcept=n.serviceConcept,this.serviceSchedule=n.serviceSchedule)},AssigningAuthority:function(n){this.$type="AssigningAuthority";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.scopeModel=n.scopeModel,this.assigningDevice=n.assigningDevice,this.scope=n.scope,this.url=n.url,this.oid=n.oid,this.description=n.description,this.domainName=n.domainName,this.name=n.name)},CodeSystem:function(n){this.$type="CodeSystem";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.description=n.description,this.version=n.version,this.url=n.url,this.obsoletionReason=n.obsoletionReason,this.authority=n.authority,this.oid=n.oid,this.name=n.name)},Concept:function(n){this.$type="Concept";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.conceptSetModel=n.conceptSetModel,this.conceptSet=n.conceptSet,this.name=n.name,this.referenceTerm=n.referenceTerm,this.conceptClassModel=n.conceptClassModel,this.conceptClass=n.conceptClass,this.relationship=n.relationship,this.statusConceptModel=n.statusConceptModel,this.statusConcept=n.statusConcept,this.mnemonic=n.mnemonic,this.isReadonly=n.isReadonly)},ConceptClass:function(n){this.$type="ConceptClass";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.mnemonic=n.mnemonic,this.name=n.name)},ConceptName:function(n){this.$type="ConceptName";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.phoneticAlgorithmModel=n.phoneticAlgorithmModel,this.phoneticAlgorithm=n.phoneticAlgorithm,this.phoneticCode=n.phoneticCode,this.value=n.value,this.language=n.language)},ConceptReferenceTerm:function(n){this.$type="ConceptReferenceTerm";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.relationshipTypeModel=n.relationshipTypeModel,this.relationshipType=n.relationshipType,this.termModel=n.termModel,this.term=n.term)},ConceptRelationship:function(n){this.$type="ConceptRelationship";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.relationshipTypeModel=n.relationshipTypeModel,this.relationshipType=n.relationshipType,this.targetConceptModel=n.targetConceptModel,this.targetConcept=n.targetConcept)},ConceptRelationshipType:function(n){this.$type="ConceptRelationshipType";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.mnemonic=n.mnemonic,this.name=n.name)},ConceptSet:function(n){this.$type="ConceptSet";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.concept=n.concept,this.url=n.url,this.oid=n.oid,this.mnemonic=n.mnemonic,this.name=n.name)},Extension:function(n){this.$type="Extension";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.extensionType=n.extensionType,this.value=n.value)},EntityExtension:function(n){this.$type="EntityExtension";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.extensionType=n.extensionType,this.value=n.value)},ActExtension:function(n){this.$type="ActExtension";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.extensionType=n.extensionType,this.value=n.value)},ExtensionType:function(n){this.$type="ExtensionType";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.name=n.name,this.handlerClass=n.handlerClass)},EntityIdentifier:function(n){this.$type="EntityIdentifier";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.authority=n.authority,this.type=n.type,this.value=n.value)},ActIdentifier:function(n){this.$type="ActIdentifier";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.authority=n.authority,this.type=n.type,this.value=n.value)},IdentifierBase:function(n){this.$type="IdentifierBase";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.authority=n.authority,this.type=n.type,this.value=n.value)},IdentifierType:function(n){this.$type="IdentifierType";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.scopeConceptModel=n.scopeConceptModel,this.typeConceptModel=n.typeConceptModel,this.typeConcept=n.typeConcept,this.scopeConcept=n.scopeConcept)},Note:function(n){this.$type="Note";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.authorModel=n.authorModel,this.author=n.author,this.text=n.text)},EntityNote:function(n){this.$type="EntityNote";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.authorModel=n.authorModel,this.author=n.author,this.text=n.text)},ActNote:function(n){this.$type="ActNote";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.authorModel=n.authorModel,this.author=n.author,this.text=n.text)},PhoneticAlgorithm:function(n){this.$type="PhoneticAlgorithm";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.handler=n.handler,this.name=n.name)},ReferenceTerm:function(n){this.$type="ReferenceTerm";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.name=n.name,this.codeSystem=n.codeSystem,this.codeSystemModel=n.codeSystemModel,this.mnemonic=n.mnemonic)},ReferenceTermName:function(n){this.$type="ReferenceTermName";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.phoneticAlgorithmModel=n.phoneticAlgorithmModel,this.phoneticAlgorithm=n.phoneticAlgorithm,this.phoneticCode=n.phoneticCode,this.value=n.value,this.language=n.language)},Tag:function(n){this.$type="Tag";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sourceModel=n.sourceModel,this.source=n.source,this.value=n.value,this.key=n.key)},EntityTag:function(n){this.$type="EntityTag";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sourceModel=n.sourceModel,this.source=n.source,this.value=n.value,this.key=n.key)},ActTag:function(n){this.$type="ActTag";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sourceModel=n.sourceModel,this.source=n.source,this.value=n.value,this.key=n.key)},TemplateDefinition:function(n){this.$type="TemplateDefinition";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.updatedBy=n.updatedBy,this.modifiedOn=n.modifiedOn,this.updatedTime=n.updatedTime,this.description=n.description,this.oid=n.oid,this.name=n.name,this.mnemonic=n.mnemonic)},Bundle:function(n){this.$type="Bundle";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.totalResults=n.totalResults,this.count=n.count,this.offset=n.offset,this.entry=n.entry,this.item=n.item,this.modifiedOn=n.modifiedOn)},Act:function(n){this.$type="Act";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated)},ActParticipation:function(n){this.$type="ActParticipation";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.quantity=n.quantity,this.actModel=n.actModel,this.act=n.act,this.participationRoleModel=n.participationRoleModel,this.playerModel=n.playerModel,this.participationRole=n.participationRole,this.player=n.player)},ActProtocol:function(n){this.$type="ActProtocol";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.state=n.state,this.protocolModel=n.protocolModel,this.protocol=n.protocol)},ActRelationship:function(n){this.$type="ActRelationship";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.sourceModel=n.sourceModel,this.source=n.source,this.modifiedOn=n.modifiedOn,this.obsoleteVersionSequence=n.obsoleteVersionSequence,this.effectiveVersionSequence=n.effectiveVersionSequence,this.relationshipTypeModel=n.relationshipTypeModel,this.relationshipType=n.relationshipType,this.targetModel=n.targetModel,this.target=n.target)},ControlAct:function(n){this.$type="ControlAct";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated)},Observation:function(n){this.$type="Observation";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated,this.interpretationConceptModel=n.interpretationConceptModel,this.interpretationConcept=n.interpretationConcept)},QuantityObservation:function(n){this.$type="QuantityObservation";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated,this.interpretationConceptModel=n.interpretationConceptModel,this.interpretationConcept=n.interpretationConcept,this.unitOfMeasureModel=n.unitOfMeasureModel,this.unitOfMeasure=n.unitOfMeasure,this.value=n.value)},TextObservation:function(n){this.$type="TextObservation";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated,this.interpretationConceptModel=n.interpretationConceptModel,this.interpretationConcept=n.interpretationConcept,this.value=n.value)},CodedObservation:function(n){this.$type="CodedObservation";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated,this.interpretationConceptModel=n.interpretationConceptModel,this.interpretationConcept=n.interpretationConcept,this.valueModel=n.valueModel,this.value=n.value)},PatientEncounter:function(n){this.$type="PatientEncounter";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated,this.dischargeDispositionModel=n.dischargeDispositionModel,this.dischargeDisposition=n.dischargeDisposition)},Protocol:function(n){this.$type="Protocol";n&amp;&amp;(this.etag=n.etag,this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.definition=n.definition,this.handlerClass=n.handlerClass,this.name=n.name)},SubstanceAdministration:function(n){this.$type="SubstanceAdministration";n&amp;&amp;(this.id=n.id,this.obsoletedBy=n.obsoletedBy,this.createdBy=n.createdBy,this.obsoletedByModel=n.obsoletedByModel,this.modifiedOn=n.modifiedOn,this.createdByModel=n.createdByModel,this.obsoletionTime=n.obsoletionTime,this.creationTime=n.creationTime,this.sequence=n.sequence,this.version=n.version,this.previousVersionModel=n.previousVersionModel,this.previousVersion=n.previousVersion,this.etag=n.etag,this.participation=n.participation,this.tag=n.tag,this.note=n.note,this.extension=n.extension,this.policy=n.policy,this.relationship=n.relationship,this.identifier=n.identifier,this.typeConceptModel=n.typeConceptModel,this.statusConceptModel=n.statusConceptModel,this.reasonConceptModel=n.reasonConceptModel,this.moodConceptModel=n.moodConceptModel,this.classConceptModel=n.classConceptModel,this.typeConcept=n.typeConcept,this.statusConcept=n.statusConcept,this.reasonConcept=n.reasonConcept,this.moodConcept=n.moodConcept,this.classConcept=n.classConcept,this.stopTime=n.stopTime,this.startTime=n.startTime,this.actTime=n.actTime,this.template=n.template,this.isNegated=n.isNegated,this.siteModel=n.siteModel,this.site=n.site,this.doseSequence=n.doseSequence,this.doseQuantity=n.doseQuantity,this.doseUnitModel=n.doseUnitModel,this.routeModel=n.routeModel,this.doseUnit=n.doseUnit,this.route=n.route)},UserClassKeys:{ApplictionUser:"e9cd4dad-2759-4022-ab07-92fcfb236a98",HumanUser:"33932b42-6f4b-4659-8849-6aca54139d8e",SystemUser:"9f71bb34-9691-440f-8249-9c831ea16d58"},EntityClassKeys:{Animal:"61fcbf42-b5e0-4fb5-9392-108a5c6dbec7",ChemicalSubstance:"2e9fa332-9391-48c6-9fc8-920a750b25d3",CityOrTown:"79dd4f75-68e8-4722-a7f5-8bc2e08f5cd6",Container:"b76ff324-b174-40b7-a6ac-d1fdf8e23967",Country:"48b2ffb3-07db-47ba-ad73-fc8fb8502471",CountyOrParish:"d9489d56-ddac-4596-b5c6-8f41d73d8dc5",Device:"1373ff04-a6ef-420a-b1d0-4a07465fe8e8",Entity:"e29fcfad-ec1d-4c60-a055-039a494248ae",Food:"e5a09cc2-5ae5-40c2-8e32-687dba06715d",LivingSubject:"8ba5e5c9-693b-49d4-973c-d7010f3a23ee",ManufacturedMaterial:"fafec286-89d5-420b-9085-054aca9d1eef",Material:"d39073be-0f8f-440e-b8c8-7034cc138a95",NonLivingSubject:"9025e5c9-693b-49d4-973c-d7010f3a23ee",Organization:"7c08bd55-4d42-49cd-92f8-6388d6c4183f",Patient:"bacd9c6f-3fa9-481e-9636-37457962804d",Person:"9de2a846-ddf2-4ebc-902e-84508c5089ea",Place:"21ab7873-8ef3-4d78-9c19-4582b3c40631",Provider:"6b04fed8-c164-469c-910b-f824c2bda4f0",ServiceDeliveryLocation:"ff34dfa7-c6d3-4f8b-bc9f-14bcdc13ba6c",State:"8cf4b0b0-84e5-4122-85fe-6afa8240c218"},DeterminerKeys:{Described:"ad28a7ac-a66b-42c4-91b4-de40a2b11980",DescribedQualified:"604cf1b7-8891-49fb-b95f-3e4e875691bc",Specific:"f29f08de-78a7-4a5e-aeaf-7b545ba19a09"},StatusKeys:{Active:"c8064cbd-fa06-4530-b430-1a52f1530c27",Completed:"93a48f6a-6808-4c70-83a2-d02178c2a883",New:"c34fcbf1-e0fe-4989-90fd-0dc49e1b9685",Nullfied:"cd4aa3c4-02d5-4cc9-9088-ef8f31e321c5",Obsolete:"bdef5f90-5497-4f26-956c-8f818cce2bd2"},EntityRelationshipTypeKeys:{Access:"ddc1b705-c768-4c7a-8f69-76ad4b167b40",ActiveMoiety:"212b1b6b-b074-4a75-862d-e4e194252044",AdministerableMaterial:"b52c7e95-88b8-4c4c-836a-934277afdb92",AdoptedChild:"8fa25b69-c9c2-4c40-84c1-0ea9641a12ec",AdoptedDaughter:"2b4b2ed8-f90c-4193-870a-f48bc39657c1",AdoptedSon:"ce50ba92-cd21-43c4-8582-34e7fbb3170f",Affiliate:"8de7b5e7-c941-42bd-b735-52d750efc5e6",Agent:"867fd445-d490-4619-804e-75c04b8a0e57",Aliquot:"cff670e4-965e-4288-b966-47a44479d2ad",Assigned:"a87a6d21-2ca6-4aea-88f3-6135cceb58d1",AssignedEntity:"77b7a04b-c065-4faf-8ec0-2cdad4ae372b",Aunt:"0ff2ab03-6e0a-40d1-8947-04c4937b4cc4",Birthplace:"f3ef7e48-d8b7-4030-b431-aff7e0e1cb76",Brother:"24380d53-ea22-4820-9f06-8671f774f133",Brotherinlaw:"0a4c87e2-16c3-4361-be3c-dd765ee4bc7d",Caregiver:"31b0dfcb-d7ba-452a-98b9-45ebccd30732",CaseSubject:"d7ad48c0-889d-41e2-99e9-be5e6c5327b2",Child:"739457d0-835a-4a9c-811c-42b5e92ed1ca",ChildInlaw:"8bf23192-de75-48eb-abee-81a9a15332f8",Citizen:"35b13152-e43c-4bcb-8649-a9e83bee33a2",Claimant:"9d256279-f1ac-46b3-a974-dd13e2ad4f72",ClinicalResearchInvestigator:"43ad7bc0-2ed8-4b27-97e5-b3db00a07d17",ClinicalResearchSponsor:"66c96ae6-c5c4-4d66-9bd0-a00c56e831da",CommissioningParty:"33bd1401-dfdb-40e7-a914-0a695ad5186e",Contact:"b1d2148d-bb35-4337-8fe6-021f5a3ac8a3",Cousin:"1c0f931c-9c49-4a52-8fbf-5217c52ea778",CoverageSponsor:"8ff9d9a5-a206-4566-82cd-67b770d7ce8a",CoveredParty:"d4844672-c0d7-434c-8377-6dd0655b0532",Daughter:"8165b43f-8103-4ed3-bac6-4fc0df8c1a84",DaughterInlaw:"76fdf0e7-cfe0-47b4-9630-c645f254cdfd",DedicatedServiceDeliveryLocation:"455f1772-f580-47e8-86bd-b5ce25d351f9",Dependent:"f28ed78f-85ab-47a1-ba08-b5051e62d6c3",DistributedMaterial:"f5547ada-1eb9-40bb-b163-081567d869e7",DomesticPartner:"3db182e2-653b-4bfd-a300-32f23345d1c0",EmergencyContact:"25985f42-476a-4455-a977-4e97a554d710",Employee:"b43c9513-1c1c-4ed0-92db-55a904c122e6",ExposedEntity:"ab39087c-17d3-421a-a1e3-2de4e0ab9faf",FamilyMember:"38d66ec7-0cc8-4609-9675-b6ff91ede605",Father:"40d18ecc-8ff8-4e03-8e58-97a980f04060",Fatherinlaw:"b401dd81-931c-4aad-8fd8-22a6ac2ea3dc",FosterChild:"abfe2637-d338-4090-b3a5-3ec19a47be6a",FosterDaughter:"e81d6773-97e3-4b2d-b6a3-a4624ba5c6a9",FosterSon:"decd6250-7e8b-4b77-895d-31953cf1387a",Grandchild:"c33adda2-a4ed-4092-8d9c-b8e3fbd5d90b",Granddaughter:"3cb1993f-3703-453f-87be-21b606db7631",Grandfather:"48c59444-fec0-43b8-aa2c-7aedb70733ad",Grandmother:"b630ba2c-8a00-46d8-bf64-870d381d8917",Grandparent:"fa646df9-7d64-4d1f-ae9a-6261fd5fd6ae",Grandson:"f7a64463-bc75-44d4-a8ca-c9fbc2c87175",GreatGrandfather:"bfe24b5d-9c32-4df3-ad7b-eaa19e7d4afb",GreatGrandmother:"02fbc345-1a25-4f78-aeea-a12584a1eec3",GreatGrandparent:"528feb11-ae81-426a-be1f-ce74c83009eb",Guarantor:"f5b10c57-3ae1-41ea-8649-1cf8d9848ae1",GUARD:"845120de-e6f7-4cec-94aa-e6e943c91367",Guardian:"3b8e2334-4ccc-4f24-8aae-37341ea03d3e",Halfbrother:"25cae2f2-d1ec-4efe-a92f-d479785f7d8a",Halfsibling:"8452ecb9-d762-4c4a-96b2-81d130cb729b",Halfsister:"ce42c680-a783-4cde-bcd1-e261d6fd68a0",HealthcareProvider:"6b04fed8-c164-469c-910b-f824c2bda4f0",HealthChart:"5b0f8c93-57c9-4dff-b59a-9564739ef445",HeldEntity:"9c02a621-8565-46b4-94ff-a2bd210989b1",Husband:"62aca44c-b57c-44fd-9703-fcdff97c04b6",IdentifiedEntity:"c5c8b935-294f-4c90-9d81-cbf914bf5808",IncidentalServiceDeliveryLocation:"41baf7aa-5ffd-4421-831f-42d4ab3de38a",Individual:"47049b0f-f189-4e19-9aa8-7c38adb2491a",InvestigationSubject:"0c522bd1-dfa2-43cb-a98e-f6ff137968ae",InvoicePayor:"07c922d2-12c9-415a-95d4-9b3fed4959d6",Isolate:"020c28a0-7c52-42f4-a046-db9e329d5a42",LicensedEntity:"b9fe057e-7f57-42eb-89d7-67c69646c0c4",MaintainedEntity:"77b6d8cd-05a0-4b1f-9e14-b895203bf40c",ManufacturedProduct:"6780df3b-afbd-44a3-8627-cbb3dc2f02f6",MaternalAunt:"96ea355d-0c68-481f-8b6f-1b00a101ab8f",MaternalCousin:"d874cde5-7d76-4f1d-97e6-db7e82bac958",MaternalGrandfather:"360f6a77-fdb5-4fb6-b223-3cd1047fd08e",MaternalGrandmother:"ea13832b-2e38-4bb6-b55d-ae749ccaba95",MaternalGrandparent:"66e0dbd1-9065-4af8-808d-89edd302f264",MaternalGreatgrandfather:"abe6d0d1-4e37-4b7c-9acc-eedb2c36f9cd",MaternalGreatgrandmother:"fe4f72e6-84f8-4276-ae64-2ef1f2ff406f",MaternalGreatgrandparent:"59bc87d3-1618-4f14-81d2-71072c1f37e9",MaternalUncle:"4e299c46-f06f-4efc-b3c0-b7b659a120f2",MilitaryPerson:"1bcfb08d-c6fa-41dd-98bf-06336a33a3b7",Mother:"29ff64e5-b564-411a-92c7-6818c02a9e48",Motherinlaw:"f941988a-1c55-4408-ab57-e9ed35b2a24d",NamedInsured:"3d907f37-085c-4c26-b59b-62e40621dafd",NaturalBrother:"daf11eb1-fcc2-4521-a1c0-daebaf0a923a",NaturalChild:"80097e75-a232-4a9f-878f-7e60ec70f921",NaturalDaughter:"6a181a3c-7241-4325-b011-630d3ca6dc4a",NaturalFather:"233d890b-04ef-4365-99ad-26cb4e1f75f3",NaturalFatherOfFetus:"8e88debc-d175-46f3-9b48-106f9c151cd2",NaturalMother:"059d689a-2392-4ffb-b6ae-682c9ded8da2",NaturalParent:"e6851b39-a771-4a5e-8aa8-9ba140b3dca3",NaturalSibling:"0b89fb65-ca8e-4a4d-9d25-0bae3f4d7a59",NaturalSister:"8ea21d7d-6ee9-449b-a1dc-c4aa0ff7f5b9",NaturalSon:"9f17d4cf-a67f-4ac6-8c50-718af6e264ee",Nephew:"5c5af1d2-0e6d-458f-9574-3ad61c393a90",NextOfKin:"1ee4e74f-542d-4544-96f6-266a6247f274",Niece:"0a50962a-60b4-44d8-a7f6-1eb2aa5967cc",NieceNephew:"a907e4d8-d823-478f-9c5a-6facae6b4b5b",NotaryPublic:"f1ef6c46-05eb-4482-baeb-eaf0a8e5ffef",OwnedEntity:"117da15c-0864-4f00-a987-9b9854cba44e",Parent:"bfcbb345-86db-43ba-b47e-e7411276ac7c",ParentInlaw:"5e2b0afe-724e-41cd-9be2-9030646f2529",Part:"b2feb552-8eaf-45fe-a397-f789d6f4728a",PaternalAunt:"6a1e9e8b-d0c3-44f0-9906-a6458685e269",PaternalCousin:"60affe56-126d-43ee-9fde-5f117e41c7a8",PaternalGrandfather:"2fd5c939-c508-4250-8efb-13b772e56b7f",PaternalGrandmother:"bfdb07db-9721-4ec3-94e1-4bd9f0d6985c",PaternalGrandparent:"a3d362a4-4931-4bef-af18-ac59dd092981",PaternalGreatgrandfather:"0aeec758-c20f-43e4-9789-8c44629f5941",PaternalGreatgrandmother:"0fcba203-1238-4001-beb7-19a667506ade",PaternalGreatgrandparent:"08a98950-3391-4a66-a1c8-421c6fd82911",PaternalUncle:"853c85de-4817-4328-a121-6a3bdafbf82e",Patient:"bacd9c6f-3fa9-481e-9636-37457962804d",Payee:"734551e1-2960-4a68-93a2-b277db072a43",PersonalRelationship:"abfd3fe8-9526-48fb-b366-35baca9bd170",PlaceOfDeath:"9bbe0cfe-faab-4dc9-a28f-c001e3e95e6e",PolicyHolder:"cec017ef-4e49-41af-8596-abad1a91c9d0",ProgramEligible:"cbe2a00c-e1d5-44e9-aae3-d7d03e3c2efa",QualifiedEntity:"6521dd09-334b-4fbf-9c89-1ad5a804326c",RegulatedProduct:"20e98d17-e24d-4c64-b09e-521a177ccd05",ResearchSubject:"ef597ffe-d965-4398-b55a-650530ebb997",RetailedMaterial:"703df8f4-b124-44c5-9506-1ab74ddfd91d",Roomate:"bbfac1ed-5464-4100-93c3-8685b052a2cf",ServiceDeliveryLocation:"ff34dfa7-c6d3-4f8b-bc9f-14bcdc13ba6c",Sibling:"685eb506-6b97-41c1-b201-b6b932a3f3aa",SiblingInlaw:"fd892cf8-db4f-4e4e-a13b-4eb3bdde5be5",SignificantOther:"2eab5298-bc83-492c-9004-ed3499246afe",SigningAuthorityOrOfficer:"757f98df-14e0-446a-bd50-bb0affb34f09",Sister:"cd1e8904-31dc-4374-902d-c91f1de23c46",Sisterinlaw:"dcae9718-ab81-4737-b071-36cf1175804d",Son:"f115c204-8485-4cf3-8815-3c6738465e30",SonInlaw:"34f7bc11-2288-471a-af38-553ae6b8410c",Specimen:"bce17b21-05b2-4f02-bf7a-c6d3561aa948",Spouse:"89bdc57b-d85c-4e85-94e8-c17049540a0d",Stepbrother:"5951097b-1a13-4bce-bbf2-9abf52f98dc8",StepChild:"4cdef917-4fb0-4cdf-b44d-b73486c41845",Stepdaughter:"f71e193a-0562-46e9-99dd-437d23663ec3",Stepfather:"bb437e4d-7472-48c1-a6e7-576545a782fa",Stepmother:"5a0539cc-093b-448e-aec6-0d529ed0087f",StepParent:"f172eee7-7f4b-4022-81d0-76393a1200ae",StepSibling:"7e6bc25d-5dea-4645-af3d-aa854b7b6f2f",Stepsister:"cb73d085-026c-4bc7-a1de-356bfd636246",Stepson:"cfa978f4-140c-430d-82f8-1e6f2d74f48d",Student:"0c157566-d1e9-4976-8542-473caa9ba2a4",Subscriber:"f31a2a5b-ce13-47e1-a0fb-d704f31547db",TerritoryOfAuthority:"c6b92576-1d62-4896-8799-6f931f8ab607",TherapeuticAgent:"d6657fdb-4ef3-4131-af79-14e01a21faca",Uncle:"cdd99260-107c-4a4e-acaf-d7c9c7e90fdd",Underwriter:"a8fcd83f-808b-494b-8a1c-ec2c6dbc3dfa",UsedEntity:"08fff7d9-bac7-417b-b026-c9bee52f4a37",WarrantedProduct:"639b4b8f-afd3-4963-9e79-ef0d3928796a",Wife:"a3ff423e-81d5-4571-8edf-03c295189a23"},TelecomAddressUseKeys:{AnsweringService:"1ecd7b17-b5ff-4cae-9c3b-c1258132d137",EmergencyContact:"25985f42-476a-4455-a977-4e97a554d710",MobileContact:"e161f90e-5939-430e-861a-f8e885cc353d",Pager:"788000b4-e37a-4055-a2aa-c650089ce3b1",Public:"ec35ea7c-55d2-4619-a56b-f7a986412f7f",TemporaryAddress:"cef6ea31-a097-4f59-8723-a38c727c6597",WorkPlace:"eaa6f08e-bb8e-4457-9dc0-3a1555fadf5c"},NameUseKeys:{Alphabetic:"71d1c07c-6ee6-4240-8a95-19f96583512e",Anonymous:"95e6843a-26ff-4046-b6f4-eb440d4b85f7",Artist:"4a7bf199-f33b-42f9-8b99-32433ea67bd7",Assigned:"a87a6d21-2ca6-4aea-88f3-6135cceb58d1",Ideographic:"09000479-4672-44f8-bb4a-72fb25f7356a",Indigenous:"a3fb2a05-5ebe-47ae-afd0-4c1b22336090",Legal:"effe122d-8d30-491d-805d-addcb4466c35",License:"48075d19-7b29-4ca5-9c73-0cbd31248446",MaidenName:"0674c1c8-963a-4658-aff9-8cdcd308fa68",OfficialRecord:"1ec9583a-b019-4baa-b856-b99caf368656",Phonetic:"2b085d38-3308-4664-9f89-48d8ef4daba7",Pseudonym:"c31564ef-ca8d-4528-85a8-88245fcef344",Religious:"15207687-5290-4672-a7df-2880a23dcbb5",Search:"87964bff-e442-481d-9749-69b2a84a1fbe",Soundex:"e5794e3b-3025-436f-9417-5886feead55a",Syllabic:"b4ca3bf0-a7fc-44f3-87d5-e126beda93ff"},AddressUseKeys:{Alphabetic:"71d1c07c-6ee6-4240-8a95-19f96583512e",BadAddress:"f3132fc0-aadd-40b7-b875-961c40695389",Direct:"d0db6edb-6cdc-4671-8bc2-00f1c808e188",HomeAddress:"493c3e9d-4f65-4e4d-9582-c9008f4f2eb4",Ideographic:"09000479-4672-44f8-bb4a-72fb25f7356a",Phonetic:"2b085d38-3308-4664-9f89-48d8ef4daba7",PhysicalVisit:"5724a9b6-24b6-43b7-8075-7a0d61fcb814",PostalAddress:"7246e98d-20c6-4ae6-85ad-4aa09649feb7",PrimaryHome:"c4faafd8-fc90-4330-8b4b-e4e64c86b87b",Public:"ec35ea7c-55d2-4619-a56b-f7a986412f7f",Soundex:"e5794e3b-3025-436f-9417-5886feead55a",Syllabic:"b4ca3bf0-a7fc-44f3-87d5-e126beda93ff",TemporaryAddress:"cef6ea31-a097-4f59-8723-a38c727c6597",VacationHome:"5d69534c-4597-4d11-bb98-56a9918f5238",WorkPlace:"eaa6f08e-bb8e-4457-9dc0-3a1555fadf5c"},ActParticipationKey:{Admitter:"a0174216-6439-4351-9483-a241a48029b7",Attender:"6cbf29ad-ac51-48c9-885a-cfe3026ecf6e",Authenticator:"1b2dbf82-a503-4cf4-9ecb-a8e111b4674e",Authororiginator:"f0cb3faf-435d-4704-9217-b884f757bc14",Baby:"479896b0-35d5-4842-8109-5fdbee14e8a4",Beneficiary:"28c744df-d889-4a44-bc1a-2e9e9d64af13",CallbackContact:"9c4c40ae-2c15-4581-a496-be1abfe4eb66",CausativeAgent:"7f81b83e-0d78-4685-8ba4-224eb315ce54",Consultant:"0a364ad7-f961-4d8a-93f0-1fd4176548b3",Consumable:"a5cac7f7-e3b7-4dd8-872c-db0e7fcc2d84",CoverageTarget:"4b5471d4-e3fe-45f7-85a2-ae2b4f224757",Custodian:"649d6d69-139c-4006-ae45-aff4649d6079",DataEnterer:"c50d66d2-e5da-4a34-b2b7-4cd4fe4ef2c4",Destination:"727b3624-ea62-46bb-a68b-b9e49e302eca",Device:"1373ff04-a6ef-420a-b1d0-4a07465fe8e8",DirectTarget:"d9f63423-ba9b-48d9-ba38-c404b784b670",Discharger:"a2594e6e-e8fe-4c68-82a5-d3a46dbec87d",Distributor:"693f08fa-625a-40d2-b928-6856099c0349",Donor:"be1235ee-710a-4732-88fd-6e895de7c56d",EntryLocation:"ac05185b-5a80-47a8-b924-060deb6d0eb2",Escort:"727a61ed-2f35-4e09-8bb6-6d09e2ba8fec",Exposure:"5a6a6766-8e1d-4d36-ae50-9b7d82d8a182",ExposureAgent:"ea60a5a9-e971-4f0d-bb5d-dc7a0c74a2c9",ExposureSource:"cbb6297b-743c-453c-8476-ba4c10a1c965",ExposureTarget:"ec401b5c-4c33-4229-9c72-428fc5db37ff",GuarantorParty:"28fb791e-179e-461a-b16c-cac13a04bd0a",Holder:"2452b691-f122-4121-b9df-76d990b43f35",IndirectTarget:"3a9f0c2f-e322-4639-a8e7-0df67cac761b",Informant:"39604248-7812-4b60-bc54-8cc1fffb1de6",InformationRecipient:"9790b291-b8a3-4c85-a240-c2c38885ad5d",LegalAuthenticator:"0716a333-cd46-439d-bfd6-bf788f3885fa",Location:"61848557-d78d-40e5-954f-0b9c97307a04",NonreuseableDevice:"6792db6c-fd5c-4ab8-96f5-ace5665bdcb9",Origin:"5d175f21-1963-4589-a400-b5ef5f64842c",Participation:"c704a23d-86ef-4e11-9050-f8aa10919ff2",Performer:"fa5e70a4-a46e-4665-8a20-94d4d7b86fc8",PrimaryInformationRecipient:"02bb7934-76b5-4cc5-bd42-58570f15eb4d",PrimaryPerformer:"79f6136c-1465-45e8-917e-e7832bc8e3b2",Product:"99e77288-cb09-4050-a8cf-385513f32f0a",Receiver:"53c694b8-27d8-43dd-95a4-bb318431d17c",RecordTarget:"3f92dbee-a65e-434f-98ce-841feeb02e3f",ReferredBy:"6da3a6ca-2ab0-4d32-9588-e094f277f06d",ReferredTo:"353f9255-765e-4336-8007-1d61ab09aad6",Referrer:"5e8e0f8b-bc23-4847-82ab-49b8dd79981e",Remote:"3c1225de-194e-49ce-a41a-0f9376b04c11",ResponsibleParty:"64474c12-b978-4bb6-a584-46dadec2d952",ReusableDevice:"76990d3d-3f27-4b39-836b-ba87eeba3328",SecondaryPerformer:"4ff91e06-2e39-44e3-9fbe-0d828fe318fe",Specimen:"bce17b21-05b2-4f02-bf7a-c6d3561aa948",Subject:"03067700-ce37-405f-8ed3-e4965ba2f601",Tracker:"c3be013a-20c5-4c20-840c-d9dbb15d040e",Transcriber:"de3f7527-e3c9-45ef-8574-00ca4495f767",UgentNotificationContact:"01b87999-85a7-4f5c-9b7e-892f1195cfe3",Verifier:"f9dc5787-dd4d-42c6-a082-ac7d11956fda",Via:"5b0fac74-5ac6-44e6-99a4-6813c0e2f4a9",Witness:"0b82357f-5ae0-4543-ab8e-a33e9b315bab"},AddressComponentKeys:{AdditionalLocator:"d2312b8e-bdfb-4012-9397-f14336f8d206",AddressLine:"4f342d28-8850-4daf-8bca-0b44a255f7ed",BuildingNumber:"f3c86e99-8afc-4947-9dd8-86412a34b1c7",BuildingNumberNumeric:"3258b4d6-e4dc-43e6-9f29-fd8423a2ae12",BuildingNumberSuffix:"b2dbf05c-584d-46db-8cbf-026a6ea30d81",CareOf:"8c89a89e-08c5-4374-87f9-adb3c9261df6",CensusTract:"4b3a347c-28fa-4560-a1a9-3795c9db3d3b",City:"05b85461-578b-4988-bca6-e3e94be9db76",Country:"48b2ffb3-07db-47ba-ad73-fc8fb8502471",County:"d9489d56-ddac-4596-b5c6-8f41d73d8dc5",Delimiter:"4c6b9519-a493-44a9-80e6-32d85109b04b",DeliveryAddressLine:"f6139b21-3a36-4a3f-b498-0c661f06df59",DeliveryInstallationArea:"ec9d5ab8-3be1-448f-9346-6a08253f9dea",DeliveryInstallationQualifier:"78fb6eed-6549-4f22-ab3e-f3696da050bc",DeliveryInstallationType:"684fb800-145c-47c5-98c5-e7aa53802b69",DeliveryMode:"12608636-910d-4bac-b849-7f999de20332",DeliveryModeIdentifier:"08bd6027-47eb-43de-8454-59b7a5d00a3e",Direction:"1f678716-ab8f-4856-9f76-d82fe3165c22",PostalCode:"78a47122-f9bf-450f-a93f-90a103c5f1e8",PostBox:"2047f216-f41e-4cfb-a024-05d4d3de52f5",Precinct:"acafe0f2-e209-43bb-8633-3665fd7c90ba",State:"8cf4b0b0-84e5-4122-85fe-6afa8240c218",StreetAddressLine:"f69dcfa8-df18-403b-9217-c59680bad99e",StreetName:"0432d671-abc3-4249-872c-afd5274c2298",StreetNameBase:"37c7dbc8-4ac6-464a-af65-d65fcba60238",StreetType:"121953f6-0465-41de-8f7a-b0e08204c771",UnitDesignator:"b18e71cb-203c-4640-83f0-cc86debbbbc0",UnitIdentifier:"908c09df-81fe-45ac-9233-0881a278a401"},NameComponentKeys:{Delimiter:"4c6b9519-a493-44a9-80e6-32d85109b04b",Family:"29b98455-ed61-49f8-a161-2d73363e1df0",Given:"2f64bde2-a696-4b0a-9690-b21ebd7e5092",Prefix:"a787187b-6be4-401e-8836-97fc000c5d16",Suffix:"064523df-bb03-4932-9323-cdf0cc9590ba",Title:"4386d92a-d81b-4033-b968-01e57e20d5e0"},PhoneticAlgorithmKeys:{Metaphone:"d79a4dc6-66a6-4602-8fcb-7dc09a895793",None:"402cd339-d0e4-46ce-8fc2-12a4b0e17226",Soundex:"3352a79a-d2e0-4e0c-9b48-6fd2a202c681"},ConceptRelationshipTypeKeys:{InverseOf:"ad27293d-433c-4b75-88d2-b5360cd95450",MemberOf:"a159d45b-3c34-4e1b-9b75-9193a7528ced",NegationOf:"ae8b4f2f-009f-4e0d-b35e-5a89555c5947",SameAs:"2c4dafc2-566a-41ae-9ebc-3097d7d22f4a"},ConceptClassKeys:{ClassCode:"17fd5254-8c25-4abb-b246-083fbe9afa15",Diagnosis:"92cdea39-b9a3-4a5b-bc88-a6646c74240d",Finding:"e445e207-60a3-401a-9b81-a8ac2479f4a6",Form:"17ee5254-8c25-4abb-b246-083fbe9afa15",Material:"dc9cbc32-b8ea-4144-bef1-dc618e28f4d7",Mood:"bba99722-23ce-469a-8fa5-10deba853d35",Other:"0d6b3439-c9be-4480-af39-eeb457c052d0",Problem:"4bd7f8e6-e4b8-4dbc-93a7-cf14fbaf9700",Relationship:"f51dfdcd-039b-4e1f-90be-3cf56aef8da4",Route:"a8a900d3-a07e-4e02-b45f-580d09baf047",Status:"54b93182-fc19-47a2-82c6-089fd70a4f45",Stock:"ffd8304a-43ec-4ebc-95fc-fb4a4f2338f0",UnitOfMeasure:"1ef69347-ef03-4ff7-b3c5-6334448845e6"},CodeSystemKeys:{CVX:"eba4f94a-2cad-4bb3-aca7-f4e54eaac4bd",ICD10:"f7a5cbd8-5425-415e-8308-d14b94f56917",ICD10CM:"ed9742e5-fa5b-4644-9fb5-2f935ed08b1e",ICD9:"51ea1e1b-edc0-455a-a72b-9076860e284d",ISO6391:"eb04fe20-bbbc-4c70-9eef-045bc4f70982",ISO6392:"089044ea-dd41-4258-a497-e6247dd364f6",LOINC:"08c59397-706b-456a-aeb1-9e7d5a2adc94",SNOMEDCT:"b3030751-d4db-420b-b765-e837607820cd",UCUM:"4853a702-fff3-4efb-8dd7-54aacca53664"},ActClassKeys:{AccountManagement:"ca44a469-81d7-4484-9189-ca1d55afecbc",Act:"d874424e-c692-4fd8-b94e-642e1cbf83e9",Battery:"676de278-64aa-44f2-9b69-60d61fc1f5f5",CareProvision:"1071d24e-6fe9-480f-8a20-b1825ae4d707",Condition:"1987c53c-7ab8-4461-9ebc-0d428744a8c0",ControlAct:"b35488ce-b7cd-4dd4-b4de-5f83dc55af9f",Encounter:"54b52119-1709-4098-8911-5df6d6c84140",Inform:"192f1768-d39e-409d-87be-5afd0ee0d1fe",Observation:"28d022c6-8a8b-47c4-9e6a-2bc67308739e",Procedure:"8cc5ef0d-3911-4d99-937f-6cfdc2a27d55",Registration:"6be8d358-f591-4a3a-9a57-1889b0147c7e",SubstanceAdministration:"932a3c7e-ad77-450a-8a1f-030fc2855450",Supply:"a064984f-9847-4480-8bea-dddf64b3c77c",Transport:"61677f76-dc05-466d-91de-47efc8e7a3e6"},ActMoodKeys:{Appointment:"c46eee70-5612-473f-8d24-595ea15c9c39",AppointmentRequest:"0395f357-6821-4562-8192-49ac3c94f548",Definition:"3b14a426-6337-4f2a-b83b-e6be7dbcd5a5",Eventoccurrence:"ec74541f-87c4-4327-a4b9-97f325501747",Goal:"13925967-e748-4dd6-b562-1e1da3ddfb06",Intent:"099bcc5e-8e2f-4d50-b509-9f9d5bbeb58e",Promise:"b389dedf-be61-456b-aa70-786e1a5a69e0",Propose:"acf7baf2-221f-4bc2-8116-ceb5165be079",Request:"e658ca72-3b6a-4099-ab6e-7cf6861a5b61"},ActReasonKeys:{StartedTooLate:"b75bf533-9804-4450-83c7-23f0332f87b8",AllergyOrIntolerance:"4ff3617b-bb91-4f3f-b4d2-2425f477037f",Expired:"4b518938-b1ea-44e3-b837-31617fa188a4",VaccineSafety:"c6718df8-c8c0-49fd-a73d-52f6981ccbf7",ProfessionalJudgement:"9d947e6d-8406-42f3-bb8a-634fb3c81a08",ReligiousObjecton:"0d40c2b6-7ceb-4492-ab2a-6e7c730eaf22",PatientRefused:"42351a36-f60f-4687-b334-7a41b091bae1",OutOfStock:"c7469fad-f190-40a2-a28d-f97d1863e8cf",Broken:"dcff308d-cca5-4eb3-ad92-770917d88e56",ColdStorageFailure:"06922eac-0cae-49af-a33c-fc7096349e4a"},ActRelationshipTypeKeys:{Appends:"dc3df205-18ef-4854-ac00-68c295c9c744",Arrival:"26fe590c-3684-4574-9359-057fdd06ba61",Departure:"28c81cdc-ca56-4c92-b691-094e89630642",Documents:"0f4ba634-5107-4eab-9658-25be293cd831",EpisodeLink:"ebf9ac10-b5c9-407a-91a4-360bfb7e0fb9",Evaluates:"8dbeac94-cccb-4412-a990-09bab26dd048",Fulfills:"646542bc-72e4-488b-bbf4-865d452e62ec",HasAuthorization:"29894070-a76b-47ef-8c16-d84e0acd9ea6",HasComponent:"78b9540f-438b-4b6f-8d83-aaf4979dbc64",HasControlVariable:"85f68168-2a43-4532-bc79-191fa0b47c8b",HasManifestation:"22918d17-d3dc-4135-a003-4c1c52e57e75",HasPrecondition:"5a280fc0-8c26-4191-b204-b1b1e4e19462",HasReason:"55da61a2-7b86-47f3-9b0b-ba47dc99c950",HasReferenceValues:"99488a1d-6d97-4013-8c91-ded6ad3b8e89",HasSubject:"9871c3bc-b57a-479d-a031-7b56cb06fa84",HasSupport:"3209e3f1-2258-4b63-8182-2c888da66cf0",IsCauseOf:"57d81685-e399-4abd-8744-96454188a9fa",IsDerivedFrom:"81b6a0f8-b86a-495f-9d5d-8a4073fdd882",IsExcerptOf:"ffc6e905-161d-4c0b-8cde-a04e9e9d0cd5",RefersTo:"8fce259a-b859-4ae3-8160-0221f6ab1650",Replaces:"d1578637-e1cb-415e-b319-4011da033813",StartsAfterStartOf:"c66d7ca9-c6c2-46b1-9276-ad76baf04b07",Transforms:"db2ae02a-ff12-4c1b-9c5b-ecdd41af8583"},EmptyGuid:"00000000-0000-0000-0000-000000000000",Exception:function(n,t,i,r){_self=this;this.type=n;this.message=t;this.details=i;this.caused_by=r}};</contentText>
  </asset>
  <asset name="js/openiz-ng.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="angular.min.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-30
 */

/// &lt;reference path="openiz.js"/&gt;

/**
 * Open IZ Localization for angular
 */

angular.module('openiz', [])
    // Localization service
    .provider('localize', function localizeProvider()
    {

        this.$get = ['$rootScope', '$filter', function ($rootScope, $filter)
        {
            var localize = {
                dictionary: OpenIZ.Localization.getStrings(OpenIZ.Localization.getLocale()),
                /**
                 * @summary Sets the locale of the user interface 
                 */
                setLanguage: function (locale)
                {
                    if (OpenIZ.Localization.getLocale() != locale)
                    {
                        OpenIZ.Localization.setLocale(locale);
                        localize.dictionary = OpenIZ.Localization.getStrings(locale);
                        //$rootScope.$broadcast('localizeResourcesUpdated');
                        //$window.location.reload();
                        //$state.reload();
                        //$rootScope.$applyAsync();
                    }
                },
                /**
                 * @summary Gets the specified locale key
                 */
                getString: function (key)
                {

                    // make sure we always have the latest locale
                    //localize.dictionary = OpenIZ.Localization.getStrings(OpenIZ.Localization.getLocale());

                    var entry = localize.dictionary[key];
                    if (entry != null)
                        return entry;
                    else
                    {
                        var oiz = OpenIZ.Localization.getString(key);
                        if (oiz == null)
                            return key;
                        return oiz;
                    }
                }
            };
            return localize;
        }];
    })
    /** 
     * @summary Filter for localization
     * @use {{ KEY | i18n }}
     */
    .filter('i18n', ['$rootScope', 'localize', function ($rootScope, localize)
    {
        var filterFn = function (key)
        {
            return localize.getString(key);
        };
        filterFn.$stateful = false;
        return filterFn;
    }])
    .filter('oizEntityIdentifier', function ()
    {
        return function (modelValue)
        {
            if (modelValue === undefined)
                return "";
            if (modelValue.NID !== undefined)
                return modelValue.NID.value;
            else
                for (var k in modelValue)
                    return modelValue[k].value;
        };
    })
    .filter('oizConcept', function () {
        return function (modelValue) {
            if(modelValue != null &amp;&amp; modelValue.name != null)
                return OpenIZ.Util.renderConceptName(modelValue.name);
        }
    })
    .filter('oizEntityName', function ()
    {
        return function (modelValue)
        {
            return OpenIZ.Util.renderName(modelValue);
        }
    })
    .filter('oizEntityAddress', function ()
    {
        return function (modelValue)
        {
            return OpenIZ.Util.renderAddress(modelValue);
        }
    })
    .directive('oizTag', function ($timeout)
    {
        return {
            require: 'ngModel',
            link: function (scope, element, attrs, ctrl)
            {

                // Parsers
                ctrl.$parsers.unshift(tagParser);
                ctrl.$formatters.unshift(tagFormatter);
                function tagParser(viewValue)
                {
                    return String(viewValue).split(',');
                }
                function tagFormatter(viewValue)
                {
                    if (typeof (viewValue) === Array)
                        return viewValue.join(viewValue)
                    return viewValue;
                }

                // Tag input
                scope.$watch(attrs.ngModel, function (nvalue, ovalue)
                {
                    if (typeof (nvalue) == "string" &amp;&amp; ovalue != nvalue ||
                        typeof (nvalue) === Array &amp;&amp; ovalue.length != nvalue.length ||
                        // HACK: For SPA
                        $(element).attr('has-bound') === undefined) {
                        $(element).attr('has-bound', true);
                        $(element).trigger('change');
                    }
                });

                $(element).tokenfield({
                    delimiter: ' ,',
                    createTokensOnBlur: true
                });
            }
        }
    })
    .directive('oizDatabind', function ($timeout)
    {
        return {
            link: function (scope, element, attrs, ctrl)
            {
                $timeout(function ()
                {
                    var modelType = $(element).attr('oiz-databind');
                    var filterString = $(element).attr('data-filter');
                    var watchString = $(element).attr('data-watch');
                    var watchTargetString = $(element).attr('data-watch-target');
                    var displayString = $(element).attr('data-display');

                    var filter = {};
                    if (filterString !== undefined)
                        filter = JSON.parse(filterString);
                    filter.statusConcept = 'C8064CBD-FA06-4530-B430-1A52F1530C27';

                    var bind = function ()
                    {
                        // Get the bind element
                        $(element)[0].disabled = true;
                        OpenIZ.Ims.get({
                            resource: modelType,
                            query: filter,
                            finally: function ()
                            {
                                $(element)[0].disabled = false;
                            },
                            continueWith: function (data)
                            {
                                var options = $(element)[0].options;
                                $('option', element[0]).remove(); // clear existing 
                                options[options.length] = new Option(OpenIZ.Localization.getString("locale.common.unknown"));
                                for (var i in data.item)
                                {
                                    var text = null;
                                    if (displayString != null)
                                    {
                                        var scope = data.item[i];
                                        // HACK:
                                        text = eval(displayString);
                                    }
                                    else
                                        text = OpenIZ.Util.renderName(data.item[i].name.OfficialRecord);

                                    // Append element
                                    options[options.length] = new Option(text, data.item[i].id);
                                }
                            }
                        });
                    };

                    if (watchString !== null)
                        scope.$watch(watchString, function (newValue, oldValue)
                        {
                            if (watchTargetString !== null &amp;&amp; newValue !== undefined)
                                filter[watchTargetString] = newValue;

                            bind();
                        });

                });
            }
        };
    })
    .directive('oizEntitysearch', function ($timeout)
    {
        return {
            link: function (scope, element, attrs, ctrl)
            {
                $timeout(function ()
                {

                    var modelType = $(element).attr('oiz-entitysearch');
                    var filterString = $(element).attr('data-filter');
                    var displayString = $(element).attr('data-display');
                    var defaultFilterString = $(element).attr('data-default');
                    var groupString = $(element).attr('data-group-by');
                    var groupDisplayString = $(element).attr('data-group-display');

                    var filter = {}, defaultFilter = {};
                    if (filterString !== undefined)
                        filter = JSON.parse(filterString);
                    if (defaultFilterString !== undefined)
                        filter = JSON.parse(defaultFilterString);
                    filter.statusConcept = 'C8064CBD-FA06-4530-B430-1A52F1530C27';

                    // Add appropriate styling so it looks half decent
                    $(element).attr('style', 'width:100%; height:100%');

                    // Bind select 2 search
                    $(element).select2({
                        dataAdapter: $.fn.select2.amd.require('select2/data/extended-ajax'),
                        defaultResults: function ()
                        {

                            if ($(element[0]).attr('data-default-results') != null)
                            {
                                return JSON.parse($(element[0]).attr('data-default-results'));
                            }
                            else
                            {
                                return $.map($('option', element[0]), function (o)
                                {
                                    return { "id": o.value, "text": o.innerText };
                                });
                            }
                        },
                        ajax: {
                            url: "/__ims/" + modelType,
                            dataType: 'json',
                            delay: 500,
                            method: "GET",
                            data: function (params)
                            {
                                filter["name.component.value"] = "~" + params.term;
                                filter["_count"] = 5;
                                filter["_offset"] = 0;
                                return filter;
                            },
                            processResults: function (data, params)
                            {
                                $('option', element[0]).remove(); // clear existing 

                                //params.page = params.page || 0;
                                var data = data.item || data;
                                var retVal = { results: [] };
                                if (groupString == null)
                                    return {
                                        results: $.map(data, function (o)
                                        {
                                            o.text = o.text || (o.name !== undefined ? OpenIZ.Util.renderName(o.name.OfficialRecord) : "");
                                            return o;
                                        })
                                    };
                                else
                                {
                                    // Get the group string
                                    for (var itm in data)
                                    {
                                        // parent obj
                                        try
                                        {
                                            var scope = eval('data[itm].' + groupString);
                                            var groupDisplay = "";
                                            if (groupDisplayString != null)
                                                groupDisplay = eval(groupDisplayString);
                                            else
                                                groupDisplay = scope;

                                            var gidx = $.grep(retVal.results, function (e) { return e.text == groupDisplay });
                                            if (gidx.length == 0)
                                                retVal.results.push({ "text": groupDisplay, "children": [data[itm]] });
                                            else
                                                gidx[0].children.push(data[itm]);
                                        }
                                        catch (e)
                                        {
                                            retVal.results.push(data[itm]);
                                        }
                                    }
                                }

                                return retVal;
                            },
                            cache: true
                        },
                        escapeMarkup: function (markup) { return markup; }, // Format normally
                        minimumInputLength: 4,
                        templateSelection: function (result)
                        {
                            var retVal = "";
                            switch (modelType)
                            {
                                case "UserEntity":
                                case "Provider":
                                    retVal += "&lt;span class='glyphicon glyphicon-user'&gt;&lt;/span&gt;";
                                    break;
                                case "Place":
                                    retVal += "&lt;span class='glyphicon glyphicon-map-marker'&gt;&lt;/span&gt;";
                                    break;
                            }
                            retVal += "&amp;nbsp;";
                            if (displayString != null)
                            {
                                var scope = result;
                                retVal += eval(displayString);
                            }
                            else if (result.name != null)
                                retVal += OpenIZ.Util.renderName(result.name.OfficialRecord);
                            else if (result.element !== undefined)
                                retVal += result.element.innerText;
                            else if (result.text != "")
                                retVal += result.text;
                            return retVal;
                        },
                        keepSearchResults: true,
                        templateResult: function (result)
                        {
                            if (displayString != null)
                            {
                                var scope = result;
                                return eval(displayString);
                            }
                            else if (result.name != null &amp;&amp; result.typeConceptModel != null &amp;&amp; result.typeConceptModel.name != null)
                                return "&lt;div class='label label-default'&gt;" +
                                    result.typeConceptModel.name[OpenIZ.Localization.getLocale()] + "&lt;/div&gt; " + OpenIZ.Util.renderName(result.name.OfficialRecord);
                            else if (result.name != null)
                                return "&lt;div class='label label-default'&gt;" +
                                    result.$type + "&lt;/div&gt; " + OpenIZ.Util.renderName(result.name.OfficialRecord);
                            else
                                return result.text;
                        }
                    });
                });
            }
        };
    })
    .directive('oizCollapseindicator', function ()
    {
        return {
            link: function (scope, element, attrs, ctrl)
            {
                $(element).on('hide.bs.collapse', function ()
                {
                    var indicator = $(this).attr('data-oiz-chevron');
                    $(indicator).removeClass('glyphicon-chevron-down');
                    $(indicator).addClass('glyphicon-chevron-right');
                });
                $(element).on('show.bs.collapse', function ()
                {
                    var indicator = $(this).attr('data-oiz-chevron');
                    $(indicator).addClass('glyphicon-chevron-down');
                    $(indicator).removeClass('glyphicon-chevron-right');
                });
            }
        };
    });</contentText>
  </asset>
  <asset name="js/openiz-ng.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */
angular.module("openiz",[]).provider("localize",function(){this.$get=["$rootScope","$filter",function(){var n={dictionary:OpenIZ.Localization.getStrings(OpenIZ.Localization.getLocale()),setLanguage:function(t){OpenIZ.Localization.getLocale()!=t&amp;&amp;(OpenIZ.Localization.setLocale(t),n.dictionary=OpenIZ.Localization.getStrings(t))},getString:function(t){var r=n.dictionary[t],i;return r!=null?r:(i=OpenIZ.Localization.getString(t),i==null)?t:i}};return n}]}).filter("i18n",["$rootScope","localize",function(n,t){var i=function(n){return t.getString(n)};return i.$stateful=!1,i}]).filter("oizEntityIdentifier",function(){return function(n){if(n===undefined)return"";if(n.NID!==undefined)return n.NID.value;for(var t in n)return n[t].value}}).filter("oizConcept",function(){return function(n){if(n!=null&amp;&amp;n.name!=null)return OpenIZ.Util.renderConceptName(n.name)}}).filter("oizEntityName",function(){return function(n){return OpenIZ.Util.renderName(n)}}).filter("oizEntityAddress",function(){return function(n){return OpenIZ.Util.renderAddress(n)}}).directive("oizTag",function(){return{require:"ngModel",link:function(n,t,i,r){function u(n){return String(n).split(",")}function f(n){return typeof n===Array?n.join(n):n}r.$parsers.unshift(u);r.$formatters.unshift(f);n.$watch(i.ngModel,function(n,i){(typeof n=="string"&amp;&amp;i!=n||typeof n===Array&amp;&amp;i.length!=n.length||$(t).attr("has-bound")===undefined)&amp;&amp;($(t).attr("has-bound",!0),$(t).trigger("change"))});$(t).tokenfield({delimiter:" ,",createTokensOnBlur:!0})}}}).directive("oizDatabind",function(n){return{link:function(t,i){n(function(){var s=$(i).attr("oiz-databind"),r=$(i).attr("data-filter"),u=$(i).attr("data-watch"),f=$(i).attr("data-watch-target"),e=$(i).attr("data-display"),n={},o;r!==undefined&amp;&amp;(n=JSON.parse(r));n.statusConcept="C8064CBD-FA06-4530-B430-1A52F1530C27";o=function(){$(i)[0].disabled=!0;OpenIZ.Ims.get({resource:s,query:n,"finally":function(){$(i)[0].disabled=!1},continueWith:function(n){var t=$(i)[0].options,r,u,f;$("option",i[0]).remove();t[t.length]=new Option(OpenIZ.Localization.getString("locale.common.unknown"));for(r in n.item)u=null,e!=null?(f=n.item[r],u=eval(e)):u=OpenIZ.Util.renderName(n.item[r].name.OfficialRecord),t[t.length]=new Option(u,n.item[r].id)}})};u!==null&amp;&amp;t.$watch(u,function(t){f!==null&amp;&amp;t!==undefined&amp;&amp;(n[f]=t);o()})})}}}).directive("oizEntitysearch",function(n){return{link:function(t,i){n(function(){var r=$(i).attr("oiz-entitysearch"),u=$(i).attr("data-filter"),t=$(i).attr("data-display"),f=$(i).attr("data-default"),e=$(i).attr("data-group-by"),o=$(i).attr("data-group-display"),n={};u!==undefined&amp;&amp;(n=JSON.parse(u));f!==undefined&amp;&amp;(n=JSON.parse(f));n.statusConcept="C8064CBD-FA06-4530-B430-1A52F1530C27";$(i).attr("style","width:100%; height:100%");$(i).select2({dataAdapter:$.fn.select2.amd.require("select2/data/extended-ajax"),defaultResults:function(){return $(i[0]).attr("data-default-results")!=null?JSON.parse($(i[0]).attr("data-default-results")):$.map($("option",i[0]),function(n){return{id:n.value,text:n.innerText}})},ajax:{url:"/__ims/"+r,dataType:"json",delay:500,method:"GET",data:function(t){return n["name.component.value"]="~"+t.term,n._count=5,n._offset=0,n},processResults:function(n){var n,t,r,s,u,f;if($("option",i[0]).remove(),n=n.item||n,t={results:[]},e==null)return{results:$.map(n,function(n){return n.text=n.text||(n.name!==undefined?OpenIZ.Util.renderName(n.name.OfficialRecord):""),n})};for(r in n)try{s=eval("data[itm]."+e);u="";u=o!=null?eval(o):s;f=$.grep(t.results,function(n){return n.text==u});f.length==0?t.results.push({text:u,children:[n[r]]}):f[0].children.push(n[r])}catch(h){t.results.push(n[r])}return t},cache:!0},escapeMarkup:function(n){return n},minimumInputLength:4,templateSelection:function(n){var i="",u;switch(r){case"UserEntity":case"Provider":i+="&lt;span class='glyphicon glyphicon-user'&gt;&lt;\/span&gt;";break;case"Place":i+="&lt;span class='glyphicon glyphicon-map-marker'&gt;&lt;\/span&gt;"}return i+="&amp;nbsp;",t!=null?(u=n,i+=eval(t)):n.name!=null?i+=OpenIZ.Util.renderName(n.name.OfficialRecord):n.element!==undefined?i+=n.element.innerText:n.text!=""&amp;&amp;(i+=n.text),i},keepSearchResults:!0,templateResult:function(n){if(t!=null){var i=n;return eval(t)}return n.name!=null&amp;&amp;n.typeConceptModel!=null&amp;&amp;n.typeConceptModel.name!=null?"&lt;div class='label label-default'&gt;"+n.typeConceptModel.name[OpenIZ.Localization.getLocale()]+"&lt;\/div&gt; "+OpenIZ.Util.renderName(n.name.OfficialRecord):n.name!=null?"&lt;div class='label label-default'&gt;"+n.$type+"&lt;\/div&gt; "+OpenIZ.Util.renderName(n.name.OfficialRecord):n.text}})})}}}).directive("oizCollapseindicator",function(){return{link:function(n,t){$(t).on("hide.bs.collapse",function(){var n=$(this).attr("data-oiz-chevron");$(n).removeClass("glyphicon-chevron-down");$(n).addClass("glyphicon-chevron-right")});$(t).on("show.bs.collapse",function(){var n=$(this).attr("data-oiz-chevron");$(n).addClass("glyphicon-chevron-down");$(n).removeClass("glyphicon-chevron-right")})}}});</contentText>
  </asset>
  <asset name="js/openiz.js" mimeType="text/javascript">
    <contentText>/// &lt;reference path="openiz-model.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */

/// &lt;reference path="openiz-bre.js"/&gt;

/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */

/// &lt;reference path="~/lib/select2.min.js"/&gt;

/**
 * @version 0.6.12 (Dalhouse)
 * @copyright (C) 2015-2016, Mohawk College of Applied Arts and Technology
 * @license Apache 2.0
 */


/// &lt;reference path="~/lib/jquery.min.js"/&gt;
// SHIM
var OpenIZApplicationService = window.OpenIZApplicationService || {};
var OpenIZSessionService = window.OpenIZSessionService || {};

/**
 * @callback OpenIZ~continueWith
 * @summary The function call which is called whenever an asynchronous operation completes successfully
 * @param {Object} data The result data from the asynchronous callback
 * @param {Object} state State data which is to be passed to the async callback
 */
/**
 * @callback OpenIZ~onException
 * @summary The exception handling callback whenever an asynchronous operation does not complete successfully
 * @param {OpenIZModel#Exception} exception The exception which was thrown as a result of the operation.
 * @param {Object} state State data which is to be passed to the async callback
 */
/**
 * @callback OpenIZ~finally
 * @summary The callback which is always executed from an asynchronous call regardless of whehter the operation was successful or not
 * @param {Object} state State data which is to be passed to the async callback
 */
/**
 * @summary OpenIZ Javascript binding class.
 *
 * @description The purpose of this object is to facilitate and organize OpenIZ applet integration with the backing  * OpenIZ container. For example, to allow an applet to get the current on/offline status, or authenticate a user.
 * @namespace OpenIZ
 * @property {Object} _session the current session
 * @property {Object} urlParams the current session
 */
var OpenIZ = OpenIZ || {

    /** 
     * @summary URL Parameters
     */
    urlParams: {},
    /** 
     * @summary Provides a mechanism for user interface interaction with OpenIZ
     * @class
     * @static
     * @memberof OpenIZ
     */
    UserInterface: {

    },
    /**
     * @summary Provides operations for managing {@link OpenIZModel.Act} instances.
     * @memberof OpenIZ
     * @static
     * @class
     */
    Act: {
        /**
         * @summary Asynchronously deletes an encounter object in the IMS
         * @memberof OpenIZ.Act
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {uuid} controlData.id The identifier of the act that is to be updated
         * @see {OpenIZ.IMS.delete}
         * @see OpenIZModel.Act
         */
        obsoleteAsync: function (controlData) {
            OpenIZ.Ims.delete({
                resource: "Act",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                id: controlData.id,
                state: controlData.state
            });
        },
        /**
         * @summary Creates a fulfillment relationship act
         * @description This method creates a new act which fulfills the specified act
         * @param {OpenIZModel.Act} act The act which the new act should fulfill
         */
        createFulfillment: function (act) {

            var fulfills = new OpenIZModel.Act();

            // Clone act
            switch (act.$type) {
                case "SubstanceAdministration":
                    fulfills = new OpenIZModel.SubstanceAdministration(act);
                    break;
                case "Observation":
                    fulfills = new OpenIZModel.Observation(act);
                    break;
                case "QuantityObservation":
                    fulfills = new OpenIZModel.QuantityObservation(act);
                    break;
                case "CodedObservation":
                    fulfills = new OpenIZModel.CodedObservation(act);
                    break;
                case "TextObservation":
                    fulfills = new OpenIZModel.TextObservation(act);
                    break;
                case "PatientEncounter":
                    fulfills = new OpenIZModel.PatientEncounter(act);
                    break;
                case "ControlAct":
                    fulfills = new OpenIZModel.ControlAct(act);
                    break;
                default:
                    break;
            }

            // Re-assign the identifier
            fulfills._overdue = act.stopTime &lt; new Date();
            fulfills.id = OpenIZ.App.newGuid();
            fulfills.moodConcept = OpenIZModel.ActMoodKeys.Eventoccurrence;
            fulfills.moodConceptModel = null;
            fulfills.creationTime = new Date();
            fulfills.createdBy = fulfills.createdByModel = null;
            fulfills.statusConcept = OpenIZModel.StatusKeys.Active;
            fulfills.statusConceptModel = null;
            fulfills.etag = null;
            // Add fulfillment relationship
            fulfills.relationship = fulfills.relationship || {};
            fulfills.relationship.Fulfills = new OpenIZModel.ActRelationship();
            fulfills.relationship.Fulfills.target = act.id;
            fulfills.relationship.Fulfills.targetModel = act;

            // Create new KEYS
            var roles = Object.keys(fulfills.participation);
            for (var v in roles) {
                var role = roles[v];
                if (fulfills.participation[role].splice !== undefined)
                    for (var k in fulfills.participation[role])
                        fulfills.participation[role][k] = new OpenIZModel.ActParticipation({
                            act: fulfills.id,
                            player: fulfills.participation[role][k].player,
                            playerModel: fulfills.participation[role][k].playerModel
                        });
                else
                    fulfills.participation[role] = new OpenIZModel.ActParticipation({
                        act: fulfills.id,
                        player: fulfills.participation[role].player,
                        playerModel: fulfills.participation[role].playerModel
                    })
            }

            if (fulfills._overdue) {
            }
            else {
                fulfills.actTime = new Date();
                fulfills.startTime = fulfills.stopTime = null;
            }

            return fulfills;
        },
        /**
          * @summary Perform a search of acts asynchronously
          * @memberof OpenIZ.Act
          * @method
          * @param {Object} controlData An object containing search, offset, count and callback data
          * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
          * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
          * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
          * @param {object} controlData.query The query filters to apply to the search
          * @param {int} controlData.query._count The limit of results to return from the ims
          * @param {int} controlData.query._offset The offset of the search result window
          * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
          * @see {OpenIZ.IMS.get}
          */
        findAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "Act",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                query: controlData.query,
                state: controlData.state
            });
        },
        /**
         * @summary Performs a patient insert asynchronously
         * @memberof OpenIZ.Act
         * @method
         * @see {OpenIZ.Ims.post}
         * @param {object} controlData The data which controls the asynchronous process
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {OpenIZModel.Act} controlData.data The data which is to be inserted on the IMS
         * @example
         * OpenIZ.Act.insertAsync({
         *      data: new OpenIZModel.Act(...),
         *      continueWith: function(result) { // Do something with result },
         *      onException: function(ex) { // Handle exception }
         * });
         */
        insertAsync: function (controlData) {
            OpenIZ.Ims.post({
                resource: "Act",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                data: controlData.data,
                state: controlData.state
            });
        },
        /**
         * @summary Get an empty act template object asynchronously. See the OpenIZ documentation for more information about templates
         * @method
         * @memberof OpenIZ.CarePlan
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.templateId The identifier of the template which to retrieve. Templates should be registered with the application manifest
         * @example
         * OpenIZ.Act.getActTemplateAsync({
         *      templateId: "Act.SubstanceAdmin.Immunization", 
         *      continueWith: function(template) {
         *          $scope.act = template;
         *      }
         * });
         */
        getActTemplateAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "Act/Template",
                query: { "templateId": controlData.templateId },
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        }
    },

    /**
     * @summary Interoperation with the IMS
     * @see OpenIZModel
     * @static
     * @class
     * @memberof OpenIZ
     */
    Ims: {
        /**
         * @summary Post data to the IMS
         * @memberof OpenIZ.Ims
         * @param {object} controlData The data which controls the asynchronous process
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.resource The IMSI resource id to be posted to
         * @param {object} controlData.data The IMSI resource data to be posted to the IMS
         * @method
         */
        post: function (controlData) {
            $.ajax({
                method: 'POST',
                url: "/__ims/" + controlData.resource,
                // || WARNING: JAVASCRIPT RANT AHEAD              ||
                // ||                                             ||
                // || Why!? Why!? Why is this even a line of code?||
                // || I specified JSON and application/json yet   ||
                // || the 1337 haxors at jQ decide not to encode  ||
                // || the JSON data I send as JSON!? Why!?        ||
                // \/ Stuff like this is why I dislike JavaScript \/
                data: JSON.stringify(controlData.data),
                dataType: "json",
                contentType: 'application/json',
                success: function (xhr, data) {

                    if (controlData.continueWith !== undefined)
                        controlData.continueWith(xhr, controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (controlData.onException === null)
                        console.error(error);
                    else if (error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);
                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                }
            });
        },
        /**
         * @summary Put (Update) data in the IMS
         * @memberof OpenIZ.Ims
         * @param {object} controlData The data which controls the asynchronous process
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.resource The IMSI resource id to be posted to
         * @param {uuid} controlData.id The identifier of the resource to be updated
         * @param {uuid} controlData.versionId The version identifier of the resource to be updated
         * @param {object} controlData.data The IMSI resource data to be posted to the IMS
         * @method
        */
        put: function (controlData) {
            $.ajax({
                method: 'PUT',
                url: "/__ims/" + controlData.resource + "?_id=" + controlData.id + "&amp;_versionId=" + controlData.versionId,
                // || WARNING: JAVASCRIPT RANT AHEAD              ||
                // ||                                             ||
                // || Why!? Why!? Why is this even a line of code?||
                // || I specified JSON and application/json yet   ||
                // || the 1337 haxors at jQ decide not to encode  ||
                // || the JSON data I send as JSON!? Why!?        ||
                // \/ Stuff like this is why I dislike JavaScript \/
                data: JSON.stringify(controlData.data),
                dataType: "json",
                contentType: 'application/json',
                success: function (xhr, data) {

                    if (controlData.continueWith !== undefined)
                        controlData.continueWith(xhr, controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (controlData.onException === null)
                        console.error(error);
                    else if (error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);

                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                }
            });
        },
        /**
         * @summary Get data from the IMS
         * @memberof OpenIZ.Ims
         * @param {object} controlData The data which controls the asynchronous process
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.resource The IMSI resource id to be posted to
         * @param {object} controlData.query The IMSI query (see documentation for structure) to execute
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @method
         */
        get: function (controlData) {
            $.ajax({
                method: 'GET',
                url: "/__ims/" + controlData.resource,
                data: controlData.query,
                dataType: "json",
                accept: 'application/json',
                contentType: 'application/json',
                success: function (xhr, data) {
                    if (controlData.continueWith !== undefined)
                        controlData.continueWith(xhr, controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (controlData.onException === undefined)
                        console.error(error);
                    else if (error != undefined &amp;&amp; error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);
                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);

                    // Do finally
                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);

                }
            });
        },
        /**
         * @summary Deletes data from the IMS
         * @memberof OpenIZ.Ims
         * @param {object} controlData The data which controls the asynchronous process
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.resource The IMSI resource id to be posted to
         * @param {object} controlData.id The identifier of the object to delete from the IMS 
         * @method
         */
        delete: function (controlData) {
            $.ajax({
                method: 'DELETE',
                url: "/__ims/" + controlData.resource + "?_id=" + controlData.id,
                accept: 'application/json',
                contentType: 'application/json',
                success: function (xhr, data) {
                    if (controlData.continueWith !== undefined)
                        controlData.continueWith(xhr, controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (controlData.onException === undefined)
                        console.error(error);
                    else if (error != undefined &amp;&amp; error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);
                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);

                    // Do finally
                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);

                }
            });
        }
    },
    /**
     * @summary Stock Functions
     * @description In particular stock actions comprise a series of calculations
     * @memberof OpenIZ
     * @static
     * @class
     */
    Stock: {
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @param {int} qYear TODO
         * @param {int} pSupply TODO
         * @return TODO
         */
        calculateQPeriod: function (qYear, pSupply) {
            return qYear / 12 * pSupply;
        },
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @return TODO
         */
        calculateSReserve: function (qPeriod, reservePercent) {
            return qPeriod * reservePercent;
        },
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @return TODO
         */
        calculateSMax: function (qPeriod, sReserve) {
            return qPeriod + sReserve;
        },
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @return TODO
         */
        calculateSReorder: function (sReserve, qPeriod, lTime, pSupply) {
            return sReserve + qPeriod * lTime / pSupply;
        },
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @return TODO
         */
        calculateQOrder: function (sMax, sAvailable, qPeriod, lTime, pSupply) {
            return sMax - sAvailable + qPeriod * lTime / pSupply;
        },
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @return TODO
         */
        calculateQNeeded: function (sStart, qRecieved, sEnd, sLost) {
            return (sStart + qRecieved) - (sEnd + sLost);
        },
        /**
         * @summary TODO:
         * @method
         * @memberof OpenIZ.Stock
         * @return TODO
         */
        calculateAll: function (qYear, pSupply, reservePercent, lTime, sAvailable) {
            var object = {};
            object.qPeriod = OpenIZ.Stock.calculateQPeriod(qYear, pSupply);
            object.sReserve = OpenIZ.Stock.calculateSReserve(object.qPeriod, reservePercent);
            object.sMax = OpenIZ.Stock.calculateSMax(object.qPeriod, object.sReserve);
            object.sReorder = OpenIZ.Stock.calculateSReorder(object.sReserve, object.qPeriod, lTime, pSupply);
            object.qOrder = OpenIZ.Stock.calculateQOrder(object.sMax, sAvailable, object.qPeriod, lTime, pSupply);
            return object;
        }
    },
    /**
     * @summary Utility functions which assist in the writing of other OpenIZ functions
     * @static
     * @class
     * @memberof OpenIZ
     */
    Util: {
        /** 
         * @summary Renders the specified concept name
         * @memberof OpenIZ.Util
         * @method
         * @param {OpenIZModel.ConceptName} name The concept name to be rendered
         */
        renderConceptName: function (name) {
            if (typeof (name) == "String") return name;
            else if (name[OpenIZ.Localization.getLocale()] != null)
                return name[OpenIZ.Localization.getLocale()];
            else
                return name[Object.keys(name)[0]];
        },
        /**
         * @summary Perform a simple post of JSON data to the backend
         * @method
         * @memberof
         * @param {object} controlData The control data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} url The URL from which to post to 
         * @param {object} controlData.data The query to be posted as JSON
         */
        simplePost: function (url, controlData) {
            controlData.onException = controlData.onException || OpenIZ.Util.logException;

            $.ajax({
                method: 'POST',
                url: url,
                data: JSON.stringify(controlData.data),
                dataType: "json",
                contentType: 'application/json',
                success: function (xhr, data) {

                    if (controlData.continueWith !== undefined)
                        controlData.continueWith(xhr, controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (controlData.onException === null)
                        console.error(error);
                    else if (error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);

                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                }
            });
        },
        /**
         * @summary Perform a simple get not necessarily against the IMS
         * @method
         * @memberof OpenIZ.Util   
         * @param {object} controlData The control data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} url The URL from which to retrieve 
         * @param {object} controlData.query The query to be included
         */
        simpleGet: function (url, controlData) {
            controlData.onException = controlData.onException || OpenIZ.Util.logException;
            // Perform auth request
            $.getJSON(url, controlData.query, function (data) {

                if (data != null &amp;&amp; data.error !== undefined)
                    controlData.onException(new OpenIZModel.Exception(data.type, data.error), controlData.state
                    );
                else if (data != null) {
                    controlData.continueWith(data, controlData.state);
                }
                else
                    controlData.onException(new OpenIZModel.Exception("Exception", "err_general",
                        data,
                        null
                    ), controlData.state);
            }).error(function (data) {
                var error = data.responseJSON;
                if (error != null &amp;&amp; error.error !== undefined) //  error
                    controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                            error.error_description,
                            null
                        ), controlData.state);

                else // unknown error
                    controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                            data,
                            null
                        ), controlData.state);
            }).always(function () {
                if (controlData.finally !== undefined)
                    controlData.finally(controlData.state);
            });
        },
        /**
         * @summary Render address for display
         * @method
         * @memberof OpenIZ.Util
         * @param {OpenIZModel.EntityAddress} entity The addres of the entity or the entity itself to render the address of
         * @return {string} The address formatted as an appropriate string for simple formatting
         */
        renderAddress: function (entity) {
            if (entity === undefined) return;

            var address = entity.component !== undefined ? entity :
                entity.address !== undefined ? (entity.address.Direct || entity.address.HomeAddress) :
                (entity.Direct || entity.HomeAddress);
            var retVal = "";
            if (address.component.AdditionalLocator)
                retVal += address.component.AdditionalLocator + ", ";
            if (address.component.StreetAddressLine)
                retVal += address.component.StreetAddressLine + ", ";
            if (address.component.City)
                retVal += address.component.City + ", ";
            if (address.component.County != null)
                retVal += address.component.County + ", ";
            if (address.component.State != null)
                retVal += address.component.State + ", ";
            if (address.component.Country != null)
                retVal += address.component.Country + ", ";
            return retVal.substring(0, retVal.length - 2);
        },
        /**
         * @summary Render act as a simple string
         * @memberof OpenIZ.Util
         * @method
         * @param {OpenIZModel.Act} act The act to render as a simple string
         * @return {string} The rendered string 
         */
        renderAct: function (act) {
            switch (act.$type) {
                case "SubstanceAdministration":
                    return OpenIZ.Localization.getString("locale.encounters.administer") +
                        OpenIZ.Util.renderName(act.participation.Product.name.OfficialRecord);
                case "QuantityObservation":
                case "CodedObservation":
                case "TextObservation":
                    return OpenIZ.Localization.getString('locale.encounters.observe') +
                        act.typeConceptModel.name[OpenIZ.Localization.getLocale()];
                default:
                    return "";
            }
        },
        /**
         * @summary Log an exception to the console
         * @method
         * @memberof OpenIZ.Util
         * @param {OpenIZModel.Exception} e The exception to be logged to the console
         */
        logException: function (e) {
            console.warn(e);
        },
        /** 
         * @summary Render a manufactured material as a simple string
         * @method
         * @memberof OpenIZ.Util
         * @param {OpenIZModel.ManufacturedMaterial} material The material which is to be rendered as a string
         * @return {string} The material rendered as a string in format "&lt;&lt;name&gt;&gt; [LN# &lt;&lt;ln&gt;&gt;]"
         */
        renderManufacturedMaterial: function (material) {
            var name = OpenIZ.Util.renderName(material.name.OfficialRecord || material.name.Assigned);
            return name + "[LN#: " + material.lotNumber + "]";
        },
        /** 
         * @summary Renders a name as a simple string
         * @method
         * @meberof OpenIZ.Util
         * @param {OpenIZModel.EntityName} entityName The entity name to be rendered in the appropriate format
         * @return {string} The rendered entity name
         */
        renderName: function (entityName) {
            if (entityName === null || entityName === undefined)
                return "";
            else if (entityName.join !== undefined)
                return entityName.join(' ');
            else if (entityName.component !== undefined) {
                var nameStr = "";
                if (entityName.component.Given !== undefined) {
                    if (typeof (entityName.component.Given) === "string")
                        nameStr += entityName.component.Given;
                    else if (entityName.component.Given.join !== undefined)
                        nameStr += entityName.component.Given.join(' ');
                    nameStr += " ";
                }
                if (entityName.component.Family !== undefined) {
                    if (typeof (entityName.component.Family) === "string")
                        nameStr += entityName.component.Family;
                    else if (entityName.component.Family.join !== undefined)
                        nameStr += entityName.component.Family.join(' ');
                }
                if (entityName.component.$other !== undefined) {
                    if (typeof (entityName.component.$other) === "string")
                        nameStr += entityName.component.$other;
                    else if (entityName.component.$other.join !== undefined)
                        nameStr += entityName.component.$other.join(' ');
                    else if (entityName.component.$other.value !== undefined)
                        nameStr += entityName.component.$other.value;

                }
                return nameStr;
            }
            else
                return entityName;
        },
        /**
         * @summary Changes the specified date string into an appropriate ISO string
         * @memberof OpenIZ.Util
         * @method
         * @param {String} date The date to be formatted
         * @return {string} A DATE as an ISO String only
         */
        toDateInputString: function (date) {
            return date.toISOString().substring(0, 10);
        },
        /**
         * @summary Start a task asynchronously
         * @memberof OpenIZ.Util
         * @method
         * @param {Function} syncFn The synchronous function to be executed
         * @param {Object} control Control data for the async method
         * @param {Function} control.continueWith A callback method to be called when the operation completes successfully
         * @param {Function} control.onException A callback method to be called when the operation throws an exception
         * @example
         * OpenIZ.Util.startTaskAsync(function() {
         *      return doSomeSynchronousWork();
         * }, {
         *      continueWith: function(result) { console.info("Result of doSomeSynchronousWork() = " + result); },
         *      onException: function(ex) { console.error("doSomeSynchronousWork threw exception " + ex); }
         * });
         * @deprecated
         */
        startTaskAsync: function (syncFn, controlData) {
            return setTimeout(function () {
                try {
                    controlData.continueWith(syncFn(), controlData.state);
                }
                catch (ex) {
                    if (controlData.onException === undefined)
                        console.error(ex);
                    else
                        controlData.onException(ex, controlData.state);
                }
            }, 0);
        }
    },

    /** 
    * @summary The authentication section is used to interface with OpenIZ's authentication sub-systems including session management information, etc.
    * @see OpenIZModel.SecurityUser
     * @static
     * @class
    * @memberof OpenIZ
    */
    Authentication: {
        /** 
         * @summary Cached session
         */
        $session: null,
        /**
         * @summary Credentials to use for elevation in lieu of the current session
         */
        $elevationCredentials: {},
        /** 
         * @summary Send a TFA secret
         * @method
         * @memberof OpenIZ.Authentication
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         */
        sendTfaSecretAsync: function (controlData) {
            OpenIZ.Util.simplePost("/__auth/tfa", controlData);
        },
        /** 
         * @summary Get the TFA mechanisms
         * @method
         * @memberof OpenIZ.Authentication
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         */
        getTfaMechanisms: function (controlData) {
            OpenIZ.Util.simpleGet("/__auth/tfa", controlData);
        },
        /**
         * @summary Show an elevation dialog
         * @method
         * @memberof OpenIZ.Authentication
         */
        showElevationDialog: function () {
            $("#authenticationDialog").modal('show');
        },
        /** 
         * @summary Hide the elevation dialog
         * @method
         * @memberof OpenIZ.Authentication
         */
        hideElevationDialog: function () {
            $("#authenticationDialog").modal('hide');
        },
        /**
         * @summary Perform a login operation asynchronously
         * @memberof OpenIZ.Authentication
         * @method
         * @see {OpenIZ.Util.simpleGet}
         * @param {string} controlData.userName The username to use when authenticating
         * @param {string} controlData.password The password of the user to authenticate with
         * @param {string} controlData.scope The scope to append to the OAUTH request
         * @param {string} controlData.tfaSecret The scope to append to the OAUTH request
         * @param {object} controlData The data which controls the asynchronous process
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @example
         * OpenIZ.Authentication.loginAsync({
         *      userName: "bob",
         *      password: "Mohawk1",
         *      continueWith: function(result) { // do something here },
         *      onException: function(ex) { // handle exception }
         * });
         */
        loginAsync: function (controlData) {
            // Perform auth request
            $.ajax(
             {
                 method: 'POST',
                 url: '/__auth/authenticate',
                 data: {
                     username: controlData.userName,
                     password: controlData.password,
                     grant_type: controlData.tfaSecret != null ? 'tfa' : 'password',
                     tfaSecret: controlData.tfaSecret,
                     scope: controlData.scope
                 },
                 dataType: "json",
                 contentType: 'application/x-www-urlform-encoded',
                 success: function (xhr, data) {
                     if (data != null &amp;&amp; data.error !== undefined)
                         controlData.onException(new OpenIZModel.Exception(data.type, data.error), controlData.state
                         );
                     else if (data != null) {
                         controlData.continueWith(data, controlData.state);
                         OpenIZ.Authentication.$session = data;
                     }
                     else
                         controlData.onException(new OpenIZModel.Exception("Exception", "err_general",
                             data,
                             null
                         ), controlData.state);

                     if (controlData.finally !== undefined)
                         controlData.finally(controlData.state);
                 },
                 error: function (data) {
                     var error = data.responseJSON;
                     if (error != null &amp;&amp; error.error !== undefined) // oauth 2 error
                         controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                 error.error_description,
                                 null
                             ), controlData.state);

                     else // unknown error
                         controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                 data,
                                 null
                             ), controlData.state);
                     if (controlData.finally !== undefined)
                         controlData.finally(controlData.state);

                 }
             });
        },
        /**
         * @summary Set password for the specified user asynchronously
         * @memberof OpenIZ.Authentication
         * @method
         * @param {object} controlData The data which controls the asynchronous process
         * @param {string} controlData.userName The name of the user to set the password of
         * @param {string} controlData.password The password to set
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @example
         *  OpenIZ.Authentication.setPasswordAsync({
         *      userName : "bob",
         *      password : "Mohawk321",
         *      continueWith : function(d) { // TODO: Do something with result },
         *      onException: function(ex) { // handle exception }
         * });
         */
        setPasswordAsync: function (controlData) {
            $.ajax(
            {
                method: 'POST',
                url: '/__auth/passwd',
                data: {
                    username: controlData.userName,
                    password: controlData.password
                },
                dataType: "json",
                contentType: 'application/x-www-urlform-encoded',
                success: function (xhr, data) {
                    if (data != null &amp;&amp; data.error !== undefined)
                        controlData.onException(new OpenIZModel.Exception(data.type, data.error), controlData.state
                        );
                    else if (data != null)
                        controlData.continueWith(data, controlData.state);
                    else
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general",
                            data,
                            null
                        ));

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (error != null &amp;&amp; error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);

                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);
                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);

                }
            });
        },
        /**
        * @summary Gets the current session 
        * @memberof OpenIZ.Authentication
        * @method
        * @param {object} controlData The data which controls the asynchronous process
        * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
        * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
        * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
        * @returns {OpenIZModel.SessionInfo} An instance of Session representing the current session
        */
        getSessionAsync: function (controlData) {
            OpenIZ.Util.simpleGet('/__auth/get_session', {
                continueWith: function (data) {
                    OpenIZ.Authentication.$session = data;
                    if (controlData.continueWith) controlData.continueWith(data);
                },
                finally: controlData.finally,
                onException: controlData.onException,
                state: controlData.state
            });
        },
        /**
         * @summary Destroys the current session
         * @memberof OpenIZ.Authentication
         * @method
         * @memberof OpenIZ.Authentication
         * @return {bool} Whether the session was successfully abandoned
         */
        abandonSession: function (controlData) {
            $.ajax(
            {
                method: "POST",
                url: "/__auth/abandon",
                dataType: "json",
                contentType: 'application/x-www-urlform-encoded',
                success: function (xhr, data) {
                    controlData.continueWith(data, controlData.state);

                    if (controlData.finally !== undefined) {
                        controlData.finally(controlData.state);
                    }
                },
                error: function (data) {
                    var error = data.responseJSON;

                    if (error != null &amp;&amp; error.error !== undefined) {
                        // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error, error.error_description, null), controlData.state);
                    }
                    else {
                        // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error, data, null), controlData.state);
                    }

                    if (controlData.finally !== undefined) {
                        controlData.finally(controlData.state);
                    }
                }
            });
        },
        /** 
         * @summary Refreshes the current session asynchronously
         * @memberof OpenIZ.Authentication
         * @method
         * @param {Object} controlData Task control data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @example
         * OpenIZ.Authentication.refreshSessionAsync({
         *      continueWith: function(r) { // do something with result },
         *      onException: function(ex) { // handle exception }
         * });
         */
        refreshSessionAsync: function (controlData) {
            // Perform auth request
            $.ajax(
             {
                 method: 'POST',
                 url: '/__auth/authenticate',
                 data: {
                     grant_type: 'refresh'
                 },
                 dataType: "json",
                 contentType: 'application/x-www-urlform-encoded',
                 success: function (xhr, data) {
                     if (data != null &amp;&amp; data.error !== undefined)
                         controlData.onException(new OpenIZModel.Exception(data.type, data.error), controlData.state
                         );
                     else if (data != null) {
                         controlData.continueWith(data, controlData.state);
                         OpenIZ.Authentication.$session = data;
                     }
                     else
                         controlData.onException(new OpenIZModel.Exception("Exception", "err_general",
                             data,
                             null
                         ), controlData.state);

                     if (controlData.finally !== undefined)
                         controlData.finally(controlData.state);
                 },
                 error: function (data) {
                     var error = data.responseJSON;
                     if (error != null &amp;&amp; error.error !== undefined) // oauth 2 error
                         controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                 error.error_description,
                                 null
                             ), controlData.state);

                     else // unknown error
                         controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                 data,
                                 null
                             ), controlData.state);
                     if (controlData.finally !== undefined)
                         controlData.finally(controlData.state);

                 }
             });
        },

        /**
        * @summary Performs a query against the UserEntity
        * @memberof OpenIZ.Authentication
        * @param {Object} controlData Task control data
        * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
        * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
        * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
        * @param {object} controlData.query The query object which represents the filters for the object
        * @param {int} controlData.query._count The limit of results to return from the ims
        * @param {int} controlData.query._offset The offset of the search result window
        * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
        * @method
        * @see {OpenIZ.Ims.get}
        */
        getUserAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "UserEntity",
                query: controlData.query,
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        },
    },
    /** 
     * @summary Represents functions for interacting with the protocol service
     * @see OpenIZModel.Patient
     * @see OpenIZModel.Act
     * @static
     * @class
     * @memberof OpenIZ
     */
    CarePlan: {
        /**
         * @summary Interprets the observation, setting the interpretationConcept property of the observation
         * @param {OpenIZModel.QuantityObservation} obs The observation which is to be interpretation
         * @param {string} ruleSet The rule set to be applied for the clinical decision
         * @memberof OpenIZ.CarePlan
         * @method
         */
        interpretObservation: function (obs, patient, ruleSet) {
            obs.participation = obs.participation || {};
            obs.participation.RecordTarget = obs.participation.RecordTarget || {};
            obs.participation.RecordTarget.playerModel = patient;

            var postVal = OpenIZBre.ExecuteRule("BeforeInsert", obs);
            obs.interpretationConcept = postVal.interpretationConcept;

            obs.participation.RecordTarget.playerModel = null;

        },
        /**
         * @summary Generate a care plan for the specified patient
         * @memberof OpenIZ.CarePlan
         * @method
         * @param {object} controlData The data which controls the asynchronous operation
         * @param {date} controlData.minDate If the care plan result is to be filtered, then the lower bound of the care plan to retrieve
         * @param {date} controlData.maxDate If the care plan result is to be filtered on an upper bound then the care plan to retrieve
         * @param {date} controlData.onDate Specifies the care plan service only return those objects where the proposed action should occur on the specified date
         * @param {uuid} controlData.classConcept Specifies the classification of acts which should be returned
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {OpenIZModel.Patient} controlData.data The seed data which should be passed to the forecasting engine in order to calculate the plan
         * @param {string} controlData.query The additional query parameters which should be passed to the forecaster
         * @example
         * OpenIZ.CarePlan.getCarePlanAsync({
         *     maxDate: new Date(), // Only retrieve objects that should have already occurred
         *     classConcept: "932A3C7E-AD77-450A-8A1F-030FC2855450", // Only retrieve substance administrations
         *     data: { // Manually construct a patient to pass
         *          dateOfBirth: new Date(), // The patient was born today
         *          genderConceptModel: { mnemonic: "Male" }, // the patient is a male
         *      },
         *      continueWith: function(careplan) {
         *          alert("There are " + careplan.participation.RecordTarget.length + " proposed objects");
         *      },
         *      onException: function(ex) {
         *          alert(ex.message);
         *      }
         * });
         */
        getCarePlanAsync: function (controlData) {
            console.log(controlData);
            var url = "/__plan/patient?moodConcept=ACF7BAF2-221F-4BC2-8116-CEB5165BE079";
            if (controlData.minDate !== undefined)
                url += "&amp;actTime=&gt;" + controlData.minDate.toISOString();
            if (controlData.maxDate !== undefined)
                url += "&amp;actTime=&lt;" + controlData.maxDate.toISOString();
            if (controlData.onDate !== undefined)
                url += "&amp;startTime=&lt;" + controlData.onDate.toISOString() + "&amp;stopTime=&gt;" + controlData.onDate.toISOString();
            if (controlData.classConcept !== undefined)
                url += "&amp;classConcept=" + controlData.classConcept;
            if (controlData.query !== undefined)
                url += "&amp;" + controlData.query;
            console.info("Generating care plan...");
            $.ajax({
                method: 'POST',
                url: url,
                data: JSON.stringify(controlData.data),
                dataType: "json",
                contentType: 'application/json',
                success: function (xhr, data) {
                    console.info("Retrieved care plan...");
                    // console.info(JSON.stringify(xhr));
                    controlData.continueWith(xhr, controlData.state);
                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;

                    if (controlData.onException !== undefined) {
                        if (error.error !== undefined) // error
                        {
                            controlData.onException(new OpenIZModel.Exception(error.type, error.error, error.error_description, null), controlData.state);
                        }
                        else {
                            // unknown error
                            controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error, data, null), controlData.state);
                        }
                    }
                    if (controlData.finally !== undefined) {
                        controlData.finally(controlData.state);
                    }
                }
            });
        },
        /**
         * @summary Get an empty entity template object asynchronously. See the OpenIZ documentation for more information about templates
         * @method
         * @memberof OpenIZ.CarePlan
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.templateId The identifier of the template which to retrieve. Templates should be registered with the application manifest
         * @example
         * OpenIZ.CarePlan.getEntityTemplateAsync({
         *      templateId: "Entity.Patient.Baby", 
         *      continueWith: function(template) {
         *          $scope.act = template;
         *      }
         * });
         * @deprecated
         */
        getEntityTemplateAsync: function (controlData) {
            OpenIZ.Entity.getEntityTemplateAsync(controlData);
        },
        /**
         * @summary Get an empty act template object asynchronously. See the OpenIZ documentation for more information about templates
         * @method
         * @memberof OpenIZ.CarePlan
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.templateId The identifier of the template which to retrieve. Templates should be registered with the application manifest
         * @example
         * OpenIZ.CarePlan.getActTemplateAsync({
         *      templateId: "Act.SubstanceAdmin.Immunization", 
         *      continueWith: function(template) {
         *          $scope.act = template;
         *      }
         * });
         * @deprecated
         */
        getActTemplateAsync: function (controlData) {
            OpenIZ.Act.getActTemplateAsync(controlData);
        }
    },
    /**
    * @summary Represents application specific functions for interoperating with the mobile application itself
     * @static
     * @class
    * @memberof OpenIZ
    */
    App: {
        /**
         * @summary Loads an asset synchronously from the data/ directory
         * @method
         * @memberof OpenIZ.App
         */
        loadDataAsset: function (dataId) {
            return atob(OpenIZApplicationService.GetDataAsset(dataId));
        },
        /**
         * @summary Submits a bug report asynchronously
         * @method
         * @memberof OpenIZ.App
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {OpenIZData.BugReport} controlData.data The bug report to submit
         */
        submitBugReportAsync: function (controlData) {
            OpenIZ.Util.simplePost('/__app/bug', controlData);
        },
        /**
         * @summary Gets log information from the IMS service
         * @method
         * @memberof OpenIZ.App
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query or filter apply
         * @param {string} controlData.query._id The identifier of the file to retrieve
         */
        getLogInfoAsync: function (controlData) {
            return OpenIZ.Util.simpleGet('/__app/log', controlData);
        },
        /**
         * @description Because JavaScript lacks native UUID generation, this function calls a JNI method to generate a new UUID which can be appended to IMS objects
         * @return {uuid} A newly generated uuid
         * @method
         * @memberof OpenIZ.App
         */
        newGuid: function () {
            return OpenIZApplicationService.NewGuid();
        },
        /**
         * @summary Get application information data using typical async information parameters
         * @method
         * @memberof OpenIZ.App
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @see {OpenIZModel.ApplicationInfo}
         */
        getInfoAsync: function (controlData) {
            OpenIZ.Util.simpleGet('/__app/info', controlData);
        },
        /**
         * @summary Get the online state of the application
         * @method
         * @memberof OpenIZ.App
         * @return {bool} Indicator whether the application is online.
         * @deprecated
         */
        getOnlineState: function () {
            return OpenIZApplicationService.GetOnlineState();
        },
        /**
         * @summary Indicates whether the status dialog is shown
         * @memberof OpenIZ.App
         */
        statusShown: false,
        /**
         * @summary Resolves the specified template
         * @param {string} templateId The identifier of the template to resolve
         * @return {string} The URL of the form template which is to be used to capture data for the specified template
         */
        resolveTemplate: function (templateId) {
            return OpenIZApplicationService.GetTemplateForm(templateId);
        },
        /**
         * @summary Update the status of the status dialog
         * @private
         * @method
         * @memberof OpenIZ.App
         */
        updateStatus: function () {

            var p = JSON.parse(OpenIZApplicationService.GetStatus());

            if (p[1] &gt; 0 &amp;&amp; p[1] &lt; 1) {
                $("#waitModalText").text(OpenIZ.Localization.getString("locale.dialog.wait.background") + ":" + p[0]);
                $("#waitProgressBar").attr('style', 'width:' + (p[1] * 100) + "%");
            }
            else {
                $("#waitModalText").text(OpenIZ.Localization.getString("locale.dialog.wait.text") + ":" + p[0]);
                $("#waitProgressBar").attr('style', 'width:100%');
            }

            if (OpenIZ.App.statusShown)
                setTimeout(OpenIZ.App.updateStatus, 1000);

        },
        /**
         * @summary Show the alert panel
         * @param {String} textStr The text on the alert panel to show
         * @method
         * @memberof OpenIZ.App
         */
        showWait: function (textStr) {

            if (textStr != null)
                $("#waitModalText").text(textStr);
            else
                setTimeout(OpenIZ.App.updateStatus, 6000);

            if (!OpenIZ.App.statusShown) {
                $('#waitModal').modal({ show: true, backdrop: 'static' });
                OpenIZ.App.statusShown = true;
            }
        },
        /**
         * @summary Returns whether the internet is available
         * @method
         * @memberof OpenIZ.App
         * @return {bool} An indicator whether the application environment has access to the internet
         */
        networkAvailable: function () {
            try { return OpenIZApplicationService.GetNetworkState(); }
            catch (e) { return false; }
        },
        /**
         * @summary Hide the waiting panel
         * @method
         * @memberof OpenIZ.App
         */
        hideWait: function () {
            OpenIZ.App.statusShown = false;
            $('#waitModal').modal('hide');
        },
        /**
         * @summary Gets the specified service implementation in memory
         * @method
         * @memberof OpenIZ.App
         * @param {String} serviceName The name of the service 
         * @return {String} The service class which implements the specified contract
         */
        getService: function (serviceName) {
            for (var s in OpenIZ.Configuration.$configuration.application.service)
                if (OpenIZ.Configuration.$configuration.application.service[s].lastIndexOf(serviceName) &gt; 0)
                    return OpenIZ.Configuration.$configuration.application.service[s];
            return null;
        },
        /** 
         * @summary Gets the current version of the OpenIZ host
         * @method
         * @memberof OpenIZ.App
         * @return {String} The version code of the hosting environment
         */
        getVersion: function () {
            return OpenIZApplicationService.GetVersion();
        },
        /**
         * @summary Gets the current asset title
         * @memberof OpenIZ.App
         * @method
         * @returns {string} The title of the applet
         */
        getCurrentAssetTitle: function () {
            return $(document).find("title").text();
        },
        /**  
         * @summary Get the menus async
         * @method
         * @memberof OpenIZ.App
         * @param {object} controlData The data which controls the operation of the asynchronous operation
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @returns {Object} Representing menu items the current user has access to
         */
        getMenusAsync: function (controlData) {
            OpenIZ.Util.simpleGet("/__app/menu", controlData);

        },
        /**
         * @summary Uses the device camera to scan a barcode from the device
         * @memberof OpenIZ.App
         * @method
         * @returns {string} The value of the barcode detected by the scanner
         */
        scanBarcode: function () {
            try {
                var value = OpenIZApplicationService.BarcodeScan();
                console.log('Barcode scan complete. Data: ' + value);
                return value;
            }
            catch (e) {
                console.error(e);
                throw new OpenIZModel.Exception("Exception", OpenIZ.Localization.getString("err_scan_barcode"), e.message, e);
            }
        },
        /**
         * @summary  Navigate backward, even if the back functionality crosses applets
         * @memberof OpenIZ.App
         * @method
         */
        back: function () {
            try {
                var value = OpenIZApplicationService.Back();
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
         * @summary Closes the applet and kills the Android view
         * @memberof OpenIZ.App
         * @method
         */
        close: function () {
            try {
                var value = OpenIZApplicationService.Close();
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
         * @summary Displays a TOAST on the user's screen
         * @param {String} text The text of the toast to be shown
         * @memberof OpenIZ.App
         * @method
         */
        toast: function (text) {
            try {
                var value = OpenIZApplicationService.ShowToast(text);
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
         * @summary Navigates to the specified applet passing any context variables to it via "context"
         * @param {String} appletId The ID of the applet to be navigated
         * @param {Object} context Any context variables to be passed to the applet
         * @memberof OpenIZ.App
         * @method
         * @deprecated
         */
        navigateApplet: function (appletId, context) {
            try {
                OpenIZApplicationService.Navigate(appletId, JSON.stringify(context));
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
         * @summary Queries for the specified alert
         * @param {object} controlData The data which controls the operation of the asynchronous operation
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query to be executed against the alerts service
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @method
         * @memberof OpenIZ.App
         */
        getAlertsAsync: function (controlData) {
            OpenIZ.Util.simpleGet('/__app/alerts', controlData);
        },
        /**
         * @summary Save an alert asynchronously
         * @method
         * @memberof OpenIZ.App
         * @param {object} controlData The data which controls the operation of the asynchronous operation
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZModel.Alert} controlData.data The alert data to be posted to the alerts service
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         */
        saveAlertAsync: function (controlData) {
            $.ajax({
                method: 'POST',
                url: "/__app/alerts",
                // || WARNING: JAVASCRIPT RANT AHEAD              ||
                // ||                                             ||
                // || Why!? Why!? Why is this even a line of code?||
                // || I specified JSON and application/json yet   ||
                // || the 1337 haxors at jQ decide not to encode  ||
                // || the JSON data I send as JSON!? Why!?        ||
                // \/ Stuff like this is why I dislike JavaScript \/
                data: JSON.stringify(controlData.data),
                dataType: "json",
                contentType: 'application/json',
                success: function (xhr, data) {

                    if (controlData.continueWith !== undefined)
                        controlData.continueWith(xhr, controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                },
                error: function (data) {
                    var error = data.responseJSON;
                    if (controlData.onException === null)
                        console.error(error);
                    else if (error.error !== undefined) // oauth 2 error
                        controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                error.error_description,
                                null
                            ), controlData.state);

                    else // unknown error
                        controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                data,
                                null
                            ), controlData.state);

                    if (controlData.finally !== undefined)
                        controlData.finally(controlData.state);
                }
            });
        }
    },

    /**
     * @summary Represents functions related to the localization of applets
     * @static
     * @class
     * @memberof OpenIZ
     */
    Localization: {
        /**
         * @summary Gets the specified localized string the current display language from the resources file
         * @memberof OpenIZ.Localization
         * @method
         * @param {String} stringId The identifier of the string
         * @returns The specified string
         */
        getString: function (stringId) {
            try {
                return OpenIZApplicationService.GetString(stringId);
            }
            catch (e) {
                console.error(e);
                return stringId;
            }
        },
        /**
         * @summary Gets the current user interface locale name
         * @memberof OpenIZ.Localization
         * @method
         * @returns The ISO language code of the current UI 
         */
        getLocale: function () {
            return (navigator.language || navigator.userLanguage).substring(0, 2);
        },
        /**
         * @summary Sets the current user interface locale
         * @memberof OpenIZ.Localization
         * @method
         * @param {String} lcoale The locale to set the user interface to
         * @returns The locale the user interface is now operating in
         */
        setLocale: function (locale) {
            return OpenIZApplicationService.SetLocale(locale);
        },
        /**
         * @memberof OpenIZ.Localization
         * @method
         * @summary Gets the complete localization string data
         * @returns {Object} The string list of strings
         */
        getStrings: function (locale) {
            try {
                // Go to OpenIZ applet infrastructure
                var data = OpenIZApplicationService.GetStrings(locale);
                if (data == null)
                    return null;
                else
                    return JSON.parse(data);
            }
            catch (e) {
                console.error(e);
                throw new OpenIZModel.Exception("Exception", "Error getting string list", e.message, e);
            }

        }
    },

    /**
     * @summary Represents functions related to the concept dictionary in particular those dealing with {@link OpenIZModel.Concept}, and {@link OpenIZModel.ConceptSet}s
     * @static
     * @class
     * @memberof OpenIZ
     */
    Concept: {
        /**
         * @summary Perform a search asynchronously
         * @memberof OpenIZ.Concept
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query filters to apply to the search
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @see {OpenIZ.IMS.get}
         * @see OpenIZModel.Concept
         * @example
         * OpenIZ.Concept.findConceptAsync({
         *      query: { "mnemonic":"Female" },
         *      continueWith: function(result) { // do something with result },
         *      onException: function(ex) { // handle exception }
         *  });
         */
        findConceptAsync: function (controlData) {

            OpenIZ.Ims.get({
                resource: "Concept",
                query: controlData.query,
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        },
        /**
         * @summary Perform a search of concept sets asynchronously
         * @memberof OpenIZ.Concept
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query filters to apply to the search
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @see {OpenIZ.IMS.get}
         * @see OpenIZModel.ConceptSet
         * @example
         * OpenIZ.Concept.findConceptSetAsync({
         *      query: { "member.mnemonic":"Female" },
         *      continueWith: function(result) { // do something with result },
         *      onException: function(ex) { // handle exception }
         *  });
         */
        findConceptSetAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "ConceptSet",
                query: controlData.query,
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        }
    },

    /**
     * @summary Represents a series of functions for submitting {@link OpenIZModel.Bundle} instances
     * @static
     * @class
     * @memberof OpenIZ
     */
    Bundle: {
        /**
         * @summary Insert the bundle asynchronously
         * @memberof OpenIZ.Bundle
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         */
        insertAsync: function (controlData) {
            OpenIZ.Ims.post({
                resource: "Bundle",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                data: controlData.data,
                state: controlData.state
            });
        }
    },
    /**
     * @summary Represents a series of functions related to {@link OpenIZModel.Patient} instances
     * @static
     * @class
     * @memberof OpenIZ
     */
    Patient: {
        /**
         * @summary Perform a search of patients asynchronously
         * @memberof OpenIZ.Patient
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query filters to apply to the search
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @see {OpenIZ.IMS.get}
         * @see OpenIZModel.Patient
         */
        findAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "Patient",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                query: controlData.query,
                state: controlData.state
            });
        },
        /**
         * @summary Asynchronously insert a patient object into the IMS
         * @memberof OpenIZ.Patient
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.data The patient data to be inserted into the IMS
         * @see {OpenIZ.IMS.post}
         * @see OpenIZModel.Patient
         */
        insertAsync: function (controlData) {
            OpenIZ.Ims.post({
                resource: "Patient",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                data: controlData.data,
                state: controlData.state
            });
        },
        /**
         * @summary Asynchronously updates a patient object in the IMS
         * @memberof OpenIZ.Patient
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.data The patient data to be inserted into the IMS
         * @param {uuid} controlData.id The identifier of the patient that is to be updated
         * @see {OpenIZ.IMS.put}
         * @see OpenIZModel.Patient
         */
        updateAsync: function (controlData) {
            OpenIZ.Ims.put({
                resource: "Patient",
                data: controlData.data,
                id: controlData.id,
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        },
        /**
         * @summary Asynchronously deletes a patient object in the IMS
         * @memberof OpenIZ.Patient
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {uuid} controlData.id The identifier of the patient that is to be updated
         * @see {OpenIZ.IMS.delete}
         * @see OpenIZModel.Patient
         */
        obsoleteAsync: function (controlData) {
            OpenIZ.Ims.delete({
                resource: "Patient",
                id: controlData.id,
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        },
        /**
         * @summary Performs a patient get asynchronously
         * @memberof OpenIZ.Patient
         * @method
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {uuid} controlData.id The identifier of the patient that is to be updated
         * @see {OpenIZ.IMS.get}
         * @see OpenIZModel.Patient
         */
        getAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "Patient",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                query: {
                    _id: controlData.id || controlData.patientId
                },
                state: controlData.state
            });
        },
    },


    /**
     * @summary Provides a series of utility functions for interacting with {@link OpenIZModel.Place} instances
     * @static
     * @class
     * @memberof OpenIZ
     */
    Place: {
        /**
         * @summary Perform an asynchronous search on the place resource
         * @method
         * @memberof OpenIZ.Place
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query filters to apply to the search
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @see OpenIZModel.Place
         */
        findAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "Place",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                query: controlData.query,
                state: controlData.state
            });
        },
        /**
         * @summary Bind a place filter to a select box
         * @param {HTMLElement} target The element to be bound to
         * @param {object} filter Of the objects to be shown (additional to be added to the current name filter)
         * @method
         * @memberof OpenIZ.Place
         */
        bindSelect: function (target, filter) {
            $(target).select2({
                ajax: {
                    url: "/__ims/Place",
                    dataType: 'json',
                    delay: 500,
                    method: "GET",
                    data: function (params) {
                        filter["name.component.value"] = "~" + params.term;
                        filter["_count"] = 5;
                        filter["_offset"] = 0;
                        return filter;
                    },
                    processResults: function (data, params) {

                        params.page = params.page || 0;

                        return {
                            results: data.item,
                            pagination: {
                                more: data.offset + data.count &lt; data.total
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; }, // Format normally
                minimumInputLength: 4,
                templateSelection: function (place) {
                    if (place.name != null)
                        return "&lt;span class='glyphicon glyphicon-map-marker'&gt;&lt;/span&gt; " + place.name.OfficialRecord.component.$other.value;
                    else
                        return "&lt;span class='glyphicon glyphicon-map-marker'&gt;&lt;/span&gt; " + place.text;
                },
                templateResult: function (place) {
                    if (place.text != null)
                        return place.text;
                    return "&lt;div class='label label-default'&gt;" +
                        place.typeConceptModel.name[OpenIZ.Localization.getLocale()] + "&lt;/div&gt; " + place.name.OfficialRecord.component.$other.value;
                }
            });
        }
    },
    /**
     * @static
     * @class
     * @summary Provides functions for managing {@link OpenIZModel.Provider} objects on the IMS
     * @memberof OpenIZ
     */
    Provider: {
        /**
         * @summary Perform an asynchronous search on the provider resource
         * @method
         * @memberof OpenIZ.Provider
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query filters to apply to the search
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         */
        findProviderAsync: function (controlData) {
            OpenIZ.Ims.get({
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                resource: 'Provider',
                query: controlData.query,
                state: controlData.state
            });
        },
        /**
         * @summary Bind a provider filter to a select box
         * @param {HTMLElement} target The element to be bound to
         * @param {object} filter Of the objects to be shown (additional to be added to the current name filter)
         * @method
         * @memberof OpenIZ.Provider
         */
        bindSelect: function (target, filter) {
            $(target).select2({
                ajax: {
                    url: "/__ims/Provider",
                    dataType: 'json',
                    delay: 500,
                    method: "GET",
                    data: function (params) {
                        filter["name.component.value"] = "~" + params.term;
                        filter["_count"] = 5;
                        filter["_offset"] = 0;
                        return filter;
                    },
                    processResults: function (data, params) {

                        params.page = params.page || 0;

                        return {
                            results: data.item,
                            pagination: {
                                more: data.offset + data.count &lt; data.total
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; }, // Format normally
                minimumInputLength: 1,
                templateSelection: function (provider) {
                    if (provider.text != null)
                        return "&lt;span class='glyphicon glyphicon-user'&gt;&lt;/span&gt; " + provider.text;
                    return "&lt;span class='glyphicon glyphicon-user'&gt;&lt;/span&gt; " + OpenIZ.Util.renderName(provider.name.OfficialRecord);
                },
                templateResult: function (provider) {
                    if (provider.text != null)
                        return provider.text;
                    return "&lt;span class='glyphicon glyphicon-user'&gt;&lt;/span&gt; " + OpenIZ.Util.renderName(provider.name.OfficialRecord);
                }
            });

        }
    },
    /**
     * @summary Entity class for interacting with {@link OpenIZModel.Entity} instances and derivatives
     * @see OpenIZModel.Entity
     * @see OpenIZModel.Person
     * @see OpenIZModel.Place
     * @see OpenIZModel.Material
     * @see OpenIZModel.ManufacturedMaterial
     * @see OpenIZModel.Patient
     * @see OpenIZModel.UserEntity
     * @see OpenIZModel.Provider
     * @static
     * @class
     * @memberof OpenIZ
     */
    Entity: {
        /**
         * @summary Get an empty entity template object asynchronously. See the OpenIZ documentation for more information about templates
         * @method
         * @memberof OpenIZ.Entity
         * @param {object} controlData The data which controls the asynchronous operation.
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {string} controlData.templateId The identifier of the template which to retrieve. Templates should be registered with the application manifest
         * @example
         * OpenIZ.CarePlan.getEntityTemplateAsync({
         *      templateId: "Entity.Patient.Baby", 
         *      continueWith: function(template) {
         *          $scope.act = template;
         *      }
         * });
         */
        getEntityTemplateAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "Entity/Template",
                query: { "templateId": controlData.templateId },
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });
        },
    },
    /**
    * @summary The configuration property is used to segregate the functions related to configuration of the main OpenIZ system including realm, updating configuration, etc.
     * @static
     * @class
    * @memberof OpenIZ
    * @property {object} $configuration Cached configuration used for synchronous calls
    */
    Configuration: {
        $configuration: null,
        /** 
         * @summary Get the configuration file in an async manner
         * @method
         * @memberof OpenIZ.Configuration
         * @param {Object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @return {Object} The complete configuration object
         */
        getConfigurationAsync: function (controlData) {
            OpenIZ.Util.simpleGet('/__config/all', {
                continueWith: function (data) {
                    OpenIZ.Configuration.$configuration = data;
                    controlData.continueWith(data, controlData.state);
                },
                onException: controlData.onException,
                finally: controlData.finally,
                state: controlData.state
            });

        },
        /**
         * @summary Gets the specified appplication setting
         * @method
         * @param {String} key The key of the application setting to retrieve
         * @return {String} The setting value
         */
        getApplicationSetting: function (key) {
            try {
                for (var s in OpenIZ.Configuration.$configuration.application.setting)
                    if (OpenIZ.Configuration.$configuration.application.setting[s].key == key)
                        return OpenIZ.Configuration.$configuration.application.setting[s].value;
                return null;
            }
            catch (e) {
                throw new OpenIZModel.Exception("Exception", e.message, e.detail, e);
            }
        },
        /**
         * @summary Gets the specified appplication setting. This method does not save the setting, merely sets it in the local configuration
         * @method
         * @param {String} key The key of the application setting to retrieve
         * @return {String} The setting value
         */
        setApplicationSetting: function (key, value) {
            try {
                for (var s in OpenIZ.Configuration.$configuration.application.setting)
                    if (OpenIZ.Configuration.$configuration.application.setting[s].key == key) {
                        OpenIZ.Configuration.$configuration.application.setting[s].value = value;
                        return;
                    }
                OpenIZ.Configuration.$configuration.application.setting.push({ key: key, value: value });
            }
            catch (e) {
                throw new OpenIZModel.Exception("Exception", e.message, e.detail, e);
            }
        },
        /**
        * @summary Gets the current realm to which the client is connected
        * @memberof OpenIZ.Configuration
        * @method
       */
        getRealm: function () {
            try {
                return OpenIZ.Configuration.$configuration.realmName;
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
        * @summary Gets the specified OpenIZ configuration section name. 
        * @returns A JSON object representing the configuration data for the particular section
        * @param {string} sectionName The name of the section which should be retrieved.
        * @memberof OpenIZ.Configuration
        * @method
        */
        getSection: function (sectionName) {
            try {
                return OpenIZ.Configuration.$configuration[sectionName];
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
        * @summary Joins the current client to the specified realm. The backing container is responsible for performing all steps in terms of generating a client certificate, sending it to the realm auth service, etc.
        * @returns True if the specified realm was joined successfully
        * @param {object} controlData An object containing search, offset, count and callback data
        * @param {string} controlData.address The address root of the realm. Example: demo.openiz.org
        * @param {string} controlData.deviceName A unique name for the device which is being joined
        * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
        * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
        * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
        * @memberof OpenIZ.Configuration
        * @method
        */
        joinRealmAsync: function (controlData) {
            try {
                // Perform auth request
                $.ajax(
                 {
                     method: 'POST',
                     url: '/__config/realm',
                     data: {
                         realmUri: controlData.domain,
                         deviceName: controlData.deviceName,
                         force: controlData.force
                     },
                     dataType: "json",
                     contentType: 'application/x-www-urlform-encoded',
                     success: function (xhr, data) {
                         if (data != null &amp;&amp; data.error !== undefined)
                             controlData.onException(new OpenIZModel.Exception(data.type, data.error), controlData.state
                             );
                         else if (data != null) {
                             OpenIZ.Configuration.$configuration = xhr;
                             controlData.continueWith(xhr, controlData.state);
                         }
                         else if (controlData.onException != null)
                             controlData.onException(new OpenIZModel.Exception("Exception", "err_general",
                                 data,
                                 null
                             ), controlData.state);

                         if (controlData.finally !== undefined)
                             controlData.finally(controlData.state);
                     },
                     error: function (data) {
                         var error = data.responseJSON;
                         if (error != null &amp;&amp; error.error !== undefined) // config error
                             controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                     error.error_description,
                                     null
                                 ), controlData.state);

                         else if (controlData.onException != null) // unknown error
                             controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                     data,
                                     null
                                 ), controlData.state);
                         if (controlData.finally !== undefined)
                             controlData.finally(controlData.state);

                     }
                 });
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
        * @summary Instructs the current client container to leave the currently configured realm
        * @memberof OpenIZ.Configuration
        * @method
        * @returns True if the realm was successfully left.
        */
        leaveRealm: function () {
            try {
                if (!confirm('You are about to leave the realm ' + configuration.realm.address + '. Doing so will force the OpenIZ back into an initial configuration mode. Are you sure you want to do this?'))
                    return false;
                return OpenIZConfigurationService.LeaveRealm();
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
        * @summary Instructs the container to save the specified configuration object to the local configuration file/source.
        * @param {object} controlData An object containing search, offset, count and callback data
        * @param {string} controlData.address The address root of the realm. Example: demo.openiz.org
        * @param {string} controlData.deviceName A unique name for the device which is being joined
        * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
        * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
        * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
        * @memberof OpenIZ.Configuration
        * @method
        * @returns true if the save operation was successful
        */
        saveAsync: function (controlData) {
            try {
                // Perform auth request
                $.ajax(
                 {
                     method: 'POST',
                     url: '/__config/all',
                     data: JSON.stringify(controlData.data),
                     dataType: "json",
                     contentType: 'application/json',
                     success: function (xhr, data) {
                         if (data != null &amp;&amp; data.error !== undefined)
                             controlData.onException(new OpenIZModel.Exception(data.type, data.error), controlData.state
                             );
                         else if (data != null) {
                             OpenIZ.Configuration.$configuration = xhr;
                             controlData.continueWith(xhr, controlData.state);
                         }
                         else
                             controlData.onException(new OpenIZModel.Exception("Exception", "err_general",
                                 data,
                                 null
                             ), controlData.state);

                         if (controlData.finally !== undefined)
                             controlData.finally(controlData.state);
                     },
                     error: function (data) {
                         var error = data.responseJSON;
                         if (error != null &amp;&amp; error.error !== undefined) // config error
                             controlData.onException(new OpenIZModel.Exception(error.type, error.error,
                                     error.error_description,
                                     null
                                 ), controlData.state);

                         else // unknown error
                             controlData.onException(new OpenIZModel.Exception("Exception", "err_general" + error,
                                     data,
                                     null
                                 ), controlData.state);
                         if (controlData.finally !== undefined)
                             controlData.finally(controlData.state);

                     }
                 });
            }
            catch (e) {
                console.error(e);
            }
        },
        /**
        * @summary Get applet specific key/value pair configuration parameters which are currently set for the application
        * @memberof OpenIZ.Configuration
        * @method
        * @param {String} appletId The identifier of the applet from which the settings should be retrieved
        * @returns A key/value pair representing the applet settings
        */
        getAppletSettings: function (appletId) {
            // TODO: Implement
        },
        /**
        * @summary Saves the applet specific settings in a key/value pair format to the configuration store
        * @memberof OpenIZ.Configuration
        * @method
        * @param {String} appletId The applet identification for which the settings apply
        * @param {Object} settings A key/value pair JSON object of the settings
        * @returns True if the settings save was successful
        */
        saveAppletSettings: function (appletId, settings) {
            // TODO: Implement
        },
        /**
        * @summary Get local user preference strings in a key/value pair JSON object
        * @memberof OpenIZ.Configuration
        * @method
        * @returns The user preferences of the current user
        */
        getUserPreferences: function () {
            // TODO: Implement
        },
        /**
        * @summary Save the user preferences in the key/value pair format
        * @memberof OpenIZ.Configuration
        * @method
        * @param {Object} preferences The user preferences for the current user which should be saved
        * @returns true if the save was successful
        */
        saveUserPreferences: function (preferences) {
            // TODO: Implement
        }
    },
    /**
     * @static
     * @class
     * @summary Provides utility functions for interacting with {@link OpenIZModel.ManufacturedMaterial} instances
     * @memberOf OpenIZ.ManufacturedMaterial
     */
    ManufacturedMaterial:
    {
        /**
         * @deprecated
         * @see OpenIZ.ManufacturedMaterial.getManufacturedMaterialsAsync
         */
        getManufacturedMaterials: function (controlData) {
            OpenIZ.ManufacturedMaterial.getManufacturedMaterialAsync(controlData);
        },
        /**
         * @summary Get manufactured materials from the IMS 
         * @param {object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {object} controlData.query The query filters to apply to the search
         * @param {int} controlData.query._count The limit of results to return from the ims
         * @param {int} controlData.query._offset The offset of the search result window
         * @param {uuid} controlData.query._id The identifier of the object to retrieve from the IMS (performs a get rather than a query)
         * @memberof OpenIZ.ManufacturedMaterial
         * @method
         */
        getManufacturedMaterialAsync: function (controlData) {
            OpenIZ.Ims.get({
                resource: "ManufacturedMaterial",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                query: controlData.query,
                state: controlData.state
            })
        }
    },
    /**
     * @static
     * @class
     * @summary Provides utilities for interacting with {@link OpenIZModel.UserEntity} classes
     * @memberof OpenIZ
     */
    UserEntity: {
        /**
         * @summary Updates the specified user entity in the IMS in an asynchronous manner
         * @param {object} controlData An object containing search, offset, count and callback data
         * @param {OpenIZ~continueWith} controlData.continueWith The callback to call when the operation is completed successfully
         * @param {OpenIZ~onException} controlData.onException The callback to call when the operation encounters an exception
         * @param {OpenIZ~finally} controlData.finally The callback of a function to call whenever the operation completes successfully or not
         * @param {OpenIZModel.UserEntity} controlData.data The user entity which is to be updated in the IMS service
         * @memberof OpenIZ.UserEntity
         * @method
         */
        updateAsync: function (controlData) {
            OpenIZ.Ims.put({
                resource: "UserEntity",
                continueWith: controlData.continueWith,
                onException: controlData.onException,
                data: controlData.data,
                state: controlData.state
            });
        }
    }
};
/**
 * @summary Current Locale
 */
//OpenIZ.locale = OpenIZ.Localization.getLocale();
// No caching
$.ajaxSetup({
    cache: false, converters: {
        'text json': $.parseJSON
    },
    beforeSend: function (data, settings) {
        if (OpenIZ.Authentication.$elevationCredentials.$enabled) {
            data.setRequestHeader("Authorization", "BASIC " +
                btoa(OpenIZ.Authentication.$elevationCredentials.userName + ":" + OpenIZ.Authentication.$elevationCredentials.password));
        }
        data.setRequestHeader("X-OIZMagic", OpenIZSessionService.GetMagic());
    }
});

$(document).ajaxError(function (e, data, setting, err) {
    if ((data.status == 401 || data.status == 403) &amp;&amp; OpenIZ.Authentication.$session != null) {
        OpenIZ.Authentication.showElevationDialog();
    }
    else
        console.warn(new OpenIZModel.Exception("Exception", "err_request", err, null));
});

// Parameters
(window.onpopstate = function () {
    var match,
        pl = /\+/g,  // Regex for replacing addition symbol with a space
        search = /([^&amp;=]+)=?([^&amp;]*)/g,
        decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
        query = window.location.search.substring(1);

    OpenIZ.urlParams = {};
    while (match = search.exec(query))
        OpenIZ.urlParams[decode(match[1])] = decode(match[2]);
})();

/**
 * @method
 * @summary Get the week of the year
 */
Date.prototype.getWeek = function () {
    var oneJan = this.getFirstDayOfYear();
    return Math.ceil((((this - oneJan) / 86400000) + oneJan.getDay() + 1) / 7);
}

/** 
 * @method
 * @summary Get the first day of the year
 */
Date.prototype.getFirstDayOfYear = function () {
    return new Date(this.getFullYear(), 0, 1);
}

/**
 * @method 
 * @summary Get the first day of the following week
 */
Date.prototype.nextMonday = function () {
    var retVal = this.getFirstDayOfYear();
    retVal.setDate(retVal.getDate() + (new Date().getWeek() * 7));
    return retVal;
}


/**
 * @summary Gets the date on the next day
 * @method
 * @param {Number} days The number of days to add
 */
Date.prototype.addDays = function (days) {
    var retVal = new Date(this.getFullYear(), this.getMonth(), this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds());
    retVal.setDate(retVal.getDate() + days);
    return retVal;
}

/**
 * @summary Gets the date on the next day
 * @method
 */
Date.prototype.tomorrow = function () {
    return this.addDays(1);
}

/**
 * @summary Gets the date on the previous day
 * @method
 */
Date.prototype.yesterday = function () {
    return this.addDays(-1);
}</contentText>
  </asset>
  <asset name="js/openiz.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */
var OpenIZApplicationService=window.OpenIZApplicationService||{},OpenIZSessionService=window.OpenIZSessionService||{},OpenIZ=OpenIZ||{urlParams:{},UserInterface:{},Act:{obsoleteAsync:function(n){OpenIZ.Ims.delete({resource:"Act",continueWith:n.continueWith,onException:n.onException,"finally":n.finally,id:n.id,state:n.state})},createFulfillment:function(n){var t=new OpenIZModel.Act,u,f,i,r;switch(n.$type){case"SubstanceAdministration":t=new OpenIZModel.SubstanceAdministration(n);break;case"Observation":t=new OpenIZModel.Observation(n);break;case"QuantityObservation":t=new OpenIZModel.QuantityObservation(n);break;case"CodedObservation":t=new OpenIZModel.CodedObservation(n);break;case"TextObservation":t=new OpenIZModel.TextObservation(n);break;case"PatientEncounter":t=new OpenIZModel.PatientEncounter(n);break;case"ControlAct":t=new OpenIZModel.ControlAct(n)}t._overdue=n.stopTime&lt;new Date;t.id=OpenIZ.App.newGuid();t.moodConcept=OpenIZModel.ActMoodKeys.Eventoccurrence;t.moodConceptModel=null;t.creationTime=new Date;t.createdBy=t.createdByModel=null;t.statusConcept=OpenIZModel.StatusKeys.Active;t.statusConceptModel=null;t.etag=null;t.relationship=t.relationship||{};t.relationship.Fulfills=new OpenIZModel.ActRelationship;t.relationship.Fulfills.target=n.id;t.relationship.Fulfills.targetModel=n;u=Object.keys(t.participation);for(f in u)if(i=u[f],t.participation[i].splice!==undefined)for(r in t.participation[i])t.participation[i][r]=new OpenIZModel.ActParticipation({act:t.id,player:t.participation[i][r].player,playerModel:t.participation[i][r].playerModel});else t.participation[i]=new OpenIZModel.ActParticipation({act:t.id,player:t.participation[i].player,playerModel:t.participation[i].playerModel});return t._overdue||(t.actTime=new Date,t.startTime=t.stopTime=null),t},findAsync:function(n){OpenIZ.Ims.get({resource:"Act",continueWith:n.continueWith,onException:n.onException,"finally":n.finally,query:n.query,state:n.state})},insertAsync:function(n){OpenIZ.Ims.post({resource:"Act",continueWith:n.continueWith,onException:n.onException,data:n.data,state:n.state})},getActTemplateAsync:function(n){OpenIZ.Ims.get({resource:"Act/Template",query:{templateId:n.templateId},continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})}},Ims:{post:function(n){$.ajax({method:"POST",url:"/__ims/"+n.resource,data:JSON.stringify(n.data),dataType:"json",contentType:"application/json",success:function(t){n.continueWith!==undefined&amp;&amp;n.continueWith(t,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(n.onException===null)console.error(i);else if(i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},put:function(n){$.ajax({method:"PUT",url:"/__ims/"+n.resource+"?_id="+n.id+"&amp;_versionId="+n.versionId,data:JSON.stringify(n.data),dataType:"json",contentType:"application/json",success:function(t){n.continueWith!==undefined&amp;&amp;n.continueWith(t,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(n.onException===null)console.error(i);else if(i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},get:function(n){$.ajax({method:"GET",url:"/__ims/"+n.resource,data:n.query,dataType:"json",accept:"application/json",contentType:"application/json",success:function(t){n.continueWith!==undefined&amp;&amp;n.continueWith(t,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(n.onException===undefined)console.error(i);else if(i!=undefined&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},"delete":function(n){$.ajax({method:"DELETE",url:"/__ims/"+n.resource+"?_id="+n.id,accept:"application/json",contentType:"application/json",success:function(t){n.continueWith!==undefined&amp;&amp;n.continueWith(t,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(n.onException===undefined)console.error(i);else if(i!=undefined&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})}},Stock:{calculateQPeriod:function(n,t){return n/12*t},calculateSReserve:function(n,t){return n*t},calculateSMax:function(n,t){return n+t},calculateSReorder:function(n,t,i,r){return n+t*i/r},calculateQOrder:function(n,t,i,r,u){return n-t+i*r/u},calculateQNeeded:function(n,t,i,r){return n+t-(i+r)},calculateAll:function(n,t,i,r,u){var f={};return f.qPeriod=OpenIZ.Stock.calculateQPeriod(n,t),f.sReserve=OpenIZ.Stock.calculateSReserve(f.qPeriod,i),f.sMax=OpenIZ.Stock.calculateSMax(f.qPeriod,f.sReserve),f.sReorder=OpenIZ.Stock.calculateSReorder(f.sReserve,f.qPeriod,r,t),f.qOrder=OpenIZ.Stock.calculateQOrder(f.sMax,u,f.qPeriod,r,t),f}},Util:{renderConceptName:function(n){return typeof n=="String"?n:n[OpenIZ.Localization.getLocale()]!=null?n[OpenIZ.Localization.getLocale()]:n[Object.keys(n)[0]]},simplePost:function(n,t){t.onException=t.onException||OpenIZ.Util.logException;$.ajax({method:"POST",url:n,data:JSON.stringify(t.data),dataType:"json",contentType:"application/json",success:function(n){t.continueWith!==undefined&amp;&amp;t.continueWith(n,t.state);t.finally!==undefined&amp;&amp;t.finally(t.state)},error:function(n){var i=n.responseJSON;if(t.onException===null)console.error(i);else if(i.error!==undefined)t.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),t.state);else t.onException(new OpenIZModel.Exception("Exception","err_general"+i,n,null),t.state);t.finally!==undefined&amp;&amp;t.finally(t.state)}})},simpleGet:function(n,t){t.onException=t.onException||OpenIZ.Util.logException;$.getJSON(n,t.query,function(n){if(n!=null&amp;&amp;n.error!==undefined)t.onException(new OpenIZModel.Exception(n.type,n.error),t.state);else if(n!=null)t.continueWith(n,t.state);else t.onException(new OpenIZModel.Exception("Exception","err_general",n,null),t.state)}).error(function(n){var i=n.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)t.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),t.state);else t.onException(new OpenIZModel.Exception("Exception","err_general"+i,n,null),t.state)}).always(function(){t.finally!==undefined&amp;&amp;t.finally(t.state)})},renderAddress:function(n){if(n!==undefined){var t=n.component!==undefined?n:n.address!==undefined?n.address.Direct||n.address.HomeAddress:n.Direct||n.HomeAddress,i="";return t.component.AdditionalLocator&amp;&amp;(i+=t.component.AdditionalLocator+", "),t.component.StreetAddressLine&amp;&amp;(i+=t.component.StreetAddressLine+", "),t.component.City&amp;&amp;(i+=t.component.City+", "),t.component.County!=null&amp;&amp;(i+=t.component.County+", "),t.component.State!=null&amp;&amp;(i+=t.component.State+", "),t.component.Country!=null&amp;&amp;(i+=t.component.Country+", "),i.substring(0,i.length-2)}},renderAct:function(n){switch(n.$type){case"SubstanceAdministration":return OpenIZ.Localization.getString("locale.encounters.administer")+OpenIZ.Util.renderName(n.participation.Product.name.OfficialRecord);case"QuantityObservation":case"CodedObservation":case"TextObservation":return OpenIZ.Localization.getString("locale.encounters.observe")+n.typeConceptModel.name[OpenIZ.Localization.getLocale()];default:return""}},logException:function(n){console.warn(n)},renderManufacturedMaterial:function(n){var t=OpenIZ.Util.renderName(n.name.OfficialRecord||n.name.Assigned);return t+"[LN#: "+n.lotNumber+"]"},renderName:function(n){if(n===null||n===undefined)return"";if(n.join!==undefined)return n.join(" ");if(n.component!==undefined){var t="";return n.component.Given!==undefined&amp;&amp;(typeof n.component.Given=="string"?t+=n.component.Given:n.component.Given.join!==undefined&amp;&amp;(t+=n.component.Given.join(" ")),t+=" "),n.component.Family!==undefined&amp;&amp;(typeof n.component.Family=="string"?t+=n.component.Family:n.component.Family.join!==undefined&amp;&amp;(t+=n.component.Family.join(" "))),n.component.$other!==undefined&amp;&amp;(typeof n.component.$other=="string"?t+=n.component.$other:n.component.$other.join!==undefined?t+=n.component.$other.join(" "):n.component.$other.value!==undefined&amp;&amp;(t+=n.component.$other.value)),t}return n},toDateInputString:function(n){return n.toISOString().substring(0,10)},startTaskAsync:function(n,t){return setTimeout(function(){try{t.continueWith(n(),t.state)}catch(i){if(t.onException===undefined)console.error(i);else t.onException(i,t.state)}},0)}},Authentication:{$session:null,$elevationCredentials:{},sendTfaSecretAsync:function(n){OpenIZ.Util.simplePost("/__auth/tfa",n)},getTfaMechanisms:function(n){OpenIZ.Util.simpleGet("/__auth/tfa",n)},showElevationDialog:function(){$("#authenticationDialog").modal("show")},hideElevationDialog:function(){$("#authenticationDialog").modal("hide")},loginAsync:function(n){$.ajax({method:"POST",url:"/__auth/authenticate",data:{username:n.userName,password:n.password,grant_type:n.tfaSecret!=null?"tfa":"password",tfaSecret:n.tfaSecret,scope:n.scope},dataType:"json",contentType:"application/x-www-urlform-encoded",success:function(t,i){if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error),n.state);else if(i!=null)n.continueWith(i,n.state),OpenIZ.Authentication.$session=i;else n.onException(new OpenIZModel.Exception("Exception","err_general",i,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},setPasswordAsync:function(n){$.ajax({method:"POST",url:"/__auth/passwd",data:{username:n.userName,password:n.password},dataType:"json",contentType:"application/x-www-urlform-encoded",success:function(t,i){if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error),n.state);else if(i!=null)n.continueWith(i,n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general",i,null));n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},getSessionAsync:function(n){OpenIZ.Util.simpleGet("/__auth/get_session",{continueWith:function(t){OpenIZ.Authentication.$session=t;n.continueWith&amp;&amp;n.continueWith(t)},"finally":n.finally,onException:n.onException,state:n.state})},abandonSession:function(n){$.ajax({method:"POST",url:"/__auth/abandon",dataType:"json",contentType:"application/x-www-urlform-encoded",success:function(t,i){n.continueWith(i,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},refreshSessionAsync:function(n){$.ajax({method:"POST",url:"/__auth/authenticate",data:{grant_type:"refresh"},dataType:"json",contentType:"application/x-www-urlform-encoded",success:function(t,i){if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error),n.state);else if(i!=null)n.continueWith(i,n.state),OpenIZ.Authentication.$session=i;else n.onException(new OpenIZModel.Exception("Exception","err_general",i,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},getUserAsync:function(n){OpenIZ.Ims.get({resource:"UserEntity",query:n.query,continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})}},CarePlan:{interpretObservation:function(n,t){n.participation=n.participation||{};n.participation.RecordTarget=n.participation.RecordTarget||{};n.participation.RecordTarget.playerModel=t;var i=OpenIZBre.ExecuteRule("BeforeInsert",n);n.interpretationConcept=i.interpretationConcept;n.participation.RecordTarget.playerModel=null},getCarePlanAsync:function(n){console.log(n);var t="/__plan/patient?moodConcept=ACF7BAF2-221F-4BC2-8116-CEB5165BE079";n.minDate!==undefined&amp;&amp;(t+="&amp;actTime=&gt;"+n.minDate.toISOString());n.maxDate!==undefined&amp;&amp;(t+="&amp;actTime=&lt;"+n.maxDate.toISOString());n.onDate!==undefined&amp;&amp;(t+="&amp;startTime=&lt;"+n.onDate.toISOString()+"&amp;stopTime=&gt;"+n.onDate.toISOString());n.classConcept!==undefined&amp;&amp;(t+="&amp;classConcept="+n.classConcept);n.query!==undefined&amp;&amp;(t+="&amp;"+n.query);console.info("Generating care plan...");$.ajax({method:"POST",url:t,data:JSON.stringify(n.data),dataType:"json",contentType:"application/json",success:function(t){console.info("Retrieved care plan...");n.continueWith(t,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(n.onException!==undefined)if(i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})},getEntityTemplateAsync:function(n){OpenIZ.Entity.getEntityTemplateAsync(n)},getActTemplateAsync:function(n){OpenIZ.Act.getActTemplateAsync(n)}},App:{loadDataAsset:function(n){return atob(OpenIZApplicationService.GetDataAsset(n))},submitBugReportAsync:function(n){OpenIZ.Util.simplePost("/__app/bug",n)},getLogInfoAsync:function(n){return OpenIZ.Util.simpleGet("/__app/log",n)},newGuid:function(){return OpenIZApplicationService.NewGuid()},getInfoAsync:function(n){OpenIZ.Util.simpleGet("/__app/info",n)},getOnlineState:function(){return OpenIZApplicationService.GetOnlineState()},statusShown:!1,resolveTemplate:function(n){return OpenIZApplicationService.GetTemplateForm(n)},updateStatus:function(){var n=JSON.parse(OpenIZApplicationService.GetStatus());n[1]&gt;0&amp;&amp;n[1]&lt;1?($("#waitModalText").text(OpenIZ.Localization.getString("locale.dialog.wait.background")+":"+n[0]),$("#waitProgressBar").attr("style","width:"+n[1]*100+"%")):($("#waitModalText").text(OpenIZ.Localization.getString("locale.dialog.wait.text")+":"+n[0]),$("#waitProgressBar").attr("style","width:100%"));OpenIZ.App.statusShown&amp;&amp;setTimeout(OpenIZ.App.updateStatus,1e3)},showWait:function(n){n!=null?$("#waitModalText").text(n):setTimeout(OpenIZ.App.updateStatus,6e3);OpenIZ.App.statusShown||($("#waitModal").modal({show:!0,backdrop:"static"}),OpenIZ.App.statusShown=!0)},networkAvailable:function(){try{return OpenIZApplicationService.GetNetworkState()}catch(n){return!1}},hideWait:function(){OpenIZ.App.statusShown=!1;$("#waitModal").modal("hide")},getService:function(n){for(var t in OpenIZ.Configuration.$configuration.application.service)if(OpenIZ.Configuration.$configuration.application.service[t].lastIndexOf(n)&gt;0)return OpenIZ.Configuration.$configuration.application.service[t];return null},getVersion:function(){return OpenIZApplicationService.GetVersion()},getCurrentAssetTitle:function(){return $(document).find("title").text()},getMenusAsync:function(n){OpenIZ.Util.simpleGet("/__app/menu",n)},scanBarcode:function(){try{var t=OpenIZApplicationService.BarcodeScan();return console.log("Barcode scan complete. Data: "+t),t}catch(n){console.error(n);throw new OpenIZModel.Exception("Exception",OpenIZ.Localization.getString("err_scan_barcode"),n.message,n);}},back:function(){try{var t=OpenIZApplicationService.Back()}catch(n){console.error(n)}},close:function(){try{var t=OpenIZApplicationService.Close()}catch(n){console.error(n)}},toast:function(n){try{var i=OpenIZApplicationService.ShowToast(n)}catch(t){console.error(t)}},navigateApplet:function(n,t){try{OpenIZApplicationService.Navigate(n,JSON.stringify(t))}catch(i){console.error(i)}},getAlertsAsync:function(n){OpenIZ.Util.simpleGet("/__app/alerts",n)},saveAlertAsync:function(n){$.ajax({method:"POST",url:"/__app/alerts",data:JSON.stringify(n.data),dataType:"json",contentType:"application/json",success:function(t){n.continueWith!==undefined&amp;&amp;n.continueWith(t,n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(n.onException===null)console.error(i);else if(i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})}},Localization:{getString:function(n){try{return OpenIZApplicationService.GetString(n)}catch(t){return console.error(t),n}},getLocale:function(){return(navigator.language||navigator.userLanguage).substring(0,2)},setLocale:function(n){return OpenIZApplicationService.SetLocale(n)},getStrings:function(n){try{var i=OpenIZApplicationService.GetStrings(n);return i==null?null:JSON.parse(i)}catch(t){console.error(t);throw new OpenIZModel.Exception("Exception","Error getting string list",t.message,t);}}},Concept:{findConceptAsync:function(n){OpenIZ.Ims.get({resource:"Concept",query:n.query,continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})},findConceptSetAsync:function(n){OpenIZ.Ims.get({resource:"ConceptSet",query:n.query,continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})}},Bundle:{insertAsync:function(n){OpenIZ.Ims.post({resource:"Bundle",continueWith:n.continueWith,onException:n.onException,data:n.data,state:n.state})}},Patient:{findAsync:function(n){OpenIZ.Ims.get({resource:"Patient",continueWith:n.continueWith,onException:n.onException,"finally":n.finally,query:n.query,state:n.state})},insertAsync:function(n){OpenIZ.Ims.post({resource:"Patient",continueWith:n.continueWith,onException:n.onException,data:n.data,state:n.state})},updateAsync:function(n){OpenIZ.Ims.put({resource:"Patient",data:n.data,id:n.id,continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})},obsoleteAsync:function(n){OpenIZ.Ims.delete({resource:"Patient",id:n.id,continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})},getAsync:function(n){OpenIZ.Ims.get({resource:"Patient",continueWith:n.continueWith,onException:n.onException,"finally":n.finally,query:{_id:n.id||n.patientId},state:n.state})}},Place:{findAsync:function(n){OpenIZ.Ims.get({resource:"Place",continueWith:n.continueWith,onException:n.onException,"finally":n.finally,query:n.query,state:n.state})},bindSelect:function(n,t){$(n).select2({ajax:{url:"/__ims/Place",dataType:"json",delay:500,method:"GET",data:function(n){return t["name.component.value"]="~"+n.term,t._count=5,t._offset=0,t},processResults:function(n,t){return t.page=t.page||0,{results:n.item,pagination:{more:n.offset+n.count&lt;n.total}}},cache:!0},escapeMarkup:function(n){return n},minimumInputLength:4,templateSelection:function(n){return n.name!=null?"&lt;span class='glyphicon glyphicon-map-marker'&gt;&lt;\/span&gt; "+n.name.OfficialRecord.component.$other.value:"&lt;span class='glyphicon glyphicon-map-marker'&gt;&lt;\/span&gt; "+n.text},templateResult:function(n){return n.text!=null?n.text:"&lt;div class='label label-default'&gt;"+n.typeConceptModel.name[OpenIZ.Localization.getLocale()]+"&lt;\/div&gt; "+n.name.OfficialRecord.component.$other.value}})}},Provider:{findProviderAsync:function(n){OpenIZ.Ims.get({continueWith:n.continueWith,onException:n.onException,"finally":n.finally,resource:"Provider",query:n.query,state:n.state})},bindSelect:function(n,t){$(n).select2({ajax:{url:"/__ims/Provider",dataType:"json",delay:500,method:"GET",data:function(n){return t["name.component.value"]="~"+n.term,t._count=5,t._offset=0,t},processResults:function(n,t){return t.page=t.page||0,{results:n.item,pagination:{more:n.offset+n.count&lt;n.total}}},cache:!0},escapeMarkup:function(n){return n},minimumInputLength:1,templateSelection:function(n){return n.text!=null?"&lt;span class='glyphicon glyphicon-user'&gt;&lt;\/span&gt; "+n.text:"&lt;span class='glyphicon glyphicon-user'&gt;&lt;\/span&gt; "+OpenIZ.Util.renderName(n.name.OfficialRecord)},templateResult:function(n){return n.text!=null?n.text:"&lt;span class='glyphicon glyphicon-user'&gt;&lt;\/span&gt; "+OpenIZ.Util.renderName(n.name.OfficialRecord)}})}},Entity:{getEntityTemplateAsync:function(n){OpenIZ.Ims.get({resource:"Entity/Template",query:{templateId:n.templateId},continueWith:n.continueWith,onException:n.onException,"finally":n.finally,state:n.state})}},Configuration:{$configuration:null,getConfigurationAsync:function(n){OpenIZ.Util.simpleGet("/__config/all",{continueWith:function(t){OpenIZ.Configuration.$configuration=t;n.continueWith(t,n.state)},onException:n.onException,"finally":n.finally,state:n.state})},getApplicationSetting:function(n){try{for(var i in OpenIZ.Configuration.$configuration.application.setting)if(OpenIZ.Configuration.$configuration.application.setting[i].key==n)return OpenIZ.Configuration.$configuration.application.setting[i].value;return null}catch(t){throw new OpenIZModel.Exception("Exception",t.message,t.detail,t);}},setApplicationSetting:function(n,t){try{for(var r in OpenIZ.Configuration.$configuration.application.setting)if(OpenIZ.Configuration.$configuration.application.setting[r].key==n){OpenIZ.Configuration.$configuration.application.setting[r].value=t;return}OpenIZ.Configuration.$configuration.application.setting.push({key:n,value:t})}catch(i){throw new OpenIZModel.Exception("Exception",i.message,i.detail,i);}},getRealm:function(){try{return OpenIZ.Configuration.$configuration.realmName}catch(n){console.error(n)}},getSection:function(n){try{return OpenIZ.Configuration.$configuration[n]}catch(t){console.error(t)}},joinRealmAsync:function(n){try{$.ajax({method:"POST",url:"/__config/realm",data:{realmUri:n.domain,deviceName:n.deviceName,force:n.force},dataType:"json",contentType:"application/x-www-urlform-encoded",success:function(t,i){if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error),n.state);else if(i!=null)OpenIZ.Configuration.$configuration=t,n.continueWith(t,n.state);else if(n.onException!=null)n.onException(new OpenIZModel.Exception("Exception","err_general",i,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else if(n.onException!=null)n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})}catch(t){console.error(t)}},leaveRealm:function(){try{return confirm("You are about to leave the realm "+configuration.realm.address+". Doing so will force the OpenIZ back into an initial configuration mode. Are you sure you want to do this?")?OpenIZConfigurationService.LeaveRealm():!1}catch(n){console.error(n)}},saveAsync:function(n){try{$.ajax({method:"POST",url:"/__config/all",data:JSON.stringify(n.data),dataType:"json",contentType:"application/json",success:function(t,i){if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error),n.state);else if(i!=null)OpenIZ.Configuration.$configuration=t,n.continueWith(t,n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general",i,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)},error:function(t){var i=t.responseJSON;if(i!=null&amp;&amp;i.error!==undefined)n.onException(new OpenIZModel.Exception(i.type,i.error,i.error_description,null),n.state);else n.onException(new OpenIZModel.Exception("Exception","err_general"+i,t,null),n.state);n.finally!==undefined&amp;&amp;n.finally(n.state)}})}catch(t){console.error(t)}},getAppletSettings:function(){},saveAppletSettings:function(){},getUserPreferences:function(){},saveUserPreferences:function(){}},ManufacturedMaterial:{getManufacturedMaterials:function(n){OpenIZ.ManufacturedMaterial.getManufacturedMaterialAsync(n)},getManufacturedMaterialAsync:function(n){OpenIZ.Ims.get({resource:"ManufacturedMaterial",continueWith:n.continueWith,onException:n.onException,query:n.query,state:n.state})}},UserEntity:{updateAsync:function(n){OpenIZ.Ims.put({resource:"UserEntity",continueWith:n.continueWith,onException:n.onException,data:n.data,state:n.state})}}};$.ajaxSetup({cache:!1,converters:{"text json":$.parseJSON},beforeSend:function(n){OpenIZ.Authentication.$elevationCredentials.$enabled&amp;&amp;n.setRequestHeader("Authorization","BASIC "+btoa(OpenIZ.Authentication.$elevationCredentials.userName+":"+OpenIZ.Authentication.$elevationCredentials.password));n.setRequestHeader("X-OIZMagic",OpenIZSessionService.GetMagic())}});$(document).ajaxError(function(n,t,i,r){(t.status==401||t.status==403)&amp;&amp;OpenIZ.Authentication.$session!=null?OpenIZ.Authentication.showElevationDialog():console.warn(new OpenIZModel.Exception("Exception","err_request",r,null))});(window.onpopstate=function(){var n,i=/\+/g,r=/([^&amp;=]+)=?([^&amp;]*)/g,t=function(n){return decodeURIComponent(n.replace(i," "))},u=window.location.search.substring(1);for(OpenIZ.urlParams={};n=r.exec(u);)OpenIZ.urlParams[t(n[1])]=t(n[2])})();Date.prototype.getWeek=function(){var n=this.getFirstDayOfYear();return Math.ceil(((this-n)/864e5+n.getDay()+1)/7)};Date.prototype.getFirstDayOfYear=function(){return new Date(this.getFullYear(),0,1)};Date.prototype.nextMonday=function(){var n=this.getFirstDayOfYear();return n.setDate(n.getDate()+(new Date).getWeek()*7),n};Date.prototype.addDays=function(n){var t=new Date(this.getFullYear(),this.getMonth(),this.getDate(),this.getHours(),this.getMinutes(),this.getSeconds(),this.getMilliseconds());return t.setDate(t.getDate()+n),t};Date.prototype.tomorrow=function(){return this.addDays(1)};Date.prototype.yesterday=function(){return this.addDays(-1)};</contentText>
  </asset>
  <asset name="js/readme.md" mimeType="application/octet-stream">
    <contentBin>77u/77u/VGhpcyBkb2N1bWVudGF0aW9uIHJlcHJlc2VudHMgdGhlIE9wZW5JWiBKYXZhU2NyaXB0IGJyaWRnZSBkb2N1bWVudGF0aW9uLiAgIA0KDQojIyBXaGF0IGlzIHRoZSBicmlkZ2U/ICAgDQogICAgICAgDQpQdXQgc2ltcGx5LCB0aGUgSmF2YVNjcmlwdCBicmlkZ2UgYWxsb3dzIE9wZW5JWiBhcHBsZXRzIHRvIGludGVyZmFjZSB3aXRoIHRoZWlyIGhvc3QgY29udGFpbmVyIHdpdGhvdXQgICANCmhhdmluZyB0byB3b3JyeSBhYm91dCB0aGUgaW1wbGVtZW50YXRpb24gb2YgdGhlIGhvc3QuIE9wZW5JWiBhcHBsZXRzIGluY2x1ZGUgb3Blbml6LmpzL29wZW5pei1tb2RlbC5qcyAgIA0KYW5kIHRoZXNlIGZpbGVzIGFsbG93IHRoZSBhcHBsZXQgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgY29udGFpbmVyICYgSU1TSSBzZXJ2aWNlcy4gICANCg0KQ29udGFpbmVycyB3aWxsIGN1c3RvbWl6ZSB0aGUgb3Blbml6LmpzIGZpbGUgdG8gaW1scGVtZW50IHRoZSBiYXNpYyBPcGVuSVogaW50ZXJhY3Rpb24gY29udHJhY3RzLiBGb3IgICAgDQpleGFtcGxlLCBpZiB5b3UncmUgcnVubmluZyBhbiBhcHBsZXQgb24gaU9TIGluIHRoZSBkaXNjb25uZWN0ZWQgY2xpZW50LCB0aGUgaU9TIG9wZW5pei5qcyBmaWxlIHNlcnZlZCAgIA0KdG8geW91ciBhcHBsZXQgd2lsbCBpbnRlcmFjdCB3aXRoIFNhZmFyaSdzIGludGVncmF0aW9uLiBJZiB5b3UncmUgdXNpbmcgdGhlIGRlZmF1bHQgT3BlbklaIGRpc2Nvbm5lY3RlZCAgIA0KY2xpZW50IHdyaXR0ZW4gaW4gWGFtYXJpbiwgdGhlIG9wZW5pei5qcyBmaWxlIGludGVyYWN0cyB3aXRoIFhhbWFyaW4ncyBbSmF2YXNjcmlwdEludGVyZmFjZV0gY2xhc3Nlcy4gICANCg0KSGVscGZ1bCBsaW5rczogICANCg0KKiBbQXBwbGV0IFNjaGVtYV0oaHR0cDovL29wZW5pei5vcmcvYXJ0aWZhY3RzLzAuMXByZS9hcHBsZXQgIk9wZW5JWiBBcHBsZXQgU2NoZW1hIikgd2hpY2ggY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGZvcm1hdCBvZiBhcHBsZXRzICAgDQoqIFtJTVNJIFNjaGVtYV0oaHR0cDovL29wZW5pei5vcmcvYXJ0aWZhY3RzLzAuMXByZS9pbXNpICJJTVNJIFNjaGVtYSIpIHdoaWNoIGNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmb3JtYXQgb2YgSU1TSSBvYmplY3RzICAgDQoqIFtPcGVuSVogRGlzY29ubmVjdGVkIENsaWVudF0oaHR0cDovL29wZW5pemRjLmNvZGVwbGV4LmNvbSAiT3BlbklaIFhhbWFyaW4gZGlzY29ubmVjdGVkIGNsaWVudCIpIHByb2plY3Qgb24gY29kZXBsZXguICAgDQoNCiMjIExpY2Vuc2UgICANCg0KVGhlIGJyaWRnZSBmaWxlcyBhcmUgcmVsZWFzZWQgdW5kZXIgdGhlIEFwYWNoZSAyLjAgbGljZW5zZS4gU3BlY2lmaWMgaW1wbGVtZW50YXRpb25zIG9mIHRoZSBicmlkZ2UgICANCm1heSBjYXJyeSBhIGRpZmZlcmVudCBsaWNlbnNlLiAgDQo=</contentBin>
  </asset>
  <asset name="layouts/minimal.html" mimeType="text/html">
    <contentHtml>
      <layout>/org.openiz.core/layouts/root.html</layout>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet" openiz:layout="/org.openiz.core/layouts/root.html">
          <!-- #include virtual="content" -->
          <footer>
            <small class="text-muted">
            OpenIZ Core - <span id="versionInfo"></span></small>
            <script type="text/javascript">
            angular.element(document).ready(function () {
                document.getElementById("versionInfo").innerText = OpenIZ.App.getVersion();
            });</script>
          </footer>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="layouts/navbar.html" mimeType="text/html">
    <contentHtml>
      <layout>/org.openiz.core/layouts/root.html</layout>
      <script>/org.openiz.core/controllers/layouts/navbar.js</script>
      <content>
        <div id="layout-navbar" xmlns:oiz="http://openiz.org/applet" xmlns="http://www.w3.org/1999/xhtml" oiz:layout="/org.openiz.core/layouts/root.html" ng-controller="LayoutController">
          <div class="navbar navbar-inverse">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar">
                </span>
                <span class="icon-bar">
                </span>
                <span class="icon-bar">
                </span>
              </button>
              <a href="/tz.timr.applet/index.html" class="navbar-brand">
                <span class="navbar-brand-img">{{ 'locale.layout.title' | i18n }}</span>
                <span class="navbar-brand-text">{{ ::$root.page.title }}</span>
              </a>
            </div>
            <div class="navbar-collapse collapse">
              <ul class="nav navbar-nav navbar-right">
                <li ng-repeat="m in menuItems">
                  <a ng-if="!m.menu" ng-href="{{::m.action}}">
                    <img ng-if="m.icon" class="navbar-icon" ng-src="{{::m.icon}}" ng-alt="{{::m.text}}" ng-title="{{::m.text}}" />
                    <span class="oiz-menu-text">{{::m.text}}</span>
                  </a>
                  <a ng-if="m.menu" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    <img class="navbar-icon" ng-src="{{::m.icon}}" ng-alt="{{::m.text}}" ng-title="{{::m.text}}" />
                    <span class="oiz-menu-text">{{::m.text}}</span>
                    <span class="caret">
                    </span>
                  </a>
                  <ul class="dropdown-menu" ng-if="m.menu">
                    <li ng-repeat="c in ::m.menu">
                      <a ng-href="{{::c.action}}">
                        <img class="navbar-icon" ng-if="::c.icon" ng-src="{{::c.icon}}" ng-alt="{{::c.text}}" ng-title="{{::c.text}}" />
                        <img class="navbar-icon" ng-if="::!c.icon" src="/org.openiz.core/img/appbar.blank.png" />
                                {{::c.text}}
                            </a>
                    </li>
                  </ul>
                </li>
                <li class="dropdown" id="langDropDown" ng-if="$root.session.user === undefined">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    <img src="/org.openiz.core/img/appbar.globe.png" class="navbar-icon" />
                    <span class="oiz-menu-text">{{ 'locale.layout.navbar.language' | i18n }}</span>
                    <span class="caret">
                    </span>
                  </a>
                  <ul class="dropdown-menu">
                    <li role="presentation">
                      <a href="#" rel="en" ng-click="setLocale('en');">
                                English
                            </a>
                    </li>
                    <li role="presentation">
                      <a href="#" rel="sw" ng-click="setLocale('sw');">
                                Kiswahili
                            </a>
                    </li>
                  </ul>
                </li>
                <li class="dropdown" ng-show="$root.session.user">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    <img src="/org.openiz.core/img/appbar.email.png" class="navbar-icon" />
                    <span class="oiz-menu-text">{{ 'locale.alerts.title' | i18n }}</span>
                    <span ng-if="messages" class="badge">
                            {{messages.length}}
                        </span>
                  </a>
                  <ul class="dropdown-menu">
                    <li class="message-summary-panel" role="presentation" ng-repeat="msg in messages" style="padding-right:10px; min-width:350px">
                      <a style="padding-left:0px" ui-sref="org-openiz-core.alert({alertId: msg.id})">
                        <div style="padding-left:0px" class="container-fluid">
                          <div class="col-xs-2">
                            <img class="navbar-icon" src="/org.openiz.core/img/msg/{{msg.flags}}.png" />
                          </div>
                          <div class="col-xs-10">
                            <span>
                              <span class="subject">{{msg.subject}}</span>
                              <br />
                              <span class="sender">{{msg.from}}</span>
                              <span class="text-muted">{{msg.time | date: 'yyyy-MM-dd HH:mm'}}</span>
                            </span>
                          </div>
                        </div>
                      </a>
                    </li>
                    <li role="presentation" ng-if="!messages">
                            {{ 'locale.alerts.noalerts' | i18n }}
                        </li>
                  </ul>
                </li>
                <li class="dropdown" ng-show="$root.session.user">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    <img src="/org.openiz.core/img/appbar.user.png" class="navbar-icon" /> {{ $root.session.user.userName }}  <span class="caret"></span></a>
                  <ul class="dropdown-menu">
                    <li role="presentation">
                      <a ui-sref="org-openiz-core.preferences">
                        <img src="/org.openiz.core/img/appbar.cog.png" class="navbar-icon" /> {{ 'locale.layout.navbar.preferences' | i18n }}
                            </a>
                    </li>
                    <li role="presentation">
                      <a href="#" ng-click="logout();">
                        <img src="/org.openiz.core/img/appbar.man.suitcase.fast.png" class="navbar-icon" /> {{ 'locale.layout.navbar.logout' | i18n }}
                            </a>
                    </li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
          <div class="container-fluid">
            <!-- #include virtual="content" -->
          </div>
          <footer class="footer">
            <hr />
            <div class="container">
              <p class="text-muted text-center">
                ©
                {{ 'locale.layout.footer' | i18n }}
            </p>
            </div>
          </footer>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="layouts/navbar.patient.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="panel-group">
            <div class="panel panel-primary" ng-init="collapseStatus.queueOpen = true" ng-click="collapseStatus.patientInfoHeaderOpen = !collapseStatus.patientInfoHeaderOpen">
              <div class="panel-heading">
                <h4 class="panel-title">
                  <a data-toggle="collapse" data-target="#patientSummaryPanel">
                    <span ng-if="patient.name.OfficialRecord">{{ patient.name.OfficialRecord | oizEntityName }} </span>
                    <span ng-if="!patient.name.OfficialRecord">{{ 'locale.patient.unnamed' | i18n }}</span>
                    <small style="color:white">({{patient.genderConceptModel.name[$root.page.locale] }}) - {{ patient.dateOfBirth | date: 'yyyy-MMM-dd'}}</small>
                    <span class="pull-right" style="margin-right:20px">
                            {{ 'locale.patient.identifiers' | i18n }} {{ patient.identifier | oizEntityIdentifier }}
                        </span>
                  </a>
                  <i class="panel-chevron glyphicon" ng-class="{'glyphicon-chevron-down': collapseStatus.patientInfoHeaderOpen, 'glyphicon-chevron-right': !collapseStatus.patientInfoHeaderOpen}">
                  </i>
                </h4>
              </div>
              <div class="panel-collapse collapse" id="patientSummaryPanel">
                <div class="panel-body">
                  <div class="container-fluid">
                    <div class="row">
                      <label class="col-xs-2">{{ 'locale.patient.demographics.givenName' | i18n }}</label>
                      <div class="col-xs-4">
                        <span ng-model="patient.name.OfficialRecord.given" oiz-editor="tag">
                                    {{ patient.name.OfficialRecord.component.Given | oizEntityName }}
                                </span>
                      </div>
                      <label class="col-xs-2">{{ 'locale.patient.demographics.familyName' | i18n }}</label>
                      <div class="col-xs-4">
                        <span ng-model="patient.name.OfficialRecord.family" oiz-editor="tag">
                                    {{ patient.name.OfficialRecord.component.Family | oizEntityName }}
                                </span>
                      </div>
                    </div>
                    <div class="row">
                      <label class="col-xs-2">{{ 'locale.patient.demographics.dateOfBirth' | i18n }}</label>
                      <div class="col-xs-4">
                        <span ng-model="patient.dateOfBirth" oiz-editor="date">
                                    {{ patient.dateOfBirth | date : 'yyyy-MM-dd' }}
                                </span>
                      </div>
                      <label class="col-xs-2">{{ 'locale.patient.demographics.gender' | i18n }}</label>
                      <div class="col-xs-4">{{ patient.genderConceptModel.name[$root.page.locale] }}</div>
                    </div>
                    <div class="row">
                      <label class="col-xs-2">{{ 'locale.patient.demographics.domicile' | i18n }}</label>
                      <div class="col-xs-4">
                        <span class="glyphicon glyphicon-map-marker">
                        </span> {{ patient.address | oizEntityAddress }}</div>
                      <label class="col-xs-2">{{ 'locale.patient.demographics.facility' | i18n }}</label>
                      <div class="col-xs-4">
                        <span class="glyphicon glyphicon-map-marker">
                        </span> {{ patient.relationship.DedicatedServiceDeliveryLocation.targetModel.name.OfficialRecord | oizEntityName }}</div>
                    </div>
                  </div>
                  <div class="container-fluid" ng-if="patientEdit">
                    <div class="row">
                      <div class="pull-right btn-group">
                        <button type="button" ng-click="patientEdit.show()" class="btn btn-lg btn-info">
                          <span>
                            <span class="glyphicon glyphicon-pencil">
                            </span>
                                        {{ 'locale.action.edit' | i18n }}
                                    </span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- #include virtual="content" -->
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="layouts/root.html" mimeType="text/html">
    <contentHtml>
      <content>
        <html ng-app="layout" xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet">
          <head>
            <link rel="stylesheet" type="text/css" href="/org.openiz.core/css/bootstrap.min.css" />
            <link rel="stylesheet" type="text/css" href="/org.openiz.core/css/select2.min.css" />
            <link rel="stylesheet" type="text/css" href="~/css/theme.css" />
            <link rel="stylesheet" type="text/css" href="~/css/bootstrap-tokenfield.min.css" />
            <link rel="stylesheet" type="text/css" href="~/css/fullcalendar.css" />
            <!--<link rel="stylesheet" type="text/css" href="~/css/fullcalendar.print.css" />-->
            <script src="/org.openiz.core/lib/jquery.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/jquery.datefix.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/bootstrap.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/bootstrap-tokenfield.min.js">
            </script>
            <script src="/org.openiz.core/lib/select2.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/select2-extended-ajax.js">
            </script>
            <script src="/org.openiz.core/lib/angular.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/angular-sanitize.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/angular-route.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/angular-ui-router.min.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/js/openiz-model.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/js/openiz-ng.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/js/openiz.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/js/openiz-bre.js" type="text/javascript">
            </script>
            <script src="/ui/routes.js" type="text/javascript">
            </script>
            <script src="/org.openiz.core/lib/moment.min.js">
            </script>
            <script src="/org.openiz.core/lib/chart.min.js">
            </script>
            <script src="/org.openiz.core/lib/fullcalendar.min.js">
            </script>
            <script src="/org.openiz.core/controllers/layouts/root.js" type="text/javascript">
            </script>
            <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
          </head>
          <body>
            <!-- #include virtual="content" -->
            <!--#include virtual="/org.openiz.core/views/common/modal/authenticate.html"-->
            <!--#include virtual="/org.openiz.core/views/common/modal/wait.html"-->
            <div id="initialBlock" class="modal-backdrop fade in">
            </div>
          </body>
        </html>
      </content>
    </contentHtml>
  </asset>
  <asset name="lib/angular-route.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-10-11
 */
(function(C,d){'use strict';function w(s,h,f){return{restrict:"ECA",terminal:!0,priority:400,transclude:"element",link:function(a,e,b,g,y){function k(){n&amp;&amp;(f.cancel(n),n=null);l&amp;&amp;(l.$destroy(),l=null);m&amp;&amp;(n=f.leave(m),n.then(function(){n=null}),m=null)}function z(){var b=s.current&amp;&amp;s.current.locals;if(d.isDefined(b&amp;&amp;b.$template)){var b=a.$new(),g=s.current;m=y(b,function(b){f.enter(b,null,m||e).then(function(){!d.isDefined(u)||u&amp;&amp;!a.$eval(u)||h()});k()});l=g.scope=b;l.$emit("$viewContentLoaded");
l.$eval(r)}else k()}var l,m,n,u=b.autoscroll,r=b.onload||"";a.$on("$routeChangeSuccess",z);z()}}}function v(d,h,f){return{restrict:"ECA",priority:-400,link:function(a,e){var b=f.current,g=b.locals;e.html(g.$template);var y=d(e.contents());if(b.controller){g.$scope=a;var k=h(b.controller,g);b.controllerAs&amp;&amp;(a[b.controllerAs]=k);e.data("$ngControllerController",k);e.children().data("$ngControllerController",k)}a[b.resolveAs||"$resolve"]=g;y(a)}}}var r=d.module("ngRoute",["ng"]).provider("$route",function(){function s(a,
e){return d.extend(Object.create(a),e)}function h(a,d){var b=d.caseInsensitiveMatch,g={originalPath:a,regexp:a},f=g.keys=[];a=a.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)(\*\?|[\?\*])?/g,function(a,d,b,e){a="?"===e||"*?"===e?"?":null;e="*"===e||"*?"===e?"*":null;f.push({name:b,optional:!!a});d=d||"";return""+(a?"":d)+"(?:"+(a?d:"")+(e&amp;&amp;"(.+?)"||"([^/]+)")+(a||"")+")"+(a||"")}).replace(/([\/$\*])/g,"\\$1");g.regexp=new RegExp("^"+a+"$",b?"i":"");return g}var f={};this.when=function(a,e){var b=
d.copy(e);d.isUndefined(b.reloadOnSearch)&amp;&amp;(b.reloadOnSearch=!0);d.isUndefined(b.caseInsensitiveMatch)&amp;&amp;(b.caseInsensitiveMatch=this.caseInsensitiveMatch);f[a]=d.extend(b,a&amp;&amp;h(a,b));if(a){var g="/"==a[a.length-1]?a.substr(0,a.length-1):a+"/";f[g]=d.extend({redirectTo:a},h(g,b))}return this};this.caseInsensitiveMatch=!1;this.otherwise=function(a){"string"===typeof a&amp;&amp;(a={redirectTo:a});this.when(null,a);return this};this.$get=["$rootScope","$location","$routeParams","$q","$injector","$templateRequest",
"$sce",function(a,e,b,g,h,k,r){function l(q){var c=t.current;(A=(p=w())&amp;&amp;c&amp;&amp;p.$$route===c.$$route&amp;&amp;d.equals(p.pathParams,c.pathParams)&amp;&amp;!p.reloadOnSearch&amp;&amp;!x)||!c&amp;&amp;!p||a.$broadcast("$routeChangeStart",p,c).defaultPrevented&amp;&amp;q&amp;&amp;q.preventDefault()}function m(){var q=t.current,c=p;if(A)q.params=c.params,d.copy(q.params,b),a.$broadcast("$routeUpdate",q);else if(c||q)x=!1,(t.current=c)&amp;&amp;c.redirectTo&amp;&amp;(d.isString(c.redirectTo)?e.path(v(c.redirectTo,c.params)).search(c.params).replace():e.url(c.redirectTo(c.pathParams,
e.path(),e.search())).replace()),g.when(c).then(n).then(function(e){c==t.current&amp;&amp;(c&amp;&amp;(c.locals=e,d.copy(c.params,b)),a.$broadcast("$routeChangeSuccess",c,q))},function(d){c==t.current&amp;&amp;a.$broadcast("$routeChangeError",c,q,d)})}function n(a){if(a){var c=d.extend({},a.resolve);d.forEach(c,function(a,b){c[b]=d.isString(a)?h.get(a):h.invoke(a,null,null,b)});a=u(a);d.isDefined(a)&amp;&amp;(c.$template=a);return g.all(c)}}function u(a){var c,b;d.isDefined(c=a.template)?d.isFunction(c)&amp;&amp;(c=c(a.params)):d.isDefined(b=
a.templateUrl)&amp;&amp;(d.isFunction(b)&amp;&amp;(b=b(a.params)),d.isDefined(b)&amp;&amp;(a.loadedTemplateUrl=r.valueOf(b),c=k(b)));return c}function w(){var a,c;d.forEach(f,function(b,g){var f;if(f=!c){var h=e.path();f=b.keys;var l={};if(b.regexp)if(h=b.regexp.exec(h)){for(var k=1,n=h.length;k&lt;n;++k){var m=f[k-1],p=h[k];m&amp;&amp;p&amp;&amp;(l[m.name]=p)}f=l}else f=null;else f=null;f=a=f}f&amp;&amp;(c=s(b,{params:d.extend({},e.search(),a),pathParams:a}),c.$$route=b)});return c||f[null]&amp;&amp;s(f[null],{params:{},pathParams:{}})}function v(a,b){var e=
[];d.forEach((a||"").split(":"),function(a,d){if(0===d)e.push(a);else{var f=a.match(/(\w+)(?:[?*])?(.*)/),g=f[1];e.push(b[g]);e.push(f[2]||"");delete b[g]}});return e.join("")}var x=!1,p,A,t={routes:f,reload:function(){x=!0;var b={defaultPrevented:!1,preventDefault:function(){this.defaultPrevented=!0;x=!1}};a.$evalAsync(function(){l(b);b.defaultPrevented||m()})},updateParams:function(a){if(this.current&amp;&amp;this.current.$$route)a=d.extend({},this.current.params,a),e.path(v(this.current.$$route.originalPath,
a)),e.search(a);else throw B("norout");}};a.$on("$locationChangeStart",l);a.$on("$locationChangeSuccess",m);return t}]}),B=d.$$minErr("ngRoute");r.provider("$routeParams",function(){this.$get=function(){return{}}});r.directive("ngView",w);r.directive("ngView",v);w.$inject=["$route","$anchorScroll","$animate"];v.$inject=["$compile","$controller","$route"]})(window,window.angular);
//# sourceMappingURL=angular-route.min.js.map
</contentText>
  </asset>
  <asset name="lib/angular-sanitize.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-10-11
 */
(function(s,g){'use strict';function H(g){var l=[];t(l,A).chars(g);return l.join("")}var B=g.$$minErr("$sanitize"),C,l,D,E,q,A,F,t;g.module("ngSanitize",[]).provider("$sanitize",function(){function k(a,e){var b={},c=a.split(","),h;for(h=0;h&lt;c.length;h++)b[e?q(c[h]):c[h]]=!0;return b}function I(a){for(var e={},b=0,c=a.length;b&lt;c;b++){var h=a[b];e[h.name]=h.value}return e}function G(a){return a.replace(/&amp;/g,"&amp;amp;").replace(J,function(a){var b=a.charCodeAt(0);a=a.charCodeAt(1);return"&amp;#"+(1024*(b-55296)+
(a-56320)+65536)+";"}).replace(K,function(a){return"&amp;#"+a.charCodeAt(0)+";"}).replace(/&lt;/g,"&amp;lt;").replace(/&gt;/g,"&amp;gt;")}function u(a){if(a.nodeType===s.Node.ELEMENT_NODE)for(var e=a.attributes,b=0,c=e.length;b&lt;c;b++){var h=e[b],d=h.name.toLowerCase();if("xmlns:ns1"===d||0===d.lastIndexOf("ns1:",0))a.removeAttributeNode(h),b--,c--}(e=a.firstChild)&amp;&amp;u(e);(e=a.nextSibling)&amp;&amp;u(e)}var v=!1;this.$get=["$$sanitizeUri",function(a){v&amp;&amp;l(w,x);return function(e){var b=[];F(e,t(b,function(b,h){return!/^unsafe:/.test(a(b,
h))}));return b.join("")}}];this.enableSvg=function(a){return E(a)?(v=a,this):v};C=g.bind;l=g.extend;D=g.forEach;E=g.isDefined;q=g.lowercase;A=g.noop;F=function(a,e){null===a||void 0===a?a="":"string"!==typeof a&amp;&amp;(a=""+a);f.innerHTML=a;var b=5;do{if(0===b)throw B("uinput");b--;s.document.documentMode&amp;&amp;u(f);a=f.innerHTML;f.innerHTML=a}while(a!==f.innerHTML);for(b=f.firstChild;b;){switch(b.nodeType){case 1:e.start(b.nodeName.toLowerCase(),I(b.attributes));break;case 3:e.chars(b.textContent)}var c;if(!(c=
b.firstChild)&amp;&amp;(1==b.nodeType&amp;&amp;e.end(b.nodeName.toLowerCase()),c=b.nextSibling,!c))for(;null==c;){b=b.parentNode;if(b===f)break;c=b.nextSibling;1==b.nodeType&amp;&amp;e.end(b.nodeName.toLowerCase())}b=c}for(;b=f.firstChild;)f.removeChild(b)};t=function(a,e){var b=!1,c=C(a,a.push);return{start:function(a,d){a=q(a);!b&amp;&amp;z[a]&amp;&amp;(b=a);b||!0!==w[a]||(c("&lt;"),c(a),D(d,function(b,d){var f=q(d),g="img"===a&amp;&amp;"src"===f||"background"===f;!0!==m[f]||!0===n[f]&amp;&amp;!e(b,g)||(c(" "),c(d),c('="'),c(G(b)),c('"'))}),c("&gt;"))},end:function(a){a=
q(a);b||!0!==w[a]||!0===y[a]||(c("&lt;/"),c(a),c("&gt;"));a==b&amp;&amp;(b=!1)},chars:function(a){b||c(G(a))}}};var J=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,K=/([^\#-~ |!])/g,y=k("area,br,col,hr,img,wbr"),d=k("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),r=k("rp,rt"),p=l({},r,d),d=l({},d,k("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul")),r=l({},r,k("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),
x=k("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan"),z=k("script,style"),w=l({},y,d,r,p),n=k("background,cite,href,longdesc,src,xlink:href"),p=k("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width"),
r=k("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan",
!0),m=l({},n,r,p),f;(function(a){if(a.document&amp;&amp;a.document.implementation)a=a.document.implementation.createHTMLDocument("inert");else throw B("noinert");var e=(a.documentElement||a.getDocumentElement()).getElementsByTagName("body");1===e.length?f=e[0]:(e=a.createElement("html"),f=a.createElement("body"),e.appendChild(f),a.appendChild(e))})(s)});g.module("ngSanitize").filter("linky",["$sanitize",function(k){var l=/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}&lt;&gt;"\u201d\u2019]/i,
q=/^mailto:/i,u=g.$$minErr("linky"),v=g.isDefined,s=g.isFunction,t=g.isObject,y=g.isString;return function(d,g,p){function x(a){a&amp;&amp;m.push(H(a))}function z(a,b){var c,d=w(a);m.push("&lt;a ");for(c in d)m.push(c+'="'+d[c]+'" ');!v(g)||"target"in d||m.push('target="',g,'" ');m.push('href="',a.replace(/"/g,"&amp;quot;"),'"&gt;');x(b);m.push("&lt;/a&gt;")}if(null==d||""===d)return d;if(!y(d))throw u("notstring",d);for(var w=s(p)?p:t(p)?function(){return p}:function(){return{}},n=d,m=[],f,a;d=n.match(l);)f=d[0],d[2]||
d[4]||(f=(d[3]?"http://":"mailto:")+f),a=d.index,x(n.substr(0,a)),z(f,d[0].replace(q,"")),n=n.substring(a+d[0].length);x(n);return k(m.join(""))}}])})(window,window.angular);
//# sourceMappingURL=angular-sanitize.min.js.map</contentText>
  </asset>
  <asset name="lib/angular-ui-router.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-11-14
 */
"undefined" != typeof module &amp;&amp; "undefined" != typeof exports &amp;&amp; module.exports === exports &amp;&amp; (module.exports = "ui.router"), function (a, b, c) {
    "use strict"; function d(a, b) { return S(new (S(function () { }, { prototype: a })), b) } function e(a) { return R(arguments, function (b) { b !== a &amp;&amp; R(b, function (b, c) { a.hasOwnProperty(c) || (a[c] = b) }) }), a } function f(a, b) { var c = []; for (var d in a.path) { if (a.path[d] !== b.path[d]) break; c.push(a.path[d]) } return c } function g(a) { if (Object.keys) return Object.keys(a); var b = []; return R(a, function (a, c) { b.push(c) }), b } function h(a, b) { if (Array.prototype.indexOf) return a.indexOf(b, Number(arguments[2]) || 0); var c = a.length &gt;&gt;&gt; 0, d = Number(arguments[2]) || 0; for (d = d &lt; 0 ? Math.ceil(d) : Math.floor(d), d &lt; 0 &amp;&amp; (d += c) ; d &lt; c; d++) if (d in a &amp;&amp; a[d] === b) return d; return -1 } function i(a, b, c, d) { var e, i = f(c, d), j = {}, k = []; for (var l in i) if (i[l] &amp;&amp; i[l].params &amp;&amp; (e = g(i[l].params), e.length)) for (var m in e) h(k, e[m]) &gt;= 0 || (k.push(e[m]), j[e[m]] = a[e[m]]); return S({}, j, b) } function j(a, b, c) { if (!c) { c = []; for (var d in a) c.push(d) } for (var e = 0; e &lt; c.length; e++) { var f = c[e]; if (a[f] != b[f]) return !1 } return !0 } function k(a, b) { var c = {}; return R(a, function (a) { c[a] = b[a] }), c } function l(a) { var b = {}, c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1)); return R(c, function (c) { c in a &amp;&amp; (b[c] = a[c]) }), b } function m(a) { var b = {}, c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1)); for (var d in a) h(c, d) == -1 &amp;&amp; (b[d] = a[d]); return b } function n(a, b) { var c = Q(a), d = c ? [] : {}; return R(a, function (a, e) { b(a, e) &amp;&amp; (d[c ? d.length : e] = a) }), d } function o(a, b) { var c = Q(a) ? [] : {}; return R(a, function (a, d) { c[d] = b(a, d) }), c } function p(a) { return a.then(c, function () { }) &amp;&amp; a } function q(a, b) { var d = 1, f = 2, i = {}, j = [], k = i, l = S(a.when(i), { $$promises: i, $$values: i }); this.study = function (i) { function n(a, c) { if (s[c] !== f) { if (r.push(c), s[c] === d) throw r.splice(0, h(r, c)), new Error("Cyclic dependency: " + r.join(" -&gt; ")); if (s[c] = d, O(a)) q.push(c, [function () { return b.get(a) }], j); else { var e = b.annotate(a); R(e, function (a) { a !== c &amp;&amp; i.hasOwnProperty(a) &amp;&amp; n(i[a], a) }), q.push(c, a, e) } r.pop(), s[c] = f } } function o(a) { return P(a) &amp;&amp; a.then &amp;&amp; a.$$promises } if (!P(i)) throw new Error("'invocables' must be an object"); var p = g(i || {}), q = [], r = [], s = {}; return R(i, n), i = r = s = null, function (d, f, g) { function h() { --u || (v || e(t, f.$$values), r.$$values = t, r.$$promises = r.$$promises || !0, delete r.$$inheritedValues, n.resolve(t)) } function i(a) { r.$$failure = a, n.reject(a) } function j(c, e, f) { function j(a) { l.reject(a), i(a) } function k() { if (!M(r.$$failure)) try { l.resolve(b.invoke(e, g, t)), l.promise.then(function (a) { t[c] = a, h() }, j) } catch (a) { j(a) } } var l = a.defer(), m = 0; R(f, function (a) { s.hasOwnProperty(a) &amp;&amp; !d.hasOwnProperty(a) &amp;&amp; (m++, s[a].then(function (b) { t[a] = b, --m || k() }, j)) }), m || k(), s[c] = l.promise } if (o(d) &amp;&amp; g === c &amp;&amp; (g = f, f = d, d = null), d) { if (!P(d)) throw new Error("'locals' must be an object") } else d = k; if (f) { if (!o(f)) throw new Error("'parent' must be a promise returned by $resolve.resolve()") } else f = l; var n = a.defer(), r = n.promise, s = r.$$promises = {}, t = S({}, d), u = 1 + q.length / 3, v = !1; if (M(f.$$failure)) return i(f.$$failure), r; f.$$inheritedValues &amp;&amp; e(t, m(f.$$inheritedValues, p)), S(s, f.$$promises), f.$$values ? (v = e(t, m(f.$$values, p)), r.$$inheritedValues = m(f.$$values, p), h()) : (f.$$inheritedValues &amp;&amp; (r.$$inheritedValues = m(f.$$inheritedValues, p)), f.then(h, i)); for (var w = 0, x = q.length; w &lt; x; w += 3) d.hasOwnProperty(q[w]) ? h() : j(q[w], q[w + 1], q[w + 2]); return r } }, this.resolve = function (a, b, c, d) { return this.study(a)(b, c, d) } } function r(a, b, c) { this.fromConfig = function (a, b, c) { return M(a.template) ? this.fromString(a.template, b) : M(a.templateUrl) ? this.fromUrl(a.templateUrl, b) : M(a.templateProvider) ? this.fromProvider(a.templateProvider, b, c) : null }, this.fromString = function (a, b) { return N(a) ? a(b) : a }, this.fromUrl = function (c, d) { return N(c) &amp;&amp; (c = c(d)), null == c ? null : a.get(c, { cache: b, headers: { Accept: "text/html" } }).then(function (a) { return a.data }) }, this.fromProvider = function (a, b, d) { return c.invoke(a, null, d || { params: b }) } } function s(a, b, e) { function f(b, c, d, e) { if (q.push(b), o[b]) return o[b]; if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(b)) throw new Error("Invalid parameter name '" + b + "' in pattern '" + a + "'"); if (p[b]) throw new Error("Duplicate parameter name '" + b + "' in pattern '" + a + "'"); return p[b] = new V.Param(b, c, d, e), p[b] } function g(a, b, c, d) { var e = ["", ""], f = a.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&amp;"); if (!b) return f; switch (c) { case !1: e = ["(", ")" + (d ? "?" : "")]; break; case !0: f = f.replace(/\/$/, ""), e = ["(?:/(", ")|/)?"]; break; default: e = ["(" + c + "|", ")?"] } return f + e[0] + b + e[1] } function h(e, f) { var g, h, i, j, k; return g = e[2] || e[3], k = b.params[g], i = a.substring(m, e.index), h = f ? e[4] : e[4] || ("*" == e[1] ? ".*" : null), h &amp;&amp; (j = V.type(h) || d(V.type("string"), { pattern: new RegExp(h, b.caseInsensitive ? "i" : c) })), { id: g, regexp: h, segment: i, type: j, cfg: k } } b = S({ params: {} }, P(b) ? b : {}); var i, j = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, k = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, l = "^", m = 0, n = this.segments = [], o = e ? e.params : {}, p = this.params = e ? e.params.$$new() : new V.ParamSet, q = []; this.source = a; for (var r, s, t; (i = j.exec(a)) &amp;&amp; (r = h(i, !1), !(r.segment.indexOf("?") &gt;= 0)) ;) s = f(r.id, r.type, r.cfg, "path"), l += g(r.segment, s.type.pattern.source, s.squash, s.isOptional), n.push(r.segment), m = j.lastIndex; t = a.substring(m); var u = t.indexOf("?"); if (u &gt;= 0) { var v = this.sourceSearch = t.substring(u); if (t = t.substring(0, u), this.sourcePath = a.substring(0, m + u), v.length &gt; 0) for (m = 0; i = k.exec(v) ;) r = h(i, !0), s = f(r.id, r.type, r.cfg, "search"), m = j.lastIndex } else this.sourcePath = a, this.sourceSearch = ""; l += g(t) + (b.strict === !1 ? "/?" : "") + "$", n.push(t), this.regexp = new RegExp(l, b.caseInsensitive ? "i" : c), this.prefix = n[0], this.$$paramNames = q } function t(a) { S(this, a) } function u() { function a(a) { return null != a ? a.toString().replace(/(~|\/)/g, function (a) { return { "~": "~~", "/": "~2F" }[a] }) : a } function e(a) { return null != a ? a.toString().replace(/(~~|~2F)/g, function (a) { return { "~~": "~", "~2F": "/" }[a] }) : a } function f() { return { strict: p, caseInsensitive: m } } function i(a) { return N(a) || Q(a) &amp;&amp; N(a[a.length - 1]) } function j() { for (; w.length;) { var a = w.shift(); if (a.pattern) throw new Error("You cannot override a type's .pattern at runtime."); b.extend(r[a.name], l.invoke(a.def)) } } function k(a) { S(this, a || {}) } V = this; var l, m = !1, p = !0, q = !1, r = {}, v = !0, w = [], x = { string: { encode: a, decode: e, is: function (a) { return null == a || !M(a) || "string" == typeof a }, pattern: /[^\/]*/ }, int: { encode: a, decode: function (a) { return parseInt(a, 10) }, is: function (a) { return M(a) &amp;&amp; this.decode(a.toString()) === a }, pattern: /\d+/ }, bool: { encode: function (a) { return a ? 1 : 0 }, decode: function (a) { return 0 !== parseInt(a, 10) }, is: function (a) { return a === !0 || a === !1 }, pattern: /0|1/ }, date: { encode: function (a) { return this.is(a) ? [a.getFullYear(), ("0" + (a.getMonth() + 1)).slice(-2), ("0" + a.getDate()).slice(-2)].join("-") : c }, decode: function (a) { if (this.is(a)) return a; var b = this.capture.exec(a); return b ? new Date(b[1], b[2] - 1, b[3]) : c }, is: function (a) { return a instanceof Date &amp;&amp; !isNaN(a.valueOf()) }, equals: function (a, b) { return this.is(a) &amp;&amp; this.is(b) &amp;&amp; a.toISOString() === b.toISOString() }, pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/, capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/ }, json: { encode: b.toJson, decode: b.fromJson, is: b.isObject, equals: b.equals, pattern: /[^\/]*/ }, any: { encode: b.identity, decode: b.identity, equals: b.equals, pattern: /.*/ } }; u.$$getDefaultValue = function (a) { if (!i(a.value)) return a.value; if (!l) throw new Error("Injectable functions cannot be called at configuration time"); return l.invoke(a.value) }, this.caseInsensitive = function (a) { return M(a) &amp;&amp; (m = a), m }, this.strictMode = function (a) { return M(a) &amp;&amp; (p = a), p }, this.defaultSquashPolicy = function (a) { if (!M(a)) return q; if (a !== !0 &amp;&amp; a !== !1 &amp;&amp; !O(a)) throw new Error("Invalid squash policy: " + a + ". Valid policies: false, true, arbitrary-string"); return q = a, a }, this.compile = function (a, b) { return new s(a, S(f(), b)) }, this.isMatcher = function (a) { if (!P(a)) return !1; var b = !0; return R(s.prototype, function (c, d) { N(c) &amp;&amp; (b = b &amp;&amp; M(a[d]) &amp;&amp; N(a[d])) }), b }, this.type = function (a, b, c) { if (!M(b)) return r[a]; if (r.hasOwnProperty(a)) throw new Error("A type named '" + a + "' has already been defined."); return r[a] = new t(S({ name: a }, b)), c &amp;&amp; (w.push({ name: a, def: c }), v || j()), this }, R(x, function (a, b) { r[b] = new t(S({ name: b }, a)) }), r = d(r, {}), this.$get = ["$injector", function (a) { return l = a, v = !1, j(), R(x, function (a, b) { r[b] || (r[b] = new t(a)) }), this }], this.Param = function (a, d, e, f) { function j(a) { var b = P(a) ? g(a) : [], c = h(b, "value") === -1 &amp;&amp; h(b, "type") === -1 &amp;&amp; h(b, "squash") === -1 &amp;&amp; h(b, "array") === -1; return c &amp;&amp; (a = { value: a }), a.$$fn = i(a.value) ? a.value : function () { return a.value }, a } function k(c, d, e) { if (c.type &amp;&amp; d) throw new Error("Param '" + a + "' has two type configurations."); return d ? d : c.type ? b.isString(c.type) ? r[c.type] : c.type instanceof t ? c.type : new t(c.type) : "config" === e ? r.any : r.string } function m() { var b = { array: "search" === f &amp;&amp; "auto" }, c = a.match(/\[\]$/) ? { array: !0 } : {}; return S(b, c, e).array } function p(a, b) { var c = a.squash; if (!b || c === !1) return !1; if (!M(c) || null == c) return q; if (c === !0 || O(c)) return c; throw new Error("Invalid squash policy: '" + c + "'. Valid policies: false, true, or arbitrary string") } function s(a, b, d, e) { var f, g, i = [{ from: "", to: d || b ? c : "" }, { from: null, to: d || b ? c : "" }]; return f = Q(a.replace) ? a.replace : [], O(e) &amp;&amp; f.push({ from: e, to: c }), g = o(f, function (a) { return a.from }), n(i, function (a) { return h(g, a.from) === -1 }).concat(f) } function u() { if (!l) throw new Error("Injectable functions cannot be called at configuration time"); var a = l.invoke(e.$$fn); if (null !== a &amp;&amp; a !== c &amp;&amp; !x.type.is(a)) throw new Error("Default value (" + a + ") for parameter '" + x.id + "' is not an instance of Type (" + x.type.name + ")"); return a } function v(a) { function b(a) { return function (b) { return b.from === a } } function c(a) { var c = o(n(x.replace, b(a)), function (a) { return a.to }); return c.length ? c[0] : a } return a = c(a), M(a) ? x.type.$normalize(a) : u() } function w() { return "{Param:" + a + " " + d + " squash: '" + A + "' optional: " + z + "}" } var x = this; e = j(e), d = k(e, d, f); var y = m(); d = y ? d.$asArray(y, "search" === f) : d, "string" !== d.name || y || "path" !== f || e.value !== c || (e.value = ""); var z = e.value !== c, A = p(e, z), B = s(e, y, z, A); S(this, { id: a, type: d, location: f, array: y, squash: A, replace: B, isOptional: z, value: v, dynamic: c, config: e, toString: w }) }, k.prototype = { $$new: function () { return d(this, S(new k, { $$parent: this })) }, $$keys: function () { for (var a = [], b = [], c = this, d = g(k.prototype) ; c;) b.push(c), c = c.$$parent; return b.reverse(), R(b, function (b) { R(g(b), function (b) { h(a, b) === -1 &amp;&amp; h(d, b) === -1 &amp;&amp; a.push(b) }) }), a }, $$values: function (a) { var b = {}, c = this; return R(c.$$keys(), function (d) { b[d] = c[d].value(a &amp;&amp; a[d]) }), b }, $$equals: function (a, b) { var c = !0, d = this; return R(d.$$keys(), function (e) { var f = a &amp;&amp; a[e], g = b &amp;&amp; b[e]; d[e].type.equals(f, g) || (c = !1) }), c }, $$validates: function (a) { var d, e, f, g, h, i = this.$$keys(); for (d = 0; d &lt; i.length &amp;&amp; (e = this[i[d]], f = a[i[d]], f !== c &amp;&amp; null !== f || !e.isOptional) ; d++) { if (g = e.type.$normalize(f), !e.type.is(g)) return !1; if (h = e.type.encode(g), b.isString(h) &amp;&amp; !e.type.pattern.exec(h)) return !1 } return !0 }, $$parent: c }, this.ParamSet = k } function v(a, d) { function e(a) { var b = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(a.source); return null != b ? b[1].replace(/\\(.)/g, "$1") : "" } function f(a, b) { return a.replace(/\$(\$|\d{1,2})/, function (a, c) { return b["$" === c ? 0 : Number(c)] }) } function g(a, b, c) { if (!c) return !1; var d = a.invoke(b, b, { $match: c }); return !M(d) || d } function h(d, e, f, g, h) { function m(a, b, c) { return "/" === q ? a : b ? q.slice(0, -1) + a : c ? q.slice(1) + a : a } function n(a) { function b(a) { var b = a(f, d); return !!b &amp;&amp; (O(b) &amp;&amp; d.replace().url(b), !0) } if (!a || !a.defaultPrevented) { p &amp;&amp; d.url() === p; p = c; var e, g = j.length; for (e = 0; e &lt; g; e++) if (b(j[e])) return; k &amp;&amp; b(k) } } function o() { return i = i || e.$on("$locationChangeSuccess", n) } var p, q = g.baseHref(), r = d.url(); return l || o(), { sync: function () { n() }, listen: function () { return o() }, update: function (a) { return a ? void (r = d.url()) : void (d.url() !== r &amp;&amp; (d.url(r), d.replace())) }, push: function (a, b, e) { var f = a.format(b || {}); null !== f &amp;&amp; b &amp;&amp; b["#"] &amp;&amp; (f += "#" + b["#"]), d.url(f), p = e &amp;&amp; e.$$avoidResync ? d.url() : c, e &amp;&amp; e.replace &amp;&amp; d.replace() }, href: function (c, e, f) { if (!c.validates(e)) return null; var g = a.html5Mode(); b.isObject(g) &amp;&amp; (g = g.enabled), g = g &amp;&amp; h.history; var i = c.format(e); if (f = f || {}, g || null === i || (i = "#" + a.hashPrefix() + i), null !== i &amp;&amp; e &amp;&amp; e["#"] &amp;&amp; (i += "#" + e["#"]), i = m(i, g, f.absolute), !f.absolute || !i) return i; var j = !g &amp;&amp; i ? "/" : "", k = d.port(); return k = 80 === k || 443 === k ? "" : ":" + k, [d.protocol(), "://", d.host(), k, j, i].join("") } } } var i, j = [], k = null, l = !1; this.rule = function (a) { if (!N(a)) throw new Error("'rule' must be a function"); return j.push(a), this }, this.otherwise = function (a) { if (O(a)) { var b = a; a = function () { return b } } else if (!N(a)) throw new Error("'rule' must be a function"); return k = a, this }, this.when = function (a, b) { var c, h = O(b); if (O(a) &amp;&amp; (a = d.compile(a)), !h &amp;&amp; !N(b) &amp;&amp; !Q(b)) throw new Error("invalid 'handler' in when()"); var i = { matcher: function (a, b) { return h &amp;&amp; (c = d.compile(b), b = ["$match", function (a) { return c.format(a) }]), S(function (c, d) { return g(c, b, a.exec(d.path(), d.search())) }, { prefix: O(a.prefix) ? a.prefix : "" }) }, regex: function (a, b) { if (a.global || a.sticky) throw new Error("when() RegExp must not be global or sticky"); return h &amp;&amp; (c = b, b = ["$match", function (a) { return f(c, a) }]), S(function (c, d) { return g(c, b, a.exec(d.path())) }, { prefix: e(a) }) } }, j = { matcher: d.isMatcher(a), regex: a instanceof RegExp }; for (var k in j) if (j[k]) return this.rule(i[k](a, b)); throw new Error("invalid 'what' in when()") }, this.deferIntercept = function (a) { a === c &amp;&amp; (a = !0), l = a }, this.$get = h, h.$inject = ["$location", "$rootScope", "$injector", "$browser", "$sniffer"] } function w(a, e) { function f(a) { return 0 === a.indexOf(".") || 0 === a.indexOf("^") } function m(a, b) { if (!a) return c; var d = O(a), e = d ? a : a.name, g = f(e); if (g) { if (!b) throw new Error("No reference point given for path '" + e + "'"); b = m(b); for (var h = e.split("."), i = 0, j = h.length, k = b; i &lt; j; i++) if ("" !== h[i] || 0 !== i) { if ("^" !== h[i]) break; if (!k.parent) throw new Error("Path '" + e + "' not valid for state '" + b.name + "'"); k = k.parent } else k = b; h = h.slice(i).join("."), e = k.name + (k.name &amp;&amp; h ? "." : "") + h } var l = A[e]; return !l || !d &amp;&amp; (d || l !== a &amp;&amp; l.self !== a) ? c : l } function n(a, b) { B[a] || (B[a] = []), B[a].push(b) } function q(a) { for (var b = B[a] || []; b.length;) r(b.shift()) } function r(b) { b = d(b, { self: b, resolve: b.resolve || {}, toString: function () { return this.name } }); var c = b.name; if (!O(c) || c.indexOf("@") &gt;= 0) throw new Error("State must have a valid name"); if (A.hasOwnProperty(c)) throw new Error("State '" + c + "' is already defined"); var e = c.indexOf(".") !== -1 ? c.substring(0, c.lastIndexOf(".")) : O(b.parent) ? b.parent : P(b.parent) &amp;&amp; O(b.parent.name) ? b.parent.name : ""; if (e &amp;&amp; !A[e]) return n(e, b.self); for (var f in D) N(D[f]) &amp;&amp; (b[f] = D[f](b, D.$delegates[f])); return A[c] = b, !b[C] &amp;&amp; b.url &amp;&amp; a.when(b.url, ["$match", "$stateParams", function (a, c) { z.$current.navigable == b &amp;&amp; j(a, c) || z.transitionTo(b, a, { inherit: !0, location: !1 }) }]), q(c), b } function s(a) { return a.indexOf("*") &gt; -1 } function t(a) { for (var b = a.split("."), c = z.$current.name.split("."), d = 0, e = b.length; d &lt; e; d++) "*" === b[d] &amp;&amp; (c[d] = "*"); return "**" === b[0] &amp;&amp; (c = c.slice(h(c, b[1])), c.unshift("**")), "**" === b[b.length - 1] &amp;&amp; (c.splice(h(c, b[b.length - 2]) + 1, Number.MAX_VALUE), c.push("**")), b.length == c.length &amp;&amp; c.join("") === b.join("") } function u(a, b) { return O(a) &amp;&amp; !M(b) ? D[a] : N(b) &amp;&amp; O(a) ? (D[a] &amp;&amp; !D.$delegates[a] &amp;&amp; (D.$delegates[a] = D[a]), D[a] = b, this) : this } function v(a, b) { return P(a) ? b = a : b.name = a, r(b), this } function w(a, e, f, h, l, n, q, r, u) { function v(b, c, d, f) { var g = a.$broadcast("$stateNotFound", b, c, d); if (g.defaultPrevented) return q.update(), F; if (!g.retry) return null; if (f.$retry) return q.update(), G; var h = z.transition = e.when(g.retry); return h.then(function () { return h !== z.transition ? (a.$broadcast("$stateChangeCancel", b.to, b.toParams, c, d), D) : (b.options.$retry = !0, z.transitionTo(b.to, b.toParams, b.options)) }, function () { return F }), q.update(), h } function w(a, c, d, g, i, j) { function m() { var c = []; return R(a.views, function (d, e) { var g = d.resolve &amp;&amp; d.resolve !== a.resolve ? d.resolve : {}; g.$template = [function () { return f.load(e, { view: d, locals: i.globals, params: n, notify: j.notify }) || "" }], c.push(l.resolve(g, i.globals, i.resolve, a).then(function (c) { if (N(d.controllerProvider) || Q(d.controllerProvider)) { var f = b.extend({}, g, i.globals); c.$$controller = h.invoke(d.controllerProvider, null, f) } else c.$$controller = d.controller; c.$$state = a, c.$$controllerAs = d.controllerAs, c.$$resolveAs = d.resolveAs, i[e] = c })) }), e.all(c).then(function () { return i.globals }) } var n = d ? c : k(a.params.$$keys(), c), o = { $stateParams: n }; i.resolve = l.resolve(a.resolve, o, i.resolve, a); var p = [i.resolve.then(function (a) { i.globals = a })]; return g &amp;&amp; p.push(g), e.all(p).then(m).then(function (a) { return i }) } var B = new Error("transition superseded"), D = p(e.reject(B)), E = p(e.reject(new Error("transition prevented"))), F = p(e.reject(new Error("transition aborted"))), G = p(e.reject(new Error("transition failed"))); return y.locals = { resolve: null, globals: { $stateParams: {} } }, z = { params: {}, current: y.self, $current: y, transition: null }, z.reload = function (a) { return z.transitionTo(z.current, n, { reload: a || !0, inherit: !1, notify: !0 }) }, z.go = function (a, b, c) { return z.transitionTo(a, b, S({ inherit: !0, relative: z.$current }, c)) }, z.transitionTo = function (b, c, f) { c = c || {}, f = S({ location: !0, inherit: !1, relative: null, notify: !0, reload: !1, $retry: !1 }, f || {}); var g, j = z.$current, l = z.params, o = j.path, p = m(b, f.relative), r = c["#"]; if (!M(p)) { var s = { to: b, toParams: c, options: f }, t = v(s, j.self, l, f); if (t) return t; if (b = s.to, c = s.toParams, f = s.options, p = m(b, f.relative), !M(p)) { if (!f.relative) throw new Error("No such state '" + b + "'"); throw new Error("Could not resolve '" + b + "' from state '" + f.relative + "'") } } if (p[C]) throw new Error("Cannot transition to abstract state '" + b + "'"); if (f.inherit &amp;&amp; (c = i(n, c || {}, z.$current, p)), !p.params.$$validates(c)) return G; c = p.params.$$values(c), b = p; var u = b.path, A = 0, F = u[A], H = y.locals, I = []; if (f.reload) { if (O(f.reload) || P(f.reload)) { if (P(f.reload) &amp;&amp; !f.reload.name) throw new Error("Invalid reload state object"); var J = f.reload === !0 ? o[0] : m(f.reload); if (f.reload &amp;&amp; !J) throw new Error("No such reload state '" + (O(f.reload) ? f.reload : f.reload.name) + "'"); for (; F &amp;&amp; F === o[A] &amp;&amp; F !== J;) H = I[A] = F.locals, A++, F = u[A] } } else for (; F &amp;&amp; F === o[A] &amp;&amp; F.ownParams.$$equals(c, l) ;) H = I[A] = F.locals, A++, F = u[A]; if (x(b, c, j, l, H, f)) return r &amp;&amp; (c["#"] = r), z.params = c, T(z.params, n), T(k(b.params.$$keys(), n), b.locals.globals.$stateParams), f.location &amp;&amp; b.navigable &amp;&amp; b.navigable.url &amp;&amp; (q.push(b.navigable.url, c, { $$avoidResync: !0, replace: "replace" === f.location }), q.update(!0)), z.transition = null, e.when(z.current); if (c = k(b.params.$$keys(), c || {}), r &amp;&amp; (c["#"] = r), f.notify &amp;&amp; a.$broadcast("$stateChangeStart", b.self, c, j.self, l, f).defaultPrevented) return a.$broadcast("$stateChangeCancel", b.self, c, j.self, l), null == z.transition &amp;&amp; q.update(), E; for (var K = e.when(H), L = A; L &lt; u.length; L++, F = u[L]) H = I[L] = d(H), K = w(F, c, F === b, K, H, f); var N = z.transition = K.then(function () { var d, e, g; if (z.transition !== N) return a.$broadcast("$stateChangeCancel", b.self, c, j.self, l), D; for (d = o.length - 1; d &gt;= A; d--) g = o[d], g.self.onExit &amp;&amp; h.invoke(g.self.onExit, g.self, g.locals.globals), g.locals = null; for (d = A; d &lt; u.length; d++) e = u[d], e.locals = I[d], e.self.onEnter &amp;&amp; h.invoke(e.self.onEnter, e.self, e.locals.globals); return z.transition !== N ? (a.$broadcast("$stateChangeCancel", b.self, c, j.self, l), D) : (z.$current = b, z.current = b.self, z.params = c, T(z.params, n), z.transition = null, f.location &amp;&amp; b.navigable &amp;&amp; q.push(b.navigable.url, b.navigable.locals.globals.$stateParams, { $$avoidResync: !0, replace: "replace" === f.location }), f.notify &amp;&amp; a.$broadcast("$stateChangeSuccess", b.self, c, j.self, l), q.update(!0), z.current) }).then(null, function (d) { return d === B ? D : z.transition !== N ? (a.$broadcast("$stateChangeCancel", b.self, c, j.self, l), D) : (z.transition = null, g = a.$broadcast("$stateChangeError", b.self, c, j.self, l, d), g.defaultPrevented || q.update(), e.reject(d)) }); return N }, z.is = function (a, b, d) { d = S({ relative: z.$current }, d || {}); var e = m(a, d.relative); return M(e) ? z.$current === e &amp;&amp; (!b || j(e.params.$$values(b), n)) : c }, z.includes = function (a, b, d) { if (d = S({ relative: z.$current }, d || {}), O(a) &amp;&amp; s(a)) { if (!t(a)) return !1; a = z.$current.name } var e = m(a, d.relative); if (!M(e)) return c; if (!M(z.$current.includes[e.name])) return !1; if (!b) return !0; for (var f = g(b), h = 0; h &lt; f.length; h++) { var i = f[h], j = e.params[i]; if (j &amp;&amp; !j.type.equals(n[i], b[i])) return !1 } return !0 }, z.href = function (a, b, d) { d = S({ lossy: !0, inherit: !0, absolute: !1, relative: z.$current }, d || {}); var e = m(a, d.relative); if (!M(e)) return null; d.inherit &amp;&amp; (b = i(n, b || {}, z.$current, e)); var f = e &amp;&amp; d.lossy ? e.navigable : e; return f &amp;&amp; f.url !== c &amp;&amp; null !== f.url ? q.href(f.url, k(e.params.$$keys().concat("#"), b || {}), { absolute: d.absolute }) : null }, z.get = function (a, b) { if (0 === arguments.length) return o(g(A), function (a) { return A[a].self }); var c = m(a, b || z.$current); return c &amp;&amp; c.self ? c.self : null }, z } function x(a, b, c, d, e, f) { function g(a, b, c) { function d(b) { return "search" != a.params[b].location } var e = a.params.$$keys().filter(d), f = l.apply({}, [a.params].concat(e)), g = new V.ParamSet(f); return g.$$equals(b, c) } if (!f.reload &amp;&amp; a === c &amp;&amp; (e === c.locals || a.self.reloadOnSearch === !1 &amp;&amp; g(c, d, b))) return !0 } var y, z, A = {}, B = {}, C = "abstract", D = { parent: function (a) { if (M(a.parent) &amp;&amp; a.parent) return m(a.parent); var b = /^(.+)\.[^.]+$/.exec(a.name); return b ? m(b[1]) : y }, data: function (a) { return a.parent &amp;&amp; a.parent.data &amp;&amp; (a.data = a.self.data = d(a.parent.data, a.data)), a.data }, url: function (a) { var b = a.url, c = { params: a.params || {} }; if (O(b)) return "^" == b.charAt(0) ? e.compile(b.substring(1), c) : (a.parent.navigable || y).url.concat(b, c); if (!b || e.isMatcher(b)) return b; throw new Error("Invalid url '" + b + "' in state '" + a + "'") }, navigable: function (a) { return a.url ? a : a.parent ? a.parent.navigable : null }, ownParams: function (a) { var b = a.url &amp;&amp; a.url.params || new V.ParamSet; return R(a.params || {}, function (a, c) { b[c] || (b[c] = new V.Param(c, null, a, "config")) }), b }, params: function (a) { var b = l(a.ownParams, a.ownParams.$$keys()); return a.parent &amp;&amp; a.parent.params ? S(a.parent.params.$$new(), b) : new V.ParamSet }, views: function (a) { var b = {}; return R(M(a.views) ? a.views : { "": a }, function (c, d) { d.indexOf("@") &lt; 0 &amp;&amp; (d += "@" + a.parent.name), c.resolveAs = c.resolveAs || a.resolveAs || "$resolve", b[d] = c }), b }, path: function (a) { return a.parent ? a.parent.path.concat(a) : [] }, includes: function (a) { var b = a.parent ? S({}, a.parent.includes) : {}; return b[a.name] = !0, b }, $delegates: {} }; y = r({ name: "", url: "^", views: null, abstract: !0 }), y.navigable = null, this.decorator = u, this.state = v, this.$get = w, w.$inject = ["$rootScope", "$q", "$view", "$injector", "$resolve", "$stateParams", "$urlRouter", "$location", "$urlMatcherFactory"] } function x() { function a(a, b) { return { load: function (a, c) { var d, e = { template: null, controller: null, view: null, locals: null, notify: !0, async: !0, params: {} }; return c = S(e, c), c.view &amp;&amp; (d = b.fromConfig(c.view, c.params, c.locals)), d } } } this.$get = a, a.$inject = ["$rootScope", "$templateFactory"] } function y() { var a = !1; this.useAnchorScroll = function () { a = !0 }, this.$get = ["$anchorScroll", "$timeout", function (b, c) { return a ? b : function (a) { return c(function () { a[0].scrollIntoView() }, 0, !1) } }] } function z(a, c, d, e, f) { function g() { return c.has ? function (a) { return c.has(a) ? c.get(a) : null } : function (a) { try { return c.get(a) } catch (a) { return null } } } function h(a, c) { var d = function () { return { enter: function (a, b, c) { b.after(a), c() }, leave: function (a, b) { a.remove(), b() } } }; if (k) return { enter: function (a, c, d) { b.version.minor &gt; 2 ? k.enter(a, null, c).then(d) : k.enter(a, null, c, d) }, leave: function (a, c) { b.version.minor &gt; 2 ? k.leave(a).then(c) : k.leave(a, c) } }; if (j) { var e = j &amp;&amp; j(c, a); return { enter: function (a, b, c) { e.enter(a, null, b), c() }, leave: function (a, b) { e.leave(a), b() } } } return d() } var i = g(), j = i("$animator"), k = i("$animate"), l = { restrict: "ECA", terminal: !0, priority: 400, transclude: "element", compile: function (c, g, i) { return function (c, g, j) { function k() { if (m &amp;&amp; (m.remove(), m = null), o &amp;&amp; (o.$destroy(), o = null), n) { var a = n.data("$uiViewAnim"); s.leave(n, function () { a.$$animLeave.resolve(), m = null }), m = n, n = null } } function l(h) { var l, m = B(c, j, g, e), t = m &amp;&amp; a.$current &amp;&amp; a.$current.locals[m]; if (h || t !== p) { l = c.$new(), p = a.$current.locals[m], l.$emit("$viewContentLoading", m); var u = i(l, function (a) { var e = f.defer(), h = f.defer(), i = { $animEnter: e.promise, $animLeave: h.promise, $$animLeave: h }; a.data("$uiViewAnim", i), s.enter(a, g, function () { e.resolve(), o &amp;&amp; o.$emit("$viewContentAnimationEnded"), (b.isDefined(r) &amp;&amp; !r || c.$eval(r)) &amp;&amp; d(a) }), k() }); n = u, o = l, o.$emit("$viewContentLoaded", m), o.$eval(q) } } var m, n, o, p, q = j.onload || "", r = j.autoscroll, s = h(j, c); g.inheritedData("$uiView"); c.$on("$stateChangeSuccess", function () { l(!1) }), l(!0) } } }; return l } function A(a, c, d, e) { return { restrict: "ECA", priority: -400, compile: function (f) { var g = f.html(); return function (f, h, i) { var j = d.$current, k = B(f, i, h, e), l = j &amp;&amp; j.locals[k]; if (l) { h.data("$uiView", { name: k, state: l.$$state }), h.html(l.$template ? l.$template : g); var m = b.extend({}, l); f[l.$$resolveAs] = m; var n = a(h.contents()); if (l.$$controller) { l.$scope = f, l.$element = h; var o = c(l.$$controller, l); l.$$controllerAs &amp;&amp; (f[l.$$controllerAs] = o, f[l.$$controllerAs][l.$$resolveAs] = m), N(o.$onInit) &amp;&amp; o.$onInit(), h.data("$ngControllerController", o), h.children().data("$ngControllerController", o) } n(f) } } } } } function B(a, b, c, d) { var e = d(b.uiView || b.name || "")(a), f = c.inheritedData("$uiView"); return e.indexOf("@") &gt;= 0 ? e : e + "@" + (f ? f.state.name : "") } function C(a, b) { var c, d = a.match(/^\s*({[^}]*})\s*$/); if (d &amp;&amp; (a = b + "(" + d[1] + ")"), c = a.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/), !c || 4 !== c.length) throw new Error("Invalid state ref '" + a + "'"); return { state: c[1], paramExpr: c[3] || null } } function D(a) { var b = a.parent().inheritedData("$uiView"); if (b &amp;&amp; b.state &amp;&amp; b.state.name) return b.state } function E(a) { var b = "[object SVGAnimatedString]" === Object.prototype.toString.call(a.prop("href")), c = "FORM" === a[0].nodeName; return { attr: c ? "action" : b ? "xlink:href" : "href", isAnchor: "A" === a.prop("tagName").toUpperCase(), clickable: !c } } function F(a, b, c, d, e) { return function (f) { var g = f.which || f.button, h = e(); if (!(g &gt; 1 || f.ctrlKey || f.metaKey || f.shiftKey || a.attr("target"))) { var i = c(function () { b.go(h.state, h.params, h.options) }); f.preventDefault(); var j = d.isAnchor &amp;&amp; !h.href ? 1 : 0; f.preventDefault = function () { j-- &lt;= 0 &amp;&amp; c.cancel(i) } } } } function G(a, b) { return { relative: D(a) || b.$current, inherit: !0 } } function H(a, c) { return { restrict: "A", require: ["?^uiSrefActive", "?^uiSrefActiveEq"], link: function (d, e, f, g) { var h, i = C(f.uiSref, a.current.name), j = { state: i.state, href: null, params: null }, k = E(e), l = g[1] || g[0], m = null; j.options = S(G(e, a), f.uiSrefOpts ? d.$eval(f.uiSrefOpts) : {}); var n = function (c) { c &amp;&amp; (j.params = b.copy(c)), j.href = a.href(i.state, j.params, j.options), m &amp;&amp; m(), l &amp;&amp; (m = l.$$addStateInfo(i.state, j.params)), null !== j.href &amp;&amp; f.$set(k.attr, j.href) }; i.paramExpr &amp;&amp; (d.$watch(i.paramExpr, function (a) { a !== j.params &amp;&amp; n(a) }, !0), j.params = b.copy(d.$eval(i.paramExpr))), n(), k.clickable &amp;&amp; (h = F(e, a, c, k, function () { return j }), e[e.on ? "on" : "bind"]("click", h), d.$on("$destroy", function () { e[e.off ? "off" : "unbind"]("click", h) })) } } } function I(a, b) { return { restrict: "A", require: ["?^uiSrefActive", "?^uiSrefActiveEq"], link: function (c, d, e, f) { function g(b) { m.state = b[0], m.params = b[1], m.options = b[2], m.href = a.href(m.state, m.params, m.options), n &amp;&amp; n(), j &amp;&amp; (n = j.$$addStateInfo(m.state, m.params)), m.href &amp;&amp; e.$set(i.attr, m.href) } var h, i = E(d), j = f[1] || f[0], k = [e.uiState, e.uiStateParams || null, e.uiStateOpts || null], l = "[" + k.map(function (a) { return a || "null" }).join(", ") + "]", m = { state: null, params: null, options: null, href: null }, n = null; c.$watch(l, g, !0), g(c.$eval(l)), i.clickable &amp;&amp; (h = F(d, a, b, i, function () { return m }), d[d.on ? "on" : "bind"]("click", h), c.$on("$destroy", function () { d[d.off ? "off" : "unbind"]("click", h) })) } } } function J(a, b, c) { return { restrict: "A", controller: ["$scope", "$element", "$attrs", "$timeout", function (b, d, e, f) { function g(b, c, e) { var f = a.get(b, D(d)), g = h(b, c), i = { state: f || { name: b }, params: c, hash: g }; return p.push(i), q[g] = e, function () { var a = p.indexOf(i); a !== -1 &amp;&amp; p.splice(a, 1) } } function h(a, c) { if (!O(a)) throw new Error("state should be a string"); return P(c) ? a + U(c) : (c = b.$eval(c), P(c) ? a + U(c) : a) } function i() { for (var a = 0; a &lt; p.length; a++) l(p[a].state, p[a].params) ? j(d, q[p[a].hash]) : k(d, q[p[a].hash]), m(p[a].state, p[a].params) ? j(d, n) : k(d, n) } function j(a, b) { f(function () { a.addClass(b) }) } function k(a, b) { a.removeClass(b) } function l(b, c) { return a.includes(b.name, c) } function m(b, c) { return a.is(b.name, c) } var n, o, p = [], q = {}; n = c(e.uiSrefActiveEq || "", !1)(b); try { o = b.$eval(e.uiSrefActive) } catch (a) { } o = o || c(e.uiSrefActive || "", !1)(b), P(o) &amp;&amp; R(o, function (c, d) { if (O(c)) { var e = C(c, a.current.name); g(e.state, b.$eval(e.paramExpr), d) } }), this.$$addStateInfo = function (a, b) { if (!(P(o) &amp;&amp; p.length &gt; 0)) { var c = g(a, b, o); return i(), c } }, b.$on("$stateChangeSuccess", i), i() }] } } function K(a) { var b = function (b, c) { return a.is(b, c) }; return b.$stateful = !0, b } function L(a) { var b = function (b, c, d) { return a.includes(b, c, d) }; return b.$stateful = !0, b } var M = b.isDefined, N = b.isFunction, O = b.isString, P = b.isObject, Q = b.isArray, R = b.forEach, S = b.extend, T = b.copy, U = b.toJson; b.module("ui.router.util", ["ng"]), b.module("ui.router.router", ["ui.router.util"]), b.module("ui.router.state", ["ui.router.router", "ui.router.util"]), b.module("ui.router", ["ui.router.state"]), b.module("ui.router.compat", ["ui.router"]), q.$inject = ["$q", "$injector"], b.module("ui.router.util").service("$resolve", q), r.$inject = ["$http", "$templateCache", "$injector"], b.module("ui.router.util").service("$templateFactory", r); var V; s.prototype.concat = function (a, b) { var c = { caseInsensitive: V.caseInsensitive(), strict: V.strictMode(), squash: V.defaultSquashPolicy() }; return new s(this.sourcePath + a + this.sourceSearch, S(c, b), this) }, s.prototype.toString = function () { return this.source }, s.prototype.exec = function (a, b) { function c(a) { function b(a) { return a.split("").reverse().join("") } function c(a) { return a.replace(/\\-/g, "-") } var d = b(a).split(/-(?!\\)/), e = o(d, b); return o(e, c).reverse() } var d = this.regexp.exec(a); if (!d) return null; b = b || {}; var e, f, g, h = this.parameters(), i = h.length, j = this.segments.length - 1, k = {}; if (j !== d.length - 1) throw new Error("Unbalanced capture group in route '" + this.source + "'"); var l, m; for (e = 0; e &lt; j; e++) { for (g = h[e], l = this.params[g], m = d[e + 1], f = 0; f &lt; l.replace.length; f++) l.replace[f].from === m &amp;&amp; (m = l.replace[f].to); m &amp;&amp; l.array === !0 &amp;&amp; (m = c(m)), M(m) &amp;&amp; (m = l.type.decode(m)), k[g] = l.value(m) } for (; e &lt; i; e++) { for (g = h[e], k[g] = this.params[g].value(b[g]), l = this.params[g], m = b[g], f = 0; f &lt; l.replace.length; f++) l.replace[f].from === m &amp;&amp; (m = l.replace[f].to); M(m) &amp;&amp; (m = l.type.decode(m)), k[g] = l.value(m) } return k }, s.prototype.parameters = function (a) { return M(a) ? this.params[a] || null : this.$$paramNames }, s.prototype.validates = function (a) { return this.params.$$validates(a) }, s.prototype.format = function (a) { function b(a) { return encodeURIComponent(a).replace(/-/g, function (a) { return "%5C%" + a.charCodeAt(0).toString(16).toUpperCase() }) } a = a || {}; var c = this.segments, d = this.parameters(), e = this.params; if (!this.validates(a)) return null; var f, g = !1, h = c.length - 1, i = d.length, j = c[0]; for (f = 0; f &lt; i; f++) { var k = f &lt; h, l = d[f], m = e[l], n = m.value(a[l]), p = m.isOptional &amp;&amp; m.type.equals(m.value(), n), q = !!p &amp;&amp; m.squash, r = m.type.encode(n); if (k) { var s = c[f + 1], t = f + 1 === h; if (q === !1) null != r &amp;&amp; (j += Q(r) ? o(r, b).join("-") : encodeURIComponent(r)), j += s; else if (q === !0) { var u = j.match(/\/$/) ? /\/?(.*)/ : /(.*)/; j += s.match(u)[1] } else O(q) &amp;&amp; (j += q + s); t &amp;&amp; m.squash === !0 &amp;&amp; "/" === j.slice(-1) &amp;&amp; (j = j.slice(0, -1)) } else { if (null == r || p &amp;&amp; q !== !1) continue; if (Q(r) || (r = [r]), 0 === r.length) continue; r = o(r, encodeURIComponent).join("&amp;" + l + "="), j += (g ? "&amp;" : "?") + (l + "=" + r), g = !0 } } return j }, t.prototype.is = function (a, b) { return !0 }, t.prototype.encode = function (a, b) { return a }, t.prototype.decode = function (a, b) { return a }, t.prototype.equals = function (a, b) { return a == b }, t.prototype.$subPattern = function () { var a = this.pattern.toString(); return a.substr(1, a.length - 2) }, t.prototype.pattern = /.*/, t.prototype.toString = function () { return "{Type:" + this.name + "}" }, t.prototype.$normalize = function (a) { return this.is(a) ? a : this.decode(a) }, t.prototype.$asArray = function (a, b) {
        function d(a, b) { function d(a, b) { return function () { return a[b].apply(a, arguments) } } function e(a) { return Q(a) ? a : M(a) ? [a] : [] } function f(a) { switch (a.length) { case 0: return c; case 1: return "auto" === b ? a[0] : a; default: return a } } function g(a) { return !a } function h(a, b) { return function (c) { if (Q(c) &amp;&amp; 0 === c.length) return c; c = e(c); var d = o(c, a); return b === !0 ? 0 === n(d, g).length : f(d) } } function i(a) { return function (b, c) { var d = e(b), f = e(c); if (d.length !== f.length) return !1; for (var g = 0; g &lt; d.length; g++) if (!a(d[g], f[g])) return !1; return !0 } } this.encode = h(d(a, "encode")), this.decode = h(d(a, "decode")), this.is = h(d(a, "is"), !0), this.equals = i(d(a, "equals")), this.pattern = a.pattern, this.$normalize = h(d(a, "$normalize")), this.name = a.name, this.$arrayMode = b } if (!a) return this; if ("auto" === a &amp;&amp; !b) throw new Error("'auto' array mode is for query parameters only"); return new d(this, a);
    }, b.module("ui.router.util").provider("$urlMatcherFactory", u), b.module("ui.router.util").run(["$urlMatcherFactory", function (a) { }]), v.$inject = ["$locationProvider", "$urlMatcherFactoryProvider"], b.module("ui.router.router").provider("$urlRouter", v), w.$inject = ["$urlRouterProvider", "$urlMatcherFactoryProvider"], b.module("ui.router.state").factory("$stateParams", function () { return {} }).constant("$state.runtime", { autoinject: !0 }).provider("$state", w).run(["$injector", function (a) { a.get("$state.runtime").autoinject &amp;&amp; a.get("$state") }]), x.$inject = [], b.module("ui.router.state").provider("$view", x), b.module("ui.router.state").provider("$uiViewScroll", y), z.$inject = ["$state", "$injector", "$uiViewScroll", "$interpolate", "$q"], A.$inject = ["$compile", "$controller", "$state", "$interpolate"], b.module("ui.router.state").directive("uiView", z), b.module("ui.router.state").directive("uiView", A), H.$inject = ["$state", "$timeout"], I.$inject = ["$state", "$timeout"], J.$inject = ["$state", "$stateParams", "$interpolate"], b.module("ui.router.state").directive("uiSref", H).directive("uiSrefActive", J).directive("uiSrefActiveEq", J).directive("uiState", I), K.$inject = ["$state"], L.$inject = ["$state"], b.module("ui.router.state").filter("isState", K).filter("includedByState", L)
}(window, window.angular);</contentText>
  </asset>
  <asset name="lib/angular.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */
(function(F){'use strict';function O(a){return function(){var b=arguments[0],d;d="["+(a?a+":":"")+b+"] http://errors.angularjs.org/1.5.6/"+(a?a+"/":"")+b;for(b=1;b&lt;arguments.length;b++){d=d+(1==b?"?":"&amp;")+"p"+(b-1)+"=";var c=encodeURIComponent,e;e=arguments[b];e="function"==typeof e?e.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof e?"undefined":"string"!=typeof e?JSON.stringify(e):e;d+=c(e)}return Error(d)}}function xa(a){if(null==a||Wa(a))return!1;if(K(a)||I(a)||G&amp;&amp;a instanceof G)return!0;
var b="length"in Object(a)&amp;&amp;a.length;return Q(b)&amp;&amp;(0&lt;=b&amp;&amp;(b-1 in a||a instanceof Array)||"function"==typeof a.item)}function q(a,b,d){var c,e;if(a)if(E(a))for(c in a)"prototype"==c||"length"==c||"name"==c||a.hasOwnProperty&amp;&amp;!a.hasOwnProperty(c)||b.call(d,a[c],c,a);else if(K(a)||xa(a)){var f="object"!==typeof a;c=0;for(e=a.length;c&lt;e;c++)(f||c in a)&amp;&amp;b.call(d,a[c],c,a)}else if(a.forEach&amp;&amp;a.forEach!==q)a.forEach(b,d,a);else if(rc(a))for(c in a)b.call(d,a[c],c,a);else if("function"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&amp;&amp;
b.call(d,a[c],c,a);else for(c in a)sa.call(a,c)&amp;&amp;b.call(d,a[c],c,a);return a}function sc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e&lt;c.length;e++)b.call(d,a[c[e]],c[e]);return c}function tc(a){return function(b,d){a(d,b)}}function Yd(){return++pb}function Qb(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e&lt;f;++e){var g=b[e];if(J(g)||E(g))for(var h=Object.keys(g),k=0,l=h.length;k&lt;l;k++){var m=h[k],n=g[m];d&amp;&amp;J(n)?ha(n)?a[m]=new Date(n.valueOf()):Xa(n)?a[m]=new RegExp(n):n.nodeName?a[m]=n.cloneNode(!0):
Rb(n)?a[m]=n.clone():(J(a[m])||(a[m]=K(n)?[]:{}),Qb(a[m],[n],!0)):a[m]=n}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function P(a){return Qb(a,ya.call(arguments,1),!1)}function Zd(a){return Qb(a,ya.call(arguments,1),!0)}function $(a){return parseInt(a,10)}function Sb(a,b){return P(Object.create(a),b)}function C(){}function Ya(a){return a}function ca(a){return function(){return a}}function uc(a){return E(a.toString)&amp;&amp;a.toString!==ja}function y(a){return"undefined"===typeof a}function v(a){return"undefined"!==
typeof a}function J(a){return null!==a&amp;&amp;"object"===typeof a}function rc(a){return null!==a&amp;&amp;"object"===typeof a&amp;&amp;!vc(a)}function I(a){return"string"===typeof a}function Q(a){return"number"===typeof a}function ha(a){return"[object Date]"===ja.call(a)}function E(a){return"function"===typeof a}function Xa(a){return"[object RegExp]"===ja.call(a)}function Wa(a){return a&amp;&amp;a.window===a}function Za(a){return a&amp;&amp;a.$evalAsync&amp;&amp;a.$watch}function Ea(a){return"boolean"===typeof a}function $d(a){return a&amp;&amp;Q(a.length)&amp;&amp;
ae.test(ja.call(a))}function Rb(a){return!(!a||!(a.nodeName||a.prop&amp;&amp;a.attr&amp;&amp;a.find))}function be(a){var b={};a=a.split(",");var d;for(d=0;d&lt;a.length;d++)b[a[d]]=!0;return b}function ta(a){return L(a.nodeName||a[0]&amp;&amp;a[0].nodeName)}function $a(a,b){var d=a.indexOf(b);0&lt;=d&amp;&amp;a.splice(d,1);return d}function oa(a,b){function d(a,b){var d=b.$$hashKey,e;if(K(a)){e=0;for(var f=a.length;e&lt;f;e++)b.push(c(a[e]))}else if(rc(a))for(e in a)b[e]=c(a[e]);else if(a&amp;&amp;"function"===typeof a.hasOwnProperty)for(e in a)a.hasOwnProperty(e)&amp;&amp;
(b[e]=c(a[e]));else for(e in a)sa.call(a,e)&amp;&amp;(b[e]=c(a[e]));d?b.$$hashKey=d:delete b.$$hashKey;return b}function c(a){if(!J(a))return a;var b=f.indexOf(a);if(-1!==b)return g[b];if(Wa(a)||Za(a))throw za("cpws");var b=!1,c=e(a);void 0===c&amp;&amp;(c=K(a)?[]:Object.create(vc(a)),b=!0);f.push(a);g.push(c);return b?d(a,c):c}function e(a){switch(ja.call(a)){case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Float32Array]":case "[object Float64Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":return new a.constructor(c(a.buffer));
case "[object ArrayBuffer]":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));return b}return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":return new a.constructor(a.valueOf());case "[object RegExp]":return b=new RegExp(a.source,a.toString().match(/[^\/]*$/)[0]),b.lastIndex=a.lastIndex,b;case "[object Blob]":return new a.constructor([a],{type:a.type})}if(E(a.cloneNode))return a.cloneNode(!0)}var f=[],
g=[];if(b){if($d(b)||"[object ArrayBuffer]"===ja.call(b))throw za("cpta");if(a===b)throw za("cpi");K(b)?b.length=0:q(b,function(a,d){"$$hashKey"!==d&amp;&amp;delete b[d]});f.push(a);g.push(b);return d(a,b)}return c(a)}function fa(a,b){if(K(a)){b=b||[];for(var d=0,c=a.length;d&lt;c;d++)b[d]=a[d]}else if(J(a))for(d in b=b||{},a)if("$"!==d.charAt(0)||"$"!==d.charAt(1))b[d]=a[d];return b||a}function na(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&amp;&amp;b!==b)return!0;var d=typeof a,c;if(d==typeof b&amp;&amp;
"object"==d)if(K(a)){if(!K(b))return!1;if((d=a.length)==b.length){for(c=0;c&lt;d;c++)if(!na(a[c],b[c]))return!1;return!0}}else{if(ha(a))return ha(b)?na(a.getTime(),b.getTime()):!1;if(Xa(a))return Xa(b)?a.toString()==b.toString():!1;if(Za(a)||Za(b)||Wa(a)||Wa(b)||K(b)||ha(b)||Xa(b))return!1;d=S();for(c in a)if("$"!==c.charAt(0)&amp;&amp;!E(a[c])){if(!na(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&amp;&amp;"$"!==c.charAt(0)&amp;&amp;v(b[c])&amp;&amp;!E(b[c]))return!1;return!0}return!1}function ab(a,b,d){return a.concat(ya.call(b,
d))}function bb(a,b){var d=2&lt;arguments.length?ya.call(arguments,2):[];return!E(b)||b instanceof RegExp?b:d.length?function(){return arguments.length?b.apply(a,ab(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function ce(a,b){var d=b;"string"===typeof a&amp;&amp;"$"===a.charAt(0)&amp;&amp;"$"===a.charAt(1)?d=void 0:Wa(b)?d="$WINDOW":b&amp;&amp;F.document===b?d="$DOCUMENT":Za(b)&amp;&amp;(d="$SCOPE");return d}function cb(a,b){if(!y(a))return Q(b)||(b=b?2:null),JSON.stringify(a,ce,
b)}function wc(a){return I(a)?JSON.parse(a):a}function xc(a,b){a=a.replace(de,"");var d=Date.parse("Jan 01, 1970 00:00:00 "+a)/6E4;return isNaN(d)?b:d}function Tb(a,b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=xc(b,c);d*=b-c;a=new Date(a.getTime());a.setMinutes(a.getMinutes()+d);return a}function ua(a){a=G(a).clone();try{a.empty()}catch(b){}var d=G("&lt;div&gt;").append(a).html();try{return a[0].nodeType===Na?L(d):d.match(/^(&lt;[^&gt;]+&gt;)/)[1].replace(/^&lt;([\w\-]+)/,function(a,b){return"&lt;"+L(b)})}catch(c){return L(d)}}
function yc(a){try{return decodeURIComponent(a)}catch(b){}}function zc(a){var b={};q((a||"").split("&amp;"),function(a){var c,e,f;a&amp;&amp;(e=a=a.replace(/\+/g,"%20"),c=a.indexOf("="),-1!==c&amp;&amp;(e=a.substring(0,c),f=a.substring(c+1)),e=yc(e),v(e)&amp;&amp;(f=v(f)?yc(f):!0,sa.call(b,e)?K(b[e])?b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function Ub(a){var b=[];q(a,function(a,c){K(a)?q(a,function(a){b.push(ia(c,!0)+(!0===a?"":"="+ia(a,!0)))}):b.push(ia(c,!0)+(!0===a?"":"="+ia(a,!0)))});return b.length?b.join("&amp;"):""}
function qb(a){return ia(a,!0).replace(/%26/gi,"&amp;").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function ia(a,b){return encodeURIComponent(a).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,b?"%20":"+")}function ee(a,b){var d,c,e=Oa.length;for(c=0;c&lt;e;++c)if(d=Oa[c]+b,I(d=a.getAttribute(d)))return d;return null}function fe(a,b){var d,c,e={};q(Oa,function(b){b+="app";!d&amp;&amp;a.hasAttribute&amp;&amp;a.hasAttribute(b)&amp;&amp;(d=a,c=a.getAttribute(b))});
q(Oa,function(b){b+="app";var e;!d&amp;&amp;(e=a.querySelector("["+b.replace(":","\\:")+"]"))&amp;&amp;(d=e,c=e.getAttribute(b))});d&amp;&amp;(e.strictDi=null!==ee(d,"strict-di"),b(d,c?[c]:[],e))}function Ac(a,b,d){J(d)||(d={});d=P({strictDi:!1},d);var c=function(){a=G(a);if(a.injector()){var c=a[0]===F.document?"document":ua(a);throw za("btstrpd",c.replace(/&lt;/,"&amp;lt;").replace(/&gt;/,"&amp;gt;"));}b=b||[];b.unshift(["$provide",function(b){b.value("$rootElement",a)}]);d.debugInfoEnabled&amp;&amp;b.push(["$compileProvider",function(a){a.debugInfoEnabled(!0)}]);
b.unshift("ng");c=db(b,d.strictDi);c.invoke(["$rootScope","$rootElement","$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;F&amp;&amp;e.test(F.name)&amp;&amp;(d.debugInfoEnabled=!0,F.name=F.name.replace(e,""));if(F&amp;&amp;!f.test(F.name))return c();F.name=F.name.replace(f,"");da.resumeBootstrap=function(a){q(a,function(a){b.push(a)});return c()};E(da.resumeDeferredBootstrap)&amp;&amp;da.resumeDeferredBootstrap()}function ge(){F.name=
"NG_ENABLE_DEBUG_INFO!"+F.name;F.location.reload()}function he(a){a=da.element(a).injector();if(!a)throw za("test");return a.get("$$testability")}function Bc(a,b){b=b||"_";return a.replace(ie,function(a,c){return(c?b:"")+a.toLowerCase()})}function je(){var a;if(!Cc){var b=rb();(Y=y(b)?F.jQuery:b?F[b]:void 0)&amp;&amp;Y.fn.on?(G=Y,P(Y.fn,{scope:Pa.scope,isolateScope:Pa.isolateScope,controller:Pa.controller,injector:Pa.injector,inheritedData:Pa.inheritedData}),a=Y.cleanData,Y.cleanData=function(b){for(var c,
e=0,f;null!=(f=b[e]);e++)(c=Y._data(f,"events"))&amp;&amp;c.$destroy&amp;&amp;Y(f).triggerHandler("$destroy");a(b)}):G=T;da.element=G;Cc=!0}}function sb(a,b,d){if(!a)throw za("areq",b||"?",d||"required");return a}function Qa(a,b,d){d&amp;&amp;K(a)&amp;&amp;(a=a[a.length-1]);sb(E(a),b,"not a function, got "+(a&amp;&amp;"object"===typeof a?a.constructor.name||"Object":typeof a));return a}function Ra(a,b){if("hasOwnProperty"===a)throw za("badname",b);}function Dc(a,b,d){if(!b)return a;b=b.split(".");for(var c,e=a,f=b.length,g=0;g&lt;f;g++)c=
b[g],a&amp;&amp;(a=(e=a)[c]);return!d&amp;&amp;E(a)?bb(e,a):a}function tb(a){for(var b=a[0],d=a[a.length-1],c,e=1;b!==d&amp;&amp;(b=b.nextSibling);e++)if(c||a[e]!==b)c||(c=G(ya.call(a,0,e))),c.push(b);return c||a}function S(){return Object.create(null)}function ke(a){function b(a,b,c){return a[b]||(a[b]=c())}var d=O("$injector"),c=O("ng");a=b(a,"angular",Object);a.$$minErr=a.$$minErr||O;return b(a,"module",function(){var a={};return function(f,g,h){if("hasOwnProperty"===f)throw c("badname","module");g&amp;&amp;a.hasOwnProperty(f)&amp;&amp;
(a[f]=null);return b(a,f,function(){function a(b,d,e,f){f||(f=c);return function(){f[e||"push"]([b,d,arguments]);return U}}function b(a,d){return function(b,e){e&amp;&amp;E(e)&amp;&amp;(e.$$moduleName=f);c.push([a,d,arguments]);return U}}if(!g)throw d("nomod",f);var c=[],e=[],p=[],x=a("$injector","invoke","push",e),U={_invokeQueue:c,_configBlocks:e,_runBlocks:p,requires:g,name:f,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:a("$provide","value"),constant:a("$provide",
"constant","unshift"),decorator:b("$provide","decorator"),animation:b("$animateProvider","register"),filter:b("$filterProvider","register"),controller:b("$controllerProvider","register"),directive:b("$compileProvider","directive"),component:b("$compileProvider","component"),config:x,run:function(a){p.push(a);return this}};h&amp;&amp;x(h);return U})}})}function le(a){P(a,{bootstrap:Ac,copy:oa,extend:P,merge:Zd,equals:na,element:G,forEach:q,injector:db,noop:C,bind:bb,toJson:cb,fromJson:wc,identity:Ya,isUndefined:y,
isDefined:v,isString:I,isFunction:E,isObject:J,isNumber:Q,isElement:Rb,isArray:K,version:me,isDate:ha,lowercase:L,uppercase:ub,callbacks:{counter:0},getTestability:he,$$minErr:O,$$csp:Fa,reloadWithDebugInfo:ge});Vb=ke(F);Vb("ng",["ngLocale"],["$provide",function(a){a.provider({$$sanitizeUri:ne});a.provider("$compile",Ec).directive({a:oe,input:Fc,textarea:Fc,form:pe,script:qe,select:re,style:se,option:te,ngBind:ue,ngBindHtml:ve,ngBindTemplate:we,ngClass:xe,ngClassEven:ye,ngClassOdd:ze,ngCloak:Ae,ngController:Be,
ngForm:Ce,ngHide:De,ngIf:Ee,ngInclude:Fe,ngInit:Ge,ngNonBindable:He,ngPluralize:Ie,ngRepeat:Je,ngShow:Ke,ngStyle:Le,ngSwitch:Me,ngSwitchWhen:Ne,ngSwitchDefault:Oe,ngOptions:Pe,ngTransclude:Qe,ngModel:Re,ngList:Se,ngChange:Te,pattern:Gc,ngPattern:Gc,required:Hc,ngRequired:Hc,minlength:Ic,ngMinlength:Ic,maxlength:Jc,ngMaxlength:Jc,ngValue:Ue,ngModelOptions:Ve}).directive({ngInclude:We}).directive(vb).directive(Kc);a.provider({$anchorScroll:Xe,$animate:Ye,$animateCss:Ze,$$animateJs:$e,$$animateQueue:af,
$$AnimateRunner:bf,$$animateAsyncRun:cf,$browser:df,$cacheFactory:ef,$controller:ff,$document:gf,$exceptionHandler:hf,$filter:Lc,$$forceReflow:jf,$interpolate:kf,$interval:lf,$http:mf,$httpParamSerializer:nf,$httpParamSerializerJQLike:of,$httpBackend:pf,$xhrFactory:qf,$location:rf,$log:sf,$parse:tf,$rootScope:uf,$q:vf,$$q:wf,$sce:xf,$sceDelegate:yf,$sniffer:zf,$templateCache:Af,$templateRequest:Bf,$$testability:Cf,$timeout:Df,$window:Ef,$$rAF:Ff,$$jqLite:Gf,$$HashMap:Hf,$$cookieReader:If})}])}function eb(a){return a.replace(Jf,
function(a,d,c,e){return e?c.toUpperCase():c}).replace(Kf,"Moz$1")}function Mc(a){a=a.nodeType;return 1===a||!a||9===a}function Nc(a,b){var d,c,e=b.createDocumentFragment(),f=[];if(Wb.test(a)){d=d||e.appendChild(b.createElement("div"));c=(Lf.exec(a)||["",""])[1].toLowerCase();c=ga[c]||ga._default;d.innerHTML=c[1]+a.replace(Mf,"&lt;$1&gt;&lt;/$2&gt;")+c[2];for(c=c[0];c--;)d=d.lastChild;f=ab(f,d.childNodes);d=e.firstChild;d.textContent=""}else f.push(b.createTextNode(a));e.textContent="";e.innerHTML="";q(f,function(a){e.appendChild(a)});
return e}function Oc(a,b){var d=a.parentNode;d&amp;&amp;d.replaceChild(b,a);b.appendChild(a)}function T(a){if(a instanceof T)return a;var b;I(a)&amp;&amp;(a=V(a),b=!0);if(!(this instanceof T)){if(b&amp;&amp;"&lt;"!=a.charAt(0))throw Xb("nosel");return new T(a)}if(b){b=F.document;var d;a=(d=Nf.exec(a))?[b.createElement(d[1])]:(d=Nc(a,b))?d.childNodes:[]}Pc(this,a)}function Yb(a){return a.cloneNode(!0)}function wb(a,b){b||fb(a);if(a.querySelectorAll)for(var d=a.querySelectorAll("*"),c=0,e=d.length;c&lt;e;c++)fb(d[c])}function Qc(a,
b,d,c){if(v(c))throw Xb("offargs");var e=(c=xb(a))&amp;&amp;c.events,f=c&amp;&amp;c.handle;if(f)if(b){var g=function(b){var c=e[b];v(d)&amp;&amp;$a(c||[],d);v(d)&amp;&amp;c&amp;&amp;0&lt;c.length||(a.removeEventListener(b,f,!1),delete e[b])};q(b.split(" "),function(a){g(a);yb[a]&amp;&amp;g(yb[a])})}else for(b in e)"$destroy"!==b&amp;&amp;a.removeEventListener(b,f,!1),delete e[b]}function fb(a,b){var d=a.ng339,c=d&amp;&amp;gb[d];c&amp;&amp;(b?delete c.data[b]:(c.handle&amp;&amp;(c.events.$destroy&amp;&amp;c.handle({},"$destroy"),Qc(a)),delete gb[d],a.ng339=void 0))}function xb(a,b){var d=
a.ng339,d=d&amp;&amp;gb[d];b&amp;&amp;!d&amp;&amp;(a.ng339=d=++Of,d=gb[d]={events:{},data:{},handle:void 0});return d}function Zb(a,b,d){if(Mc(a)){var c=v(d),e=!c&amp;&amp;b&amp;&amp;!J(b),f=!b;a=(a=xb(a,!e))&amp;&amp;a.data;if(c)a[b]=d;else{if(f)return a;if(e)return a&amp;&amp;a[b];P(a,b)}}}function zb(a,b){return a.getAttribute?-1&lt;(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+b+" "):!1}function Ab(a,b){b&amp;&amp;a.setAttribute&amp;&amp;q(b.split(" "),function(b){a.setAttribute("class",V((" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g,
" ").replace(" "+V(b)+" "," ")))})}function Bb(a,b){if(b&amp;&amp;a.setAttribute){var d=(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");q(b.split(" "),function(a){a=V(a);-1===d.indexOf(" "+a+" ")&amp;&amp;(d+=a+" ")});a.setAttribute("class",V(d))}}function Pc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if("number"===typeof d&amp;&amp;b.window!==b){if(d)for(var c=0;c&lt;d;c++)a[a.length++]=b[c]}else a[a.length++]=b}}function Rc(a,b){return Cb(a,"$"+(b||"ngController")+"Controller")}function Cb(a,
b,d){9==a.nodeType&amp;&amp;(a=a.documentElement);for(b=K(b)?b:[b];a;){for(var c=0,e=b.length;c&lt;e;c++)if(v(d=G.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&amp;&amp;a.host}}function Sc(a){for(wb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function Db(a,b){b||wb(a);var d=a.parentNode;d&amp;&amp;d.removeChild(a)}function Pf(a,b){b=b||F;if("complete"===b.document.readyState)b.setTimeout(a);else G(b).on("load",a)}function Tc(a,b){var d=Eb[b.toLowerCase()];return d&amp;&amp;Uc[ta(a)]&amp;&amp;d}function Qf(a,b){var d=function(c,
d){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=b[d||c.type],g=f?f.length:0;if(g){if(y(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&amp;&amp;c.stopPropagation();h&amp;&amp;h.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};var k=f.specialHandlerWrapper||Rf;1&lt;g&amp;&amp;(f=fa(f));for(var l=0;l&lt;g;l++)c.isImmediatePropagationStopped()||k(a,c,f[l])}};d.elem=
a;return d}function Rf(a,b,d){d.call(a,b)}function Sf(a,b,d){var c=b.relatedTarget;c&amp;&amp;(c===a||Tf.call(a,c))||d.call(a,b)}function Gf(){this.$get=function(){return P(T,{hasClass:function(a,b){a.attr&amp;&amp;(a=a[0]);return zb(a,b)},addClass:function(a,b){a.attr&amp;&amp;(a=a[0]);return Bb(a,b)},removeClass:function(a,b){a.attr&amp;&amp;(a=a[0]);return Ab(a,b)}})}}function Ga(a,b){var d=a&amp;&amp;a.$$hashKey;if(d)return"function"===typeof d&amp;&amp;(d=a.$$hashKey()),d;d=typeof a;return d="function"==d||"object"==d&amp;&amp;null!==a?a.$$hashKey=
d+":"+(b||Yd)():d+":"+a}function Sa(a,b){if(b){var d=0;this.nextUid=function(){return++d}}q(a,this.put,this)}function Vc(a){a=(Function.prototype.toString.call(a)+" ").replace(Uf,"");return a.match(Vf)||a.match(Wf)}function Xf(a){return(a=Vc(a))?"function("+(a[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function db(a,b){function d(a){return function(b,c){if(J(b))q(b,tc(a));else return a(b,c)}}function c(a,b){Ra(a,"service");if(E(b)||K(b))b=p.instantiate(b);if(!b.$get)throw Ha("pget",a);return n[a+"Provider"]=
b}function e(a,b){return function(){var c=z.invoke(b,this);if(y(c))throw Ha("undef",a);return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){sb(y(a)||K(a),"modulesToLoad","not an array");var b=[],c;q(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b&lt;c;b++){var e=a[b],f=p.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.put(a,!0);try{I(a)?(c=Vb(a),b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):E(a)?b.push(p.invoke(a)):K(a)?b.push(p.invoke(a)):
Qa(a,"module")}catch(e){throw K(a)&amp;&amp;(a=a[a.length-1]),e.message&amp;&amp;e.stack&amp;&amp;-1==e.stack.indexOf(e.message)&amp;&amp;(e=e.message+"\n"+e.stack),Ha("modulerr",a,e.stack||e.message||e);}}});return b}function h(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===k)throw Ha("cdep",b+" &lt;- "+l.join(" &lt;- "));return a[b]}try{return l.unshift(b),a[b]=k,a[b]=c(b,e)}catch(f){throw a[b]===k&amp;&amp;delete a[b],f;}finally{l.shift()}}function e(a,c,f){var g=[];a=db.$$annotate(a,b,f);for(var h=0,k=a.length;h&lt;k;h++){var l=a[h];
if("string"!==typeof l)throw Ha("itkn",l);g.push(c&amp;&amp;c.hasOwnProperty(l)?c[l]:d(l,f))}return g}return{invoke:function(a,b,c,d){"string"===typeof c&amp;&amp;(d=c,c=null);c=e(a,c,d);K(a)&amp;&amp;(a=a[a.length-1]);d=11&gt;=Ba?!1:"function"===typeof a&amp;&amp;/^(?:class\s|constructor\()/.test(Function.prototype.toString.call(a)+" ");return d?(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=K(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,
a))},get:d,annotate:db.$$annotate,has:function(b){return n.hasOwnProperty(b+"Provider")||a.hasOwnProperty(b)}}}b=!0===b;var k={},l=[],m=new Sa([],!0),n={$provide:{provider:d(c),factory:d(f),service:d(function(a,b){return f(a,["$injector",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,ca(b),!1)}),constant:d(function(a,b){Ra(a,"constant");n[a]=b;x[a]=b}),decorator:function(a,b){var c=p.get(a+"Provider"),d=c.$get;c.$get=function(){var a=z.invoke(d,c);return z.invoke(b,null,
{$delegate:a})}}}},p=n.$injector=h(n,function(a,b){da.isString(b)&amp;&amp;l.push(b);throw Ha("unpr",l.join(" &lt;- "));}),x={},U=h(x,function(a,b){var c=p.get(a+"Provider",b);return z.invoke(c.$get,c,void 0,a)}),z=U;n.$injectorProvider={$get:ca(U)};var r=g(a),z=U.get("$injector");z.strictDi=b;q(r,function(a){a&amp;&amp;z.invoke(a)});return z}function Xe(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=["$window","$location","$rootScope",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,
function(a){if("a"===ta(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();var c;c=g.yOffset;E(c)?c=c():Rb(c)?(c=c[0],c="fixed"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):Q(c)||(c=0);c&amp;&amp;(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=I(a)?a:d.hash();var b;a?(b=h.getElementById(a))?f(b):(b=e(h.getElementsByName(a)))?f(b):"top"===a&amp;&amp;f(null):f(null)}var h=b.document;a&amp;&amp;c.$watch(function(){return d.hash()},function(a,b){a===
b&amp;&amp;""===a||Pf(function(){c.$evalAsync(g)})});return g}]}function hb(a,b){if(!a&amp;&amp;!b)return"";if(!a)return b;if(!b)return a;K(a)&amp;&amp;(a=a.join(" "));K(b)&amp;&amp;(b=b.join(" "));return a+" "+b}function Yf(a){I(a)&amp;&amp;(a=a.split(" "));var b=S();q(a,function(a){a.length&amp;&amp;(b[a]=!0)});return b}function Ia(a){return J(a)?a:{}}function Zf(a,b,d,c){function e(a){try{a.apply(null,ya.call(arguments,1))}finally{if(U--,0===U)for(;z.length;)try{z.pop()()}catch(b){d.error(b)}}}function f(){w=null;g();h()}function g(){r=ka();
r=y(r)?null:r;na(r,H)&amp;&amp;(r=H);H=r}function h(){if(u!==k.url()||D!==r)u=k.url(),D=r,q(B,function(a){a(k.url(),r)})}var k=this,l=a.location,m=a.history,n=a.setTimeout,p=a.clearTimeout,x={};k.isMock=!1;var U=0,z=[];k.$$completeOutstandingRequest=e;k.$$incOutstandingRequestCount=function(){U++};k.notifyWhenNoOutstandingRequests=function(a){0===U?a():z.push(a)};var r,D,u=l.href,t=b.find("base"),w=null,ka=c.history?function(){try{return m.state}catch(a){}}:C;g();D=r;k.url=function(b,d,e){y(e)&amp;&amp;(e=null);
l!==a.location&amp;&amp;(l=a.location);m!==a.history&amp;&amp;(m=a.history);if(b){var f=D===e;if(u===b&amp;&amp;(!c.history||f))return k;var h=u&amp;&amp;Ja(u)===Ja(b);u=b;D=e;!c.history||h&amp;&amp;f?(h||(w=b),d?l.replace(b):h?(d=l,e=b.indexOf("#"),e=-1===e?"":b.substr(e),d.hash=e):l.href=b,l.href!==b&amp;&amp;(w=b)):(m[d?"replaceState":"pushState"](e,"",b),g(),D=r);w&amp;&amp;(w=b);return k}return w||l.href.replace(/%27/g,"'")};k.state=function(){return r};var B=[],A=!1,H=null;k.onUrlChange=function(b){if(!A){if(c.history)G(a).on("popstate",f);G(a).on("hashchange",
f);A=!0}B.push(b);return b};k.$$applicationDestroyed=function(){G(a).off("hashchange popstate",f)};k.$$checkUrlChange=h;k.baseHref=function(){var a=t.attr("href");return a?a.replace(/^(https?\:)?\/\/[^\/]*/,""):""};k.defer=function(a,b){var c;U++;c=n(function(){delete x[c];e(a)},b||0);x[c]=!0;return c};k.defer.cancel=function(a){return x[a]?(delete x[a],p(a),e(C),!0):!1}}function df(){this.$get=["$window","$log","$sniffer","$document",function(a,b,d,c){return new Zf(a,c,b,d)}]}function ef(){this.$get=
function(){function a(a,c){function e(a){a!=n&amp;&amp;(p?p==a&amp;&amp;(p=a.n):p=a,f(a.n,a.p),f(a,n),n=a,n.n=null)}function f(a,b){a!=b&amp;&amp;(a&amp;&amp;(a.p=b),b&amp;&amp;(b.n=a))}if(a in b)throw O("$cacheFactory")("iid",a);var g=0,h=P({},c,{id:a}),k=S(),l=c&amp;&amp;c.capacity||Number.MAX_VALUE,m=S(),n=null,p=null;return b[a]={put:function(a,b){if(!y(b)){if(l&lt;Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in k||g++;k[a]=b;g&gt;l&amp;&amp;this.remove(p.key);return b}},get:function(a){if(l&lt;Number.MAX_VALUE){var b=m[a];if(!b)return;e(b)}return k[a]},
remove:function(a){if(l&lt;Number.MAX_VALUE){var b=m[a];if(!b)return;b==n&amp;&amp;(n=b.p);b==p&amp;&amp;(p=b.n);f(b.n,b.p);delete m[a]}a in k&amp;&amp;(delete k[a],g--)},removeAll:function(){k=S();g=0;m=S();n=p=null},destroy:function(){m=h=k=null;delete b[a]},info:function(){return P({},h,{size:g})}}}var b={};a.info=function(){var a={};q(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function Af(){this.$get=["$cacheFactory",function(a){return a("templates")}]}function Ec(a,b){function d(a,
b,c){var d=/^\s*([@&amp;&lt;]|=(\*?))(\??)\s*(\w*)\s*$/,e=S();q(a,function(a,f){if(a in n)e[f]=n[a];else{var g=a.match(d);if(!g)throw ea("iscp",b,f,a,c?"controller bindings definition":"isolate scope definition");e[f]={mode:g[1][0],collection:"*"===g[2],optional:"?"===g[3],attrName:g[4]||f};g[4]&amp;&amp;(n[a]=e[f])}});return e}function c(a){var b=a.charAt(0);if(!b||b!==L(b))throw ea("baddir",a);if(a!==a.trim())throw ea("baddir",a);}function e(a){var b=a.require||a.controller&amp;&amp;a.name;!K(b)&amp;&amp;J(b)&amp;&amp;q(b,function(a,
c){var d=a.match(l);a.substring(d[0].length)||(b[c]=d[0]+c)});return b}var f={},g=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,h=/(([\w\-]+)(?:\:([^;]+))?;?)/,k=be("ngSrc,ngSrcset,src,srcset"),l=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,m=/^(on[a-z]+|formaction)$/,n=S();this.directive=function z(b,d){Ra(b,"directive");I(b)?(c(b),sb(d,"directiveFactory"),f.hasOwnProperty(b)||(f[b]=[],a.factory(b+"Directive",["$injector","$exceptionHandler",function(a,c){var d=[];q(f[b],function(f,g){try{var h=a.invoke(f);E(h)?h={compile:ca(h)}:
!h.compile&amp;&amp;h.link&amp;&amp;(h.compile=ca(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=e(h);h.restrict=h.restrict||"EA";h.$$moduleName=f.$$moduleName;d.push(h)}catch(k){c(k)}});return d}])),f[b].push(d)):q(b,tc(z));return this};this.component=function(a,b){function c(a){function e(b){return E(b)||K(b)?function(c,d){return a.invoke(b,this,{$element:c,$attrs:d})}:b}var f=b.template||b.templateUrl?b.template:"",g={controller:d,controllerAs:Wc(b.controller)||b.controllerAs||"$ctrl",
template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:"E",require:b.require};q(b,function(a,b){"$"===b.charAt(0)&amp;&amp;(g[b]=a)});return g}var d=b.controller||function(){};q(b,function(a,b){"$"===b.charAt(0)&amp;&amp;(c[b]=a,E(d)&amp;&amp;(d[b]=a))});c.$inject=["$injector"];return this.directive(a,c)};this.aHrefSanitizationWhitelist=function(a){return v(a)?(b.aHrefSanitizationWhitelist(a),this):b.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=
function(a){return v(a)?(b.imgSrcSanitizationWhitelist(a),this):b.imgSrcSanitizationWhitelist()};var p=!0;this.debugInfoEnabled=function(a){return v(a)?(p=a,this):p};var x=10;this.onChangesTtl=function(a){return arguments.length?(x=a,this):x};this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(a,b,c,e,n,w,ka,B,A,H){function M(){try{if(!--oa)throw Y=void 0,ea("infchng",x);ka.$apply(function(){for(var a=
0,b=Y.length;a&lt;b;++a)Y[a]();Y=void 0})}finally{oa++}}function Aa(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d&lt;e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a}function R(a,b,c){la.innerHTML="&lt;span "+b+"&gt;";b=la.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function N(a,b){try{a.addClass(b)}catch(c){}}function aa(a,b,c,d,e){a instanceof G||(a=G(a));for(var f=/\S+/,g=0,h=a.length;g&lt;h;g++){var k=a[g];k.nodeType===Na&amp;&amp;k.nodeValue.match(f)&amp;&amp;
Oc(k,a[g]=F.document.createElement("span"))}var l=s(a,b,a,c,d,e);aa.$$addScopeClass(a);var m=null;return function(b,c,d){sb(b,"scope");e&amp;&amp;e.needsNewScope&amp;&amp;(b=b.$parent.$new());d=d||{};var f=d.parentBoundTranscludeFn,g=d.transcludeControllers;d=d.futureParentElement;f&amp;&amp;f.$$boundTransclude&amp;&amp;(f=f.$$boundTransclude);m||(m=(d=d&amp;&amp;d[0])?"foreignobject"!==ta(d)&amp;&amp;ja.call(d).match(/SVG/)?"svg":"html":"html");d="html"!==m?G(ba(m,G("&lt;div&gt;").append(a).html())):c?Pa.clone.call(a):a;if(g)for(var h in g)d.data("$"+
h+"Controller",g[h].instance);aa.$$addScopeInfo(d,b);c&amp;&amp;c(d,b);l&amp;&amp;l(b,d,d,f);return d}}function s(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,n,u,r;if(p)for(r=Array(c.length),m=0;m&lt;h.length;m+=3)f=h[m],r[f]=c[f];else r=c;m=0;for(n=h.length;m&lt;n;)k=r[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=a.$new(),aa.$$addScopeInfo(G(k),l)):l=a,u=c.transcludeOnThisElement?va(a,c.transclude,e):!c.templateOnThisElement&amp;&amp;e?e:!e&amp;&amp;b?va(a,b):null,c(f,l,k,d,u)):f&amp;&amp;f(a,k.childNodes,void 0,e)}for(var h=[],k,l,m,n,p,u=0;u&lt;
a.length;u++){k=new Aa;l=$b(a[u],[],k,0===u?d:void 0,e);(f=l.length?Ta(l,a[u],k,b,c,null,[],[],f):null)&amp;&amp;f.scope&amp;&amp;aa.$$addScopeClass(k.$$element);k=f&amp;&amp;f.terminal||!(m=a[u].childNodes)||!m.length?null:s(m,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&amp;&amp;f.transclude:b);if(f||k)h.push(u,f,k),n=!0,p=p||f;f=null}return n?g:null}function va(a,b,c){function d(e,f,g,h,k){e||(e=a.$new(!1,k),e.$$transcluded=!0);return b(e,f,{parentBoundTranscludeFn:c,transcludeControllers:g,futureParentElement:h})}
var e=d.$$slots=S(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?va(a,b.$$slots[f],c):null;return d}function $b(a,b,c,d,e){var f=c.$attr,k;switch(a.nodeType){case 1:Da(b,wa(ta(a)),"E",d,e);for(var l,m,n,p=a.attributes,u=0,r=p&amp;&amp;p.length;u&lt;r;u++){var B=!1,x=!1;l=p[u];k=l.name;m=V(l.value);l=wa(k);if(n=xa.test(l))k=k.replace(Xc,"").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()});(l=l.match(za))&amp;&amp;Q(l[1])&amp;&amp;(B=k,x=k.substr(0,k.length-5)+"end",k=k.substr(0,k.length-6));l=wa(k.toLowerCase());f[l]=
k;if(n||!c.hasOwnProperty(l))c[l]=m,Tc(a,l)&amp;&amp;(c[l]=!0);ha(a,b,m,l,n);Da(b,l,"A",d,e,B,x)}a=a.className;J(a)&amp;&amp;(a=a.animVal);if(I(a)&amp;&amp;""!==a)for(;k=h.exec(a);)l=wa(k[2]),Da(b,l,"C",d,e)&amp;&amp;(c[l]=V(k[3])),a=a.substr(k.index+k[0].length);break;case Na:if(11===Ba)for(;a.parentNode&amp;&amp;a.nextSibling&amp;&amp;a.nextSibling.nodeType===Na;)a.nodeValue+=a.nextSibling.nodeValue,a.parentNode.removeChild(a.nextSibling);$(b,a.nodeValue);break;case 8:try{if(k=g.exec(a.nodeValue))l=wa(k[1]),Da(b,l,"M",d,e)&amp;&amp;(c[l]=V(k[2]))}catch(A){}}b.sort(X);
return b}function Yc(a,b,c){var d=[],e=0;if(b&amp;&amp;a.hasAttribute&amp;&amp;a.hasAttribute(b)){do{if(!a)throw ea("uterdir",b,c);1==a.nodeType&amp;&amp;(a.hasAttribute(b)&amp;&amp;e++,a.hasAttribute(c)&amp;&amp;e--);d.push(a);a=a.nextSibling}while(0&lt;e)}else d.push(a);return G(d)}function O(a,b,c){return function(d,e,f,g,h){e=Yc(e[0],b,c);return a(d,e,f,g,h)}}function ac(a,b,c,d,e,f){var g;return a?aa(b,c,d,e,f):function(){g||(g=aa(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function Ta(a,b,d,e,f,g,h,k,l){function m(a,b,c,d){if(a){c&amp;&amp;
(a=O(a,c,d));a.require=t.require;a.directiveName=M;if(B===t||t.$$isolateScope)a=fa(a,{isolateScope:!0});h.push(a)}if(b){c&amp;&amp;(b=O(b,c,d));b.require=t.require;b.directiveName=M;if(B===t||t.$$isolateScope)b=fa(b,{isolateScope:!0});k.push(b)}}function n(a,c,e,f,g){function l(a,b,c,d){var e;Za(a)||(d=c,c=b,b=a,a=void 0);w&amp;&amp;(e=z);c||(c=w?D.parent():D);if(d){var f=g.$$slots[d];if(f)return f(a,b,e,c,Fb);if(y(f))throw ea("noslot",d,ua(D));}else return g(a,b,e,c,Fb)}var m,p,A,t,H,z,N,D;b===e?(f=d,D=d.$$element):
(D=G(e),f=new Aa(D,d));H=c;B?t=c.$new(!0):u&amp;&amp;(H=c.$parent);g&amp;&amp;(N=l,N.$$boundTransclude=g,N.isSlotFilled=function(a){return!!g.$$slots[a]});r&amp;&amp;(z=$f(D,f,N,r,t,c,B));B&amp;&amp;(aa.$$addScopeInfo(D,t,!0,!(x&amp;&amp;(x===B||x===B.$$originalDirective))),aa.$$addScopeClass(D,!0),t.$$isolateBindings=B.$$isolateBindings,p=ga(c,f,t,t.$$isolateBindings,B),p.removeWatches&amp;&amp;t.$on("$destroy",p.removeWatches));for(m in z){p=r[m];A=z[m];var R=p.$$bindings.bindToController;A.bindingInfo=A.identifier&amp;&amp;R?ga(H,f,A.instance,R,p):
{};var M=A();M!==A.instance&amp;&amp;(A.instance=M,D.data("$"+p.name+"Controller",M),A.bindingInfo.removeWatches&amp;&amp;A.bindingInfo.removeWatches(),A.bindingInfo=ga(H,f,A.instance,R,p))}q(r,function(a,b){var c=a.require;a.bindToController&amp;&amp;!K(c)&amp;&amp;J(c)&amp;&amp;P(z[b].instance,ib(b,c,D,z))});q(z,function(a){var b=a.instance;E(b.$onChanges)&amp;&amp;b.$onChanges(a.bindingInfo.initialChanges);E(b.$onInit)&amp;&amp;b.$onInit();E(b.$onDestroy)&amp;&amp;H.$on("$destroy",function(){b.$onDestroy()})});m=0;for(p=h.length;m&lt;p;m++)A=h[m],ia(A,A.isolateScope?
t:c,D,f,A.require&amp;&amp;ib(A.directiveName,A.require,D,z),N);var Fb=c;B&amp;&amp;(B.template||null===B.templateUrl)&amp;&amp;(Fb=t);a&amp;&amp;a(Fb,e.childNodes,void 0,g);for(m=k.length-1;0&lt;=m;m--)A=k[m],ia(A,A.isolateScope?t:c,D,f,A.require&amp;&amp;ib(A.directiveName,A.require,D,z),N);q(z,function(a){a=a.instance;E(a.$postLink)&amp;&amp;a.$postLink()})}l=l||{};for(var p=-Number.MAX_VALUE,u=l.newScopeDirective,r=l.controllerDirectives,B=l.newIsolateScopeDirective,x=l.templateDirective,A=l.nonTlbTranscludeDirective,H=!1,z=!1,w=l.hasElementTranscludeDirective,
N=d.$$element=G(b),t,M,R,ka=e,s,Ca=!1,va=!1,v,C=0,F=a.length;C&lt;F;C++){t=a[C];var I=t.$$start,Ta=t.$$end;I&amp;&amp;(N=Yc(b,I,Ta));R=void 0;if(p&gt;t.priority)break;if(v=t.scope)t.templateUrl||(J(v)?(W("new/isolated scope",B||u,t,N),B=t):W("new/isolated scope",B,t,N)),u=u||t;M=t.name;if(!Ca&amp;&amp;(t.replace&amp;&amp;(t.templateUrl||t.template)||t.transclude&amp;&amp;!t.$$tlb)){for(v=C+1;Ca=a[v++];)if(Ca.transclude&amp;&amp;!Ca.$$tlb||Ca.replace&amp;&amp;(Ca.templateUrl||Ca.template)){va=!0;break}Ca=!0}!t.templateUrl&amp;&amp;t.controller&amp;&amp;(v=t.controller,
r=r||S(),W("'"+M+"' controller",r[M],t,N),r[M]=t);if(v=t.transclude)if(H=!0,t.$$tlb||(W("transclusion",A,t,N),A=t),"element"==v)w=!0,p=t.priority,R=N,N=d.$$element=G(aa.$$createComment(M,d[M])),b=N[0],ca(f,ya.call(R,0),b),R[0].$$parentNode=R[0].parentNode,ka=ac(va,R,e,p,g&amp;&amp;g.name,{nonTlbTranscludeDirective:A});else{var L=S();R=G(Yb(b)).contents();if(J(v)){R=[];var Q=S(),Da=S();q(v,function(a,b){var c="?"===a.charAt(0);a=c?a.substring(1):a;Q[a]=b;L[b]=null;Da[b]=c});q(N.contents(),function(a){var b=
Q[wa(ta(a))];b?(Da[b]=!0,L[b]=L[b]||[],L[b].push(a)):R.push(a)});q(Da,function(a,b){if(!a)throw ea("reqslot",b);});for(var X in L)L[X]&amp;&amp;(L[X]=ac(va,L[X],e))}N.empty();ka=ac(va,R,e,void 0,void 0,{needsNewScope:t.$$isolateScope||t.$$newScope});ka.$$slots=L}if(t.template)if(z=!0,W("template",x,t,N),x=t,v=E(t.template)?t.template(N,d):t.template,v=ra(v),t.replace){g=t;R=Wb.test(v)?Zc(ba(t.templateNamespace,V(v))):[];b=R[0];if(1!=R.length||1!==b.nodeType)throw ea("tplrt",M,"");ca(f,N,b);F={$attr:{}};v=
$b(b,[],F);var $=a.splice(C+1,a.length-(C+1));(B||u)&amp;&amp;$c(v,B,u);a=a.concat(v).concat($);T(d,F);F=a.length}else N.html(v);if(t.templateUrl)z=!0,W("template",x,t,N),x=t,t.replace&amp;&amp;(g=t),n=Z(a.splice(C,a.length-C),N,d,f,H&amp;&amp;ka,h,k,{controllerDirectives:r,newScopeDirective:u!==t&amp;&amp;u,newIsolateScopeDirective:B,templateDirective:x,nonTlbTranscludeDirective:A}),F=a.length;else if(t.compile)try{s=t.compile(N,d,ka);var Y=t.$$originalDirective||t;E(s)?m(null,bb(Y,s),I,Ta):s&amp;&amp;m(bb(Y,s.pre),bb(Y,s.post),I,Ta)}catch(da){c(da,
ua(N))}t.terminal&amp;&amp;(n.terminal=!0,p=Math.max(p,t.priority))}n.scope=u&amp;&amp;!0===u.scope;n.transcludeOnThisElement=H;n.templateOnThisElement=z;n.transclude=ka;l.hasElementTranscludeDirective=w;return n}function ib(a,b,c,d){var e;if(I(b)){var f=b.match(l);b=b.substring(f[0].length);var g=f[1]||f[3],f="?"===f[2];"^^"===g?c=c.parent():e=(e=d&amp;&amp;d[b])&amp;&amp;e.instance;if(!e){var h="$"+b+"Controller";e=g?c.inheritedData(h):c.data(h)}if(!e&amp;&amp;!f)throw ea("ctreq",b,a);}else if(K(b))for(e=[],g=0,f=b.length;g&lt;f;g++)e[g]=
ib(a,b[g],c,d);else J(b)&amp;&amp;(e={},q(b,function(b,f){e[f]=ib(a,b,c,d)}));return e||null}function $f(a,b,c,d,e,f,g){var h=S(),k;for(k in d){var l=d[k],m={$scope:l===g||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},n=l.controller;"@"==n&amp;&amp;(n=b[l.name]);m=w(n,m,!0,l.controllerAs);h[l.name]=m;a.data("$"+l.name+"Controller",m.instance)}return h}function $c(a,b,c){for(var d=0,e=a.length;d&lt;e;d++)a[d]=Sb(a[d],{$$isolateScope:b,$$newScope:c})}function Da(b,e,g,h,k,l,m){if(e===k)return null;k=null;if(f.hasOwnProperty(e)){var n;
e=a.get(e+"Directive");for(var p=0,u=e.length;p&lt;u;p++)try{if(n=e[p],(y(h)||h&gt;n.priority)&amp;&amp;-1!=n.restrict.indexOf(g)){l&amp;&amp;(n=Sb(n,{$$start:l,$$end:m}));if(!n.$$bindings){var r=n,B=n,A=n.name,x={isolateScope:null,bindToController:null};J(B.scope)&amp;&amp;(!0===B.bindToController?(x.bindToController=d(B.scope,A,!0),x.isolateScope={}):x.isolateScope=d(B.scope,A,!1));J(B.bindToController)&amp;&amp;(x.bindToController=d(B.bindToController,A,!0));if(J(x.bindToController)){var t=B.controller,H=B.controllerAs;if(!t)throw ea("noctrl",
A);if(!Wc(t,H))throw ea("noident",A);}var N=r.$$bindings=x;J(N.isolateScope)&amp;&amp;(n.$$isolateBindings=N.isolateScope)}b.push(n);k=n}}catch(w){c(w)}}return k}function Q(b){if(f.hasOwnProperty(b))for(var c=a.get(b+"Directive"),d=0,e=c.length;d&lt;e;d++)if(b=c[d],b.multiElement)return!0;return!1}function T(a,b){var c=b.$attr,d=a.$attr,e=a.$$element;q(a,function(d,e){"$"!=e.charAt(0)&amp;&amp;(b[e]&amp;&amp;b[e]!==d&amp;&amp;(d+=("style"===e?";":" ")+b[e]),a.$set(e,d,!0,c[e]))});q(b,function(b,f){"class"==f?(N(e,b),a["class"]=(a["class"]?
a["class"]+" ":"")+b):"style"==f?(e.attr("style",e.attr("style")+";"+b),a.style=(a.style?a.style+";":"")+b):"$"==f.charAt(0)||a.hasOwnProperty(f)||(a[f]=b,d[f]=c[f])})}function Z(a,b,c,d,f,g,h,k){var l=[],m,n,p=b[0],B=a.shift(),r=Sb(B,{templateUrl:null,transclude:null,replace:null,$$originalDirective:B}),A=E(B.templateUrl)?B.templateUrl(b,c):B.templateUrl,x=B.templateNamespace;b.empty();e(A).then(function(e){var u,t;e=ra(e);if(B.replace){e=Wb.test(e)?Zc(ba(x,V(e))):[];u=e[0];if(1!=e.length||1!==u.nodeType)throw ea("tplrt",
B.name,A);e={$attr:{}};ca(d,b,u);var H=$b(u,[],e);J(B.scope)&amp;&amp;$c(H,!0);a=H.concat(a);T(c,e)}else u=p,b.html(e);a.unshift(r);m=Ta(a,u,c,f,b,B,g,h,k);q(d,function(a,c){a==u&amp;&amp;(d[c]=b[0])});for(n=s(b[0].childNodes,f);l.length;){e=l.shift();t=l.shift();var z=l.shift(),D=l.shift(),H=b[0];if(!e.$$destroyed){if(t!==p){var w=t.className;k.hasElementTranscludeDirective&amp;&amp;B.replace||(H=Yb(u));ca(z,G(t),H);N(G(H),w)}t=m.transcludeOnThisElement?va(e,m.transclude,D):D;m(n,e,H,d,t)}}l=null});return function(a,b,
c,d,e){a=e;b.$$destroyed||(l?l.push(b,c,d,a):(m.transcludeOnThisElement&amp;&amp;(a=va(b,m.transclude,e)),m(n,b,c,d,a)))}}function X(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name&lt;b.name?-1:1:a.index-b.index}function W(a,b,c,d){function e(a){return a?" (module: "+a+")":""}if(b)throw ea("multidir",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,ua(d));}function $(a,c){var d=b(c,!0);d&amp;&amp;a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&amp;&amp;aa.$$addBindingClass(a);
return function(a,c){var e=c.parent();b||aa.$$addBindingClass(e);aa.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function ba(a,b){a=L(a||"html");switch(a){case "svg":case "math":var c=F.document.createElement("div");c.innerHTML="&lt;"+a+"&gt;"+b+"&lt;/"+a+"&gt;";return c.childNodes[0].childNodes;default:return b}}function da(a,b){if("srcdoc"==b)return B.HTML;var c=ta(a);if("xlinkHref"==b||"form"==c&amp;&amp;"action"==b||"img"!=c&amp;&amp;("src"==b||"ngSrc"==b))return B.RESOURCE_URL}function ha(a,
c,d,e,f){var g=da(a,e);f=k[e]||f;var h=b(d,!0,g,f);if(h){if("multiple"===e&amp;&amp;"select"===ta(a))throw ea("selmulti",ua(a));c.push({priority:100,compile:function(){return{pre:function(a,c,k){c=k.$$observers||(k.$$observers=S());if(m.test(e))throw ea("nodomevents");var l=k[e];l!==d&amp;&amp;(h=l&amp;&amp;b(l,!0,g,f),d=l);h&amp;&amp;(k[e]=h(a),(c[e]||(c[e]=[])).$$inter=!0,(k.$$observers&amp;&amp;k.$$observers[e].$$scope||a).$watch(h,function(a,b){"class"===e&amp;&amp;a!=b?k.$updateClass(a,b):k.$set(e,a)}))}}}})}}function ca(a,b,c){var d=b[0],
e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g&lt;h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var k=a.length;g&lt;k;g++,h++)h&lt;k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&amp;&amp;(a.context=c);break}f&amp;&amp;f.replaceChild(c,d);a=F.document.createDocumentFragment();for(g=0;g&lt;e;g++)a.appendChild(b[g]);G.hasData(d)&amp;&amp;(G.data(c,G.data(d)),G(d).off("$destroy"));G.cleanData(a.querySelectorAll("*"));for(g=1;g&lt;e;g++)delete b[g];b[0]=c;b.length=1}function fa(a,b){return P(function(){return a.apply(null,arguments)},
a,b)}function ia(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,ua(d))}}function ga(a,c,d,e,f){function g(b,c,e){E(d.$onChanges)&amp;&amp;c!==e&amp;&amp;(Y||(a.$$postDigest(M),Y=[]),m||(m={},Y.push(h)),m[b]&amp;&amp;(e=m[b].previousValue),m[b]=new Gb(e,c))}function h(){d.$onChanges(m);m=void 0}var k=[],l={},m;q(e,function(e,h){var m=e.attrName,p=e.optional,u,B,A,x;switch(e.mode){case "@":p||sa.call(c,m)||(d[h]=c[m]=void 0);c.$observe(m,function(a){if(I(a)||Ea(a))g(h,a,d[h]),d[h]=a});c.$$observers[m].$$scope=a;u=c[m];I(u)?d[h]=
b(u)(a):Ea(u)&amp;&amp;(d[h]=u);l[h]=new Gb(bc,d[h]);break;case "=":if(!sa.call(c,m)){if(p)break;c[m]=void 0}if(p&amp;&amp;!c[m])break;B=n(c[m]);x=B.literal?na:function(a,b){return a===b||a!==a&amp;&amp;b!==b};A=B.assign||function(){u=d[h]=B(a);throw ea("nonassign",c[m],m,f.name);};u=d[h]=B(a);p=function(b){x(b,d[h])||(x(b,u)?A(a,b=d[h]):d[h]=b);return u=b};p.$stateful=!0;p=e.collection?a.$watchCollection(c[m],p):a.$watch(n(c[m],p),null,B.literal);k.push(p);break;case "&lt;":if(!sa.call(c,m)){if(p)break;c[m]=void 0}if(p&amp;&amp;!c[m])break;
B=n(c[m]);var H=d[h]=B(a);l[h]=new Gb(bc,d[h]);p=a.$watch(B,function(a,b){if(b===a){if(b===H)return;b=H}g(h,a,b);d[h]=a},B.literal);k.push(p);break;case "&amp;":B=c.hasOwnProperty(m)?n(c[m]):C;if(B===C&amp;&amp;p)break;d[h]=function(b){return B(a,b)}}});return{initialChanges:l,removeWatches:k.length&amp;&amp;function(){for(var a=0,b=k.length;a&lt;b;++a)k[a]()}}}var ma=/^\w/,la=F.document.createElement("div"),oa=x,Y;Aa.prototype={$normalize:wa,$addClass:function(a){a&amp;&amp;0&lt;a.length&amp;&amp;A.addClass(this.$$element,a)},$removeClass:function(a){a&amp;&amp;
0&lt;a.length&amp;&amp;A.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=ad(a,b);c&amp;&amp;c.length&amp;&amp;A.addClass(this.$$element,c);(c=ad(b,a))&amp;&amp;c.length&amp;&amp;A.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=Tc(this.$$element[0],a),g=bd[a],h=a;f?(this.$$element.prop(a,b),e=f):g&amp;&amp;(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Bc(a,"-"));f=ta(this.$$element);if("a"===f&amp;&amp;("href"===a||"xlinkHref"===a)||"img"===f&amp;&amp;"src"===a)this[a]=b=H(b,"src"===a);else if("img"===
f&amp;&amp;"srcset"===a&amp;&amp;v(b)){for(var f="",g=V(b),k=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,k=/\s/.test(g)?k:/(,)/,g=g.split(k),k=Math.floor(g.length/2),l=0;l&lt;k;l++)var m=2*l,f=f+H(V(g[m]),!0),f=f+(" "+V(g[m+1]));g=V(g[2*l]).split(/\s/);f+=H(V(g[0]),!0);2===g.length&amp;&amp;(f+=" "+V(g[1]));this[a]=b=f}!1!==d&amp;&amp;(null===b||y(b)?this.$$element.removeAttr(e):ma.test(e)?this.$$element.attr(e,b):R(this.$$element[0],e,b));(a=this.$$observers)&amp;&amp;q(a[h],function(a){try{a(b)}catch(d){c(d)}})},$observe:function(a,b){var c=this,
d=c.$$observers||(c.$$observers=S()),e=d[a]||(d[a]=[]);e.push(b);ka.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||y(c[a])||b(c[a])});return function(){$a(e,b)}}};var pa=b.startSymbol(),qa=b.endSymbol(),ra="{{"==pa&amp;&amp;"}}"==qa?Ya:function(a){return a.replace(/\{\{/g,pa).replace(/}}/g,qa)},xa=/^ngAttr[A-Z]/,za=/^(.+)Start$/;aa.$$addBindingInfo=p?function(a,b){var c=a.data("$binding")||[];K(b)?c=c.concat(b):c.push(b);a.data("$binding",c)}:C;aa.$$addBindingClass=p?function(a){N(a,"ng-binding")}:
C;aa.$$addScopeInfo=p?function(a,b,c,d){a.data(c?d?"$isolateScopeNoTemplate":"$isolateScope":"$scope",b)}:C;aa.$$addScopeClass=p?function(a,b){N(a,b?"ng-isolate-scope":"ng-scope")}:C;aa.$$createComment=function(a,b){var c="";p&amp;&amp;(c=" "+(a||"")+": ",b&amp;&amp;(c+=b+" "));return F.document.createComment(c)};return aa}]}function Gb(a,b){this.previousValue=a;this.currentValue=b}function wa(a){return eb(a.replace(Xc,""))}function ad(a,b){var d="",c=a.split(/\s+/),e=b.split(/\s+/),f=0;a:for(;f&lt;c.length;f++){for(var g=
c[f],h=0;h&lt;e.length;h++)if(g==e[h])continue a;d+=(0&lt;d.length?" ":"")+g}return d}function Zc(a){a=G(a);var b=a.length;if(1&gt;=b)return a;for(;b--;)8===a[b].nodeType&amp;&amp;ag.call(a,b,1);return a}function Wc(a,b){if(b&amp;&amp;I(b))return b;if(I(a)){var d=cd.exec(a);if(d)return d[3]}}function ff(){var a={},b=!1;this.has=function(b){return a.hasOwnProperty(b)};this.register=function(b,c){Ra(b,"controller");J(b)?P(a,b):a[b]=c};this.allowGlobals=function(){b=!0};this.$get=["$injector","$window",function(d,c){function e(a,
b,c,d){if(!a||!J(a.$scope))throw O("$controller")("noscp",d,b);a.$scope[b]=c}return function(f,g,h,k){var l,m,n;h=!0===h;k&amp;&amp;I(k)&amp;&amp;(n=k);if(I(f)){k=f.match(cd);if(!k)throw bg("ctrlfmt",f);m=k[1];n=n||k[3];f=a.hasOwnProperty(m)?a[m]:Dc(g.$scope,m,!0)||(b?Dc(c,m,!0):void 0);Qa(f,m,!0)}if(h)return h=(K(f)?f[f.length-1]:f).prototype,l=Object.create(h||null),n&amp;&amp;e(g,n,l,m||f.name),P(function(){var a=d.invoke(f,l,g,m);a!==l&amp;&amp;(J(a)||E(a))&amp;&amp;(l=a,n&amp;&amp;e(g,n,l,m||f.name));return l},{instance:l,identifier:n});l=
d.instantiate(f,g,m);n&amp;&amp;e(g,n,l,m||f.name);return l}}]}function gf(){this.$get=["$window",function(a){return G(a.document)}]}function hf(){this.$get=["$log",function(a){return function(b,d){a.error.apply(a,arguments)}}]}function cc(a){return J(a)?ha(a)?a.toISOString():cb(a):a}function nf(){this.$get=function(){return function(a){if(!a)return"";var b=[];sc(a,function(a,c){null===a||y(a)||(K(a)?q(a,function(a){b.push(ia(c)+"="+ia(cc(a)))}):b.push(ia(c)+"="+ia(cc(a))))});return b.join("&amp;")}}}function of(){this.$get=
function(){return function(a){function b(a,e,f){null===a||y(a)||(K(a)?q(a,function(a,c){b(a,e+"["+(J(a)?c:"")+"]")}):J(a)&amp;&amp;!ha(a)?sc(a,function(a,c){b(a,e+(f?"":"[")+c+(f?"":"]"))}):d.push(ia(e)+"="+ia(cc(a))))}if(!a)return"";var d=[];b(a,"",!0);return d.join("&amp;")}}}function dc(a,b){if(I(a)){var d=a.replace(cg,"").trim();if(d){var c=b("Content-Type");(c=c&amp;&amp;0===c.indexOf(dd))||(c=(c=d.match(dg))&amp;&amp;eg[c[0]].test(d));c&amp;&amp;(a=wc(d))}}return a}function ed(a){var b=S(),d;I(a)?q(a.split("\n"),function(a){d=
a.indexOf(":");var e=L(V(a.substr(0,d)));a=V(a.substr(d+1));e&amp;&amp;(b[e]=b[e]?b[e]+", "+a:a)}):J(a)&amp;&amp;q(a,function(a,d){var f=L(d),g=V(a);f&amp;&amp;(b[f]=b[f]?b[f]+", "+g:g)});return b}function fd(a){var b;return function(d){b||(b=ed(a));return d?(d=b[L(d)],void 0===d&amp;&amp;(d=null),d):b}}function gd(a,b,d,c){if(E(c))return c(a,b,d);q(c,function(c){a=c(a,b,d)});return a}function mf(){var a=this.defaults={transformResponse:[dc],transformRequest:[function(a){return J(a)&amp;&amp;"[object File]"!==ja.call(a)&amp;&amp;"[object Blob]"!==
ja.call(a)&amp;&amp;"[object FormData]"!==ja.call(a)?cb(a):a}],headers:{common:{Accept:"application/json, text/plain, */*"},post:fa(ec),put:fa(ec),patch:fa(ec)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},b=!1;this.useApplyAsync=function(a){return v(a)?(b=!!a,this):b};var d=!0;this.useLegacyPromiseExtensions=function(a){return v(a)?(d=!!a,this):d};var c=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",
function(e,f,g,h,k,l){function m(b){function c(a){var b=P({},a);b.data=gd(a.data,a.headers,a.status,f.transformResponse);a=a.status;return 200&lt;=a&amp;&amp;300&gt;a?b:k.reject(b)}function e(a,b){var c,d={};q(a,function(a,e){E(a)?(c=a(b),null!=c&amp;&amp;(d[e]=c)):d[e]=a});return d}if(!J(b))throw O("$http")("badreq",b);if(!I(b.url))throw O("$http")("badreq",b.url);var f=P({method:"get",transformRequest:a.transformRequest,transformResponse:a.transformResponse,paramSerializer:a.paramSerializer},b);f.headers=function(b){var c=
a.headers,d=P({},b.headers),f,g,h,c=P({},c.common,c[L(b.method)]);a:for(f in c){g=L(f);for(h in d)if(L(h)===g)continue a;d[f]=c[f]}return e(d,fa(b))}(b);f.method=ub(f.method);f.paramSerializer=I(f.paramSerializer)?l.get(f.paramSerializer):f.paramSerializer;var g=[function(b){var d=b.headers,e=gd(b.data,fd(d),void 0,b.transformRequest);y(e)&amp;&amp;q(d,function(a,b){"content-type"===L(b)&amp;&amp;delete d[b]});y(b.withCredentials)&amp;&amp;!y(a.withCredentials)&amp;&amp;(b.withCredentials=a.withCredentials);return n(b,e).then(c,
c)},void 0],h=k.when(f);for(q(U,function(a){(a.request||a.requestError)&amp;&amp;g.unshift(a.request,a.requestError);(a.response||a.responseError)&amp;&amp;g.push(a.response,a.responseError)});g.length;){b=g.shift();var m=g.shift(),h=h.then(b,m)}d?(h.success=function(a){Qa(a,"fn");h.then(function(b){a(b.data,b.status,b.headers,f)});return h},h.error=function(a){Qa(a,"fn");h.then(null,function(b){a(b.data,b.status,b.headers,f)});return h}):(h.success=hd("success"),h.error=hd("error"));return h}function n(c,d){function g(a){if(a){var c=
{};q(a,function(a,d){c[d]=function(c){function d(){a(c)}b?h.$applyAsync(d):h.$$phase?d():h.$apply(d)}});return c}}function l(a,c,d,e){function f(){n(c,a,d,e)}H&amp;&amp;(200&lt;=a&amp;&amp;300&gt;a?H.put(R,[a,c,ed(d),e]):H.remove(R));b?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function n(a,b,d,e){b=-1&lt;=b?b:0;(200&lt;=b&amp;&amp;300&gt;b?B.resolve:B.reject)({data:a,status:b,headers:fd(d),config:c,statusText:e})}function w(a){n(a.data,a.status,fa(a.headers()),a.statusText)}function U(){var a=m.pendingRequests.indexOf(c);-1!==a&amp;&amp;m.pendingRequests.splice(a,
1)}var B=k.defer(),A=B.promise,H,M,Aa=c.headers,R=p(c.url,c.paramSerializer(c.params));m.pendingRequests.push(c);A.then(U,U);!c.cache&amp;&amp;!a.cache||!1===c.cache||"GET"!==c.method&amp;&amp;"JSONP"!==c.method||(H=J(c.cache)?c.cache:J(a.cache)?a.cache:x);H&amp;&amp;(M=H.get(R),v(M)?M&amp;&amp;E(M.then)?M.then(w,w):K(M)?n(M[1],M[0],fa(M[2]),M[3]):n(M,200,{},"OK"):H.put(R,A));y(M)&amp;&amp;((M=id(c.url)?f()[c.xsrfCookieName||a.xsrfCookieName]:void 0)&amp;&amp;(Aa[c.xsrfHeaderName||a.xsrfHeaderName]=M),e(c.method,R,d,l,Aa,c.timeout,c.withCredentials,
c.responseType,g(c.eventHandlers),g(c.uploadEventHandlers)));return A}function p(a,b){0&lt;b.length&amp;&amp;(a+=(-1==a.indexOf("?")?"?":"&amp;")+b);return a}var x=g("$http");a.paramSerializer=I(a.paramSerializer)?l.get(a.paramSerializer):a.paramSerializer;var U=[];q(c,function(a){U.unshift(I(a)?l.get(a):l.invoke(a))});m.pendingRequests=[];(function(a){q(arguments,function(a){m[a]=function(b,c){return m(P({},c||{},{method:a,url:b}))}})})("get","delete","head","jsonp");(function(a){q(arguments,function(a){m[a]=function(b,
c,d){return m(P({},d||{},{method:a,url:b,data:c}))}})})("post","put","patch");m.defaults=a;return m}]}function qf(){this.$get=function(){return function(){return new F.XMLHttpRequest}}}function pf(){this.$get=["$browser","$window","$document","$xhrFactory",function(a,b,d,c){return fg(a,c,a.defer,b.angular.callbacks,d[0])}]}function fg(a,b,d,c,e){function f(a,b,d){var f=e.createElement("script"),m=null;f.type="text/javascript";f.src=a;f.async=!0;m=function(a){f.removeEventListener("load",m,!1);f.removeEventListener("error",
m,!1);e.body.removeChild(f);f=null;var g=-1,x="unknown";a&amp;&amp;("load"!==a.type||c[b].called||(a={type:"error"}),x=a.type,g="error"===a.type?404:200);d&amp;&amp;d(g,x)};f.addEventListener("load",m,!1);f.addEventListener("error",m,!1);e.body.appendChild(f);return m}return function(e,h,k,l,m,n,p,x,U,z){function r(){t&amp;&amp;t();w&amp;&amp;w.abort()}function D(b,c,e,f,g){v(B)&amp;&amp;d.cancel(B);t=w=null;b(c,e,f,g);a.$$completeOutstandingRequest(C)}a.$$incOutstandingRequestCount();h=h||a.url();if("jsonp"==L(e)){var u="_"+(c.counter++).toString(36);
c[u]=function(a){c[u].data=a;c[u].called=!0};var t=f(h.replace("JSON_CALLBACK","angular.callbacks."+u),u,function(a,b){D(l,a,c[u].data,"",b);c[u]=C})}else{var w=b(e,h);w.open(e,h,!0);q(m,function(a,b){v(a)&amp;&amp;w.setRequestHeader(b,a)});w.onload=function(){var a=w.statusText||"",b="response"in w?w.response:w.responseText,c=1223===w.status?204:w.status;0===c&amp;&amp;(c=b?200:"file"==pa(h).protocol?404:0);D(l,c,b,w.getAllResponseHeaders(),a)};e=function(){D(l,-1,null,null,"")};w.onerror=e;w.onabort=e;q(U,function(a,
b){w.addEventListener(b,a)});q(z,function(a,b){w.upload.addEventListener(b,a)});p&amp;&amp;(w.withCredentials=!0);if(x)try{w.responseType=x}catch(ka){if("json"!==x)throw ka;}w.send(y(k)?null:k)}if(0&lt;n)var B=d(r,n);else n&amp;&amp;E(n.then)&amp;&amp;n.then(r)}}function kf(){var a="{{",b="}}";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=["$parse","$exceptionHandler","$sce",function(d,c,e){function f(a){return"\\\\\\"+a}function g(c){return c.replace(n,a).replace(p,
b)}function h(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function k(f,k,n,p){function D(a){try{var b=a;a=n?e.getTrusted(n,b):e.valueOf(b);var d;if(p&amp;&amp;!v(a))d=a;else if(null==a)d="";else{switch(typeof a){case "string":break;case "number":a=""+a;break;default:a=cb(a)}d=a}return d}catch(g){c(Ka.interr(f,g))}}if(!f.length||-1===f.indexOf(a)){var u;k||(k=g(f),u=ca(k),u.exp=f,u.expressions=[],u.$$watchDelegate=h);return u}p=!!p;var t,w,q=0,B=[],A=[];u=f.length;for(var H=[],M=[];q&lt;
u;)if(-1!=(t=f.indexOf(a,q))&amp;&amp;-1!=(w=f.indexOf(b,t+l)))q!==t&amp;&amp;H.push(g(f.substring(q,t))),q=f.substring(t+l,w),B.push(q),A.push(d(q,D)),q=w+m,M.push(H.length),H.push("");else{q!==u&amp;&amp;H.push(g(f.substring(q)));break}n&amp;&amp;1&lt;H.length&amp;&amp;Ka.throwNoconcat(f);if(!k||B.length){var Aa=function(a){for(var b=0,c=B.length;b&lt;c;b++){if(p&amp;&amp;y(a[b]))return;H[M[b]]=a[b]}return H.join("")};return P(function(a){var b=0,d=B.length,e=Array(d);try{for(;b&lt;d;b++)e[b]=A[b](a);return Aa(e)}catch(g){c(Ka.interr(f,g))}},{exp:f,expressions:B,
$$watchDelegate:function(a,b){var c;return a.$watchGroup(A,function(d,e){var f=Aa(d);E(b)&amp;&amp;b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,n=new RegExp(a.replace(/./g,f),"g"),p=new RegExp(b.replace(/./g,f),"g");k.startSymbol=function(){return a};k.endSymbol=function(){return b};return k}]}function lf(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(a,b,d,c,e){function f(f,k,l,m){function n(){p?f.apply(null,x):f(r)}var p=4&lt;arguments.length,x=p?ya.call(arguments,4):
[],q=b.setInterval,z=b.clearInterval,r=0,D=v(m)&amp;&amp;!m,u=(D?c:d).defer(),t=u.promise;l=v(l)?l:0;t.$$intervalId=q(function(){D?e.defer(n):a.$evalAsync(n);u.notify(r++);0&lt;l&amp;&amp;r&gt;=l&amp;&amp;(u.resolve(r),z(t.$$intervalId),delete g[t.$$intervalId]);D||a.$apply()},k);g[t.$$intervalId]=u;return t}var g={};f.cancel=function(a){return a&amp;&amp;a.$$intervalId in g?(g[a.$$intervalId].reject("canceled"),b.clearInterval(a.$$intervalId),delete g[a.$$intervalId],!0):!1};return f}]}function fc(a){a=a.split("/");for(var b=a.length;b--;)a[b]=
qb(a[b]);return a.join("/")}function jd(a,b){var d=pa(a);b.$$protocol=d.protocol;b.$$host=d.hostname;b.$$port=$(d.port)||gg[d.protocol]||null}function kd(a,b){var d="/"!==a.charAt(0);d&amp;&amp;(a="/"+a);var c=pa(a);b.$$path=decodeURIComponent(d&amp;&amp;"/"===c.pathname.charAt(0)?c.pathname.substring(1):c.pathname);b.$$search=zc(c.search);b.$$hash=decodeURIComponent(c.hash);b.$$path&amp;&amp;"/"!=b.$$path.charAt(0)&amp;&amp;(b.$$path="/"+b.$$path)}function la(a,b){if(0===b.lastIndexOf(a,0))return b.substr(a.length)}function Ja(a){var b=
a.indexOf("#");return-1==b?a:a.substr(0,b)}function jb(a){return a.replace(/(#.+)|#$/,"$1")}function gc(a,b,d){this.$$html5=!0;d=d||"";jd(a,this);this.$$parse=function(a){var d=la(b,a);if(!I(d))throw Hb("ipthprfx",a,b);kd(d,this);this.$$path||(this.$$path="/");this.$$compose()};this.$$compose=function(){var a=Ub(this.$$search),d=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(a?"?"+a:"")+d;this.$$absUrl=b+this.$$url.substr(1)};this.$$parseLinkUrl=function(c,e){if(e&amp;&amp;"#"===e[0])return this.hash(e.slice(1)),
!0;var f,g;v(f=la(a,c))?(g=f,g=v(f=la(d,f))?b+(la("/",f)||f):a+g):v(f=la(b,c))?g=b+f:b==c+"/"&amp;&amp;(g=b);g&amp;&amp;this.$$parse(g);return!!g}}function hc(a,b,d){jd(a,this);this.$$parse=function(c){var e=la(a,c)||la(b,c),f;y(e)||"#"!==e.charAt(0)?this.$$html5?f=e:(f="",y(e)&amp;&amp;(a=c,this.replace())):(f=la(d,e),y(f)&amp;&amp;(f=e));kd(f,this);c=this.$$path;var e=a,g=/^\/[A-Z]:(\/.*)/;0===f.lastIndexOf(e,0)&amp;&amp;(f=f.replace(e,""));g.exec(f)||(c=(f=g.exec(c))?f[1]:c);this.$$path=c;this.$$compose()};this.$$compose=function(){var b=
Ub(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+(this.$$url?d+this.$$url:"")};this.$$parseLinkUrl=function(b,d){return Ja(a)==Ja(b)?(this.$$parse(b),!0):!1}}function ld(a,b,d){this.$$html5=!0;hc.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&amp;&amp;"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;a==Ja(c)?f=c:(g=la(b,c))?f=a+d+g:b===c+"/"&amp;&amp;(f=b);f&amp;&amp;this.$$parse(f);return!!f};this.$$compose=function(){var b=Ub(this.$$search),
e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+d+this.$$url}}function Ib(a){return function(){return this[a]}}function md(a,b){return function(d){if(y(d))return this[a];this[a]=b(d);this.$$compose();return this}}function rf(){var a="",b={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(b){return v(b)?(a=b,this):a};this.html5Mode=function(a){return Ea(a)?(b.enabled=a,this):J(a)?(Ea(a.enabled)&amp;&amp;(b.enabled=a.enabled),Ea(a.requireBase)&amp;&amp;
(b.requireBase=a.requireBase),Ea(a.rewriteLinks)&amp;&amp;(b.rewriteLinks=a.rewriteLinks),this):b};this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(d,c,e,f,g){function h(a,b,d){var e=l.url(),f=l.$$state;try{c.url(a,b,d),l.$$state=c.state()}catch(g){throw l.url(e),l.$$state=f,g;}}function k(a,b){d.$broadcast("$locationChangeSuccess",l.absUrl(),a,l.$$state,b)}var l,m;m=c.baseHref();var n=c.url(),p;if(b.enabled){if(!m&amp;&amp;b.requireBase)throw Hb("nobase");p=n.substring(0,n.indexOf("/",
n.indexOf("//")+2))+(m||"/");m=e.history?gc:ld}else p=Ja(n),m=hc;var x=p.substr(0,Ja(p).lastIndexOf("/")+1);l=new m(p,x,"#"+a);l.$$parseLinkUrl(n,n);l.$$state=c.state();var q=/^\s*(javascript|mailto):/i;f.on("click",function(a){if(b.rewriteLinks&amp;&amp;!a.ctrlKey&amp;&amp;!a.metaKey&amp;&amp;!a.shiftKey&amp;&amp;2!=a.which&amp;&amp;2!=a.button){for(var e=G(a.target);"a"!==ta(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;var h=e.prop("href"),k=e.attr("href")||e.attr("xlink:href");J(h)&amp;&amp;"[object SVGAnimatedString]"===h.toString()&amp;&amp;(h=
pa(h.animVal).href);q.test(h)||!h||e.attr("target")||a.isDefaultPrevented()||!l.$$parseLinkUrl(h,k)||(a.preventDefault(),l.absUrl()!=c.url()&amp;&amp;(d.$apply(),g.angular["ff-684208-preventDefault"]=!0))}});jb(l.absUrl())!=jb(n)&amp;&amp;c.url(l.absUrl(),!0);var z=!0;c.onUrlChange(function(a,b){y(la(x,a))?g.location.href=a:(d.$evalAsync(function(){var c=l.absUrl(),e=l.$$state,f;a=jb(a);l.$$parse(a);l.$$state=b;f=d.$broadcast("$locationChangeStart",a,c,b,e).defaultPrevented;l.absUrl()===a&amp;&amp;(f?(l.$$parse(c),l.$$state=
e,h(c,!1,e)):(z=!1,k(c,e)))}),d.$$phase||d.$digest())});d.$watch(function(){var a=jb(c.url()),b=jb(l.absUrl()),f=c.state(),g=l.$$replace,m=a!==b||l.$$html5&amp;&amp;e.history&amp;&amp;f!==l.$$state;if(z||m)z=!1,d.$evalAsync(function(){var b=l.absUrl(),c=d.$broadcast("$locationChangeStart",b,a,l.$$state,f).defaultPrevented;l.absUrl()===b&amp;&amp;(c?(l.$$parse(a),l.$$state=f):(m&amp;&amp;h(b,g,f===l.$$state?null:l.$$state),k(a,f)))});l.$$replace=!1});return l}]}function sf(){var a=!0,b=this;this.debugEnabled=function(b){return v(b)?
(a=b,this):a};this.$get=["$window",function(d){function c(a){a instanceof Error&amp;&amp;(a.stack?a=a.message&amp;&amp;-1===a.stack.indexOf(a.message)?"Error: "+a.message+"\n"+a.stack:a.stack:a.sourceURL&amp;&amp;(a=a.message+"\n"+a.sourceURL+":"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||C;a=!1;try{a=!!e.apply}catch(k){}return a?function(){var a=[];q(arguments,function(b){a.push(c(b))});return e.apply(b,a)}:function(a,b){e(a,null==b?"":b)}}return{log:e("log"),info:e("info"),warn:e("warn"),error:e("error"),
debug:function(){var c=e("debug");return function(){a&amp;&amp;c.apply(b,arguments)}}()}}]}function Ua(a,b){if("__defineGetter__"===a||"__defineSetter__"===a||"__lookupGetter__"===a||"__lookupSetter__"===a||"__proto__"===a)throw ba("isecfld",b);return a}function hg(a){return a+""}function qa(a,b){if(a){if(a.constructor===a)throw ba("isecfn",b);if(a.window===a)throw ba("isecwindow",b);if(a.children&amp;&amp;(a.nodeName||a.prop&amp;&amp;a.attr&amp;&amp;a.find))throw ba("isecdom",b);if(a===Object)throw ba("isecobj",b);}return a}function nd(a,
b){if(a){if(a.constructor===a)throw ba("isecfn",b);if(a===ig||a===jg||a===kg)throw ba("isecff",b);}}function Jb(a,b){if(a&amp;&amp;(a===(0).constructor||a===(!1).constructor||a==="".constructor||a==={}.constructor||a===[].constructor||a===Function.constructor))throw ba("isecaf",b);}function lg(a,b){return"undefined"!==typeof a?a:b}function od(a,b){return"undefined"===typeof a?b:"undefined"===typeof b?a:a+b}function Z(a,b){var d,c;switch(a.type){case s.Program:d=!0;q(a.body,function(a){Z(a.expression,b);d=
d&amp;&amp;a.expression.constant});a.constant=d;break;case s.Literal:a.constant=!0;a.toWatch=[];break;case s.UnaryExpression:Z(a.argument,b);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;break;case s.BinaryExpression:Z(a.left,b);Z(a.right,b);a.constant=a.left.constant&amp;&amp;a.right.constant;a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case s.LogicalExpression:Z(a.left,b);Z(a.right,b);a.constant=a.left.constant&amp;&amp;a.right.constant;a.toWatch=a.constant?[]:[a];break;case s.ConditionalExpression:Z(a.test,
b);Z(a.alternate,b);Z(a.consequent,b);a.constant=a.test.constant&amp;&amp;a.alternate.constant&amp;&amp;a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case s.Identifier:a.constant=!1;a.toWatch=[a];break;case s.MemberExpression:Z(a.object,b);a.computed&amp;&amp;Z(a.property,b);a.constant=a.object.constant&amp;&amp;(!a.computed||a.property.constant);a.toWatch=[a];break;case s.CallExpression:d=a.filter?!b(a.callee.name).$stateful:!1;c=[];q(a.arguments,function(a){Z(a,b);d=d&amp;&amp;a.constant;a.constant||c.push.apply(c,a.toWatch)});
a.constant=d;a.toWatch=a.filter&amp;&amp;!b(a.callee.name).$stateful?c:[a];break;case s.AssignmentExpression:Z(a.left,b);Z(a.right,b);a.constant=a.left.constant&amp;&amp;a.right.constant;a.toWatch=[a];break;case s.ArrayExpression:d=!0;c=[];q(a.elements,function(a){Z(a,b);d=d&amp;&amp;a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=c;break;case s.ObjectExpression:d=!0;c=[];q(a.properties,function(a){Z(a.value,b);d=d&amp;&amp;a.value.constant&amp;&amp;!a.computed;a.value.constant||c.push.apply(c,a.value.toWatch)});
a.constant=d;a.toWatch=c;break;case s.ThisExpression:a.constant=!1;a.toWatch=[];break;case s.LocalsExpression:a.constant=!1,a.toWatch=[]}}function pd(a){if(1==a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function qd(a){return a.type===s.Identifier||a.type===s.MemberExpression}function rd(a){if(1===a.body.length&amp;&amp;qd(a.body[0].expression))return{type:s.AssignmentExpression,left:a.body[0].expression,right:{type:s.NGValueParameter},operator:"="}}function sd(a){return 0===
a.body.length||1===a.body.length&amp;&amp;(a.body[0].expression.type===s.Literal||a.body[0].expression.type===s.ArrayExpression||a.body[0].expression.type===s.ObjectExpression)}function td(a,b){this.astBuilder=a;this.$filter=b}function ud(a,b){this.astBuilder=a;this.$filter=b}function Kb(a){return"constructor"==a}function ic(a){return E(a.valueOf)?a.valueOf():mg.call(a)}function tf(){var a=S(),b=S(),d={"true":!0,"false":!1,"null":null,undefined:void 0},c,e;this.addLiteral=function(a,b){d[a]=b};this.setIdentifierFns=
function(a,b){c=a;e=b;return this};this.$get=["$filter",function(f){function g(c,d,e){var g,k,A;e=e||D;switch(typeof c){case "string":A=c=c.trim();var H=e?b:a;g=H[A];if(!g){":"===c.charAt(0)&amp;&amp;":"===c.charAt(1)&amp;&amp;(k=!0,c=c.substring(2));g=e?r:z;var q=new jc(g);g=(new kc(q,f,g)).parse(c);g.constant?g.$$watchDelegate=p:k?g.$$watchDelegate=g.literal?n:m:g.inputs&amp;&amp;(g.$$watchDelegate=l);e&amp;&amp;(g=h(g));H[A]=g}return x(g,d);case "function":return x(c,d);default:return x(C,d)}}function h(a){function b(c,d,e,f){var g=
D;D=!0;try{return a(c,d,e,f)}finally{D=g}}if(!a)return a;b.$$watchDelegate=a.$$watchDelegate;b.assign=h(a.assign);b.constant=a.constant;b.literal=a.literal;for(var c=0;a.inputs&amp;&amp;c&lt;a.inputs.length;++c)a.inputs[c]=h(a.inputs[c]);b.inputs=a.inputs;return b}function k(a,b){return null==a||null==b?a===b:"object"===typeof a&amp;&amp;(a=ic(a),"object"===typeof a)?!1:a===b||a!==a&amp;&amp;b!==b}function l(a,b,c,d,e){var f=d.inputs,g;if(1===f.length){var h=k,f=f[0];return a.$watch(function(a){var b=f(a);k(b,h)||(g=d(a,void 0,
void 0,[b]),h=b&amp;&amp;ic(b));return g},b,c,e)}for(var l=[],m=[],n=0,p=f.length;n&lt;p;n++)l[n]=k,m[n]=null;return a.$watch(function(a){for(var b=!1,c=0,e=f.length;c&lt;e;c++){var h=f[c](a);if(b||(b=!k(h,l[c])))m[c]=h,l[c]=h&amp;&amp;ic(h)}b&amp;&amp;(g=d(a,void 0,void 0,m));return g},b,c,e)}function m(a,b,c,d){var e,f;return e=a.$watch(function(a){return d(a)},function(a,c,d){f=a;E(b)&amp;&amp;b.apply(this,arguments);v(a)&amp;&amp;d.$$postDigest(function(){v(f)&amp;&amp;e()})},c)}function n(a,b,c,d){function e(a){var b=!0;q(a,function(a){v(a)||(b=
!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;E(b)&amp;&amp;b.call(this,a,c,d);e(a)&amp;&amp;d.$$postDigest(function(){e(g)&amp;&amp;f()})},c)}function p(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function x(a,b){if(!b)return a;var c=a.$$watchDelegate,d=!1,c=c!==n&amp;&amp;c!==m?function(c,e,f,g){f=d&amp;&amp;g?g[0]:a(c,e,f,g);return b(f,c,e)}:function(c,d,e,f){e=a(c,d,e,f);c=b(e,c,d);return v(e)?c:e};a.$$watchDelegate&amp;&amp;a.$$watchDelegate!==l?c.$$watchDelegate=a.$$watchDelegate:
b.$stateful||(c.$$watchDelegate=l,d=!a.inputs,c.inputs=a.inputs?a.inputs:[a]);return c}var U=Fa().noUnsafeEval,z={csp:U,expensiveChecks:!1,literals:oa(d),isIdentifierStart:E(c)&amp;&amp;c,isIdentifierContinue:E(e)&amp;&amp;e},r={csp:U,expensiveChecks:!0,literals:oa(d),isIdentifierStart:E(c)&amp;&amp;c,isIdentifierContinue:E(e)&amp;&amp;e},D=!1;g.$$runningExpensiveChecks=function(){return D};return g}]}function vf(){this.$get=["$rootScope","$exceptionHandler",function(a,b){return vd(function(b){a.$evalAsync(b)},b)}]}function wf(){this.$get=
["$browser","$exceptionHandler",function(a,b){return vd(function(b){a.defer(b)},b)}]}function vd(a,b){function d(){this.$$state={status:0}}function c(a,b){return function(c){b.call(a,c)}}function e(c){!c.processScheduled&amp;&amp;c.pending&amp;&amp;(c.processScheduled=!0,a(function(){var a,d,e;e=c.pending;c.processScheduled=!1;c.pending=void 0;for(var f=0,g=e.length;f&lt;g;++f){d=e[f][0];a=e[f][c.status];try{E(a)?d.resolve(a(c.value)):1===c.status?d.resolve(c.value):d.reject(c.value)}catch(h){d.reject(h),b(h)}}}))}
function f(){this.promise=new d}var g=O("$q",TypeError);P(d.prototype,{then:function(a,b,c){if(y(a)&amp;&amp;y(b)&amp;&amp;y(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0&lt;this.$$state.status&amp;&amp;e(this.$$state);return d.promise},"catch":function(a){return this.then(null,a)},"finally":function(a,b){return this.then(function(b){return k(b,!0,a)},function(b){return k(b,!1,a)},b)}});P(f.prototype,{resolve:function(a){this.promise.$$state.status||(a===this.promise?
this.$$reject(g("qcycle",a)):this.$$resolve(a))},$$resolve:function(a){function d(a){k||(k=!0,h.$$resolve(a))}function f(a){k||(k=!0,h.$$reject(a))}var g,h=this,k=!1;try{if(J(a)||E(a))g=a&amp;&amp;a.then;E(g)?(this.promise.$$state.status=-1,g.call(a,d,f,c(this,this.notify))):(this.promise.$$state.value=a,this.promise.$$state.status=1,e(this.promise.$$state))}catch(l){f(l),b(l)}},reject:function(a){this.promise.$$state.status||this.$$reject(a)},$$reject:function(a){this.promise.$$state.value=a;this.promise.$$state.status=
2;e(this.promise.$$state)},notify:function(c){var d=this.promise.$$state.pending;0&gt;=this.promise.$$state.status&amp;&amp;d&amp;&amp;d.length&amp;&amp;a(function(){for(var a,e,f=0,g=d.length;f&lt;g;f++){e=d[f][0];a=d[f][3];try{e.notify(E(a)?a(c):c)}catch(h){b(h)}}})}});var h=function(a,b){var c=new f;b?c.resolve(a):c.reject(a);return c.promise},k=function(a,b,c){var d=null;try{E(c)&amp;&amp;(d=c())}catch(e){return h(e,!1)}return d&amp;&amp;E(d.then)?d.then(function(){return h(a,b)},function(a){return h(a,!1)}):h(a,b)},l=function(a,b,c,d){var e=
new f;e.resolve(a);return e.promise.then(b,c,d)},m=function(a){if(!E(a))throw g("norslvr",a);var b=new f;a(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};m.prototype=d.prototype;m.defer=function(){var a=new f;a.resolve=c(a,a.resolve);a.reject=c(a,a.reject);a.notify=c(a,a.notify);return a};m.reject=function(a){var b=new f;b.reject(a);return b.promise};m.when=l;m.resolve=l;m.all=function(a){var b=new f,c=0,d=K(a)?[]:{};q(a,function(a,e){c++;l(a).then(function(a){d.hasOwnProperty(e)||
(d[e]=a,--c||b.resolve(d))},function(a){d.hasOwnProperty(e)||b.reject(a)})});0===c&amp;&amp;b.resolve(d);return b.promise};return m}function Ff(){this.$get=["$window","$timeout",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.webkitCancelRequestAnimationFrame,e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function uf(){function a(a){function b(){this.$$watchers=
this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++pb;this.$$ChildScope=null}b.prototype=a;return b}var b=10,d=O("$rootScope"),c=null,e=null;this.digestTtl=function(a){arguments.length&amp;&amp;(b=a);return b};this.$get=["$exceptionHandler","$parse","$browser",function(f,g,h){function k(a){a.currentScope.$$destroyed=!0}function l(a){9===Ba&amp;&amp;(a.$$childHead&amp;&amp;l(a.$$childHead),a.$$nextSibling&amp;&amp;l(a.$$nextSibling));a.$parent=a.$$nextSibling=
a.$$prevSibling=a.$$childHead=a.$$childTail=a.$root=a.$$watchers=null}function m(){this.$id=++pb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null}function n(a){if(D.$$phase)throw d("inprog",D.$$phase);D.$$phase=a}function p(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function x(a,b,c){do a.$$listenerCount[c]-=
b,0===a.$$listenerCount[c]&amp;&amp;delete a.$$listenerCount[c];while(a=a.$parent)}function s(){}function z(){for(;w.length;)try{w.shift()()}catch(a){f(a)}e=null}function r(){null===e&amp;&amp;(e=h.defer(function(){D.$apply(z)}))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?(d=new m,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=
d;(b||c!=this)&amp;&amp;d.$on("$destroy",k);return d},$watch:function(a,b,d,e){var f=g(a);if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l={fn:b,last:s,get:f,exp:e||a,eq:!!d};c=null;E(b)||(l.fn=C);k||(k=h.$$watchers=[]);k.unshift(l);p(this,1);return function(){0&lt;=$a(k,l)&amp;&amp;p(h,-1);c=null}},$watchGroup:function(a,b){function c(){h=!1;k?(k=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&amp;&amp;
b(e,e,g)});return function(){l=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});q(a,function(a,b){var k=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(k)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!y(e)){if(J(e))if(xa(e))for(f!==n&amp;&amp;(f=n,u=f.length=0,l++),a=e.length,u!==a&amp;&amp;(l++,f.length=u=a),b=0;b&lt;a;b++)h=f[b],g=e[b],d=h!==h&amp;&amp;g!==g,d||h===g||(l++,f[b]=g);else{f!==
p&amp;&amp;(f=p={},u=0,l++);a=0;for(b in e)sa.call(e,b)&amp;&amp;(a++,g=e[b],h=f[b],b in f?(d=h!==h&amp;&amp;g!==g,d||h===g||(l++,f[b]=g)):(u++,f[b]=g,l++));if(u&gt;a)for(b in l++,f)sa.call(e,b)||(u--,delete f[b])}else f!==e&amp;&amp;(f=e,l++);return l}}c.$stateful=!0;var d=this,e,f,h,k=1&lt;b.length,l=0,m=g(a,c),n=[],p={},r=!0,u=0;return this.$watch(m,function(){r?(r=!1,b(e,e,d)):b(e,h,d);if(k)if(J(e))if(xa(e)){h=Array(e.length);for(var a=0;a&lt;e.length;a++)h[a]=e[a]}else for(a in h={},e)sa.call(e,a)&amp;&amp;(h[a]=e[a]);else h=e})},$digest:function(){var a,
g,k,l,m,p,r,x,q=b,w,y=[],C,F;n("$digest");h.$$checkUrlChange();this===D&amp;&amp;null!==e&amp;&amp;(h.defer.cancel(e),z());c=null;do{x=!1;w=this;for(p=0;p&lt;u.length;p++){try{F=u[p],F.scope.$eval(F.expression,F.locals)}catch(G){f(G)}c=null}u.length=0;a:do{if(p=w.$$watchers)for(r=p.length;r--;)try{if(a=p[r])if(m=a.get,(g=m(w))!==(k=a.last)&amp;&amp;!(a.eq?na(g,k):"number"===typeof g&amp;&amp;"number"===typeof k&amp;&amp;isNaN(g)&amp;&amp;isNaN(k)))x=!0,c=a,a.last=a.eq?oa(g,null):g,l=a.fn,l(g,k===s?g:k,w),5&gt;q&amp;&amp;(C=4-q,y[C]||(y[C]=[]),y[C].push({msg:E(a.exp)?
"fn: "+(a.exp.name||a.exp.toString()):a.exp,newVal:g,oldVal:k}));else if(a===c){x=!1;break a}}catch(I){f(I)}if(!(p=w.$$watchersCount&amp;&amp;w.$$childHead||w!==this&amp;&amp;w.$$nextSibling))for(;w!==this&amp;&amp;!(p=w.$$nextSibling);)w=w.$parent}while(w=p);if((x||u.length)&amp;&amp;!q--)throw D.$$phase=null,d("infdig",b,y);}while(x||u.length);for(D.$$phase=null;v&lt;t.length;)try{t[v++]()}catch(J){f(J)}t.length=v=0},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast("$destroy");this.$$destroyed=!0;this===
D&amp;&amp;h.$$applicationDestroyed();p(this,-this.$$watchersCount);for(var b in this.$$listenerCount)x(this,this.$$listenerCount[b],b);a&amp;&amp;a.$$childHead==this&amp;&amp;(a.$$childHead=this.$$nextSibling);a&amp;&amp;a.$$childTail==this&amp;&amp;(a.$$childTail=this.$$prevSibling);this.$$prevSibling&amp;&amp;(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&amp;&amp;(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=C;this.$on=this.$watch=this.$watchGroup=
function(){return C};this.$$listeners={};this.$$nextSibling=null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){D.$$phase||u.length||h.defer(function(){u.length&amp;&amp;D.$digest()});u.push({scope:this,expression:g(a),locals:b})},$$postDigest:function(a){t.push(a)},$apply:function(a){try{n("$apply");try{return this.$eval(a)}finally{D.$$phase=null}}catch(b){f(b)}finally{try{D.$digest()}catch(c){throw f(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&amp;&amp;w.push(b);
a=g(a);r()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&amp;&amp;(c[d]=null,x(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},k=ab([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=
e;l=0;for(m=d.length;l&lt;m;l++)if(d[l])try{d[l].apply(null,k)}catch(n){f(n)}else d.splice(l,1),l--,m--;if(g)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=ab([e],arguments,1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(k=d.length;h&lt;k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,
1),h--,k--;if(!(d=c.$$listenerCount[a]&amp;&amp;c.$$childHead||c!==this&amp;&amp;c.$$nextSibling))for(;c!==this&amp;&amp;!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var D=new m,u=D.$$asyncQueue=[],t=D.$$postDigestQueue=[],w=D.$$applyAsyncQueue=[],v=0;return D}]}function ne(){var a=/^\s*(https?|ftp|mailto|tel|file):/,b=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(b){return v(b)?(a=b,this):a};this.imgSrcSanitizationWhitelist=function(a){return v(a)?(b=a,this):b};
this.$get=function(){return function(d,c){var e=c?b:a,f;f=pa(d).href;return""===f||f.match(e)?d:"unsafe:"+f}}}function ng(a){if("self"===a)return a;if(I(a)){if(-1&lt;a.indexOf("***"))throw ra("iwcard",a);a=wd(a).replace("\\*\\*",".*").replace("\\*","[^:/.?&amp;;]*");return new RegExp("^"+a+"$")}if(Xa(a))return new RegExp("^"+a.source+"$");throw ra("imatcher");}function xd(a){var b=[];v(a)&amp;&amp;q(a,function(a){b.push(ng(a))});return b}function yf(){this.SCE_CONTEXTS=ma;var a=["self"],b=[];this.resourceUrlWhitelist=
function(b){arguments.length&amp;&amp;(a=xd(b));return a};this.resourceUrlBlacklist=function(a){arguments.length&amp;&amp;(b=xd(a));return b};this.$get=["$injector",function(d){function c(a,b){return"self"===a?id(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&amp;&amp;(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw ra("unsafe");
};d.has("$sanitize")&amp;&amp;(f=d.get("$sanitize"));var g=e(),h={};h[ma.HTML]=e(g);h[ma.CSS]=e(g);h[ma.URL]=e(g);h[ma.JS]=e(g);h[ma.RESOURCE_URL]=e(h[ma.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw ra("icontext",a,b);if(null===b||y(b)||""===b)return b;if("string"!==typeof b)throw ra("itype",a);return new c(b)},getTrusted:function(d,e){if(null===e||y(e)||""===e)return e;var g=h.hasOwnProperty(d)?h[d]:null;if(g&amp;&amp;e instanceof g)return e.$$unwrapTrustedValue();if(d===ma.RESOURCE_URL){var g=
pa(e.toString()),n,p,x=!1;n=0;for(p=a.length;n&lt;p;n++)if(c(a[n],g)){x=!0;break}if(x)for(n=0,p=b.length;n&lt;p;n++)if(c(b[n],g)){x=!1;break}if(x)return e;throw ra("insecurl",e.toString());}if(d===ma.HTML)return f(e);throw ra("unsafe");},valueOf:function(a){return a instanceof g?a.$$unwrapTrustedValue():a}}}]}function xf(){var a=!0;this.enabled=function(b){arguments.length&amp;&amp;(a=!!b);return a};this.$get=["$parse","$sceDelegate",function(b,d){if(a&amp;&amp;8&gt;Ba)throw ra("iequirks");var c=fa(ma);c.isEnabled=function(){return a};
c.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Ya);c.parseAs=function(a,d){var e=b(d);return e.literal&amp;&amp;e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,f=c.getTrusted,g=c.trustAs;q(ma,function(a,b){var d=L(b);c[eb("parse_as_"+d)]=function(b){return e(a,b)};c[eb("get_trusted_"+d)]=function(b){return f(a,b)};c[eb("trust_as_"+d)]=function(b){return g(a,b)}});return c}]}function zf(){this.$get=["$window",
"$document",function(a,b){var d={},c=!(a.chrome&amp;&amp;a.chrome.app&amp;&amp;a.chrome.app.runtime)&amp;&amp;a.history&amp;&amp;a.history.pushState,e=$((/android (\d+)/.exec(L((a.navigator||{}).userAgent))||[])[1]),f=/Boxee/i.test((a.navigator||{}).userAgent),g=b[0]||{},h,k=/^(Moz|webkit|ms)(?=[A-Z])/,l=g.body&amp;&amp;g.body.style,m=!1,n=!1;if(l){for(var p in l)if(m=k.exec(p)){h=m[0];h=h[0].toUpperCase()+h.substr(1);break}h||(h="WebkitOpacity"in l&amp;&amp;"webkit");m=!!("transition"in l||h+"Transition"in l);n=!!("animation"in l||h+"Animation"in
l);!e||m&amp;&amp;n||(m=I(l.webkitTransition),n=I(l.webkitAnimation))}return{history:!(!c||4&gt;e||f),hasEvent:function(a){if("input"===a&amp;&amp;11&gt;=Ba)return!1;if(y(d[a])){var b=g.createElement("div");d[a]="on"+a in b}return d[a]},csp:Fa(),vendorPrefix:h,transitions:m,animations:n,android:e}}]}function Bf(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=["$templateCache","$http","$q","$sce",function(b,d,c,e){function f(g,h){f.totalPendingRequests++;if(!I(g)||y(b.get(g)))g=e.getTrustedResourceUrl(g);
var k=d.defaults&amp;&amp;d.defaults.transformResponse;K(k)?k=k.filter(function(a){return a!==dc}):k===dc&amp;&amp;(k=null);return d.get(g,P({cache:b,transformResponse:k},a))["finally"](function(){f.totalPendingRequests--}).then(function(a){b.put(g,a.data);return a.data},function(a){if(!h)throw og("tpload",g,a.status,a.statusText);return c.reject(a)})}f.totalPendingRequests=0;return f}]}function Cf(){this.$get=["$rootScope","$browser","$location",function(a,b,d){return{findBindings:function(a,b,d){a=a.getElementsByClassName("ng-binding");
var g=[];q(a,function(a){var c=da.element(a).data("$binding");c&amp;&amp;q(c,function(c){d?(new RegExp("(^|\\s)"+wd(b)+"(\\s|\\||$)")).test(c)&amp;&amp;g.push(a):-1!=c.indexOf(b)&amp;&amp;g.push(a)})});return g},findModels:function(a,b,d){for(var g=["ng-","data-ng-","ng\\:"],h=0;h&lt;g.length;++h){var k=a.querySelectorAll("["+g[h]+"model"+(d?"=":"*=")+'"'+b+'"]');if(k.length)return k}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&amp;&amp;(d.url(b),a.$digest())},whenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}
function Df(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(a,b,d,c,e){function f(f,k,l){E(f)||(l=k,k=f,f=C);var m=ya.call(arguments,3),n=v(l)&amp;&amp;!l,p=(n?c:d).defer(),x=p.promise,q;q=b.defer(function(){try{p.resolve(f.apply(null,m))}catch(b){p.reject(b),e(b)}finally{delete g[x.$$timeoutId]}n||a.$apply()},k);x.$$timeoutId=q;g[q]=p;return x}var g={};f.cancel=function(a){return a&amp;&amp;a.$$timeoutId in g?(g[a.$$timeoutId].reject("canceled"),delete g[a.$$timeoutId],b.defer.cancel(a.$$timeoutId)):
!1};return f}]}function pa(a){Ba&amp;&amp;(X.setAttribute("href",a),a=X.href);X.setAttribute("href",a);return{href:X.href,protocol:X.protocol?X.protocol.replace(/:$/,""):"",host:X.host,search:X.search?X.search.replace(/^\?/,""):"",hash:X.hash?X.hash.replace(/^#/,""):"",hostname:X.hostname,port:X.port,pathname:"/"===X.pathname.charAt(0)?X.pathname:"/"+X.pathname}}function id(a){a=I(a)?pa(a):a;return a.protocol===yd.protocol&amp;&amp;a.host===yd.host}function Ef(){this.$get=ca(F)}function zd(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}
var d=a[0]||{},c={},e="";return function(){var a,g,h,k,l;a=d.cookie||"";if(a!==e)for(e=a,a=e.split("; "),c={},h=0;h&lt;a.length;h++)g=a[h],k=g.indexOf("="),0&lt;k&amp;&amp;(l=b(g.substring(0,k)),y(c[l])&amp;&amp;(c[l]=b(g.substring(k+1))));return c}}function If(){this.$get=zd}function Lc(a){function b(d,c){if(J(d)){var e={};q(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+"Filter",c)}this.register=b;this.$get=["$injector",function(a){return function(b){return a.get(b+"Filter")}}];b("currency",Ad);b("date",Bd);
b("filter",pg);b("json",qg);b("limitTo",rg);b("lowercase",sg);b("number",Cd);b("orderBy",Dd);b("uppercase",tg)}function pg(){return function(a,b,d){if(!xa(a)){if(null==a)return a;throw O("filter")("notarray",a);}var c;switch(lc(b)){case "function":break;case "boolean":case "null":case "number":case "string":c=!0;case "object":b=ug(b,d,c);break;default:return a}return Array.prototype.filter.call(a,b)}}function ug(a,b,d){var c=J(a)&amp;&amp;"$"in a;!0===b?b=na:E(b)||(b=function(a,b){if(y(a))return!1;if(null===
a||null===b)return a===b;if(J(b)||J(a)&amp;&amp;!uc(a))return!1;a=L(""+a);b=L(""+b);return-1!==a.indexOf(b)});return function(e){return c&amp;&amp;!J(e)?La(e,a.$,b,!1):La(e,a,b,d)}}function La(a,b,d,c,e){var f=lc(a),g=lc(b);if("string"===g&amp;&amp;"!"===b.charAt(0))return!La(a,b.substring(1),d,c);if(K(a))return a.some(function(a){return La(a,b,d,c)});switch(f){case "object":var h;if(c){for(h in a)if("$"!==h.charAt(0)&amp;&amp;La(a[h],b,d,!0))return!0;return e?!1:La(a,b,d,!1)}if("object"===g){for(h in b)if(e=b[h],!E(e)&amp;&amp;!y(e)&amp;&amp;
(f="$"===h,!La(f?a:a[h],e,d,f,f)))return!1;return!0}return d(a,b);case "function":return!1;default:return d(a,b)}}function lc(a){return null===a?"null":typeof a}function Ad(a){var b=a.NUMBER_FORMATS;return function(a,c,e){y(c)&amp;&amp;(c=b.CURRENCY_SYM);y(e)&amp;&amp;(e=b.PATTERNS[1].maxFrac);return null==a?a:Ed(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(/\u00A4/g,c)}}function Cd(a){var b=a.NUMBER_FORMATS;return function(a,c){return null==a?a:Ed(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function vg(a){var b=
0,d,c,e,f,g;-1&lt;(c=a.indexOf(Fd))&amp;&amp;(a=a.replace(Fd,""));0&lt;(e=a.search(/e/i))?(0&gt;c&amp;&amp;(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0&gt;c&amp;&amp;(c=a.length);for(e=0;a.charAt(e)==mc;e++);if(e==(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)==mc;)g--;c-=e;d=[];for(f=0;e&lt;=g;e++,f++)d[f]=+a.charAt(e)}c&gt;Gd&amp;&amp;(d=d.splice(0,Gd-1),b=c-1,c=1);return{d:d,e:b,i:c}}function wg(a,b,d,c){var e=a.d,f=e.length-a.i;b=y(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0&lt;d){e.splice(Math.max(a.i,d));for(var g=d;g&lt;e.length;g++)e[g]=
0}else for(f=Math.max(0,f),a.i=1,e.length=Math.max(1,d=b+1),e[0]=0,g=1;g&lt;d;g++)e[g]=0;if(5&lt;=c)if(0&gt;d-1){for(c=0;c&gt;d;c--)e.unshift(0),a.i++;e.unshift(1);a.i++}else e[d-1]++;for(;f&lt;Math.max(0,b);f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Ed(a,b,d,c,e){if(!I(a)&amp;&amp;!Q(a)||isNaN(a))return"";var f=!isFinite(a),g=!1,h=Math.abs(a)+"",k="";if(f)k="\u221e";else{g=vg(h);wg(g,e,b.minFrac,b.maxFrac);k=g.d;h=g.i;e=g.e;f=[];for(g=k.reduce(function(a,
b){return a&amp;&amp;!b},!0);0&gt;h;)k.unshift(0),h++;0&lt;h?f=k.splice(h,k.length):(f=k,k=[0]);h=[];for(k.length&gt;=b.lgSize&amp;&amp;h.unshift(k.splice(-b.lgSize,k.length).join(""));k.length&gt;b.gSize;)h.unshift(k.splice(-b.gSize,k.length).join(""));k.length&amp;&amp;h.unshift(k.join(""));k=h.join(d);f.length&amp;&amp;(k+=c+f.join(""));e&amp;&amp;(k+="e+"+e)}return 0&gt;a&amp;&amp;!g?b.negPre+k+b.negSuf:b.posPre+k+b.posSuf}function Lb(a,b,d,c){var e="";if(0&gt;a||c&amp;&amp;0&gt;=a)c?a=-a+1:(a=-a,e="-");for(a=""+a;a.length&lt;b;)a=mc+a;d&amp;&amp;(a=a.substr(a.length-b));return e+
a}function W(a,b,d,c,e){d=d||0;return function(f){f=f["get"+a]();if(0&lt;d||f&gt;-d)f+=d;0===f&amp;&amp;-12==d&amp;&amp;(f=12);return Lb(f,b,c,e)}}function kb(a,b,d){return function(c,e){var f=c["get"+a](),g=ub((d?"STANDALONE":"")+(b?"SHORT":"")+a);return e[g][f]}}function Hd(a){var b=(new Date(a,0,1)).getDay();return new Date(a,0,(4&gt;=b?5:12)-b)}function Id(a){return function(b){var d=Hd(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Lb(b,a)}}function nc(a,
b){return 0&gt;=a.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Bd(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,k=b[8]?a.setUTCHours:a.setHours;b[9]&amp;&amp;(f=$(b[9]+b[10]),g=$(b[9]+b[11]));h.call(a,$(b[1]),$(b[2])-1,$(b[3]));f=$(b[4]||0)-f;g=$(b[5]||0)-g;h=$(b[6]||0);b=Math.round(1E3*parseFloat("0."+(b[7]||0)));k.call(a,f,g,h,b)}return a}var d=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(c,
d,f){var g="",h=[],k,l;d=d||"mediumDate";d=a.DATETIME_FORMATS[d]||d;I(c)&amp;&amp;(c=xg.test(c)?$(c):b(c));Q(c)&amp;&amp;(c=new Date(c));if(!ha(c)||!isFinite(c.getTime()))return c;for(;d;)(l=yg.exec(d))?(h=ab(h,l,1),d=h.pop()):(h.push(d),d=null);var m=c.getTimezoneOffset();f&amp;&amp;(m=xc(f,m),c=Tb(c,f,!0));q(h,function(b){k=zg[b];g+=k?k(c,a.DATETIME_FORMATS,m):"''"===b?"'":b.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return g}}function qg(){return function(a,b){y(b)&amp;&amp;(b=2);return cb(a,b)}}function rg(){return function(a,
b,d){b=Infinity===Math.abs(Number(b))?Number(b):$(b);if(isNaN(b))return a;Q(a)&amp;&amp;(a=a.toString());if(!K(a)&amp;&amp;!I(a))return a;d=!d||isNaN(d)?0:$(d);d=0&gt;d?Math.max(0,a.length+d):d;return 0&lt;=b?a.slice(d,d+b):0===d?a.slice(b,a.length):a.slice(Math.max(0,d+b),d)}}function Dd(a){function b(b,d){d=d?-1:1;return b.map(function(b){var c=1,h=Ya;if(E(b))h=b;else if(I(b)){if("+"==b.charAt(0)||"-"==b.charAt(0))c="-"==b.charAt(0)?-1:1,b=b.substring(1);if(""!==b&amp;&amp;(h=a(b),h.constant))var k=h(),h=function(a){return a[k]}}return{get:h,
descending:c*d}})}function d(a){switch(typeof a){case "number":case "boolean":case "string":return!0;default:return!1}}return function(a,e,f){if(null==a)return a;if(!xa(a))throw O("orderBy")("notarray",a);K(e)||(e=[e]);0===e.length&amp;&amp;(e=["+"]);var g=b(e,f);g.push({get:function(){return{}},descending:f?-1:1});a=Array.prototype.map.call(a,function(a,b){return{value:a,predicateValues:g.map(function(c){var e=c.get(a);c=typeof e;if(null===e)c="string",e="null";else if("string"===c)e=e.toLowerCase();else if("object"===
c)a:{if("function"===typeof e.valueOf&amp;&amp;(e=e.valueOf(),d(e)))break a;if(uc(e)&amp;&amp;(e=e.toString(),d(e)))break a;e=b}return{value:e,type:c}})}});a.sort(function(a,b){for(var c=0,d=0,e=g.length;d&lt;e;++d){var c=a.predicateValues[d],f=b.predicateValues[d],x=0;c.type===f.type?c.value!==f.value&amp;&amp;(x=c.value&lt;f.value?-1:1):x=c.type&lt;f.type?-1:1;if(c=x*g[d].descending)break}return c});return a=a.map(function(a){return a.value})}}function Ma(a){E(a)&amp;&amp;(a={link:a});a.restrict=a.restrict||"AC";return ca(a)}function Jd(a,
b,d,c,e){var f=this,g=[];f.$error={};f.$$success={};f.$pending=void 0;f.$name=e(b.name||b.ngForm||"")(d);f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=!1;f.$submitted=!1;f.$$parentForm=Mb;f.$rollbackViewValue=function(){q(g,function(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){q(g,function(a){a.$commitViewValue()})};f.$addControl=function(a){Ra(a.$name,"input");g.push(a);a.$name&amp;&amp;(f[a.$name]=a);a.$$parentForm=f};f.$$renameControl=function(a,b){var c=a.$name;f[c]===a&amp;&amp;delete f[c];
f[b]=a;a.$name=b};f.$removeControl=function(a){a.$name&amp;&amp;f[a.$name]===a&amp;&amp;delete f[a.$name];q(f.$pending,function(b,c){f.$setValidity(c,null,a)});q(f.$error,function(b,c){f.$setValidity(c,null,a)});q(f.$$success,function(b,c){f.$setValidity(c,null,a)});$a(g,a);a.$$parentForm=Mb};Kd({ctrl:this,$element:a,set:function(a,b,c){var d=a[b];d?-1===d.indexOf(c)&amp;&amp;d.push(c):a[b]=[c]},unset:function(a,b,c){var d=a[b];d&amp;&amp;($a(d,c),0===d.length&amp;&amp;delete a[b])},$animate:c});f.$setDirty=function(){c.removeClass(a,Va);
c.addClass(a,Nb);f.$dirty=!0;f.$pristine=!1;f.$$parentForm.$setDirty()};f.$setPristine=function(){c.setClass(a,Va,Nb+" ng-submitted");f.$dirty=!1;f.$pristine=!0;f.$submitted=!1;q(g,function(a){a.$setPristine()})};f.$setUntouched=function(){q(g,function(a){a.$setUntouched()})};f.$setSubmitted=function(){c.addClass(a,"ng-submitted");f.$submitted=!0;f.$$parentForm.$setSubmitted()}}function oc(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function lb(a,b,d,c,e,f){var g=L(b[0].type);
if(!e.android){var h=!1;b.on("compositionstart",function(){h=!0});b.on("compositionend",function(){h=!1;l()})}var k,l=function(a){k&amp;&amp;(f.defer.cancel(k),k=null);if(!h){var e=b.val();a=a&amp;&amp;a.type;"password"===g||d.ngTrim&amp;&amp;"false"===d.ngTrim||(e=V(e));(c.$viewValue!==e||""===e&amp;&amp;c.$$hasNativeValidators)&amp;&amp;c.$setViewValue(e,a)}};if(e.hasEvent("input"))b.on("input",l);else{var m=function(a,b,c){k||(k=f.defer(function(){k=null;b&amp;&amp;b.value===c||l(a)}))};b.on("keydown",function(a){var b=a.keyCode;91===b||15&lt;
b&amp;&amp;19&gt;b||37&lt;=b&amp;&amp;40&gt;=b||m(a,this,this.value)});if(e.hasEvent("paste"))b.on("paste cut",m)}b.on("change",l);if(Ld[g]&amp;&amp;c.$$hasNativeValidators&amp;&amp;g===d.type)b.on("keydown wheel mousedown",function(a){if(!k){var b=this.validity,c=b.badInput,d=b.typeMismatch;k=f.defer(function(){k=null;b.badInput===c&amp;&amp;b.typeMismatch===d||l(a)})}});c.$render=function(){var a=c.$isEmpty(c.$viewValue)?"":c.$viewValue;b.val()!==a&amp;&amp;b.val(a)}}function Ob(a,b){return function(d,c){var e,f;if(ha(d))return d;if(I(d)){'"'==d.charAt(0)&amp;&amp;
'"'==d.charAt(d.length-1)&amp;&amp;(d=d.substring(1,d.length-1));if(Ag.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),ss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},q(e,function(a,c){c&lt;b.length&amp;&amp;(f[b[c]]=+a)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function mb(a,b,d,c){return function(e,f,g,h,k,l,m){function n(a){return a&amp;&amp;
!(a.getTime&amp;&amp;a.getTime()!==a.getTime())}function p(a){return v(a)&amp;&amp;!ha(a)?d(a)||void 0:a}Md(e,f,g,h);lb(e,f,g,h,k,l);var q=h&amp;&amp;h.$options&amp;&amp;h.$options.timezone,s;h.$$parserName=a;h.$parsers.push(function(a){if(h.$isEmpty(a))return null;if(b.test(a))return a=d(a,s),q&amp;&amp;(a=Tb(a,q)),a});h.$formatters.push(function(a){if(a&amp;&amp;!ha(a))throw nb("datefmt",a);if(n(a))return(s=a)&amp;&amp;q&amp;&amp;(s=Tb(s,q,!0)),m("date")(a,c,q);s=null;return""});if(v(g.min)||g.ngMin){var z;h.$validators.min=function(a){return!n(a)||y(z)||d(a)&gt;=
z};g.$observe("min",function(a){z=p(a);h.$validate()})}if(v(g.max)||g.ngMax){var r;h.$validators.max=function(a){return!n(a)||y(r)||d(a)&lt;=r};g.$observe("max",function(a){r=p(a);h.$validate()})}}}function Md(a,b,d,c){(c.$$hasNativeValidators=J(b[0].validity))&amp;&amp;c.$parsers.push(function(a){var c=b.prop("validity")||{};return c.badInput||c.typeMismatch?void 0:a})}function Nd(a,b,d,c,e){if(v(c)){a=a(c);if(!a.constant)throw nb("constexpr",d,c);return a(b)}return e}function pc(a,b){a="ngClass"+a;return["$animate",
function(d){function c(a,b){var c=[],d=0;a:for(;d&lt;a.length;d++){for(var e=a[d],m=0;m&lt;b.length;m++)if(e==b[m])continue a;c.push(e)}return c}function e(a){var b=[];return K(a)?(q(a,function(a){b=b.concat(e(a))}),b):I(a)?a.split(" "):J(a)?(q(a,function(a,c){a&amp;&amp;(b=b.concat(c.split(" ")))}),b):a}return{restrict:"AC",link:function(f,g,h){function k(a){a=l(a,1);h.$addClass(a)}function l(a,b){var c=g.data("$classCounts")||S(),d=[];q(a,function(a){if(0&lt;b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0&lt;b)&amp;&amp;d.push(a)});g.data("$classCounts",
c);return d.join(" ")}function m(a,b){var e=c(b,a),f=c(a,b),e=l(e,1),f=l(f,-1);e&amp;&amp;e.length&amp;&amp;d.addClass(g,e);f&amp;&amp;f.length&amp;&amp;d.removeClass(g,f)}function n(a){if(!0===b||(f.$index&amp;1)===b){var c=e(a||[]);if(!p)k(c);else if(!na(a,p)){var d=e(p);m(d,c)}}p=K(a)?a.map(function(a){return fa(a)}):fa(a)}var p;f.$watch(h[a],n,!0);h.$observe("class",function(b){n(f.$eval(h[a]))});"ngClass"!==a&amp;&amp;f.$watch("$index",function(c,d){var g=c&amp;1;if(g!==(d&amp;1)){var m=e(f.$eval(h[a]));g===b?k(m):(g=l(m,-1),h.$removeClass(g))}})}}}]}
function Kd(a){function b(a,b){b&amp;&amp;!f[a]?(k.addClass(e,a),f[a]=!0):!b&amp;&amp;f[a]&amp;&amp;(k.removeClass(e,a),f[a]=!1)}function d(a,c){a=a?"-"+Bc(a,"-"):"";b(ob+a,!0===c);b(Od+a,!1===c)}var c=a.ctrl,e=a.$element,f={},g=a.set,h=a.unset,k=a.$animate;f[Od]=!(f[ob]=e.hasClass(ob));c.$setValidity=function(a,e,f){y(e)?(c.$pending||(c.$pending={}),g(c.$pending,a,f)):(c.$pending&amp;&amp;h(c.$pending,a,f),Pd(c.$pending)&amp;&amp;(c.$pending=void 0));Ea(e)?e?(h(c.$error,a,f),g(c.$$success,a,f)):(g(c.$error,a,f),h(c.$$success,a,f)):(h(c.$error,
a,f),h(c.$$success,a,f));c.$pending?(b(Qd,!0),c.$valid=c.$invalid=void 0,d("",null)):(b(Qd,!1),c.$valid=Pd(c.$error),c.$invalid=!c.$valid,d("",c.$valid));e=c.$pending&amp;&amp;c.$pending[a]?void 0:c.$error[a]?!1:c.$$success[a]?!0:null;d(a,e);c.$$parentForm.$setValidity(a,e,c)}}function Pd(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}var Bg=/^\/(.+)\/([a-z]*)$/,sa=Object.prototype.hasOwnProperty,L=function(a){return I(a)?a.toLowerCase():a},ub=function(a){return I(a)?a.toUpperCase():a},Ba,
G,Y,ya=[].slice,ag=[].splice,Cg=[].push,ja=Object.prototype.toString,vc=Object.getPrototypeOf,za=O("ng"),da=F.angular||(F.angular={}),Vb,pb=0;Ba=F.document.documentMode;C.$inject=[];Ya.$inject=[];var K=Array.isArray,ae=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,V=function(a){return I(a)?a.trim():a},wd=function(a){return a.replace(/([-()\[\]{}+?*.$\^|,:#&lt;!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},Fa=function(){if(!v(Fa.rules)){var a=F.document.querySelector("[ng-csp]")||
F.document.querySelector("[data-ng-csp]");if(a){var b=a.getAttribute("ng-csp")||a.getAttribute("data-ng-csp");Fa.rules={noUnsafeEval:!b||-1!==b.indexOf("no-unsafe-eval"),noInlineStyle:!b||-1!==b.indexOf("no-inline-style")}}else{a=Fa;try{new Function(""),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Fa.rules},rb=function(){if(v(rb.name_))return rb.name_;var a,b,d=Oa.length,c,e;for(b=0;b&lt;d;++b)if(c=Oa[b],a=F.document.querySelector("["+c.replace(":","\\:")+"jq]")){e=a.getAttribute(c+
"jq");break}return rb.name_=e},de=/:/g,Oa=["ng-","data-ng-","ng:","x-ng-"],ie=/[A-Z]/g,Cc=!1,Na=3,me={full:"1.5.6",major:1,minor:5,dot:6,codeName:"arrow-stringification"};T.expando="ng339";var gb=T.cache={},Of=1;T._data=function(a){return this.cache[a[this.expando]]||{}};var Jf=/([\:\-\_]+(.))/g,Kf=/^moz([A-Z])/,yb={mouseleave:"mouseout",mouseenter:"mouseover"},Xb=O("jqLite"),Nf=/^&lt;([\w-]+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/,Wb=/&lt;|&amp;#?\w+;/,Lf=/&lt;([\w:-]+)/,Mf=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^&gt;]*)\/&gt;/gi,
ga={option:[1,'&lt;select multiple="multiple"&gt;',"&lt;/select&gt;"],thead:[1,"&lt;table&gt;","&lt;/table&gt;"],col:[2,"&lt;table&gt;&lt;colgroup&gt;","&lt;/colgroup&gt;&lt;/table&gt;"],tr:[2,"&lt;table&gt;&lt;tbody&gt;","&lt;/tbody&gt;&lt;/table&gt;"],td:[3,"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;","&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"],_default:[0,"",""]};ga.optgroup=ga.option;ga.tbody=ga.tfoot=ga.colgroup=ga.caption=ga.thead;ga.th=ga.td;var Tf=F.Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&amp;16)},Pa=T.prototype={ready:function(a){function b(){d||(d=!0,a())}var d=!1;"complete"===
F.document.readyState?F.setTimeout(b):(this.on("DOMContentLoaded",b),T(F).on("load",b))},toString:function(){var a=[];q(this,function(b){a.push(""+b)});return"["+a.join(", ")+"]"},eq:function(a){return 0&lt;=a?G(this[a]):G(this[this.length+a])},length:0,push:Cg,sort:[].sort,splice:[].splice},Eb={};q("multiple selected checked disabled readOnly required open".split(" "),function(a){Eb[L(a)]=a});var Uc={};q("input select option textarea button form details".split(" "),function(a){Uc[a]=!0});var bd={ngMinlength:"minlength",
ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};q({data:Zb,removeData:fb,hasData:function(a){for(var b in gb[a.ng339])return!0;return!1},cleanData:function(a){for(var b=0,d=a.length;b&lt;d;b++)fb(a[b])}},function(a,b){T[b]=a});q({data:Zb,inheritedData:Cb,scope:function(a){return G.data(a,"$scope")||Cb(a.parentNode||a,["$isolateScope","$scope"])},isolateScope:function(a){return G.data(a,"$isolateScope")||G.data(a,"$isolateScopeNoTemplate")},controller:Rc,injector:function(a){return Cb(a,
"$injector")},removeAttr:function(a,b){a.removeAttribute(b)},hasClass:zb,css:function(a,b,d){b=eb(b);if(v(d))a.style[b]=d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Na&amp;&amp;2!==c&amp;&amp;8!==c)if(c=L(b),Eb[c])if(v(d))d?(a[b]=!0,a.setAttribute(b,c)):(a[b]=!1,a.removeAttribute(c));else return a[b]||(a.attributes.getNamedItem(b)||C).specified?c:void 0;else if(v(d))a.setAttribute(b,d);else if(a.getAttribute)return a=a.getAttribute(b,2),null===a?void 0:a},prop:function(a,b,d){if(v(d))a[b]=
d;else return a[b]},text:function(){function a(a,d){if(y(d)){var c=a.nodeType;return 1===c||c===Na?a.textContent:""}a.textContent=d}a.$dv="";return a}(),val:function(a,b){if(y(b)){if(a.multiple&amp;&amp;"select"===ta(a)){var d=[];q(a.options,function(a){a.selected&amp;&amp;d.push(a.value||a.text)});return 0===d.length?null:d}return a.value}a.value=b},html:function(a,b){if(y(b))return a.innerHTML;wb(a,!0);a.innerHTML=b},empty:Sc},function(a,b){T.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==Sc&amp;&amp;y(2==a.length&amp;&amp;
a!==zb&amp;&amp;a!==Rc?b:c)){if(J(b)){for(e=0;e&lt;g;e++)if(a===Zb)a(this[e],b);else for(f in b)a(this[e],f,b[f]);return this}e=a.$dv;g=y(e)?Math.min(g,1):g;for(f=0;f&lt;g;f++){var h=a(this[f],b,c);e=e?e+h:h}return e}for(e=0;e&lt;g;e++)a(this[e],b,c);return this}});q({removeData:fb,on:function(a,b,d,c){if(v(c))throw Xb("onargs");if(Mc(a)){c=xb(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=Qf(a,e));c=0&lt;=b.indexOf(" ")?b.split(" "):[b];for(var g=c.length,h=function(b,c,g){var h=e[b];h||(h=e[b]=[],h.specialHandlerWrapper=
c,"$destroy"===b||g||a.addEventListener(b,f,!1));h.push(d)};g--;)b=c[g],yb[b]?(h(yb[b],Sf),h(b,void 0,!0)):h(b)}},off:Qc,one:function(a,b,d){a=G(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,b){var d,c=a.parentNode;wb(a);q(new T(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];q(a.childNodes,function(a){1===a.nodeType&amp;&amp;b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,
b){var d=a.nodeType;if(1===d||11===d){b=new T(b);for(var d=0,c=b.length;d&lt;c;d++)a.appendChild(b[d])}},prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;q(new T(b),function(b){a.insertBefore(b,d)})}},wrap:function(a,b){Oc(a,G(b).eq(0).clone()[0])},remove:Db,detach:function(a){Db(a,!0)},after:function(a,b){var d=a,c=a.parentNode;b=new T(b);for(var e=0,f=b.length;e&lt;f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}},addClass:Bb,removeClass:Ab,toggleClass:function(a,b,d){b&amp;&amp;q(b.split(" "),
function(b){var e=d;y(e)&amp;&amp;(e=!zb(a,b));(e?Bb:Ab)(a,b)})},parent:function(a){return(a=a.parentNode)&amp;&amp;11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:Yb,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=xb(a);if(g=(g=g&amp;&amp;g.events)&amp;&amp;g[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=
!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:C,type:f,target:a},b.type&amp;&amp;(c=P(c,b)),b=fa(g),e=d?[c].concat(d):[c],q(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){T.prototype[b]=function(b,c,e){for(var f,g=0,h=this.length;g&lt;h;g++)y(f)?(f=a(this[g],b,c,e),v(f)&amp;&amp;(f=G(f))):Pc(f,a(this[g],b,c,e));return v(f)?f:this};T.prototype.bind=T.prototype.on;T.prototype.unbind=T.prototype.off});Sa.prototype={put:function(a,
b){this[Ga(a,this.nextUid)]=b},get:function(a){return this[Ga(a,this.nextUid)]},remove:function(a){var b=this[a=Ga(a,this.nextUid)];delete this[a];return b}};var Hf=[function(){this.$get=[function(){return Sa}]}],Vf=/^([^\(]+?)=&gt;/,Wf=/^[^\(]*\(\s*([^\)]*)\)/m,Dg=/,/,Eg=/^\s*(_?)(\S+?)\1\s*$/,Uf=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,Ha=O("$injector");db.$$annotate=function(a,b,d){var c;if("function"===typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw I(d)&amp;&amp;d||(d=a.name||Xf(a)),Ha("strictdi",d);
b=Vc(a);q(b[1].split(Dg),function(a){a.replace(Eg,function(a,b,d){c.push(d)})})}a.$inject=c}}else K(a)?(b=a.length-1,Qa(a[b],"fn"),c=a.slice(0,b)):Qa(a,"fn",!0);return c};var Rd=O("$animate"),$e=function(){this.$get=C},af=function(){var a=new Sa,b=[];this.$get=["$$AnimateRunner","$rootScope",function(d,c){function e(a,b,c){var d=!1;b&amp;&amp;(b=I(b)?b.split(" "):K(b)?b:[],q(b,function(b){b&amp;&amp;(d=!0,a[b]=c)}));return d}function f(){q(b,function(b){var c=a.get(b);if(c){var d=Yf(b.attr("class")),e="",f="";q(c,
function(a,b){a!==!!d[b]&amp;&amp;(a?e+=(e.length?" ":"")+b:f+=(f.length?" ":"")+b)});q(b,function(a){e&amp;&amp;Bb(a,e);f&amp;&amp;Ab(a,f)});a.remove(b)}});b.length=0}return{enabled:C,on:C,off:C,pin:C,push:function(g,h,k,l){l&amp;&amp;l();k=k||{};k.from&amp;&amp;g.css(k.from);k.to&amp;&amp;g.css(k.to);if(k.addClass||k.removeClass)if(h=k.addClass,l=k.removeClass,k=a.get(g)||{},h=e(k,h,!0),l=e(k,l,!1),h||l)a.put(g,k),b.push(g),1===b.length&amp;&amp;c.$$postDigest(f);g=new d;g.complete();return g}}}]},Ye=["$provide",function(a){var b=this;this.$$registeredAnimations=
Object.create(null);this.register=function(d,c){if(d&amp;&amp;"."!==d.charAt(0))throw Rd("notcsel",d);var e=d+"-animation";b.$$registeredAnimations[d.substr(1)]=e;a.factory(e,c)};this.classNameFilter=function(a){if(1===arguments.length&amp;&amp;(this.$$classNameFilter=a instanceof RegExp?a:null)&amp;&amp;/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw Rd("nongcls","ng-animate");return this.$$classNameFilter};this.$get=["$$animateQueue",function(a){function b(a,c,d){if(d){var h;a:{for(h=0;h&lt;d.length;h++){var k=
d[h];if(1===k.nodeType){h=k;break a}}h=void 0}!h||h.parentNode||h.previousElementSibling||(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.end&amp;&amp;a.end()},enter:function(e,f,g,h){f=f&amp;&amp;G(f);g=g&amp;&amp;G(g);f=f||g.parent();b(e,f,g);return a.push(e,"enter",Ia(h))},move:function(e,f,g,h){f=f&amp;&amp;G(f);g=g&amp;&amp;G(g);f=f||g.parent();b(e,f,g);return a.push(e,"move",Ia(h))},leave:function(b,c){return a.push(b,"leave",Ia(c),function(){b.remove()})},addClass:function(b,
c,g){g=Ia(g);g.addClass=hb(g.addclass,c);return a.push(b,"addClass",g)},removeClass:function(b,c,g){g=Ia(g);g.removeClass=hb(g.removeClass,c);return a.push(b,"removeClass",g)},setClass:function(b,c,g,h){h=Ia(h);h.addClass=hb(h.addClass,c);h.removeClass=hb(h.removeClass,g);return a.push(b,"setClass",h)},animate:function(b,c,g,h,k){k=Ia(k);k.from=k.from?P(k.from,c):c;k.to=k.to?P(k.to,g):g;k.tempClasses=hb(k.tempClasses,h||"ng-inline-animate");return a.push(b,"animate",k)}}}]}],cf=function(){this.$get=
["$$rAF",function(a){function b(b){d.push(b);1&lt;d.length||a(function(){for(var a=0;a&lt;d.length;a++)d[a]();d=[]})}var d=[];return function(){var a=!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},bf=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(a,b,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){var d=c[0];d&amp;&amp;d.hidden?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===a.length)b(!0);
else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&amp;&amp;f;++d===a.length&amp;&amp;b(e)}var d=0,e=!0;q(a,function(a){a.done(c)})};f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:C,getPromise:function(){if(!this.promise){var b=this;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},"catch":function(a){return this.getPromise()["catch"](a)},
"finally":function(a){return this.getPromise()["finally"](a)},pause:function(){this.host.pause&amp;&amp;this.host.pause()},resume:function(){this.host.resume&amp;&amp;this.host.resume()},end:function(){this.host.end&amp;&amp;this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&amp;&amp;this.host.cancel();this._resolve(!1)},complete:function(a){var b=this;0===b._state&amp;&amp;(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&amp;&amp;(q(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=
0,this._state=2)}};return f}]},Ze=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&amp;&amp;(b.addClass(g.addClass),g.addClass=null);g.removeClass&amp;&amp;(b.removeClass(g.removeClass),g.removeClass=null);g.to&amp;&amp;(b.css(g.to),g.to=null);h||k.complete();h=!0});return k}var g=e||{};g.$$prepared||(g=oa(g));g.cleanupStyles&amp;&amp;(g.from=g.to=null);g.from&amp;&amp;(b.css(g.from),g.from=null);var h,k=new d;return{start:f,end:f}}}]},ea=O("$compile"),bc=new function(){};
Ec.$inject=["$provide","$$sanitizeUriProvider"];Gb.prototype.isFirstChange=function(){return this.previousValue===bc};var Xc=/^((?:x|data)[\:\-_])/i,bg=O("$controller"),cd=/^(\S+)(\s+as\s+([\w$]+))?$/,jf=function(){this.$get=["$document",function(a){return function(b){b?!b.nodeType&amp;&amp;b instanceof G&amp;&amp;(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},dd="application/json",ec={"Content-Type":dd+";charset=utf-8"},dg=/^\[|^\{(?!\{)/,eg={"[":/]$/,"{":/}$/},cg=/^\)\]\}',?\n/,Fg=O("$http"),hd=function(a){return function(){throw Fg("legacy",
a);}},Ka=da.$interpolateMinErr=O("$interpolate");Ka.throwNoconcat=function(a){throw Ka("noconcat",a);};Ka.interr=function(a,b){return Ka("interr",a,b.toString())};var Gg=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,gg={http:80,https:443,ftp:21},Hb=O("$location"),Hg={$$html5:!1,$$replace:!1,absUrl:Ib("$$absUrl"),url:function(a){if(y(a))return this.$$url;var b=Gg.exec(a);(b[1]||""===a)&amp;&amp;this.path(decodeURIComponent(b[1]));(b[2]||b[1]||""===a)&amp;&amp;this.search(b[3]||"");this.hash(b[5]||"");return this},protocol:Ib("$$protocol"),
host:Ib("$$host"),port:Ib("$$port"),path:md("$$path",function(a){a=null!==a?a.toString():"";return"/"==a.charAt(0)?a:"/"+a}),search:function(a,b){switch(arguments.length){case 0:return this.$$search;case 1:if(I(a)||Q(a))a=a.toString(),this.$$search=zc(a);else if(J(a))a=oa(a,{}),q(a,function(b,c){null==b&amp;&amp;delete a[c]}),this.$$search=a;else throw Hb("isrcharg");break;default:y(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();return this},hash:md("$$hash",function(a){return null!==
a?a.toString():""}),replace:function(){this.$$replace=!0;return this}};q([ld,hc,gc],function(a){a.prototype=Object.create(Hg);a.prototype.state=function(b){if(!arguments.length)return this.$$state;if(a!==gc||!this.$$html5)throw Hb("nostate");this.$$state=y(b)?null:b;return this}});var ba=O("$parse"),ig=Function.prototype.call,jg=Function.prototype.apply,kg=Function.prototype.bind,Pb=S();q("+ - * / % === !== == != &lt; &gt; &lt;= &gt;= &amp;&amp; || ! = |".split(" "),function(a){Pb[a]=!0});var Ig={n:"\n",f:"\f",r:"\r",
t:"\t",v:"\v","'":"'",'"':'"'},jc=function(a){this.options=a};jc.prototype={constructor:jc,lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index&lt;this.text.length;)if(a=this.text.charAt(this.index),'"'===a||"'"===a)this.readString(a);else if(this.isNumber(a)||"."===a&amp;&amp;this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(a,"(){}[].,;:?"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;
else{var b=a+this.peek(),d=b+this.peek(2),c=Pb[b],e=Pb[d];Pb[a]||c||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a&lt;this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return"0"&lt;=a&amp;&amp;"9"&gt;=a&amp;&amp;"string"===typeof a},isWhitespace:function(a){return" "===a||"\r"===a||
"\t"===a||"\n"===a||"\v"===a||"\u00a0"===a},isIdentifierStart:function(a){return this.options.isIdentifierStart?this.options.isIdentifierStart(a,this.codePointAt(a)):this.isValidIdentifierStart(a)},isValidIdentifierStart:function(a){return"a"&lt;=a&amp;&amp;"z"&gt;=a||"A"&lt;=a&amp;&amp;"Z"&gt;=a||"_"===a||"$"===a},isIdentifierContinue:function(a){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(a,this.codePointAt(a)):this.isValidIdentifierContinue(a)},isValidIdentifierContinue:function(a,b){return this.isValidIdentifierStart(a,
b)||this.isNumber(a)},codePointAt:function(a){return 1===a.length?a.charCodeAt(0):(a.charCodeAt(0)&lt;&lt;10)+a.charCodeAt(1)-56613888},peekMultichar:function(){var a=this.text.charAt(this.index),b=this.peek();if(!b)return a;var d=a.charCodeAt(0),c=b.charCodeAt(0);return 55296&lt;=d&amp;&amp;56319&gt;=d&amp;&amp;56320&lt;=c&amp;&amp;57343&gt;=c?a+b:a},isExpOperator:function(a){return"-"===a||"+"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=v(b)?"s "+b+"-"+this.index+" ["+this.text.substring(b,d)+"]":" "+d;throw ba("lexerr",
a,b,this.text);},readNumber:function(){for(var a="",b=this.index;this.index&lt;this.text.length;){var d=L(this.text.charAt(this.index));if("."==d||this.isNumber(d))a+=d;else{var c=this.peek();if("e"==d&amp;&amp;this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&amp;&amp;c&amp;&amp;this.isNumber(c)&amp;&amp;"e"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||c&amp;&amp;this.isNumber(c)||"e"!=a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},
readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index&lt;this.text.length;){var b=this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d="",c=a,e=!1;this.index&lt;this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)"u"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\da-f]{4}/i)||
this.throwError("Invalid unicode escape [\\u"+e+"]"),this.index+=4,d+=String.fromCharCode(parseInt(e,16))):d+=Ig[f]||f,e=!1;else if("\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError("Unterminated quote",b)}};var s=function(a,b){this.lexer=a;this.options=b};s.Program="Program";s.ExpressionStatement="ExpressionStatement";s.AssignmentExpression="AssignmentExpression";s.ConditionalExpression="ConditionalExpression";
s.LogicalExpression="LogicalExpression";s.BinaryExpression="BinaryExpression";s.UnaryExpression="UnaryExpression";s.CallExpression="CallExpression";s.MemberExpression="MemberExpression";s.Identifier="Identifier";s.Literal="Literal";s.ArrayExpression="ArrayExpression";s.Property="Property";s.ObjectExpression="ObjectExpression";s.ThisExpression="ThisExpression";s.LocalsExpression="LocalsExpression";s.NGValueParameter="NGValueParameter";s.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);
a=this.program();0!==this.tokens.length&amp;&amp;this.throwError("is an unexpected token",this.tokens[0]);return a},program:function(){for(var a=[];;)if(0&lt;this.tokens.length&amp;&amp;!this.peek("}",")",";","]")&amp;&amp;a.push(this.expressionStatement()),!this.expect(";"))return{type:s.Program,body:a}},expressionStatement:function(){return{type:s.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect("|");)a=this.filter(a);return a},expression:function(){return this.assignment()},
assignment:function(){var a=this.ternary();this.expect("=")&amp;&amp;(a={type:s.AssignmentExpression,left:a,right:this.assignment(),operator:"="});return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect("?")&amp;&amp;(b=this.expression(),this.consume(":"))?(d=this.expression(),{type:s.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect("||");)a={type:s.LogicalExpression,operator:"||",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=
this.equality();this.expect("&amp;&amp;");)a={type:s.LogicalExpression,operator:"&amp;&amp;",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect("==","!=","===","!==");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect("&lt;","&gt;","&lt;=","&gt;=");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),
b;b=this.expect("+","-");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect("*","/","%");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect("+","-","!"))?{type:s.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect("(")?(a=this.filterChain(),this.consume(")")):
this.expect("[")?a=this.arrayDeclaration():this.expect("{")?a=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?a=oa(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:s.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError("not a primary expression",this.peek());for(var b;b=this.expect("(","[",".");)"("===b.text?(a={type:s.CallExpression,
callee:a,arguments:this.parseArguments()},this.consume(")")):"["===b.text?(a={type:s.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume("]")):"."===b.text?a={type:s.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return a},filter:function(a){a=[a];for(var b={type:s.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(":");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(")"!==
this.peekToken().text){do a.push(this.expression());while(this.expect(","))}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError("is not a valid identifier",a);return{type:s.Identifier,name:a.text}},constant:function(){return{type:s.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if("]"!==this.peekToken().text){do{if(this.peek("]"))break;a.push(this.expression())}while(this.expect(","))}this.consume("]");return{type:s.ArrayExpression,elements:a}},
object:function(){var a=[],b;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;b={type:s.Property,kind:"init"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(":"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(":")?(this.consume(":"),b.value=this.expression()):b.value=b.key):this.peek("[")?(this.consume("["),b.key=this.expression(),this.consume("]"),b.computed=!0,this.consume(":"),b.value=this.expression()):this.throwError("invalid key",
this.peek());a.push(b)}while(this.expect(","))}this.consume("}");return{type:s.ObjectExpression,properties:a}},throwError:function(a,b){throw ba("syntax",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw ba("ueoe",this.text);var b=this.expect(a);b||this.throwError("is unexpected, expecting ["+a+"]",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw ba("ueoe",this.text);return this.tokens[0]},peek:function(a,b,
d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,e){if(this.tokens.length&gt;a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},selfReferential:{"this":{type:s.ThisExpression},$locals:{type:s.LocalsExpression}}};td.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.state={nextId:0,filters:{},expensiveChecks:b,fn:{vars:[],body:[],own:{}},
assign:{vars:[],body:[],own:{}},inputs:[]};Z(c,d.$filter);var e="",f;this.stage="assign";if(f=rd(c))this.state.computing="assign",e=this.nextId(),this.recurse(f,e),this.return_(e),e="fn.assign="+this.generateFunction("assign","s,v,l");f=pd(c.body);d.stage="inputs";q(f,function(a,b){var c="fn"+b;d.state[c]={vars:[],body:[],own:{}};d.state.computing=c;var e=d.nextId();d.recurse(a,e);d.return_(e);d.state.inputs.push(c);a.watchId=b});this.state.computing="fn";this.stage="main";this.recurse(c);e='"'+this.USE+
" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+e+this.watchFns()+"return fn;";e=(new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",e))(this.$filter,Ua,qa,nd,hg,Jb,lg,od,a);this.state=this.stage=void 0;e.literal=sd(c);e.constant=c.constant;return e},USE:"use",STRICT:"strict",watchFns:function(){var a=[],b=this.state.inputs,d=this;q(b,function(b){a.push("var "+
b+"="+d.generateFunction(b,"s"))});b.length&amp;&amp;a.push("fn.inputs=["+b.join(",")+"];");return a.join("")},generateFunction:function(a,b){return"function("+b+"){"+this.varsPrefix(a)+this.body(a)+"};"},filterPrefix:function(){var a=[],b=this;q(this.state.filters,function(d,c){a.push(d+"=$filter("+b.escape(c)+")")});return a.length?"var "+a.join(",")+";":""},varsPrefix:function(a){return this.state[a].vars.length?"var "+this.state[a].vars.join(",")+";":""},body:function(a){return this.state[a].body.join("")},
recurse:function(a,b,d,c,e,f){var g,h,k=this,l,m,n;c=c||C;if(!f&amp;&amp;v(a.watchId))b=b||this.nextId(),this.if_("i",this.lazyAssign(b,this.computedMember("i",a.watchId)),this.lazyRecurse(a,b,d,c,e,!0));else switch(a.type){case s.Program:q(a.body,function(b,c){k.recurse(b.expression,void 0,void 0,function(a){h=a});c!==a.body.length-1?k.current().body.push(h,";"):k.return_(h)});break;case s.Literal:m=this.escape(a.value);this.assign(b,m);c(m);break;case s.UnaryExpression:this.recurse(a.argument,void 0,void 0,
function(a){h=a});m=a.operator+"("+this.ifDefined(h,0)+")";this.assign(b,m);c(m);break;case s.BinaryExpression:this.recurse(a.left,void 0,void 0,function(a){g=a});this.recurse(a.right,void 0,void 0,function(a){h=a});m="+"===a.operator?this.plus(g,h):"-"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(h,0):"("+g+")"+a.operator+"("+h+")";this.assign(b,m);c(m);break;case s.LogicalExpression:b=b||this.nextId();k.recurse(a.left,b);k.if_("&amp;&amp;"===a.operator?b:k.not(b),k.lazyRecurse(a.right,b));
c(b);break;case s.ConditionalExpression:b=b||this.nextId();k.recurse(a.test,b);k.if_(b,k.lazyRecurse(a.alternate,b),k.lazyRecurse(a.consequent,b));c(b);break;case s.Identifier:b=b||this.nextId();d&amp;&amp;(d.context="inputs"===k.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",a.name)+"?l:s"),d.computed=!1,d.name=a.name);Ua(a.name);k.if_("inputs"===k.stage||k.not(k.getHasOwnProperty("l",a.name)),function(){k.if_("inputs"===k.stage||"s",function(){e&amp;&amp;1!==e&amp;&amp;k.if_(k.not(k.nonComputedMember("s",
a.name)),k.lazyAssign(k.nonComputedMember("s",a.name),"{}"));k.assign(b,k.nonComputedMember("s",a.name))})},b&amp;&amp;k.lazyAssign(b,k.nonComputedMember("l",a.name)));(k.state.expensiveChecks||Kb(a.name))&amp;&amp;k.addEnsureSafeObject(b);c(b);break;case s.MemberExpression:g=d&amp;&amp;(d.context=this.nextId())||this.nextId();b=b||this.nextId();k.recurse(a.object,g,void 0,function(){k.if_(k.notNull(g),function(){e&amp;&amp;1!==e&amp;&amp;k.addEnsureSafeAssignContext(g);if(a.computed)h=k.nextId(),k.recurse(a.property,h),k.getStringValue(h),
k.addEnsureSafeMemberName(h),e&amp;&amp;1!==e&amp;&amp;k.if_(k.not(k.computedMember(g,h)),k.lazyAssign(k.computedMember(g,h),"{}")),m=k.ensureSafeObject(k.computedMember(g,h)),k.assign(b,m),d&amp;&amp;(d.computed=!0,d.name=h);else{Ua(a.property.name);e&amp;&amp;1!==e&amp;&amp;k.if_(k.not(k.nonComputedMember(g,a.property.name)),k.lazyAssign(k.nonComputedMember(g,a.property.name),"{}"));m=k.nonComputedMember(g,a.property.name);if(k.state.expensiveChecks||Kb(a.property.name))m=k.ensureSafeObject(m);k.assign(b,m);d&amp;&amp;(d.computed=!1,d.name=a.property.name)}},
function(){k.assign(b,"undefined")});c(b)},!!e);break;case s.CallExpression:b=b||this.nextId();a.filter?(h=k.filter(a.callee.name),l=[],q(a.arguments,function(a){var b=k.nextId();k.recurse(a,b);l.push(b)}),m=h+"("+l.join(",")+")",k.assign(b,m),c(b)):(h=k.nextId(),g={},l=[],k.recurse(a.callee,h,g,function(){k.if_(k.notNull(h),function(){k.addEnsureSafeFunction(h);q(a.arguments,function(a){k.recurse(a,k.nextId(),void 0,function(a){l.push(k.ensureSafeObject(a))})});g.name?(k.state.expensiveChecks||k.addEnsureSafeObject(g.context),
m=k.member(g.context,g.name,g.computed)+"("+l.join(",")+")"):m=h+"("+l.join(",")+")";m=k.ensureSafeObject(m);k.assign(b,m)},function(){k.assign(b,"undefined")});c(b)}));break;case s.AssignmentExpression:h=this.nextId();g={};if(!qd(a.left))throw ba("lval");this.recurse(a.left,void 0,g,function(){k.if_(k.notNull(g.context),function(){k.recurse(a.right,h);k.addEnsureSafeObject(k.member(g.context,g.name,g.computed));k.addEnsureSafeAssignContext(g.context);m=k.member(g.context,g.name,g.computed)+a.operator+
h;k.assign(b,m);c(b||m)})},1);break;case s.ArrayExpression:l=[];q(a.elements,function(a){k.recurse(a,k.nextId(),void 0,function(a){l.push(a)})});m="["+l.join(",")+"]";this.assign(b,m);c(m);break;case s.ObjectExpression:l=[];n=!1;q(a.properties,function(a){a.computed&amp;&amp;(n=!0)});n?(b=b||this.nextId(),this.assign(b,"{}"),q(a.properties,function(a){a.computed?(g=k.nextId(),k.recurse(a.key,g)):g=a.key.type===s.Identifier?a.key.name:""+a.key.value;h=k.nextId();k.recurse(a.value,h);k.assign(k.member(b,g,
a.computed),h)})):(q(a.properties,function(b){k.recurse(b.value,a.constant?void 0:k.nextId(),void 0,function(a){l.push(k.escape(b.key.type===s.Identifier?b.key.name:""+b.key.value)+":"+a)})}),m="{"+l.join(",")+"}",this.assign(b,m));c(b||m);break;case s.ThisExpression:this.assign(b,"s");c("s");break;case s.LocalsExpression:this.assign(b,"l");c("l");break;case s.NGValueParameter:this.assign(b,"v"),c("v")}},getHasOwnProperty:function(a,b){var d=a+"."+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=
this.nextId(!1,a+"&amp;&amp;("+this.escape(b)+" in "+a+")"));return c[d]},assign:function(a,b){if(a)return this.current().body.push(a,"=",b,";"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return"ifDefined("+a+","+this.escape(b)+")"},plus:function(a,b){return"plus("+a+","+b+")"},return_:function(a){this.current().body.push("return ",a,";")},if_:function(a,b,d){if(!0===a)b();else{var c=this.current().body;
c.push("if(",a,"){");b();c.push("}");d&amp;&amp;(c.push("else{"),d(),c.push("}"))}},not:function(a){return"!("+a+")"},notNull:function(a){return a+"!=null"},nonComputedMember:function(a,b){var d=/[^$_a-zA-Z0-9]/g;return/[$_a-zA-Z][$_a-zA-Z0-9]*/.test(b)?a+"."+b:a+'["'+b.replace(d,this.stringEscapeFn)+'"]'},computedMember:function(a,b){return a+"["+b+"]"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,b)},addEnsureSafeObject:function(a){this.current().body.push(this.ensureSafeObject(a),
";")},addEnsureSafeMemberName:function(a){this.current().body.push(this.ensureSafeMemberName(a),";")},addEnsureSafeFunction:function(a){this.current().body.push(this.ensureSafeFunction(a),";")},addEnsureSafeAssignContext:function(a){this.current().body.push(this.ensureSafeAssignContext(a),";")},ensureSafeObject:function(a){return"ensureSafeObject("+a+",text)"},ensureSafeMemberName:function(a){return"ensureSafeMemberName("+a+",text)"},ensureSafeFunction:function(a){return"ensureSafeFunction("+a+",text)"},
getStringValue:function(a){this.assign(a,"getStringValue("+a+")")},ensureSafeAssignContext:function(a){return"ensureSafeAssignContext("+a+",text)"},lazyRecurse:function(a,b,d,c,e,f){var g=this;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(I(a))return"'"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+
"'";if(Q(a))return a.toString();if(!0===a)return"true";if(!1===a)return"false";if(null===a)return"null";if("undefined"===typeof a)return"undefined";throw ba("esc");},nextId:function(a,b){var d="v"+this.state.nextId++;a||this.current().vars.push(d+(b?"="+b:""));return d},current:function(){return this.state[this.state.computing]}};ud.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.expression=a;this.expensiveChecks=b;Z(c,d.$filter);var e,f;if(e=rd(c))f=this.recurse(e);e=pd(c.body);
var g;e&amp;&amp;(g=[],q(e,function(a,b){var c=d.recurse(a);a.input=c;g.push(c);a.watchId=b}));var h=[];q(c.body,function(a){h.push(d.recurse(a.expression))});e=0===c.body.length?C:1===c.body.length?h[0]:function(a,b){var c;q(h,function(d){c=d(a,b)});return c};f&amp;&amp;(e.assign=function(a,b,c){return f(a,c,b)});g&amp;&amp;(e.inputs=g);e.literal=sd(c);e.constant=c.constant;return e},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case s.Literal:return this.value(a.value,
b);case s.UnaryExpression:return e=this.recurse(a.argument),this["unary"+a.operator](e,b);case s.BinaryExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case s.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case s.ConditionalExpression:return this["ternary?:"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),b);case s.Identifier:return Ua(a.name,f.expression),f.identifier(a.name,
f.expensiveChecks||Kb(a.name),b,d,f.expression);case s.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(Ua(a.property.name,f.expression),e=a.property.name),a.computed&amp;&amp;(e=this.recurse(a.property)),a.computed?this.computedMember(c,e,b,d,f.expression):this.nonComputedMember(c,e,f.expensiveChecks,b,d,f.expression);case s.CallExpression:return g=[],q(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&amp;&amp;(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?
function(a,c,d,f){for(var n=[],p=0;p&lt;g.length;++p)n.push(g[p](a,c,d,f));a=e.apply(void 0,n,f);return b?{context:void 0,name:void 0,value:a}:a}:function(a,c,d,m){var n=e(a,c,d,m),p;if(null!=n.value){qa(n.context,f.expression);nd(n.value,f.expression);p=[];for(var q=0;q&lt;g.length;++q)p.push(qa(g[q](a,c,d,m),f.expression));p=qa(n.value.apply(n.context,p),f.expression)}return b?{value:p}:p};case s.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,g,m){var n=c(a,
d,g,m);a=e(a,d,g,m);qa(n.value,f.expression);Jb(n.context);n.context[n.name]=a;return b?{value:a}:a};case s.ArrayExpression:return g=[],q(a.elements,function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],p=0;p&lt;g.length;++p)f.push(g[p](a,c,d,e));return b?{value:f}:f};case s.ObjectExpression:return g=[],q(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):g.push({key:a.key.type===s.Identifier?a.key.name:""+a.key.value,computed:!1,value:f.recurse(a.value)})}),
function(a,c,d,e){for(var f={},p=0;p&lt;g.length;++p)g[p].computed?f[g[p].key(a,c,d,e)]=g[p].value(a,c,d,e):f[g[p].key]=g[p].value(a,c,d,e);return b?{value:f}:f};case s.ThisExpression:return function(a){return b?{value:a}:a};case s.LocalsExpression:return function(a,c){return b?{value:c}:c};case s.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},"unary+":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=v(d)?+d:0;return b?{value:d}:d}},"unary-":function(a,b){return function(d,c,e,
f){d=a(d,c,e,f);d=v(d)?-d:0;return b?{value:d}:d}},"unary!":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:d}},"binary+":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=od(h,c);return d?{value:h}:h}},"binary-":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=(v(h)?h:0)-(v(c)?c:0);return d?{value:h}:h}},"binary*":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},"binary/":function(a,b,d){return function(c,
e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},"binary%":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)%b(c,e,f,g);return d?{value:c}:c}},"binary===":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},"binary!==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},"binary==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},"binary!=":function(a,b,d){return function(c,
e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},"binary&lt;":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&lt;b(c,e,f,g);return d?{value:c}:c}},"binary&gt;":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&gt;b(c,e,f,g);return d?{value:c}:c}},"binary&lt;=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&lt;=b(c,e,f,g);return d?{value:c}:c}},"binary&gt;=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&gt;=b(c,e,f,g);return d?{value:c}:c}},"binary&amp;&amp;":function(a,b,d){return function(c,e,f,g){c=
a(c,e,f,g)&amp;&amp;b(c,e,f,g);return d?{value:c}:c}},"binary||":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||b(c,e,f,g);return d?{value:c}:c}},"ternary?:":function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h)?b(e,f,g,h):d(e,f,g,h);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d,c,e){return function(f,g,h,k){f=g&amp;&amp;a in g?g:f;c&amp;&amp;1!==c&amp;&amp;f&amp;&amp;!f[a]&amp;&amp;(f[a]={});g=f?f[a]:void 0;b&amp;&amp;qa(g,e);return d?{context:f,name:a,
value:g}:g}},computedMember:function(a,b,d,c,e){return function(f,g,h,k){var l=a(f,g,h,k),m,n;null!=l&amp;&amp;(m=b(f,g,h,k),m+="",Ua(m,e),c&amp;&amp;1!==c&amp;&amp;(Jb(l),l&amp;&amp;!l[m]&amp;&amp;(l[m]={})),n=l[m],qa(n,e));return d?{context:l,name:m,value:n}:n}},nonComputedMember:function(a,b,d,c,e,f){return function(g,h,k,l){g=a(g,h,k,l);e&amp;&amp;1!==e&amp;&amp;(Jb(g),g&amp;&amp;!g[b]&amp;&amp;(g[b]={}));h=null!=g?g[b]:void 0;(d||Kb(b))&amp;&amp;qa(h,f);return c?{context:g,name:b,value:h}:h}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};var kc=
function(a,b,d){this.lexer=a;this.$filter=b;this.options=d;this.ast=new s(a,d);this.astCompiler=d.csp?new ud(this.ast,b):new td(this.ast,b)};kc.prototype={constructor:kc,parse:function(a){return this.astCompiler.compile(a,this.options.expensiveChecks)}};var mg=Object.prototype.valueOf,ra=O("$sce"),ma={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},og=O("$compile"),X=F.document.createElement("a"),yd=pa(F.location.href);zd.$inject=["$document"];Lc.$inject=["$provide"];var Gd=22,
Fd=".",mc="0";Ad.$inject=["$locale"];Cd.$inject=["$locale"];var zg={yyyy:W("FullYear",4,0,!1,!0),yy:W("FullYear",2,0,!0,!0),y:W("FullYear",1,0,!1,!0),MMMM:kb("Month"),MMM:kb("Month",!0),MM:W("Month",2,1),M:W("Month",1,1),LLLL:kb("Month",!1,!0),dd:W("Date",2),d:W("Date",1),HH:W("Hours",2),H:W("Hours",1),hh:W("Hours",2,-12),h:W("Hours",1,-12),mm:W("Minutes",2),m:W("Minutes",1),ss:W("Seconds",2),s:W("Seconds",1),sss:W("Milliseconds",3),EEEE:kb("Day"),EEE:kb("Day",!0),a:function(a,b){return 12&gt;a.getHours()?
b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0&lt;=a?"+":"")+(Lb(Math[0&lt;a?"floor":"ceil"](a/60),2)+Lb(Math.abs(a%60),2))},ww:Id(2),w:Id(1),G:nc,GG:nc,GGG:nc,GGGG:function(a,b){return 0&gt;=a.getFullYear()?b.ERANAMES[0]:b.ERANAMES[1]}},yg=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,xg=/^\-?\d+$/;Bd.$inject=["$locale"];var sg=ca(L),tg=ca(ub);Dd.$inject=["$parse"];var oe=ca({restrict:"E",compile:function(a,b){if(!b.href&amp;&amp;!b.xlinkHref)return function(a,
b){if("a"===b[0].nodeName.toLowerCase()){var e="[object SVGAnimatedString]"===ja.call(b.prop("href"))?"xlink:href":"href";b.on("click",function(a){b.attr(e)||a.preventDefault()})}}}}),vb={};q(Eb,function(a,b){function d(a,d,e){a.$watch(e[c],function(a){e.$set(b,!!a)})}if("multiple"!=a){var c=wa("ng-"+b),e=d;"checked"===a&amp;&amp;(e=function(a,b,e){e.ngModel!==e[c]&amp;&amp;d(a,b,e)});vb[c]=function(){return{restrict:"A",priority:100,link:e}}}});q(bd,function(a,b){vb[b]=function(){return{priority:100,link:function(a,
c,e){if("ngPattern"===b&amp;&amp;"/"==e.ngPattern.charAt(0)&amp;&amp;(c=e.ngPattern.match(Bg))){e.$set("ngPattern",new RegExp(c[1],c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});q(["src","srcset","href"],function(a){var b=wa("ng-"+a);vb[b]=function(){return{priority:99,link:function(d,c,e){var f=a,g=a;"href"===a&amp;&amp;"[object SVGAnimatedString]"===ja.call(c.prop("href"))&amp;&amp;(g="xlinkHref",e.$attr[g]="xlink:href",f=null);e.$observe(b,function(b){b?(e.$set(g,b),Ba&amp;&amp;f&amp;&amp;c.prop(f,e[g])):"href"===a&amp;&amp;e.$set(g,null)})}}}});
var Mb={$addControl:C,$$renameControl:function(a,b){a.$name=b},$removeControl:C,$setValidity:C,$setDirty:C,$setPristine:C,$setSubmitted:C};Jd.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var Sd=function(a){return["$timeout","$parse",function(b,d){function c(a){return""===a?d('this[""]').assign:d(a).assign||C}return{name:"form",restrict:a?"EAC":"E",require:["form","^^?form"],controller:Jd,compile:function(d,f){d.addClass(Va).addClass(ob);var g=f.name?"name":a&amp;&amp;f.ngForm?"ngForm":
!1;return{pre:function(a,d,e,f){var n=f[0];if(!("action"in e)){var p=function(b){a.$apply(function(){n.$commitViewValue();n.$setSubmitted()});b.preventDefault()};d[0].addEventListener("submit",p,!1);d.on("$destroy",function(){b(function(){d[0].removeEventListener("submit",p,!1)},0,!1)})}(f[1]||n.$$parentForm).$addControl(n);var q=g?c(n.$name):C;g&amp;&amp;(q(a,n),e.$observe(g,function(b){n.$name!==b&amp;&amp;(q(a,void 0),n.$$parentForm.$$renameControl(n,b),q=c(n.$name),q(a,n))}));d.on("$destroy",function(){n.$$parentForm.$removeControl(n);
q(a,void 0);P(n,Mb)})}}}}}]},pe=Sd(),Ce=Sd(!0),Ag=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,Jg=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Kg=/^[a-z0-9!#$%&amp;'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,Lg=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Td=/^(\d{4,})-(\d{2})-(\d{2})$/,Ud=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
qc=/^(\d{4,})-W(\d\d)$/,Vd=/^(\d{4,})-(\d\d)$/,Wd=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Ld=S();q(["date","datetime-local","month","time","week"],function(a){Ld[a]=!0});var Xd={text:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);oc(c)},date:mb("date",Td,Ob(Td,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":mb("datetimelocal",Ud,Ob(Ud,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:mb("time",Wd,Ob(Wd,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:mb("week",qc,function(a,b){if(ha(a))return a;
if(I(a)){qc.lastIndex=0;var d=qc.exec(a);if(d){var c=+d[1],e=+d[2],f=d=0,g=0,h=0,k=Hd(c),e=7*(e-1);b&amp;&amp;(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),h=b.getMilliseconds());return new Date(c,0,k.getDate()+e,d,f,g,h)}}return NaN},"yyyy-Www"),month:mb("month",Vd,Ob(Vd,["yyyy","MM"]),"yyyy-MM"),number:function(a,b,d,c,e,f){Md(a,b,d,c);lb(a,b,d,c,e,f);c.$$parserName="number";c.$parsers.push(function(a){if(c.$isEmpty(a))return null;if(Lg.test(a))return parseFloat(a)});c.$formatters.push(function(a){if(!c.$isEmpty(a)){if(!Q(a))throw nb("numfmt",
a);a=a.toString()}return a});if(v(d.min)||d.ngMin){var g;c.$validators.min=function(a){return c.$isEmpty(a)||y(g)||a&gt;=g};d.$observe("min",function(a){v(a)&amp;&amp;!Q(a)&amp;&amp;(a=parseFloat(a,10));g=Q(a)&amp;&amp;!isNaN(a)?a:void 0;c.$validate()})}if(v(d.max)||d.ngMax){var h;c.$validators.max=function(a){return c.$isEmpty(a)||y(h)||a&lt;=h};d.$observe("max",function(a){v(a)&amp;&amp;!Q(a)&amp;&amp;(a=parseFloat(a,10));h=Q(a)&amp;&amp;!isNaN(a)?a:void 0;c.$validate()})}},url:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);oc(c);c.$$parserName="url";c.$validators.url=
function(a,b){var d=a||b;return c.$isEmpty(d)||Jg.test(d)}},email:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);oc(c);c.$$parserName="email";c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||Kg.test(d)}},radio:function(a,b,d,c){y(d.name)&amp;&amp;b.attr("name",++pb);b.on("click",function(a){b[0].checked&amp;&amp;c.$setViewValue(d.value,a&amp;&amp;a.type)});c.$render=function(){b[0].checked=d.value==c.$viewValue};d.$observe("value",c.$render)},checkbox:function(a,b,d,c,e,f,g,h){var k=Nd(h,a,"ngTrueValue",d.ngTrueValue,
!0),l=Nd(h,a,"ngFalseValue",d.ngFalseValue,!1);b.on("click",function(a){c.$setViewValue(b[0].checked,a&amp;&amp;a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=function(a){return!1===a};c.$formatters.push(function(a){return na(a,k)});c.$parsers.push(function(a){return a?k:l})},hidden:C,button:C,submit:C,reset:C,file:C},Fc=["$browser","$sniffer","$filter","$parse",function(a,b,d,c){return{restrict:"E",require:["?ngModel"],link:{pre:function(e,f,g,h){h[0]&amp;&amp;(Xd[L(g.type)]||Xd.text)(e,f,
g,h[0],b,a,d,c)}}}}],Mg=/^(true|false|\d+)$/,Ue=function(){return{restrict:"A",priority:100,compile:function(a,b){return Mg.test(b.ngValue)?function(a,b,e){e.$set("value",a.$eval(e.ngValue))}:function(a,b,e){a.$watch(e.ngValue,function(a){e.$set("value",a)})}}}},ue=["$compile",function(a){return{restrict:"AC",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=y(a)?"":a})}}}}],we=["$interpolate","$compile",
function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe("ngBindTemplate",function(a){d.textContent=y(a)?"":a})}}}}],ve=["$sce","$parse","$compile",function(a,b,d){return{restrict:"A",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){var d=
f(b);c.html(a.getTrustedHtml(d)||"")})}}}}],Te=ca({restrict:"A",require:"ngModel",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),xe=pc("",!0),ze=pc("Odd",0),ye=pc("Even",1),Ae=Ma({compile:function(a,b){b.$set("ngCloak",void 0);a.removeClass("ng-cloak")}}),Be=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],Kc={},Ng={blur:!0,focus:!0};q("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),
function(a){var b=wa("ng-"+a);Kc[b]=["$parse","$rootScope",function(d,c){return{restrict:"A",compile:function(e,f){var g=d(f[b],null,!0);return function(b,d){d.on(a,function(d){var e=function(){g(b,{$event:d})};Ng[a]&amp;&amp;c.$$phase?b.$evalAsync(e):b.$apply(e)})}}}}]});var Ee=["$animate","$compile",function(a,b){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(d,c,e,f,g){var h,k,l;d.$watch(e.ngIf,function(d){d?k||g(function(d,f){k=f;d[d.length++]=
b.$$createComment("end ngIf",e.ngIf);h={clone:d};a.enter(d,c.parent(),c)}):(l&amp;&amp;(l.remove(),l=null),k&amp;&amp;(k.$destroy(),k=null),h&amp;&amp;(l=tb(h.clone),a.leave(l).then(function(){l=null}),h=null))})}}}],Fe=["$templateRequest","$anchorScroll","$animate",function(a,b,d){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:da.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||"",h=e.autoscroll;return function(c,e,m,n,p){var q=0,s,z,r,D=function(){z&amp;&amp;(z.remove(),z=null);s&amp;&amp;
(s.$destroy(),s=null);r&amp;&amp;(d.leave(r).then(function(){z=null}),z=r,r=null)};c.$watch(f,function(f){var m=function(){!v(h)||h&amp;&amp;!c.$eval(h)||b()},w=++q;f?(a(f,!0).then(function(a){if(!c.$$destroyed&amp;&amp;w===q){var b=c.$new();n.template=a;a=p(b,function(a){D();d.enter(a,null,e).then(m)});s=b;r=a;s.$emit("$includeContentLoaded",f);c.$eval(g)}},function(){c.$$destroyed||w!==q||(D(),c.$emit("$includeContentError",f))}),c.$emit("$includeContentRequested",f)):(D(),n.template=null)})}}}}],We=["$compile",function(a){return{restrict:"ECA",
priority:-400,require:"ngInclude",link:function(b,d,c,e){ja.call(d[0]).match(/SVG/)?(d.empty(),a(Nc(e.template,F.document).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],Ge=Ma({priority:450,compile:function(){return{pre:function(a,b,d){a.$eval(d.ngInit)}}}}),Se=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(a,b,d,c){var e=b.attr(d.$attr.ngList)||", ",f="false"!==d.ngTrim,g=f?V(e):e;c.$parsers.push(function(a){if(!y(a)){var b=
[];a&amp;&amp;q(a.split(g),function(a){a&amp;&amp;b.push(f?V(a):a)});return b}});c.$formatters.push(function(a){if(K(a))return a.join(e)});c.$isEmpty=function(a){return!a||!a.length}}}},ob="ng-valid",Od="ng-invalid",Va="ng-pristine",Nb="ng-dirty",Qd="ng-pending",nb=O("ngModel"),Og=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(a,b,d,c,e,f,g,h,k,l){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=void 0;this.$validators={};
this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=void 0;this.$name=l(d.name||"",!1)(a);this.$$parentForm=Mb;var m=e(d.ngModel),n=m.assign,p=m,s=n,F=null,z,r=this;this.$$setOptions=function(a){if((r.$options=a)&amp;&amp;a.getterSetter){var b=e(d.ngModel+"()"),f=e(d.ngModel+"($$$p)");p=function(a){var c=m(a);E(c)&amp;&amp;(c=b(a));
return c};s=function(a,b){E(m(a))?f(a,{$$$p:b}):n(a,b)}}else if(!m.assign)throw nb("nonassign",d.ngModel,ua(c));};this.$render=C;this.$isEmpty=function(a){return y(a)||""===a||null===a||a!==a};this.$$updateEmptyClasses=function(a){r.$isEmpty(a)?(f.removeClass(c,"ng-not-empty"),f.addClass(c,"ng-empty")):(f.removeClass(c,"ng-empty"),f.addClass(c,"ng-not-empty"))};var D=0;Kd({ctrl:this,$element:c,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]},$animate:f});this.$setPristine=function(){r.$dirty=
!1;r.$pristine=!0;f.removeClass(c,Nb);f.addClass(c,Va)};this.$setDirty=function(){r.$dirty=!0;r.$pristine=!1;f.removeClass(c,Va);f.addClass(c,Nb);r.$$parentForm.$setDirty()};this.$setUntouched=function(){r.$touched=!1;r.$untouched=!0;f.setClass(c,"ng-untouched","ng-touched")};this.$setTouched=function(){r.$touched=!0;r.$untouched=!1;f.setClass(c,"ng-touched","ng-untouched")};this.$rollbackViewValue=function(){g.cancel(F);r.$viewValue=r.$$lastCommittedViewValue;r.$render()};this.$validate=function(){if(!Q(r.$modelValue)||
!isNaN(r.$modelValue)){var a=r.$$rawModelValue,b=r.$valid,c=r.$modelValue,d=r.$options&amp;&amp;r.$options.allowInvalid;r.$$runValidators(a,r.$$lastCommittedViewValue,function(e){d||b===e||(r.$modelValue=e?a:void 0,r.$modelValue!==c&amp;&amp;r.$$writeModelToScope())})}};this.$$runValidators=function(a,b,c){function d(){var c=!0;q(r.$validators,function(d,e){var g=d(a,b);c=c&amp;&amp;g;f(e,g)});return c?!0:(q(r.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;q(r.$asyncValidators,function(e,g){var h=
e(a,b);if(!h||!E(h.then))throw nb("nopromise",h);f(g,void 0);c.push(h.then(function(){f(g,!0)},function(){d=!1;f(g,!1)}))});c.length?k.all(c).then(function(){g(d)},C):g(!0)}function f(a,b){h===D&amp;&amp;r.$setValidity(a,b)}function g(a){h===D&amp;&amp;c(a)}D++;var h=D;(function(){var a=r.$$parserName||"parse";if(y(z))f(a,null);else return z||(q(r.$validators,function(a,b){f(b,null)}),q(r.$asyncValidators,function(a,b){f(b,null)})),f(a,z),z;return!0})()?d()?e():g(!1):g(!1)};this.$commitViewValue=function(){var a=
r.$viewValue;g.cancel(F);if(r.$$lastCommittedViewValue!==a||""===a&amp;&amp;r.$$hasNativeValidators)r.$$updateEmptyClasses(a),r.$$lastCommittedViewValue=a,r.$pristine&amp;&amp;this.$setDirty(),this.$$parseAndValidate()};this.$$parseAndValidate=function(){var b=r.$$lastCommittedViewValue;if(z=y(b)?void 0:!0)for(var c=0;c&lt;r.$parsers.length;c++)if(b=r.$parsers[c](b),y(b)){z=!1;break}Q(r.$modelValue)&amp;&amp;isNaN(r.$modelValue)&amp;&amp;(r.$modelValue=p(a));var d=r.$modelValue,e=r.$options&amp;&amp;r.$options.allowInvalid;r.$$rawModelValue=
b;e&amp;&amp;(r.$modelValue=b,r.$modelValue!==d&amp;&amp;r.$$writeModelToScope());r.$$runValidators(b,r.$$lastCommittedViewValue,function(a){e||(r.$modelValue=a?b:void 0,r.$modelValue!==d&amp;&amp;r.$$writeModelToScope())})};this.$$writeModelToScope=function(){s(a,r.$modelValue);q(r.$viewChangeListeners,function(a){try{a()}catch(c){b(c)}})};this.$setViewValue=function(a,b){r.$viewValue=a;r.$options&amp;&amp;!r.$options.updateOnDefault||r.$$debounceViewValueCommit(b)};this.$$debounceViewValueCommit=function(b){var c=0,d=r.$options;
d&amp;&amp;v(d.debounce)&amp;&amp;(d=d.debounce,Q(d)?c=d:Q(d[b])?c=d[b]:Q(d["default"])&amp;&amp;(c=d["default"]));g.cancel(F);c?F=g(function(){r.$commitViewValue()},c):h.$$phase?r.$commitViewValue():a.$apply(function(){r.$commitViewValue()})};a.$watch(function(){var b=p(a);if(b!==r.$modelValue&amp;&amp;(r.$modelValue===r.$modelValue||b===b)){r.$modelValue=r.$$rawModelValue=b;z=void 0;for(var c=r.$formatters,d=c.length,e=b;d--;)e=c[d](e);r.$viewValue!==e&amp;&amp;(r.$$updateEmptyClasses(e),r.$viewValue=r.$$lastCommittedViewValue=e,r.$render(),
r.$$runValidators(b,e,C))}return b})}],Re=["$rootScope",function(a){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Og,priority:1,compile:function(b){b.addClass(Va).addClass("ng-untouched").addClass(ob);return{pre:function(a,b,e,f){var g=f[0];b=f[1]||g.$$parentForm;g.$$setOptions(f[2]&amp;&amp;f[2].$options);b.$addControl(g);e.$observe("name",function(a){g.$name!==a&amp;&amp;g.$$parentForm.$$renameControl(g,a)});a.$on("$destroy",function(){g.$$parentForm.$removeControl(g)})},post:function(b,
c,e,f){var g=f[0];if(g.$options&amp;&amp;g.$options.updateOn)c.on(g.$options.updateOn,function(a){g.$$debounceViewValueCommit(a&amp;&amp;a.type)});c.on("blur",function(){g.$touched||(a.$$phase?b.$evalAsync(g.$setTouched):b.$apply(g.$setTouched))})}}}}}],Pg=/(\s+|^)default(\s+|$)/,Ve=function(){return{restrict:"A",controller:["$scope","$attrs",function(a,b){var d=this;this.$options=oa(a.$eval(b.ngModelOptions));v(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=V(this.$options.updateOn.replace(Pg,
function(){d.$options.updateOnDefault=!0;return" "}))):this.$options.updateOnDefault=!0}]}},He=Ma({terminal:!0,priority:1E3}),Qg=O("ngOptions"),Rg=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,Pe=["$compile","$document","$parse",function(a,b,d){function c(a,b,c){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=
b;this.label=c;this.group=d;this.disabled=f}function f(a){var b;if(!q&amp;&amp;xa(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&amp;&amp;"$"!==c.charAt(0)&amp;&amp;b.push(c)}return b}var n=a.match(Rg);if(!n)throw Qg("iexp",a,ua(b));var p=n[5]||n[7],q=n[6];a=/ as /.test(n[0])&amp;&amp;n[1];var s=n[9];b=d(n[2]?n[1]:p);var z=a&amp;&amp;d(a)||b,r=s&amp;&amp;d(s),v=s?function(a,b){return r(c,b)}:function(a){return Ga(a)},u=function(a,b){return v(a,H(a,b))},t=d(n[2]||n[1]),w=d(n[3]||""),y=d(n[4]||""),B=d(n[8]),A={},H=q?function(a,b){A[q]=b;A[p]=
a;return A}:function(a){A[p]=a;return A};return{trackBy:s,getTrackByValue:u,getWatchables:d(B,function(a){var b=[];a=a||[];for(var d=f(a),e=d.length,g=0;g&lt;e;g++){var h=a===d?g:d[g],l=a[h],h=H(l,h),l=v(l,h);b.push(l);if(n[2]||n[1])l=t(c,h),b.push(l);n[4]&amp;&amp;(h=y(c,h),b.push(h))}return b}),getOptions:function(){for(var a=[],b={},d=B(c)||[],g=f(d),h=g.length,n=0;n&lt;h;n++){var p=d===g?n:g[n],q=H(d[p],p),r=z(c,q),p=v(r,q),x=t(c,q),A=w(c,q),q=y(c,q),r=new e(p,r,x,A,q);a.push(r);b[p]=r}return{items:a,selectValueMap:b,
getOptionFromViewValue:function(a){return b[u(a)]},getViewValueFromOption:function(a){return s?da.copy(a.viewValue):a.viewValue}}}}}var e=F.document.createElement("option"),f=F.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(a,b,c,d){d[0].registerOption=C},post:function(d,h,k,l){function m(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&amp;&amp;(b.label=a.label,b.textContent=a.label);a.value!==b.value&amp;&amp;(b.value=a.selectValue)}function n(){var a=
w&amp;&amp;p.readValue();if(w)for(var b=w.items.length-1;0&lt;=b;b--){var c=w.items[b];c.group?Db(c.element.parentNode):Db(c.element)}w=C.getOptions();var d={};u&amp;&amp;h.prepend(z);w.items.forEach(function(a){var b;if(v(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),B.appendChild(b),b.label=a.group,d[a.group]=b);var c=e.cloneNode(!1)}else b=B,c=e.cloneNode(!1);b.appendChild(c);m(a,c)});h[0].appendChild(B);s.$render();s.$isEmpty(a)||(b=p.readValue(),(C.trackBy||y?na(a,b):a===b)||(s.$setViewValue(b),s.$render()))}var p=
l[0],s=l[1],y=k.multiple,z;l=0;for(var r=h.children(),D=r.length;l&lt;D;l++)if(""===r[l].value){z=r.eq(l);break}var u=!!z,t=G(e.cloneNode(!1));t.val("?");var w,C=c(k.ngOptions,h,d),B=b[0].createDocumentFragment();y?(s.$isEmpty=function(a){return!a||0===a.length},p.writeValue=function(a){w.items.forEach(function(a){a.element.selected=!1});a&amp;&amp;a.forEach(function(a){if(a=w.getOptionFromViewValue(a))a.element.selected=!0})},p.readValue=function(){var a=h.val()||[],b=[];q(a,function(a){(a=w.selectValueMap[a])&amp;&amp;
!a.disabled&amp;&amp;b.push(w.getViewValueFromOption(a))});return b},C.trackBy&amp;&amp;d.$watchCollection(function(){if(K(s.$viewValue))return s.$viewValue.map(function(a){return C.getTrackByValue(a)})},function(){s.$render()})):(p.writeValue=function(a){var b=w.getOptionFromViewValue(a);b?(h[0].value!==b.selectValue&amp;&amp;(t.remove(),u||z.remove(),h[0].value=b.selectValue,b.element.selected=!0),b.element.setAttribute("selected","selected")):null===a||u?(t.remove(),u||h.prepend(z),h.val(""),z.prop("selected",!0),z.attr("selected",
!0)):(u||z.remove(),h.prepend(t),h.val("?"),t.prop("selected",!0),t.attr("selected",!0))},p.readValue=function(){var a=w.selectValueMap[h.val()];return a&amp;&amp;!a.disabled?(u||z.remove(),t.remove(),w.getViewValueFromOption(a)):null},C.trackBy&amp;&amp;d.$watch(function(){return C.getTrackByValue(s.$viewValue)},function(){s.$render()}));u?(z.remove(),a(z)(d),z.removeClass("ng-scope")):z=G(e.cloneNode(!1));h.empty();n();d.$watchCollection(C.getWatchables,n)}}}}],Ie=["$locale","$interpolate","$log",function(a,b,
d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,h){function k(a){g.text(a||"")}var l=h.count,m=h.$attr.when&amp;&amp;g.attr(h.$attr.when),n=h.offset||0,p=f.$eval(m)||{},s={},v=b.startSymbol(),z=b.endSymbol(),r=v+l+"-"+n+z,D=da.noop,u;q(h,function(a,b){var c=e.exec(b);c&amp;&amp;(c=(c[1]?"-":"")+L(c[2]),p[c]=g.attr(h.$attr[b]))});q(p,function(a,d){s[d]=b(a.replace(c,r))});f.$watch(l,function(b){var c=parseFloat(b),e=isNaN(c);e||c in p||(c=a.pluralCat(c-n));c===u||e&amp;&amp;Q(u)&amp;&amp;isNaN(u)||(D(),e=s[c],y(e)?
(null!=b&amp;&amp;d.debug("ngPluralize: no rule defined for '"+c+"' in "+m),D=C,k()):D=f.$watch(e,k),u=c)})}}}],Je=["$parse","$animate","$compile",function(a,b,d){var c=O("ngRepeat"),e=function(a,b,c,d,e,m,n){a[c]=d;e&amp;&amp;(a[e]=m);a.$index=b;a.$first=0===b;a.$last=b===n-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(b&amp;1))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1E3,terminal:!0,$$tlb:!0,compile:function(f,g){var h=g.ngRepeat,k=d.$$createComment("end ngRepeat",h),l=h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
if(!l)throw c("iexp",h);var m=l[1],n=l[2],p=l[3],s=l[4],l=m.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!l)throw c("iidexp",m);var v=l[3]||l[1],z=l[2];if(p&amp;&amp;(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(p)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(p)))throw c("badident",p);var r,D,u,t,w={$id:Ga};s?r=a(s):(u=function(a,b){return Ga(b)},t=function(a){return a});return function(a,d,f,g,l){r&amp;&amp;(D=function(b,c,d){z&amp;&amp;(w[z]=b);w[v]=c;w.$index=
d;return r(a,w)});var m=S();a.$watchCollection(n,function(f){var g,n,r=d[0],s,x=S(),w,y,C,A,F,E,G;p&amp;&amp;(a[p]=f);if(xa(f))F=f,n=D||u;else for(G in n=D||t,F=[],f)sa.call(f,G)&amp;&amp;"$"!==G.charAt(0)&amp;&amp;F.push(G);w=F.length;G=Array(w);for(g=0;g&lt;w;g++)if(y=f===F?g:F[g],C=f[y],A=n(y,C,g),m[A])E=m[A],delete m[A],x[A]=E,G[g]=E;else{if(x[A])throw q(G,function(a){a&amp;&amp;a.scope&amp;&amp;(m[a.id]=a)}),c("dupes",h,A,C);G[g]={id:A,scope:void 0,clone:void 0};x[A]=!0}for(s in m){E=m[s];A=tb(E.clone);b.leave(A);if(A[0].parentNode)for(g=
0,n=A.length;g&lt;n;g++)A[g].$$NG_REMOVED=!0;E.scope.$destroy()}for(g=0;g&lt;w;g++)if(y=f===F?g:F[g],C=f[y],E=G[g],E.scope){s=r;do s=s.nextSibling;while(s&amp;&amp;s.$$NG_REMOVED);E.clone[0]!=s&amp;&amp;b.move(tb(E.clone),null,r);r=E.clone[E.clone.length-1];e(E.scope,g,v,C,z,y,w)}else l(function(a,c){E.scope=c;var d=k.cloneNode(!1);a[a.length++]=d;b.enter(a,null,r);r=d;E.clone=a;x[E.id]=E;e(E.scope,g,v,C,z,y,w)});m=x})}}}}],Ke=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,
function(b){a[b?"removeClass":"addClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],De=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngHide,function(b){a[b?"addClass":"removeClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Le=Ma(function(a,b,d){a.$watch(d.ngStyle,function(a,d){d&amp;&amp;a!==d&amp;&amp;q(d,function(a,c){b.css(c,"")});a&amp;&amp;b.css(a)},!0)}),Me=["$animate","$compile",function(a,b){return{require:"ngSwitch",controller:["$scope",function(){this.cases=
{}}],link:function(d,c,e,f){var g=[],h=[],k=[],l=[],m=function(a,b){return function(){a.splice(b,1)}};d.$watch(e.ngSwitch||e.on,function(c){var d,e;d=0;for(e=k.length;d&lt;e;++d)a.cancel(k[d]);d=k.length=0;for(e=l.length;d&lt;e;++d){var s=tb(h[d].clone);l[d].$destroy();(k[d]=a.leave(s)).then(m(k,d))}h.length=0;l.length=0;(g=f.cases["!"+c]||f.cases["?"])&amp;&amp;q(g,function(c){c.transclude(function(d,e){l.push(e);var f=c.element;d[d.length++]=b.$$createComment("end ngSwitchWhen");h.push({clone:d});a.enter(d,f.parent(),
f)})})})}}}],Ne=Ma({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["!"+d.ngSwitchWhen]=c.cases["!"+d.ngSwitchWhen]||[];c.cases["!"+d.ngSwitchWhen].push({transclude:e,element:b})}}),Oe=Ma({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["?"]=c.cases["?"]||[];c.cases["?"].push({transclude:e,element:b})}}),Sg=O("ngTransclude"),Qe=Ma({restrict:"EAC",link:function(a,b,d,c,e){d.ngTransclude===
d.$attr.ngTransclude&amp;&amp;(d.ngTransclude="");if(!e)throw Sg("orphan",ua(b));e(function(a){a.length&amp;&amp;(b.empty(),b.append(a))},null,d.ngTransclude||d.ngTranscludeSlot)}}),qe=["$templateCache",function(a){return{restrict:"E",terminal:!0,compile:function(b,d){"text/ng-template"==d.type&amp;&amp;a.put(d.id,b[0].text)}}}],Tg={$setViewValue:C,$render:C},Ug=["$element","$scope",function(a,b){var d=this,c=new Sa;d.ngModelCtrl=Tg;d.unknownOption=G(F.document.createElement("option"));d.renderUnknownOption=function(b){b=
"? "+Ga(b)+" ?";d.unknownOption.val(b);a.prepend(d.unknownOption);a.val(b)};b.$on("$destroy",function(){d.renderUnknownOption=C});d.removeUnknownOption=function(){d.unknownOption.parent()&amp;&amp;d.unknownOption.remove()};d.readValue=function(){d.removeUnknownOption();return a.val()};d.writeValue=function(b){d.hasOption(b)?(d.removeUnknownOption(),a.val(b),""===b&amp;&amp;d.emptyOption.prop("selected",!0)):null==b&amp;&amp;d.emptyOption?(d.removeUnknownOption(),a.val("")):d.renderUnknownOption(b)};d.addOption=function(a,
b){if(8!==b[0].nodeType){Ra(a,'"option value"');""===a&amp;&amp;(d.emptyOption=b);var g=c.get(a)||0;c.put(a,g+1);d.ngModelCtrl.$render();b[0].hasAttribute("selected")&amp;&amp;(b[0].selected=!0)}};d.removeOption=function(a){var b=c.get(a);b&amp;&amp;(1===b?(c.remove(a),""===a&amp;&amp;(d.emptyOption=void 0)):c.put(a,b-1))};d.hasOption=function(a){return!!c.get(a)};d.registerOption=function(a,b,c,h,k){if(h){var l;c.$observe("value",function(a){v(l)&amp;&amp;d.removeOption(l);l=a;d.addOption(a,b)})}else k?a.$watch(k,function(a,e){c.$set("value",
a);e!==a&amp;&amp;d.removeOption(e);d.addOption(a,b)}):d.addOption(c.value,b);b.on("$destroy",function(){d.removeOption(c.value);d.ngModelCtrl.$render()})}}],re=function(){return{restrict:"E",require:["select","?ngModel"],controller:Ug,priority:1,link:{pre:function(a,b,d,c){var e=c[1];if(e){var f=c[0];f.ngModelCtrl=e;b.on("change",function(){a.$apply(function(){e.$setViewValue(f.readValue())})});if(d.multiple){f.readValue=function(){var a=[];q(b.find("option"),function(b){b.selected&amp;&amp;a.push(b.value)});return a};
f.writeValue=function(a){var c=new Sa(a);q(b.find("option"),function(a){a.selected=v(c.get(a.value))})};var g,h=NaN;a.$watch(function(){h!==e.$viewValue||na(g,e.$viewValue)||(g=fa(e.$viewValue),e.$render());h=e.$viewValue});e.$isEmpty=function(a){return!a||0===a.length}}}},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},te=["$interpolate",function(a){return{restrict:"E",priority:100,compile:function(b,d){if(v(d.value))var c=a(d.value,!0);else{var e=
a(b.text(),!0);e||d.$set("value",b.text())}return function(a,b,d){var k=b.parent();(k=k.data("$selectController")||k.parent().data("$selectController"))&amp;&amp;k.registerOption(a,b,d,c,e)}}}}],se=ca({restrict:"E",terminal:!1}),Hc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){c&amp;&amp;(d.required=!0,c.$validators.required=function(a,b){return!d.required||!c.$isEmpty(b)},d.$observe("required",function(){c.$validate()}))}}},Gc=function(){return{restrict:"A",require:"?ngModel",link:function(a,
b,d,c){if(c){var e,f=d.ngPattern||d.pattern;d.$observe("pattern",function(a){I(a)&amp;&amp;0&lt;a.length&amp;&amp;(a=new RegExp("^"+a+"$"));if(a&amp;&amp;!a.test)throw O("ngPattern")("noregexp",f,a,ua(b));e=a||void 0;c.$validate()});c.$validators.pattern=function(a,b){return c.$isEmpty(b)||y(e)||e.test(b)}}}}},Jc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=-1;d.$observe("maxlength",function(a){a=$(a);e=isNaN(a)?-1:a;c.$validate()});c.$validators.maxlength=function(a,b){return 0&gt;e||c.$isEmpty(b)||
b.length&lt;=e}}}}},Ic=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=0;d.$observe("minlength",function(a){e=$(a)||0;c.$validate()});c.$validators.minlength=function(a,b){return c.$isEmpty(b)||b.length&gt;=e}}}}};F.angular.bootstrap?F.console&amp;&amp;console.log("WARNING: Tried to load angular more than once."):(je(),le(da),da.module("ngLocale",[],["$provide",function(a){function b(a){a+="";var b=a.indexOf(".");return-1==b?0:a.length-b-1}a.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM",
"PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,
6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-\u00a4",negSuf:"",posPre:"\u00a4",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(a,
c){var e=a|0,f=c;void 0===f&amp;&amp;(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&amp;&amp;0==f?"one":"other"}})}]),G(F.document).ready(function(){fe(F.document,Ac)}))})(window);!window.angular.$$csp().noInlineStyle&amp;&amp;window.angular.element(document.head).prepend('&lt;style type="text/css"&gt;@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}&lt;/style&gt;');
//# sourceMappingURL=angular.min.js.map
</contentText>
  </asset>
  <asset name="lib/bootstrap-tokenfield.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-30
 */
(function (factory) {
    if (typeof define === 'function' &amp;&amp; define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // For CommonJS and CommonJS-like environments where a window with jQuery
        // is present, execute the factory with the jQuery instance from the window object
        // For environments that do not inherently posses a window with a document
        // (such as Node.js), expose a Tokenfield-making factory as module.exports
        // This accentuates the need for the creation of a real window or passing in a jQuery instance
        // e.g. require("bootstrap-tokenfield")(window); or require("bootstrap-tokenfield")($);
        module.exports = global.window &amp;&amp; global.window.$ ?
          factory(global.window.$) :
          function (input) {
              if (!input.$ &amp;&amp; !input.fn) {
                  throw new Error("Tokenfield requires a window object with jQuery or a jQuery instance");
              }
              return factory(input.$ || input);
          };
    } else {
        // Browser globals
        factory(jQuery, window);
    }
}(function ($, window) {

    "use strict"; // jshint ;_;

    /* TOKENFIELD PUBLIC CLASS DEFINITION
     * ============================== */

    var Tokenfield = function (element, options) {
        var _self = this

        this.$element = $(element)
        this.textDirection = this.$element.css('direction');

        // Extend options
        this.options = $.extend(true, {}, $.fn.tokenfield.defaults, { tokens: this.$element.val() }, this.$element.data(), options)

        // Setup delimiters and trigger keys
        this._delimiters = (typeof this.options.delimiter === 'string') ? [this.options.delimiter] : this.options.delimiter
        this._triggerKeys = $.map(this._delimiters, function (delimiter) {
            return delimiter.charCodeAt(0);
        });
        this._firstDelimiter = this._delimiters[0];

        // Check for whitespace, dash and special characters
        var whitespace = $.inArray(' ', this._delimiters)
          , dash = $.inArray('-', this._delimiters)

        if (whitespace &gt;= 0)
            this._delimiters[whitespace] = '\\s'

        if (dash &gt;= 0) {
            delete this._delimiters[dash]
            this._delimiters.unshift('-')
        }

        var specialCharacters = ['\\', '$', '[', '{', '^', '.', '|', '?', '*', '+', '(', ')']
        $.each(this._delimiters, function (index, character) {
            var pos = $.inArray(character, specialCharacters)
            if (pos &gt;= 0) _self._delimiters[index] = '\\' + character;
        });

        // Store original input width
        var elRules = (window &amp;&amp; typeof window.getMatchedCSSRules === 'function') ? window.getMatchedCSSRules(element) : null
          , elStyleWidth = element.style.width
          , elCSSWidth
          , elWidth = this.$element.width()

        if (elRules) {
            $.each(elRules, function (i, rule) {
                if (rule.style.width) {
                    elCSSWidth = rule.style.width;
                }
            });
        }

        // Move original input out of the way
        var hidingPosition = $('body').css('direction') === 'rtl' ? 'right' : 'left',
            originalStyles = { position: this.$element.css('position') };
        originalStyles[hidingPosition] = this.$element.css(hidingPosition);

        this.$element
          .data('original-styles', originalStyles)
          .data('original-tabindex', this.$element.prop('tabindex'))
          .css('position', 'absolute')
          .css(hidingPosition, '-10000px')
          .prop('tabindex', -1)

        // Create a wrapper
        this.$wrapper = $('&lt;div class="tokenfield form-control" /&gt;')
        if (this.$element.hasClass('input-lg')) this.$wrapper.addClass('input-lg')
        if (this.$element.hasClass('input-sm')) this.$wrapper.addClass('input-sm')
        if (this.textDirection === 'rtl') this.$wrapper.addClass('rtl')

        // Create a new input
        var id = this.$element.prop('id') || new Date().getTime() + '' + Math.floor((1 + Math.random()) * 100)
        this.$input = $('&lt;input type="' + this.options.inputType + '" class="token-input" autocomplete="off" /&gt;')
                        .appendTo(this.$wrapper)
                        .prop('placeholder', this.$element.prop('placeholder'))
                        .prop('id', id + '-tokenfield')
                        .prop('tabindex', this.$element.data('original-tabindex'))

        // Re-route original input label to new input
        var $label = $('label[for="' + this.$element.prop('id') + '"]')
        if ($label.length) {
            $label.prop('for', this.$input.prop('id'))
        }

        // Set up a copy helper to handle copy &amp; paste
        this.$copyHelper = $('&lt;input type="text" /&gt;').css('position', 'absolute').css(hidingPosition, '-10000px').prop('tabindex', -1).prependTo(this.$wrapper)

        // Set wrapper width
        if (elStyleWidth) {
            this.$wrapper.css('width', elStyleWidth);
        }
        else if (elCSSWidth) {
            this.$wrapper.css('width', elCSSWidth);
        }
            // If input is inside inline-form with no width set, set fixed width
        else if (this.$element.parents('.form-inline').length) {
            this.$wrapper.width(elWidth)
        }

        // Set tokenfield disabled, if original or fieldset input is disabled
        if (this.$element.prop('disabled') || this.$element.parents('fieldset[disabled]').length) {
            this.disable();
        }

        // Set tokenfield readonly, if original input is readonly
        if (this.$element.prop('readonly')) {
            this.readonly();
        }

        // Set up mirror for input auto-sizing
        this.$mirror = $('&lt;span style="position:absolute; top:-999px; left:0; white-space:pre;"/&gt;');
        this.$input.css('min-width', this.options.minWidth + 'px')
        $.each([
            'fontFamily',
            'fontSize',
            'fontWeight',
            'fontStyle',
            'letterSpacing',
            'textTransform',
            'wordSpacing',
            'textIndent'
        ], function (i, val) {
            _self.$mirror[0].style[val] = _self.$input.css(val);
        });
        this.$mirror.appendTo('body')

        // Insert tokenfield to HTML
        this.$wrapper.insertBefore(this.$element)
        this.$element.prependTo(this.$wrapper)

        // Calculate inner input width
        this.update()

        // Create initial tokens, if any
        this.setTokens(this.options.tokens, false, !this.$element.val() &amp;&amp; this.options.tokens)

        // Start listening to events
        this.listen()

        // Initialize autocomplete, if necessary
        if (!$.isEmptyObject(this.options.autocomplete)) {
            var side = this.textDirection === 'rtl' ? 'right' : 'left'
             , autocompleteOptions = $.extend({
                 minLength: this.options.showAutocompleteOnFocus ? 0 : null,
                 position: { my: side + " top", at: side + " bottom", of: this.$wrapper }
             }, this.options.autocomplete)

            this.$input.autocomplete(autocompleteOptions)
        }

        // Initialize typeahead, if necessary
        if (!$.isEmptyObject(this.options.typeahead)) {

            var typeaheadOptions = this.options.typeahead
              , defaults = {
                  minLength: this.options.showAutocompleteOnFocus ? 0 : null
              }
              , args = $.isArray(typeaheadOptions) ? typeaheadOptions : [typeaheadOptions, typeaheadOptions]

            args[0] = $.extend({}, defaults, args[0])

            this.$input.typeahead.apply(this.$input, args)
            this.$hint = this.$input.prev('.tt-hint')
            this.typeahead = true
        }
    }

    Tokenfield.prototype = {

        constructor: Tokenfield

    , createToken: function (attrs, triggerChange) {
        var _self = this

        if (typeof attrs === 'string') {
            attrs = { value: attrs, label: attrs }
        } else {
            // Copy objects to prevent contamination of data sources.
            attrs = $.extend({}, attrs)
        }

        if (typeof triggerChange === 'undefined') {
            triggerChange = true
        }

        // Normalize label and value
        attrs.value = $.trim(attrs.value.toString());
        attrs.label = attrs.label &amp;&amp; attrs.label.length ? $.trim(attrs.label) : attrs.value

        // Bail out if has no value or label, or label is too short
        if (!attrs.value.length || !attrs.label.length || attrs.label.length &lt;= this.options.minLength) return

        // Bail out if maximum number of tokens is reached
        if (this.options.limit &amp;&amp; this.getTokens().length &gt;= this.options.limit) return

        // Allow changing token data before creating it
        var createEvent = $.Event('tokenfield:createtoken', { attrs: attrs })
        this.$element.trigger(createEvent)

        // Bail out if there if attributes are empty or event was defaultPrevented
        if (!createEvent.attrs || createEvent.isDefaultPrevented()) return

        var $token = $('&lt;div class="token" /&gt;')
              .append('&lt;span class="token-label" /&gt;')
              .append('&lt;a href="#" class="close" tabindex="-1"&gt;&amp;times;&lt;/a&gt;')
              .data('attrs', attrs)

        // Insert token into HTML
        if (this.$input.hasClass('tt-input')) {
            // If the input has typeahead enabled, insert token before it's parent
            this.$input.parent().before($token)
        } else {
            this.$input.before($token)
        }

        // Temporarily set input width to minimum
        this.$input.css('width', this.options.minWidth + 'px')

        var $tokenLabel = $token.find('.token-label')
          , $closeButton = $token.find('.close')

        // Determine maximum possible token label width
        if (!this.maxTokenWidth) {
            this.maxTokenWidth =
              this.$wrapper.width() - $closeButton.outerWidth() -
              parseInt($closeButton.css('margin-left'), 10) -
              parseInt($closeButton.css('margin-right'), 10) -
              parseInt($token.css('border-left-width'), 10) -
              parseInt($token.css('border-right-width'), 10) -
              parseInt($token.css('padding-left'), 10) -
              parseInt($token.css('padding-right'), 10)
            parseInt($tokenLabel.css('border-left-width'), 10) -
            parseInt($tokenLabel.css('border-right-width'), 10) -
            parseInt($tokenLabel.css('padding-left'), 10) -
            parseInt($tokenLabel.css('padding-right'), 10)
            parseInt($tokenLabel.css('margin-left'), 10) -
            parseInt($tokenLabel.css('margin-right'), 10)
        }

        $tokenLabel
          .text(attrs.label)
          .css('max-width', this.maxTokenWidth)

        // Listen to events on token
        $token
          .on('mousedown', function (e) {
              if (_self._disabled || _self._readonly) return false
              _self.preventDeactivation = true
          })
          .on('click', function (e) {
              if (_self._disabled || _self._readonly) return false
              _self.preventDeactivation = false

              if (e.ctrlKey || e.metaKey) {
                  e.preventDefault()
                  return _self.toggle($token)
              }

              _self.activate($token, e.shiftKey, e.shiftKey)
          })
          .on('dblclick', function (e) {
              if (_self._disabled || _self._readonly || !_self.options.allowEditing) return false
              _self.edit($token)
          })

        $closeButton
            .on('click', $.proxy(this.remove, this))

        // Trigger createdtoken event on the original field
        // indicating that the token is now in the DOM
        this.$element.trigger($.Event('tokenfield:createdtoken', {
            attrs: attrs,
            relatedTarget: $token.get(0)
        }))

        // Trigger change event on the original field
        if (triggerChange) {
            this.$element.val(this.getTokensList()).trigger($.Event('change', { initiator: 'tokenfield' }))
        }

        // Update tokenfield dimensions
        this.update()

        // Return original element
        return this.$element.get(0)
    }

    , setTokens: function (tokens, add, triggerChange) {
        if (!tokens) return

        if (!add) this.$wrapper.find('.token').remove()

        if (typeof triggerChange === 'undefined') {
            triggerChange = true
        }

        if (typeof tokens === 'string') {
            if (this._delimiters.length) {
                // Split based on delimiters
                tokens = tokens.split(new RegExp('[' + this._delimiters.join('') + ']'))
            } else {
                tokens = [tokens];
            }
        }

        var _self = this
        $.each(tokens, function (i, attrs) {
            _self.createToken(attrs, triggerChange)
        })

        return this.$element.get(0)
    }

    , getTokenData: function ($token) {
        var data = $token.map(function () {
            var $token = $(this);
            return $token.data('attrs')
        }).get();

        if (data.length == 1) {
            data = data[0];
        }

        return data;
    }

    , getTokens: function (active) {
        var self = this
          , tokens = []
          , activeClass = active ? '.active' : '' // get active tokens only
        this.$wrapper.find('.token' + activeClass).each(function () {
            tokens.push(self.getTokenData($(this)))
        })
        return tokens
    }

    , getTokensList: function (delimiter, beautify, active) {
        delimiter = delimiter || this._firstDelimiter
        beautify = (typeof beautify !== 'undefined' &amp;&amp; beautify !== null) ? beautify : this.options.beautify

        var separator = delimiter + (beautify &amp;&amp; delimiter !== ' ' ? ' ' : '')
        return $.map(this.getTokens(active), function (token) {
            return token.value
        }).join(separator)
    }

    , getInput: function () {
        return this.$input.val()
    }

    , listen: function () {
        var _self = this

        this.$element
          .on('change', $.proxy(this.change, this))

        this.$wrapper
          .on('mousedown', $.proxy(this.focusInput, this))

        this.$input
          .on('focus', $.proxy(this.focus, this))
          .on('blur', $.proxy(this.blur, this))
          .on('paste', $.proxy(this.paste, this))
          .on('keydown', $.proxy(this.keydown, this))
          .on('keypress', $.proxy(this.keypress, this))
          .on('keyup', $.proxy(this.keyup, this))
          .on('textInput', $.proxy(this.textInput, this))
          

        this.$copyHelper
          .on('focus', $.proxy(this.focus, this))
          .on('blur', $.proxy(this.blur, this))
          .on('keydown', $.proxy(this.keydown, this))
          .on('keyup', $.proxy(this.keyup, this))

        // Secondary listeners for input width calculation
        this.$input
          .on('keypress', $.proxy(this.update, this))
          .on('keyup', $.proxy(this.update, this))

        this.$input
          .on('autocompletecreate', function () {
              // Set minimum autocomplete menu width
              var $_menuElement = $(this).data('ui-autocomplete').menu.element

              var minWidth = _self.$wrapper.outerWidth() -
                  parseInt($_menuElement.css('border-left-width'), 10) -
                  parseInt($_menuElement.css('border-right-width'), 10)

              $_menuElement.css('min-width', minWidth + 'px')
          })
          .on('autocompleteselect', function (e, ui) {
              if (_self.createToken(ui.item)) {
                  _self.$input.val('')
                  if (_self.$input.data('edit')) {
                      _self.unedit(true)
                  }
              }
              return false
          })
          .on('typeahead:selected typeahead:autocompleted', function (e, datum, dataset) {
              // Create token
              if (_self.createToken(datum)) {
                  _self.$input.typeahead('val', '')
                  if (_self.$input.data('edit')) {
                      _self.unedit(true)
                  }
              }
          })

        // Listen to window resize
        $(window).on('resize', $.proxy(this.update, this))

    }

    , keydown: function (e) {

        if (!this.focused) return

        var _self = this

        switch (e.keyCode) {
            case 8: // backspace
                if (!this.$input.is(document.activeElement)) break
                this.lastInputValue = this.$input.val()
                break

            case 37: // left arrow
                leftRight(this.textDirection === 'rtl' ? 'next' : 'prev')
                break

            case 38: // up arrow
                upDown('prev')
                break

            case 39: // right arrow
                leftRight(this.textDirection === 'rtl' ? 'prev' : 'next')
                break

            case 40: // down arrow
                upDown('next')
                break

            case 65: // a (to handle ctrl + a)
                if (this.$input.val().length &gt; 0 || !(e.ctrlKey || e.metaKey)) break
                this.activateAll()
                e.preventDefault()
                break

            case 9: // tab
            case 13: // enter
            case 32:
                // We will handle creating tokens from autocomplete in autocomplete events
                if (this.$input.data('ui-autocomplete') &amp;&amp; this.$input.data('ui-autocomplete').menu.element.find("li:has(a.ui-state-focus), li.ui-state-focus").length) break

                // We will handle creating tokens from typeahead in typeahead events
                if (this.$input.hasClass('tt-input') &amp;&amp; this.$wrapper.find('.tt-cursor').length) break
                if (this.$input.hasClass('tt-input') &amp;&amp; this.$wrapper.find('.tt-hint').val() &amp;&amp; this.$wrapper.find('.tt-hint').val().length) break

                // Create token
                if (this.$input.is(document.activeElement) &amp;&amp; this.$input.val().length || this.$input.data('edit')) {
                    return this.createTokensFromInput(e, this.$input.data('edit'));
                }

                // Edit token
                if (e.keyCode === 13) {
                    if (!this.$copyHelper.is(document.activeElement) || this.$wrapper.find('.token.active').length !== 1) break
                    if (!_self.options.allowEditing) break
                    this.edit(this.$wrapper.find('.token.active'))
                }

        }

        function leftRight(direction) {
            if (_self.$input.is(document.activeElement)) {
                if (_self.$input.val().length &gt; 0) return

                direction += 'All'
                var $token = _self.$input.hasClass('tt-input') ? _self.$input.parent()[direction]('.token:first') : _self.$input[direction]('.token:first')
                if (!$token.length) return

                _self.preventInputFocus = true
                _self.preventDeactivation = true

                _self.activate($token)
                e.preventDefault()

            } else {
                _self[direction](e.shiftKey)
                e.preventDefault()
            }
        }

        function upDown(direction) {
            if (!e.shiftKey) return

            if (_self.$input.is(document.activeElement)) {
                if (_self.$input.val().length &gt; 0) return

                var $token = _self.$input.hasClass('tt-input') ? _self.$input.parent()[direction + 'All']('.token:first') : _self.$input[direction + 'All']('.token:first')
                if (!$token.length) return

                _self.activate($token)
            }

            var opposite = direction === 'prev' ? 'next' : 'prev'
              , position = direction === 'prev' ? 'first' : 'last'

            _self.$firstActiveToken[opposite + 'All']('.token').each(function () {
                _self.deactivate($(this))
            })

            _self.activate(_self.$wrapper.find('.token:' + position), true, true)
            e.preventDefault()
        }

        this.lastKeyDown = e.keyCode
    }

    , keypress: function (e) {

        // Comma
        if ($.inArray(e.which, this._triggerKeys) !== -1 &amp;&amp; this.$input.is(document.activeElement)) {
            if (this.$input.val()) {
                this.createTokensFromInput(e)
            }
            return false;
        }
    }
    , textInput: function (e) {

        // Comma
        if ($.inArray(e.originalEvent.data.charCodeAt(0), this._triggerKeys) !== -1 &amp;&amp; this.$input.is(document.activeElement)) {
            if (this.$input.val()) {
                this.createTokensFromInput(e)
            }
            return false;
        }
    }
    , keyup: function (e) {
        this.preventInputFocus = false

        if (!this.focused) return

        switch (e.keyCode) {
            case 8: // backspace
                if (this.$input.is(document.activeElement)) {
                    if (this.$input.val().length || this.lastInputValue.length &amp;&amp; this.lastKeyDown === 8) break

                    this.preventDeactivation = true
                    var $prevToken = this.$input.hasClass('tt-input') ? this.$input.parent().prevAll('.token:first') : this.$input.prevAll('.token:first')

                    if (!$prevToken.length) break

                    this.activate($prevToken)
                } else {
                    this.remove(e)
                }
                break

            case 46: // delete
                this.remove(e, 'next')
                break
        }
        this.lastKeyUp = e.keyCode
    }

    , focus: function (e) {
        this.focused = true
        this.$wrapper.addClass('focus')

        if (this.$input.is(document.activeElement)) {
            this.$wrapper.find('.active').removeClass('active')
            this.$firstActiveToken = null

            if (this.options.showAutocompleteOnFocus) {
                this.search()
            }
        }
    }

    , blur: function (e) {

        this.focused = false
        this.$wrapper.removeClass('focus')

        if (!this.preventDeactivation &amp;&amp; !this.$element.is(document.activeElement)) {
            this.$wrapper.find('.active').removeClass('active')
            this.$firstActiveToken = null
        }

        if (!this.preventCreateTokens &amp;&amp; (this.$input.data('edit') &amp;&amp; !this.$input.is(document.activeElement) || this.options.createTokensOnBlur)) {
            this.createTokensFromInput(e)
        }

        this.preventDeactivation = false
        this.preventCreateTokens = false
    }

    , paste: function (e) {
        var _self = this

        // Add tokens to existing ones
        if (_self.options.allowPasting) {
            setTimeout(function () {
                _self.createTokensFromInput(e)
            }, 1)
        }
    }

    , change: function (e) {
        if (e.initiator === 'tokenfield') return // Prevent loops

        this.setTokens(this.$element.val())
    }

    , createTokensFromInput: function (e, focus) {
        if (this.$input.val().length &lt; this.options.minLength)
            return // No input, simply return

        var tokensBefore = this.getTokensList()
        this.setTokens(this.$input.val(), true)

        if (tokensBefore == this.getTokensList() &amp;&amp; this.$input.val().length)
            return false // No tokens were added, do nothing (prevent form submit)

        if (this.$input.hasClass('tt-input')) {
            // Typeahead acts weird when simply setting input value to empty,
            // so we set the query to empty instead
            this.$input.typeahead('val', '')
        } else {
            this.$input.val('')
        }

        if (this.$input.data('edit')) {
            this.unedit(focus)
        }

        return false // Prevent form being submitted
    }

    , next: function (add) {
        if (add) {
            var $firstActiveToken = this.$wrapper.find('.active:first')
              , deactivate = $firstActiveToken &amp;&amp; this.$firstActiveToken ? $firstActiveToken.index() &lt; this.$firstActiveToken.index() : false

            if (deactivate) return this.deactivate($firstActiveToken)
        }

        var $lastActiveToken = this.$wrapper.find('.active:last')
          , $nextToken = $lastActiveToken.nextAll('.token:first')

        if (!$nextToken.length) {
            this.$input.focus()
            return
        }

        this.activate($nextToken, add)
    }

    , prev: function (add) {

        if (add) {
            var $lastActiveToken = this.$wrapper.find('.active:last')
              , deactivate = $lastActiveToken &amp;&amp; this.$firstActiveToken ? $lastActiveToken.index() &gt; this.$firstActiveToken.index() : false

            if (deactivate) return this.deactivate($lastActiveToken)
        }

        var $firstActiveToken = this.$wrapper.find('.active:first')
          , $prevToken = $firstActiveToken.prevAll('.token:first')

        if (!$prevToken.length) {
            $prevToken = this.$wrapper.find('.token:first')
        }

        if (!$prevToken.length &amp;&amp; !add) {
            this.$input.focus()
            return
        }

        this.activate($prevToken, add)
    }

    , activate: function ($token, add, multi, remember) {

        if (!$token) return

        if (typeof remember === 'undefined') var remember = true

        if (multi) var add = true

        this.$copyHelper.focus()

        if (!add) {
            this.$wrapper.find('.active').removeClass('active')
            if (remember) {
                this.$firstActiveToken = $token
            } else {
                delete this.$firstActiveToken
            }
        }

        if (multi &amp;&amp; this.$firstActiveToken) {
            // Determine first active token and the current tokens indicies
            // Account for the 1 hidden textarea by subtracting 1 from both
            var i = this.$firstActiveToken.index() - 2
              , a = $token.index() - 2
              , _self = this

            this.$wrapper.find('.token').slice(Math.min(i, a) + 1, Math.max(i, a)).each(function () {
                _self.activate($(this), true)
            })
        }

        $token.addClass('active')
        this.$copyHelper.val(this.getTokensList(null, null, true)).select()
    }

    , activateAll: function () {
        var _self = this

        this.$wrapper.find('.token').each(function (i) {
            _self.activate($(this), i !== 0, false, false)
        })
    }

    , deactivate: function ($token) {
        if (!$token) return

        $token.removeClass('active')
        this.$copyHelper.val(this.getTokensList(null, null, true)).select()
    }

    , toggle: function ($token) {
        if (!$token) return

        $token.toggleClass('active')
        this.$copyHelper.val(this.getTokensList(null, null, true)).select()
    }

    , edit: function ($token) {
        if (!$token) return

        var attrs = $token.data('attrs')

        // Allow changing input value before editing
        var options = { attrs: attrs, relatedTarget: $token.get(0) }
        var editEvent = $.Event('tokenfield:edittoken', options)
        this.$element.trigger(editEvent)

        // Edit event can be cancelled if default is prevented
        if (editEvent.isDefaultPrevented()) return

        $token.find('.token-label').text(attrs.value)
        var tokenWidth = $token.outerWidth()

        var $_input = this.$input.hasClass('tt-input') ? this.$input.parent() : this.$input

        $token.replaceWith($_input)

        this.preventCreateTokens = true

        this.$input.val(attrs.value)
                  .select()
                  .data('edit', true)
                  .width(tokenWidth)

        this.update();

        // Indicate that token is now being edited, and is replaced with an input field in the DOM
        this.$element.trigger($.Event('tokenfield:editedtoken', options))
    }

    , unedit: function (focus) {
        var $_input = this.$input.hasClass('tt-input') ? this.$input.parent() : this.$input
        $_input.appendTo(this.$wrapper)

        this.$input.data('edit', false)
        this.$mirror.text('')

        this.update()

        // Because moving the input element around in DOM
        // will cause it to lose focus, we provide an option
        // to re-focus the input after appending it to the wrapper
        if (focus) {
            var _self = this
            setTimeout(function () {
                _self.$input.focus()
            }, 1)
        }
    }

    , remove: function (e, direction) {
        if (this.$input.is(document.activeElement) || this._disabled || this._readonly) return

        var $token = (e.type === 'click') ? $(e.target).closest('.token') : this.$wrapper.find('.token.active')

        if (e.type !== 'click') {
            if (!direction) var direction = 'prev'
            this[direction]()

            // Was it the first token?
            if (direction === 'prev') var firstToken = $token.first().prevAll('.token:first').length === 0
        }

        // Prepare events and their options
        var options = { attrs: this.getTokenData($token), relatedTarget: $token.get(0) }
          , removeEvent = $.Event('tokenfield:removetoken', options)

        this.$element.trigger(removeEvent);

        // Remove event can be intercepted and cancelled
        if (removeEvent.isDefaultPrevented()) return

        var removedEvent = $.Event('tokenfield:removedtoken', options)
          , changeEvent = $.Event('change', { initiator: 'tokenfield' })

        // Remove token from DOM
        $token.remove()

        // Trigger events
        this.$element.val(this.getTokensList()).trigger(removedEvent).trigger(changeEvent)

        // Focus, when necessary:
        // When there are no more tokens, or if this was the first token
        // and it was removed with backspace or it was clicked on
        if (!this.$wrapper.find('.token').length || e.type === 'click' || firstToken) this.$input.focus()

        // Adjust input width
        this.$input.css('width', this.options.minWidth + 'px')
        this.update()

        // Cancel original event handlers
        e.preventDefault()
        e.stopPropagation()
    }

        /**
         * Update tokenfield dimensions
         */
    , update: function (e) {
        var value = this.$input.val()
          , inputPaddingLeft = parseInt(this.$input.css('padding-left'), 10)
          , inputPaddingRight = parseInt(this.$input.css('padding-right'), 10)
          , inputPadding = inputPaddingLeft + inputPaddingRight

       // if (this.$input.data('edit')) {

            if (!value) {
                value = this.$input.prop("placeholder")
            }
            if (value === this.$mirror.text()) return

            this.$mirror.text(value)

            var mirrorWidth = this.$mirror.width() + 10;
            if (mirrorWidth &gt; this.$wrapper.width()) {
                return this.$input.width(this.$wrapper.width())
            }

            this.$input.width(mirrorWidth)

            if (this.$hint) {
                this.$hint.width(mirrorWidth)
            }
        //}

       /* else {
          
            var w = (this.textDirection === 'rtl')
                  ? this.$input.offset().left + this.$input.outerWidth() - this.$wrapper.offset().left - parseInt(this.$wrapper.css('padding-left'), 10) - inputPadding - 1
                  : this.$wrapper.offset().left + this.$wrapper.width() + parseInt(this.$wrapper.css('padding-left'), 10) - this.$input.offset().left - inputPadding;
            //
            // some usecases pre-render widget before attaching to DOM,
            // dimensions returned by jquery will be NaN -&gt; we default to 100%
            // so placeholder won't be cut off.
            isNaN(w) ? this.$input.width('100%') : this.$input.width(w);

            if (this.$hint) {
                isNaN(w) ? this.$hint.width('100%') : this.$hint.width(w);
            }
        }*/
    }

    , focusInput: function (e) {
        if ($(e.target).closest('.token').length || $(e.target).closest('.token-input').length || $(e.target).closest('.tt-dropdown-menu').length) return
        // Focus only after the current call stack has cleared,
        // otherwise has no effect.
        // Reason: mousedown is too early - input will lose focus
        // after mousedown. However, since the input may be moved
        // in DOM, there may be no click or mouseup event triggered.
        var _self = this
        setTimeout(function () {
            _self.$input.focus()
        }, 0)
    }

    , search: function () {
        if (this.$input.data('ui-autocomplete')) {
            this.$input.autocomplete('search')
        }
    }

    , disable: function () {
        this.setProperty('disabled', true);
    }

    , enable: function () {
        this.setProperty('disabled', false);
    }

    , readonly: function () {
        this.setProperty('readonly', true);
    }

    , writeable: function () {
        this.setProperty('readonly', false);
    }

    , setProperty: function (property, value) {
        this['_' + property] = value;
        this.$input.prop(property, value);
        this.$element.prop(property, value);
        this.$wrapper[value ? 'addClass' : 'removeClass'](property);
    }

    , destroy: function () {
        // Set field value
        this.$element.val(this.getTokensList());
        // Restore styles and properties
        this.$element.css(this.$element.data('original-styles'));
        this.$element.prop('tabindex', this.$element.data('original-tabindex'));

        // Re-route tokenfield label to original input
        var $label = $('label[for="' + this.$input.prop('id') + '"]')
        if ($label.length) {
            $label.prop('for', this.$element.prop('id'))
        }

        // Move original element outside of tokenfield wrapper
        this.$element.insertBefore(this.$wrapper);

        // Remove tokenfield-related data
        this.$element.removeData('original-styles')
                     .removeData('original-tabindex')
                     .removeData('bs.tokenfield');

        // Remove tokenfield from DOM
        this.$wrapper.remove();
        this.$mirror.remove();

        var $_element = this.$element;

        return $_element;
    }

    }


    /* TOKENFIELD PLUGIN DEFINITION
     * ======================== */

    var old = $.fn.tokenfield

    $.fn.tokenfield = function (option, param) {
        var value
          , args = []

        Array.prototype.push.apply(args, arguments);

        var elements = this.each(function () {
            var $this = $(this)
              , data = $this.data('bs.tokenfield')
              , options = typeof option == 'object' &amp;&amp; option

            if (typeof option === 'string' &amp;&amp; data &amp;&amp; data[option]) {
                args.shift()
                value = data[option].apply(data, args)
            } else {
                if (!data &amp;&amp; typeof option !== 'string' &amp;&amp; !param) {
                    $this.data('bs.tokenfield', (data = new Tokenfield(this, options)))
                    $this.trigger('tokenfield:initialize')
                }
            }
        })

        return typeof value !== 'undefined' ? value : elements;
    }

    $.fn.tokenfield.defaults = {
        minWidth: 60,
        minLength: 0,
        allowEditing: true,
        allowPasting: true,
        limit: 0,
        autocomplete: {},
        typeahead: {},
        showAutocompleteOnFocus: false,
        createTokensOnBlur: false,
        delimiter: ',',
        beautify: true,
        inputType: 'text'
    }

    $.fn.tokenfield.Constructor = Tokenfield


    /* TOKENFIELD NO CONFLICT
     * ================== */

    $.fn.tokenfield.noConflict = function () {
        $.fn.tokenfield = old
        return this
    }

    return Tokenfield;

}));
</contentText>
  </asset>
  <asset name="lib/bootstrap.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-23
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){"use strict";var b=a.fn.jquery.split(" ")[0].split(".");if(b[0]&lt;2&amp;&amp;b[1]&lt;9||1==b[0]&amp;&amp;9==b[1]&amp;&amp;b[2]&lt;1||b[0]&gt;2)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")}(jQuery),+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one("bsTransitionEnd",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&amp;&amp;(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var c=a(this),e=c.data("bs.alert");e||c.data("bs.alert",e=new d(this)),"string"==typeof b&amp;&amp;e[b].call(c)})}var c='[data-dismiss="alert"]',d=function(b){a(b).on("click",c,this.close)};d.VERSION="3.3.6",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger("closed.bs.alert").remove()}var e=a(this),f=e.attr("data-target");f||(f=e.attr("href"),f=f&amp;&amp;f.replace(/.*(?=#[^\s]*$)/,""));var g=a(f);b&amp;&amp;b.preventDefault(),g.length||(g=e.closest(".alert")),g.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(g.removeClass("in"),a.support.transition&amp;&amp;g.hasClass("fade")?g.one("bsTransitionEnd",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on("click.bs.alert.data-api",c,d.prototype.close)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof b&amp;&amp;b;e||d.data("bs.button",e=new c(this,f)),"toggle"==b?e.toggle():b&amp;&amp;e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION="3.3.6",c.DEFAULTS={loadingText:"loading..."},c.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",null==f.resetText&amp;&amp;d.data("resetText",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&amp;&amp;(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")?(c.prop("checked")&amp;&amp;(a=!1),b.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==c.prop("type")&amp;&amp;(c.prop("checked")!==this.$element.hasClass("active")&amp;&amp;(a=!1),this.$element.toggleClass("active")),c.prop("checked",this.$element.hasClass("active")),a&amp;&amp;c.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(c){var d=a(c.target);d.hasClass("btn")||(d=d.closest(".btn")),b.call(d,"toggle"),a(c.target).is('input[type="radio"]')||a(c.target).is('input[type="checkbox"]')||c.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(b){a(b.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&amp;&amp;b),g="string"==typeof b?b:f.slide;e||d.data("bs.carousel",e=new c(this,f)),"number"==typeof b?e.to(b):g?e[g]():f.interval&amp;&amp;e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&amp;&amp;this.$element.on("keydown.bs.carousel",a.proxy(this.keydown,this)),"hover"==this.options.pause&amp;&amp;!("ontouchstart"in document.documentElement)&amp;&amp;this.$element.on("mouseenter.bs.carousel",a.proxy(this.pause,this)).on("mouseleave.bs.carousel",a.proxy(this.cycle,this))};c.VERSION="3.3.6",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&amp;&amp;clearInterval(this.interval),this.options.interval&amp;&amp;!this.paused&amp;&amp;(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(".item"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d="prev"==a&amp;&amp;0===c||"next"==a&amp;&amp;c==this.$items.length-1;if(d&amp;&amp;!this.options.wrap)return b;var e="prev"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a&gt;this.$items.length-1||0&gt;a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a&gt;c?"next":"prev",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&amp;&amp;a.support.transition&amp;&amp;(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(b,d){var e=this.$element.find(".item.active"),f=d||this.getItemForDirection(b,e),g=this.interval,h="next"==b?"left":"right",i=this;if(f.hasClass("active"))return this.sliding=!1;var j=f[0],k=a.Event("slide.bs.carousel",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&amp;&amp;this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&amp;&amp;l.addClass("active")}var m=a.Event("slid.bs.carousel",{relatedTarget:j,direction:h});return a.support.transition&amp;&amp;this.$element.hasClass("slide")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one("bsTransitionEnd",function(){f.removeClass([b,h].join(" ")).addClass("active"),e.removeClass(["active",h].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass("active"),f.addClass("active"),this.sliding=!1,this.$element.trigger(m)),g&amp;&amp;this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr("data-target")||(d=e.attr("href"))&amp;&amp;d.replace(/.*(?=#[^\s]+$)/,""));if(f.hasClass("carousel")){var g=a.extend({},f.data(),e.data()),h=e.attr("data-slide-to");h&amp;&amp;(g.interval=!1),b.call(f,g),h&amp;&amp;f.data("bs.carousel").to(h),c.preventDefault()}};a(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){"use strict";function b(b){var c,d=b.attr("data-target")||(c=b.attr("href"))&amp;&amp;c.replace(/.*(?=#[^\s]+$)/,"");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data("bs.collapse"),f=a.extend({},d.DEFAULTS,c.data(),"object"==typeof b&amp;&amp;b);!e&amp;&amp;f.toggle&amp;&amp;/show|hide/.test(b)&amp;&amp;(f.toggle=!1),e||c.data("bs.collapse",e=new d(this,f)),"string"==typeof b&amp;&amp;e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle="collapse"][href="#'+b.id+'"],[data-toggle="collapse"][data-target="#'+b.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&amp;&amp;this.toggle()};d.VERSION="3.3.6",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},d.prototype.show=function(){if(!this.transitioning&amp;&amp;!this.$element.hasClass("in")){var b,e=this.$parent&amp;&amp;this.$parent.children(".panel").children(".in, .collapsing");if(!(e&amp;&amp;e.length&amp;&amp;(b=e.data("bs.collapse"),b&amp;&amp;b.transitioning))){var f=a.Event("show.bs.collapse");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&amp;&amp;e.length&amp;&amp;(c.call(e,"hide"),b||e.data("bs.collapse",null));var g=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var h=function(){this.$element.removeClass("collapsing").addClass("collapse in")[g](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return h.call(this);var i=a.camelCase(["scroll",g].join("-"));this.$element.one("bsTransitionEnd",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&amp;&amp;this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[c](0).one("bsTransitionEnd",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass("in");a.attr("aria-expanded",c),b.toggleClass("collapsed",!c).attr("aria-expanded",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(d){var e=a(this);e.attr("data-target")||d.preventDefault();var f=b(e),g=f.data("bs.collapse"),h=g?"toggle":e.data();c.call(f,h)})}(jQuery),+function(a){"use strict";function b(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&amp;&amp;/#[A-Za-z]/.test(c)&amp;&amp;c.replace(/.*(?=#[^\s]*$)/,""));var d=c&amp;&amp;a(c);return d&amp;&amp;d.length?d:b.parent()}function c(c){c&amp;&amp;3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass("open")&amp;&amp;(c&amp;&amp;"click"==c.type&amp;&amp;/input|textarea/i.test(c.target.tagName)&amp;&amp;a.contains(e[0],c.target)||(e.trigger(c=a.Event("hide.bs.dropdown",f)),c.isDefaultPrevented()||(d.attr("aria-expanded","false"),e.removeClass("open").trigger(a.Event("hidden.bs.dropdown",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new g(this)),"string"==typeof b&amp;&amp;d[b].call(c)})}var e=".dropdown-backdrop",f='[data-toggle="dropdown"]',g=function(b){a(b).on("click.bs.dropdown",this.toggle)};g.VERSION="3.3.6",g.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=b(e),g=f.hasClass("open");if(c(),!g){"ontouchstart"in document.documentElement&amp;&amp;!f.closest(".navbar-nav").length&amp;&amp;a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click",c);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),f.toggleClass("open").trigger(a.Event("shown.bs.dropdown",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&amp;&amp;!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(".disabled, :disabled")){var e=b(d),g=e.hasClass("open");if(!g&amp;&amp;27!=c.which||g&amp;&amp;27==c.which)return 27==c.which&amp;&amp;e.find(f).trigger("focus"),d.trigger("click");var h=" li:not(.disabled):visible a",i=e.find(".dropdown-menu"+h);if(i.length){var j=i.index(c.target);38==c.which&amp;&amp;j&gt;0&amp;&amp;j--,40==c.which&amp;&amp;j&lt;i.length-1&amp;&amp;j++,~j||(j=0),i.eq(j).trigger("focus")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on("click.bs.dropdown.data-api",c).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",f,g.prototype.toggle).on("keydown.bs.dropdown.data-api",f,g.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",g.prototype.keydown)}(jQuery),+function(a){"use strict";function b(b,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},c.DEFAULTS,e.data(),"object"==typeof b&amp;&amp;b);f||e.data("bs.modal",f=new c(this,g)),"string"==typeof b?f[b](d):g.show&amp;&amp;f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&amp;&amp;this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};c.VERSION="3.3.6",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){d.$element.one("mouseup.dismiss.bs.modal",function(b){a(b.target).is(d.$element)&amp;&amp;(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&amp;&amp;d.$element.hasClass("fade");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&amp;&amp;d.$element[0].offsetWidth,d.$element.addClass("in"),d.enforceFocus();var f=a.Event("shown.bs.modal",{relatedTarget:b});e?d.$dialog.one("bsTransitionEnd",function(){d.$element.trigger("focus").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger("focus").trigger(f)}))},c.prototype.hide=function(b){b&amp;&amp;b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&amp;&amp;!b.isDefaultPrevented()&amp;&amp;(this.isShown=!1,this.escape(),this.resize(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),a.support.transition&amp;&amp;this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger("focus")},this))},c.prototype.escape=function(){this.isShown&amp;&amp;this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",a.proxy(function(a){27==a.which&amp;&amp;this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},c.prototype.resize=function(){this.isShown?a(window).on("resize.bs.modal",a.proxy(this.handleUpdate,this)):a(window).off("resize.bs.modal")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass("modal-open"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger("hidden.bs.modal")})},c.prototype.removeBackdrop=function(){this.$backdrop&amp;&amp;this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass("fade")?"fade":"";if(this.isShown&amp;&amp;this.options.backdrop){var f=a.support.transition&amp;&amp;e;if(this.$backdrop=a(document.createElement("div")).addClass("modal-backdrop "+e).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&amp;&amp;("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&amp;&amp;this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;f?this.$backdrop.one("bsTransitionEnd",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&amp;&amp;this.$backdrop){this.$backdrop.removeClass("in");var g=function(){d.removeBackdrop(),b&amp;&amp;b()};a.support.transition&amp;&amp;this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&amp;&amp;b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight&gt;document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&amp;&amp;a?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&amp;&amp;!a?this.scrollbarWidth:""})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth&lt;a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&amp;&amp;this.$body.css("padding-right",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement("div");a.className="modal-scrollbar-measure",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(c){var d=a(this),e=d.attr("href"),f=a(d.attr("data-target")||e&amp;&amp;e.replace(/.*(?=#[^\s]+$)/,"")),g=f.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(e)&amp;&amp;e},f.data(),d.data());d.is("a")&amp;&amp;c.preventDefault(),f.one("show.bs.modal",function(a){a.isDefaultPrevented()||f.one("hidden.bs.modal",function(){d.is(":visible")&amp;&amp;d.trigger("focus")})}),b.call(f,g,this)})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof b&amp;&amp;b;(e||!/destroy|hide/.test(b))&amp;&amp;(e||d.data("bs.tooltip",e=new c(this,f)),"string"==typeof b&amp;&amp;e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",a,b)};c.VERSION="3.3.6",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'&lt;div class="tooltip" role="tooltip"&gt;&lt;div class="tooltip-arrow"&gt;&lt;/div&gt;&lt;div class="tooltip-inner"&gt;&lt;/div&gt;&lt;/div&gt;',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&amp;&amp;a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&amp;&amp;!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&amp;&amp;"number"==typeof b.delay&amp;&amp;(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&amp;&amp;a.each(this._options,function(a,d){c[a]!=d&amp;&amp;(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&amp;&amp;(c.inState["focusin"==b.type?"focus":"hover"]=!0),c.tip().hasClass("in")||"in"==c.hoverState?void(c.hoverState="in"):(clearTimeout(c.timeout),c.hoverState="in",c.options.delay&amp;&amp;c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&amp;&amp;c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&amp;&amp;(c.inState["focusout"==b.type?"focus":"hover"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState="out",c.options.delay&amp;&amp;c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&amp;&amp;c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&amp;&amp;this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr("id",g),this.$element.attr("aria-describedby",g),this.options.animation&amp;&amp;f.addClass("fade");var h="function"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\s?auto?\s?/i,j=i.test(h);j&amp;&amp;(h=h.replace(i,"")||"top"),f.detach().css({top:0,left:0,display:"block"}).addClass(h).data("bs."+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h="bottom"==h&amp;&amp;k.bottom+m&gt;o.bottom?"top":"top"==h&amp;&amp;k.top-m&lt;o.top?"bottom":"right"==h&amp;&amp;k.right+l&gt;o.width?"left":"left"==h&amp;&amp;k.left-l&lt;o.left?"right":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger("shown.bs."+e.type),e.hoverState=null,"out"==a&amp;&amp;e.leave(e)};a.support.transition&amp;&amp;this.$tip.hasClass("fade")?f.one("bsTransitionEnd",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&amp;&amp;(g=0),isNaN(h)&amp;&amp;(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;"top"==c&amp;&amp;j!=f&amp;&amp;(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?"offsetWidth":"offsetHeight";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?"left":"top",50*(1-a/b)+"%").css(c?"top":"left","")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},c.prototype.hide=function(b){function d(){"in"!=e.hoverState&amp;&amp;f.detach(),e.$element.removeAttr("aria-describedby").trigger("hidden.bs."+e.type),b&amp;&amp;b()}var e=this,f=a(this.$tip),g=a.Event("hide.bs."+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass("in"),a.support.transition&amp;&amp;f.hasClass("fade")?f.one("bsTransitionEnd",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&amp;&amp;a.attr("data-original-title",a.attr("title")||"").attr("title","")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d="BODY"==c.tagName,e=c.getBoundingClientRect();null==e.width&amp;&amp;(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&amp;&amp;this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h&lt;g.top?e.top=g.top-h:i&gt;g.top+g.height&amp;&amp;(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j&lt;g.left?e.left=g.left-j:k&gt;g.right&amp;&amp;(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&amp;&amp;(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&amp;&amp;(c=a(b.currentTarget).data("bs."+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass("in")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off("."+a.type).removeData("bs."+a.type),a.$tip&amp;&amp;a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof b&amp;&amp;b;(e||!/destroy|hide/.test(b))&amp;&amp;(e||d.data("bs.popover",e=new c(this,f)),"string"==typeof b&amp;&amp;e[b]())})}var c=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");c.VERSION="3.3.6",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'&lt;div class="popover" role="tooltip"&gt;&lt;div class="arrow"&gt;&lt;/div&gt;&lt;h3 class="popover-title"&gt;&lt;/h3&gt;&lt;div class="popover-content"&gt;&lt;/div&gt;&lt;/div&gt;'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){"use strict";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||"")+" .nav li &gt; a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&amp;&amp;c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&amp;&amp;e[c]()})}b.VERSION="3.3.6",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c="offset",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c="position",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data("target")||b.attr("href"),f=/^#./.test(e)&amp;&amp;a(e);return f&amp;&amp;f.length&amp;&amp;f.is(":visible")&amp;&amp;[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&amp;&amp;this.refresh(),b&gt;=d)return g!=(a=f[f.length-1])&amp;&amp;this.activate(a);if(g&amp;&amp;b&lt;e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&amp;&amp;b&gt;=e[a]&amp;&amp;(void 0===e[a+1]||b&lt;e[a+1])&amp;&amp;this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");
d.parent(".dropdown-menu").length&amp;&amp;(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate.bs.scrollspy")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on("load.bs.scrollspy.data-api",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new c(this)),"string"==typeof b&amp;&amp;e[b]()})}var c=function(b){this.element=a(b)};c.VERSION="3.3.6",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&amp;&amp;d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a"),f=a.Event("hide.bs.tab",{relatedTarget:b[0]}),g=a.Event("show.bs.tab",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&amp;&amp;!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest("li"),c),this.activate(h,h.parent(),function(){e.trigger({type:"hidden.bs.tab",relatedTarget:b[0]}),b.trigger({type:"shown.bs.tab",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass("active").find("&gt; .dropdown-menu &gt; .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),h?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu").length&amp;&amp;b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),e&amp;&amp;e()}var g=d.find("&gt; .active"),h=e&amp;&amp;a.support.transition&amp;&amp;(g.length&amp;&amp;g.hasClass("fade")||!!d.find("&gt; .fade").length);g.length&amp;&amp;h?g.one("bsTransitionEnd",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass("in")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),"show")};a(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',e).on("click.bs.tab.data-api",'[data-toggle="pill"]',e)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof b&amp;&amp;b;e||d.data("bs.affix",e=new c(this,f)),"string"==typeof b&amp;&amp;e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION="3.3.6",c.RESET="affix affix-top affix-bottom",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&amp;&amp;"top"==this.affixed)return c&gt;e?"top":!1;if("bottom"==this.affixed)return null!=c?e+this.unpin&lt;=f.top?!1:"bottom":a-d&gt;=e+g?!1:"bottom";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&amp;&amp;c&gt;=e?"top":null!=d&amp;&amp;i+j&gt;=a-d?"bottom":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass("affix");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(":visible")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());"object"!=typeof d&amp;&amp;(f=e=d),"function"==typeof e&amp;&amp;(e=d.top(this.$element)),"function"==typeof f&amp;&amp;(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&amp;&amp;this.$element.css("top","");var i="affix"+(h?"-"+h:""),j=a.Event(i+".bs.affix");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin="bottom"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix","affixed")+".bs.affix")}"bottom"==h&amp;&amp;this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&amp;&amp;(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&amp;&amp;(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);</contentText>
  </asset>
  <asset name="lib/chart.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */
(function(f){if(typeof exports==="object"&amp;&amp;typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&amp;&amp;define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&amp;&amp;require;if(!u&amp;&amp;a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&amp;&amp;require;for(var o=0;o&lt;r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
/* MIT license */
var colorNames = require(6);

module.exports = {
   getRgba: getRgba,
   getHsla: getHsla,
   getRgb: getRgb,
   getHsl: getHsl,
   getHwb: getHwb,
   getAlpha: getAlpha,

   hexString: hexString,
   rgbString: rgbString,
   rgbaString: rgbaString,
   percentString: percentString,
   percentaString: percentaString,
   hslString: hslString,
   hslaString: hslaString,
   hwbString: hwbString,
   keyword: keyword
}

function getRgba(string) {
   if (!string) {
      return;
   }
   var abbr =  /^#([a-fA-F0-9]{3})$/,
       hex =  /^#([a-fA-F0-9]{6})$/,
       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
       keyword = /(\w+)/;

   var rgb = [0, 0, 0],
       a = 1,
       match = string.match(abbr);
   if (match) {
      match = match[1];
      for (var i = 0; i &lt; rgb.length; i++) {
         rgb[i] = parseInt(match[i] + match[i], 16);
      }
   }
   else if (match = string.match(hex)) {
      match = match[1];
      for (var i = 0; i &lt; rgb.length; i++) {
         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
      }
   }
   else if (match = string.match(rgba)) {
      for (var i = 0; i &lt; rgb.length; i++) {
         rgb[i] = parseInt(match[i + 1]);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(per)) {
      for (var i = 0; i &lt; rgb.length; i++) {
         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(keyword)) {
      if (match[1] == "transparent") {
         return [0, 0, 0, 0];
      }
      rgb = colorNames[match[1]];
      if (!rgb) {
         return;
      }
   }

   for (var i = 0; i &lt; rgb.length; i++) {
      rgb[i] = scale(rgb[i], 0, 255);
   }
   if (!a &amp;&amp; a != 0) {
      a = 1;
   }
   else {
      a = scale(a, 0, 1);
   }
   rgb[3] = a;
   return rgb;
}

function getHsla(string) {
   if (!string) {
      return;
   }
   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hsl);
   if (match) {
      var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          s = scale(parseFloat(match[2]), 0, 100),
          l = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, s, l, a];
   }
}

function getHwb(string) {
   if (!string) {
      return;
   }
   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hwb);
   if (match) {
    var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          w = scale(parseFloat(match[2]), 0, 100),
          b = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, w, b, a];
   }
}

function getRgb(string) {
   var rgba = getRgba(string);
   return rgba &amp;&amp; rgba.slice(0, 3);
}

function getHsl(string) {
  var hsla = getHsla(string);
  return hsla &amp;&amp; hsla.slice(0, 3);
}

function getAlpha(string) {
   var vals = getRgba(string);
   if (vals) {
      return vals[3];
   }
   else if (vals = getHsla(string)) {
      return vals[3];
   }
   else if (vals = getHwb(string)) {
      return vals[3];
   }
}

// generators
function hexString(rgb) {
   return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1])
              + hexDouble(rgb[2]);
}

function rgbString(rgba, alpha) {
   if (alpha &lt; 1 || (rgba[3] &amp;&amp; rgba[3] &lt; 1)) {
      return rgbaString(rgba, alpha);
   }
   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
}

function rgbaString(rgba, alpha) {
   if (alpha === undefined) {
      alpha = (rgba[3] !== undefined ? rgba[3] : 1);
   }
   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
           + ", " + alpha + ")";
}

function percentString(rgba, alpha) {
   if (alpha &lt; 1 || (rgba[3] &amp;&amp; rgba[3] &lt; 1)) {
      return percentaString(rgba, alpha);
   }
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);

   return "rgb(" + r + "%, " + g + "%, " + b + "%)";
}

function percentaString(rgba, alpha) {
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);
   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
}

function hslString(hsla, alpha) {
   if (alpha &lt; 1 || (hsla[3] &amp;&amp; hsla[3] &lt; 1)) {
      return hslaString(hsla, alpha);
   }
   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
}

function hslaString(hsla, alpha) {
   if (alpha === undefined) {
      alpha = (hsla[3] !== undefined ? hsla[3] : 1);
   }
   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
           + alpha + ")";
}

// hwb is a bit different than rgb(a) &amp; hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional &amp; 1 is default value)
function hwbString(hwb, alpha) {
   if (alpha === undefined) {
      alpha = (hwb[3] !== undefined ? hwb[3] : 1);
   }
   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
           + (alpha !== undefined &amp;&amp; alpha !== 1 ? ", " + alpha : "") + ")";
}

function keyword(rgb) {
  return reverseNames[rgb.slice(0, 3)];
}

// helpers
function scale(num, min, max) {
   return Math.min(Math.max(min, num), max);
}

function hexDouble(num) {
  var str = num.toString(16).toUpperCase();
  return (str.length &lt; 2) ? "0" + str : str;
}


//create a list of reverse color names
var reverseNames = {};
for (var name in colorNames) {
   reverseNames[colorNames[name]] = name;
}

},{"6":6}],3:[function(require,module,exports){
/* MIT license */
var convert = require(5);
var string = require(2);

var Color = function (obj) {
	if (obj instanceof Color) {
		return obj;
	}
	if (!(this instanceof Color)) {
		return new Color(obj);
	}

	this.values = {
		rgb: [0, 0, 0],
		hsl: [0, 0, 0],
		hsv: [0, 0, 0],
		hwb: [0, 0, 0],
		cmyk: [0, 0, 0, 0],
		alpha: 1
	};

	// parse Color() argument
	var vals;
	if (typeof obj === 'string') {
		vals = string.getRgba(obj);
		if (vals) {
			this.setValues('rgb', vals);
		} else if (vals = string.getHsla(obj)) {
			this.setValues('hsl', vals);
		} else if (vals = string.getHwb(obj)) {
			this.setValues('hwb', vals);
		} else {
			throw new Error('Unable to parse color from string "' + obj + '"');
		}
	} else if (typeof obj === 'object') {
		vals = obj;
		if (vals.r !== undefined || vals.red !== undefined) {
			this.setValues('rgb', vals);
		} else if (vals.l !== undefined || vals.lightness !== undefined) {
			this.setValues('hsl', vals);
		} else if (vals.v !== undefined || vals.value !== undefined) {
			this.setValues('hsv', vals);
		} else if (vals.w !== undefined || vals.whiteness !== undefined) {
			this.setValues('hwb', vals);
		} else if (vals.c !== undefined || vals.cyan !== undefined) {
			this.setValues('cmyk', vals);
		} else {
			throw new Error('Unable to parse color from object ' + JSON.stringify(obj));
		}
	}
};

Color.prototype = {
	rgb: function () {
		return this.setSpace('rgb', arguments);
	},
	hsl: function () {
		return this.setSpace('hsl', arguments);
	},
	hsv: function () {
		return this.setSpace('hsv', arguments);
	},
	hwb: function () {
		return this.setSpace('hwb', arguments);
	},
	cmyk: function () {
		return this.setSpace('cmyk', arguments);
	},

	rgbArray: function () {
		return this.values.rgb;
	},
	hslArray: function () {
		return this.values.hsl;
	},
	hsvArray: function () {
		return this.values.hsv;
	},
	hwbArray: function () {
		var values = this.values;
		if (values.alpha !== 1) {
			return values.hwb.concat([values.alpha]);
		}
		return values.hwb;
	},
	cmykArray: function () {
		return this.values.cmyk;
	},
	rgbaArray: function () {
		var values = this.values;
		return values.rgb.concat([values.alpha]);
	},
	hslaArray: function () {
		var values = this.values;
		return values.hsl.concat([values.alpha]);
	},
	alpha: function (val) {
		if (val === undefined) {
			return this.values.alpha;
		}
		this.setValues('alpha', val);
		return this;
	},

	red: function (val) {
		return this.setChannel('rgb', 0, val);
	},
	green: function (val) {
		return this.setChannel('rgb', 1, val);
	},
	blue: function (val) {
		return this.setChannel('rgb', 2, val);
	},
	hue: function (val) {
		if (val) {
			val %= 360;
			val = val &lt; 0 ? 360 + val : val;
		}
		return this.setChannel('hsl', 0, val);
	},
	saturation: function (val) {
		return this.setChannel('hsl', 1, val);
	},
	lightness: function (val) {
		return this.setChannel('hsl', 2, val);
	},
	saturationv: function (val) {
		return this.setChannel('hsv', 1, val);
	},
	whiteness: function (val) {
		return this.setChannel('hwb', 1, val);
	},
	blackness: function (val) {
		return this.setChannel('hwb', 2, val);
	},
	value: function (val) {
		return this.setChannel('hsv', 2, val);
	},
	cyan: function (val) {
		return this.setChannel('cmyk', 0, val);
	},
	magenta: function (val) {
		return this.setChannel('cmyk', 1, val);
	},
	yellow: function (val) {
		return this.setChannel('cmyk', 2, val);
	},
	black: function (val) {
		return this.setChannel('cmyk', 3, val);
	},

	hexString: function () {
		return string.hexString(this.values.rgb);
	},
	rgbString: function () {
		return string.rgbString(this.values.rgb, this.values.alpha);
	},
	rgbaString: function () {
		return string.rgbaString(this.values.rgb, this.values.alpha);
	},
	percentString: function () {
		return string.percentString(this.values.rgb, this.values.alpha);
	},
	hslString: function () {
		return string.hslString(this.values.hsl, this.values.alpha);
	},
	hslaString: function () {
		return string.hslaString(this.values.hsl, this.values.alpha);
	},
	hwbString: function () {
		return string.hwbString(this.values.hwb, this.values.alpha);
	},
	keyword: function () {
		return string.keyword(this.values.rgb, this.values.alpha);
	},

	rgbNumber: function () {
		var rgb = this.values.rgb;
		return (rgb[0] &lt;&lt; 16) | (rgb[1] &lt;&lt; 8) | rgb[2];
	},

	luminosity: function () {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		var rgb = this.values.rgb;
		var lum = [];
		for (var i = 0; i &lt; rgb.length; i++) {
			var chan = rgb[i] / 255;
			lum[i] = (chan &lt;= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
		}
		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
	},

	contrast: function (color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		var lum1 = this.luminosity();
		var lum2 = color2.luminosity();
		if (lum1 &gt; lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05);
		}
		return (lum2 + 0.05) / (lum1 + 0.05);
	},

	level: function (color2) {
		var contrastRatio = this.contrast(color2);
		if (contrastRatio &gt;= 7.1) {
			return 'AAA';
		}

		return (contrastRatio &gt;= 4.5) ? 'AA' : '';
	},

	dark: function () {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		var rgb = this.values.rgb;
		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
		return yiq &lt; 128;
	},

	light: function () {
		return !this.dark();
	},

	negate: function () {
		var rgb = [];
		for (var i = 0; i &lt; 3; i++) {
			rgb[i] = 255 - this.values.rgb[i];
		}
		this.setValues('rgb', rgb);
		return this;
	},

	lighten: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] += hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	darken: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] -= hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	saturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] += hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	desaturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] -= hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	whiten: function (ratio) {
		var hwb = this.values.hwb;
		hwb[1] += hwb[1] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	blacken: function (ratio) {
		var hwb = this.values.hwb;
		hwb[2] += hwb[2] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	greyscale: function () {
		var rgb = this.values.rgb;
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
		this.setValues('rgb', [val, val, val]);
		return this;
	},

	clearer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha - (alpha * ratio));
		return this;
	},

	opaquer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha + (alpha * ratio));
		return this;
	},

	rotate: function (degrees) {
		var hsl = this.values.hsl;
		var hue = (hsl[0] + degrees) % 360;
		hsl[0] = hue &lt; 0 ? 360 + hue : hue;
		this.setValues('hsl', hsl);
		return this;
	},

	/**
	 * Ported from sass implementation in C
	 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
	 */
	mix: function (mixinColor, weight) {
		var color1 = this;
		var color2 = mixinColor;
		var p = weight === undefined ? 0.5 : weight;

		var w = 2 * p - 1;
		var a = color1.alpha() - color2.alpha();

		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
		var w2 = 1 - w1;

		return this
			.rgb(
				w1 * color1.red() + w2 * color2.red(),
				w1 * color1.green() + w2 * color2.green(),
				w1 * color1.blue() + w2 * color2.blue()
			)
			.alpha(color1.alpha() * p + color2.alpha() * (1 - p));
	},

	toJSON: function () {
		return this.rgb();
	},

	clone: function () {
		// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
		// making the final build way to big to embed in Chart.js. So let's do it manually,
		// assuming that values to clone are 1 dimension arrays containing only numbers,
		// except 'alpha' which is a number.
		var result = new Color();
		var source = this.values;
		var target = result.values;
		var value, type;

		for (var prop in source) {
			if (source.hasOwnProperty(prop)) {
				value = source[prop];
				type = ({}).toString.call(value);
				if (type === '[object Array]') {
					target[prop] = value.slice(0);
				} else if (type === '[object Number]') {
					target[prop] = value;
				} else {
					console.error('unexpected color value:', value);
				}
			}
		}

		return result;
	}
};

Color.prototype.spaces = {
	rgb: ['red', 'green', 'blue'],
	hsl: ['hue', 'saturation', 'lightness'],
	hsv: ['hue', 'saturation', 'value'],
	hwb: ['hue', 'whiteness', 'blackness'],
	cmyk: ['cyan', 'magenta', 'yellow', 'black']
};

Color.prototype.maxes = {
	rgb: [255, 255, 255],
	hsl: [360, 100, 100],
	hsv: [360, 100, 100],
	hwb: [360, 100, 100],
	cmyk: [100, 100, 100, 100]
};

Color.prototype.getValues = function (space) {
	var values = this.values;
	var vals = {};

	for (var i = 0; i &lt; space.length; i++) {
		vals[space.charAt(i)] = values[space][i];
	}

	if (values.alpha !== 1) {
		vals.a = values.alpha;
	}

	// {r: 255, g: 255, b: 255, a: 0.4}
	return vals;
};

Color.prototype.setValues = function (space, vals) {
	var values = this.values;
	var spaces = this.spaces;
	var maxes = this.maxes;
	var alpha = 1;
	var i;

	if (space === 'alpha') {
		alpha = vals;
	} else if (vals.length) {
		// [10, 10, 10]
		values[space] = vals.slice(0, space.length);
		alpha = vals[space.length];
	} else if (vals[space.charAt(0)] !== undefined) {
		// {r: 10, g: 10, b: 10}
		for (i = 0; i &lt; space.length; i++) {
			values[space][i] = vals[space.charAt(i)];
		}

		alpha = vals.a;
	} else if (vals[spaces[space][0]] !== undefined) {
		// {red: 10, green: 10, blue: 10}
		var chans = spaces[space];

		for (i = 0; i &lt; space.length; i++) {
			values[space][i] = vals[chans[i]];
		}

		alpha = vals.alpha;
	}

	values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

	if (space === 'alpha') {
		return false;
	}

	var capped;

	// cap values of the space prior converting all values
	for (i = 0; i &lt; space.length; i++) {
		capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
		values[space][i] = Math.round(capped);
	}

	// convert to all the other color spaces
	for (var sname in spaces) {
		if (sname !== space) {
			values[sname] = convert[space][sname](values[space]);
		}
	}

	return true;
};

Color.prototype.setSpace = function (space, args) {
	var vals = args[0];

	if (vals === undefined) {
		// color.rgb()
		return this.getValues(space);
	}

	// color.rgb(10, 10, 10)
	if (typeof vals === 'number') {
		vals = Array.prototype.slice.call(args);
	}

	this.setValues(space, vals);
	return this;
};

Color.prototype.setChannel = function (space, index, val) {
	var svalues = this.values[space];
	if (val === undefined) {
		// color.red()
		return svalues[index];
	} else if (val === svalues[index]) {
		// color.red(color.red())
		return this;
	}

	// color.red(100)
	svalues[index] = val;
	this.setValues(space, svalues);

	return this;
};

if (typeof window !== 'undefined') {
	window.Color = Color;
}

module.exports = Color;

},{"2":2,"5":5}],4:[function(require,module,exports){
/* MIT license */

module.exports = {
  rgb2hsl: rgb2hsl,
  rgb2hsv: rgb2hsv,
  rgb2hwb: rgb2hwb,
  rgb2cmyk: rgb2cmyk,
  rgb2keyword: rgb2keyword,
  rgb2xyz: rgb2xyz,
  rgb2lab: rgb2lab,
  rgb2lch: rgb2lch,

  hsl2rgb: hsl2rgb,
  hsl2hsv: hsl2hsv,
  hsl2hwb: hsl2hwb,
  hsl2cmyk: hsl2cmyk,
  hsl2keyword: hsl2keyword,

  hsv2rgb: hsv2rgb,
  hsv2hsl: hsv2hsl,
  hsv2hwb: hsv2hwb,
  hsv2cmyk: hsv2cmyk,
  hsv2keyword: hsv2keyword,

  hwb2rgb: hwb2rgb,
  hwb2hsl: hwb2hsl,
  hwb2hsv: hwb2hsv,
  hwb2cmyk: hwb2cmyk,
  hwb2keyword: hwb2keyword,

  cmyk2rgb: cmyk2rgb,
  cmyk2hsl: cmyk2hsl,
  cmyk2hsv: cmyk2hsv,
  cmyk2hwb: cmyk2hwb,
  cmyk2keyword: cmyk2keyword,

  keyword2rgb: keyword2rgb,
  keyword2hsl: keyword2hsl,
  keyword2hsv: keyword2hsv,
  keyword2hwb: keyword2hwb,
  keyword2cmyk: keyword2cmyk,
  keyword2lab: keyword2lab,
  keyword2xyz: keyword2xyz,

  xyz2rgb: xyz2rgb,
  xyz2lab: xyz2lab,
  xyz2lch: xyz2lch,

  lab2xyz: lab2xyz,
  lab2rgb: lab2rgb,
  lab2lch: lab2lch,

  lch2lab: lch2lab,
  lch2xyz: lch2xyz,
  lch2rgb: lch2rgb
}


function rgb2hsl(rgb) {
  var r = rgb[0]/255,
      g = rgb[1]/255,
      b = rgb[2]/255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, l;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g)/ delta;

  h = Math.min(h * 60, 360);

  if (h &lt; 0)
    h += 360;

  l = (min + max) / 2;

  if (max == min)
    s = 0;
  else if (l &lt;= 0.5)
    s = delta / (max + min);
  else
    s = delta / (2 - max - min);

  return [h, s * 100, l * 100];
}

function rgb2hsv(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, v;

  if (max == 0)
    s = 0;
  else
    s = (delta/max * 1000)/10;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g) / delta;

  h = Math.min(h * 60, 360);

  if (h &lt; 0)
    h += 360;

  v = ((max / 255) * 1000) / 10;

  return [h, s, v];
}

function rgb2hwb(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      h = rgb2hsl(rgb)[0],
      w = 1/255 * Math.min(r, Math.min(g, b)),
      b = 1 - 1/255 * Math.max(r, Math.max(g, b));

  return [h, w * 100, b * 100];
}

function rgb2cmyk(rgb) {
  var r = rgb[0] / 255,
      g = rgb[1] / 255,
      b = rgb[2] / 255,
      c, m, y, k;

  k = Math.min(1 - r, 1 - g, 1 - b);
  c = (1 - r - k) / (1 - k) || 0;
  m = (1 - g - k) / (1 - k) || 0;
  y = (1 - b - k) / (1 - k) || 0;
  return [c * 100, m * 100, y * 100, k * 100];
}

function rgb2keyword(rgb) {
  return reverseKeywords[JSON.stringify(rgb)];
}

function rgb2xyz(rgb) {
  var r = rgb[0] / 255,
      g = rgb[1] / 255,
      b = rgb[2] / 255;

  // assume sRGB
  r = r &gt; 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
  g = g &gt; 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
  b = b &gt; 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

  return [x * 100, y *100, z * 100];
}

function rgb2lab(rgb) {
  var xyz = rgb2xyz(rgb),
        x = xyz[0],
        y = xyz[1],
        z = xyz[2],
        l, a, b;

  x /= 95.047;
  y /= 100;
  z /= 108.883;

  x = x &gt; 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
  y = y &gt; 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
  z = z &gt; 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

  l = (116 * y) - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);

  return [l, a, b];
}

function rgb2lch(args) {
  return lab2lch(rgb2lab(args));
}

function hsl2rgb(hsl) {
  var h = hsl[0] / 360,
      s = hsl[1] / 100,
      l = hsl[2] / 100,
      t1, t2, t3, rgb, val;

  if (s == 0) {
    val = l * 255;
    return [val, val, val];
  }

  if (l &lt; 0.5)
    t2 = l * (1 + s);
  else
    t2 = l + s - l * s;
  t1 = 2 * l - t2;

  rgb = [0, 0, 0];
  for (var i = 0; i &lt; 3; i++) {
    t3 = h + 1 / 3 * - (i - 1);
    t3 &lt; 0 &amp;&amp; t3++;
    t3 &gt; 1 &amp;&amp; t3--;

    if (6 * t3 &lt; 1)
      val = t1 + (t2 - t1) * 6 * t3;
    else if (2 * t3 &lt; 1)
      val = t2;
    else if (3 * t3 &lt; 2)
      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
    else
      val = t1;

    rgb[i] = val * 255;
  }

  return rgb;
}

function hsl2hsv(hsl) {
  var h = hsl[0],
      s = hsl[1] / 100,
      l = hsl[2] / 100,
      sv, v;

  if(l === 0) {
      // no need to do calc on black
      // also avoids divide by 0 error
      return [0, 0, 0];
  }

  l *= 2;
  s *= (l &lt;= 1) ? l : 2 - l;
  v = (l + s) / 2;
  sv = (2 * s) / (l + s);
  return [h, sv * 100, v * 100];
}

function hsl2hwb(args) {
  return rgb2hwb(hsl2rgb(args));
}

function hsl2cmyk(args) {
  return rgb2cmyk(hsl2rgb(args));
}

function hsl2keyword(args) {
  return rgb2keyword(hsl2rgb(args));
}


function hsv2rgb(hsv) {
  var h = hsv[0] / 60,
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      hi = Math.floor(h) % 6;

  var f = h - Math.floor(h),
      p = 255 * v * (1 - s),
      q = 255 * v * (1 - (s * f)),
      t = 255 * v * (1 - (s * (1 - f))),
      v = 255 * v;

  switch(hi) {
    case 0:
      return [v, t, p];
    case 1:
      return [q, v, p];
    case 2:
      return [p, v, t];
    case 3:
      return [p, q, v];
    case 4:
      return [t, p, v];
    case 5:
      return [v, p, q];
  }
}

function hsv2hsl(hsv) {
  var h = hsv[0],
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      sl, l;

  l = (2 - s) * v;
  sl = s * v;
  sl /= (l &lt;= 1) ? l : 2 - l;
  sl = sl || 0;
  l /= 2;
  return [h, sl * 100, l * 100];
}

function hsv2hwb(args) {
  return rgb2hwb(hsv2rgb(args))
}

function hsv2cmyk(args) {
  return rgb2cmyk(hsv2rgb(args));
}

function hsv2keyword(args) {
  return rgb2keyword(hsv2rgb(args));
}

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
function hwb2rgb(hwb) {
  var h = hwb[0] / 360,
      wh = hwb[1] / 100,
      bl = hwb[2] / 100,
      ratio = wh + bl,
      i, v, f, n;

  // wh + bl cant be &gt; 1
  if (ratio &gt; 1) {
    wh /= ratio;
    bl /= ratio;
  }

  i = Math.floor(6 * h);
  v = 1 - bl;
  f = 6 * h - i;
  if ((i &amp; 0x01) != 0) {
    f = 1 - f;
  }
  n = wh + f * (v - wh);  // linear interpolation

  switch (i) {
    default:
    case 6:
    case 0: r = v; g = n; b = wh; break;
    case 1: r = n; g = v; b = wh; break;
    case 2: r = wh; g = v; b = n; break;
    case 3: r = wh; g = n; b = v; break;
    case 4: r = n; g = wh; b = v; break;
    case 5: r = v; g = wh; b = n; break;
  }

  return [r * 255, g * 255, b * 255];
}

function hwb2hsl(args) {
  return rgb2hsl(hwb2rgb(args));
}

function hwb2hsv(args) {
  return rgb2hsv(hwb2rgb(args));
}

function hwb2cmyk(args) {
  return rgb2cmyk(hwb2rgb(args));
}

function hwb2keyword(args) {
  return rgb2keyword(hwb2rgb(args));
}

function cmyk2rgb(cmyk) {
  var c = cmyk[0] / 100,
      m = cmyk[1] / 100,
      y = cmyk[2] / 100,
      k = cmyk[3] / 100,
      r, g, b;

  r = 1 - Math.min(1, c * (1 - k) + k);
  g = 1 - Math.min(1, m * (1 - k) + k);
  b = 1 - Math.min(1, y * (1 - k) + k);
  return [r * 255, g * 255, b * 255];
}

function cmyk2hsl(args) {
  return rgb2hsl(cmyk2rgb(args));
}

function cmyk2hsv(args) {
  return rgb2hsv(cmyk2rgb(args));
}

function cmyk2hwb(args) {
  return rgb2hwb(cmyk2rgb(args));
}

function cmyk2keyword(args) {
  return rgb2keyword(cmyk2rgb(args));
}


function xyz2rgb(xyz) {
  var x = xyz[0] / 100,
      y = xyz[1] / 100,
      z = xyz[2] / 100,
      r, g, b;

  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

  // assume sRGB
  r = r &gt; 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
    : r = (r * 12.92);

  g = g &gt; 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
    : g = (g * 12.92);

  b = b &gt; 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
    : b = (b * 12.92);

  r = Math.min(Math.max(0, r), 1);
  g = Math.min(Math.max(0, g), 1);
  b = Math.min(Math.max(0, b), 1);

  return [r * 255, g * 255, b * 255];
}

function xyz2lab(xyz) {
  var x = xyz[0],
      y = xyz[1],
      z = xyz[2],
      l, a, b;

  x /= 95.047;
  y /= 100;
  z /= 108.883;

  x = x &gt; 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
  y = y &gt; 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
  z = z &gt; 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

  l = (116 * y) - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);

  return [l, a, b];
}

function xyz2lch(args) {
  return lab2lch(xyz2lab(args));
}

function lab2xyz(lab) {
  var l = lab[0],
      a = lab[1],
      b = lab[2],
      x, y, z, y2;

  if (l &lt;= 8) {
    y = (l * 100) / 903.3;
    y2 = (7.787 * (y / 100)) + (16 / 116);
  } else {
    y = 100 * Math.pow((l + 16) / 116, 3);
    y2 = Math.pow(y / 100, 1/3);
  }

  x = x / 95.047 &lt;= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);

  z = z / 108.883 &lt;= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);

  return [x, y, z];
}

function lab2lch(lab) {
  var l = lab[0],
      a = lab[1],
      b = lab[2],
      hr, h, c;

  hr = Math.atan2(b, a);
  h = hr * 360 / 2 / Math.PI;
  if (h &lt; 0) {
    h += 360;
  }
  c = Math.sqrt(a * a + b * b);
  return [l, c, h];
}

function lab2rgb(args) {
  return xyz2rgb(lab2xyz(args));
}

function lch2lab(lch) {
  var l = lch[0],
      c = lch[1],
      h = lch[2],
      a, b, hr;

  hr = h / 360 * 2 * Math.PI;
  a = c * Math.cos(hr);
  b = c * Math.sin(hr);
  return [l, a, b];
}

function lch2xyz(args) {
  return lab2xyz(lch2lab(args));
}

function lch2rgb(args) {
  return lab2rgb(lch2lab(args));
}

function keyword2rgb(keyword) {
  return cssKeywords[keyword];
}

function keyword2hsl(args) {
  return rgb2hsl(keyword2rgb(args));
}

function keyword2hsv(args) {
  return rgb2hsv(keyword2rgb(args));
}

function keyword2hwb(args) {
  return rgb2hwb(keyword2rgb(args));
}

function keyword2cmyk(args) {
  return rgb2cmyk(keyword2rgb(args));
}

function keyword2lab(args) {
  return rgb2lab(keyword2rgb(args));
}

function keyword2xyz(args) {
  return rgb2xyz(keyword2rgb(args));
}

var cssKeywords = {
  aliceblue:  [240,248,255],
  antiquewhite: [250,235,215],
  aqua: [0,255,255],
  aquamarine: [127,255,212],
  azure:  [240,255,255],
  beige:  [245,245,220],
  bisque: [255,228,196],
  black:  [0,0,0],
  blanchedalmond: [255,235,205],
  blue: [0,0,255],
  blueviolet: [138,43,226],
  brown:  [165,42,42],
  burlywood:  [222,184,135],
  cadetblue:  [95,158,160],
  chartreuse: [127,255,0],
  chocolate:  [210,105,30],
  coral:  [255,127,80],
  cornflowerblue: [100,149,237],
  cornsilk: [255,248,220],
  crimson:  [220,20,60],
  cyan: [0,255,255],
  darkblue: [0,0,139],
  darkcyan: [0,139,139],
  darkgoldenrod:  [184,134,11],
  darkgray: [169,169,169],
  darkgreen:  [0,100,0],
  darkgrey: [169,169,169],
  darkkhaki:  [189,183,107],
  darkmagenta:  [139,0,139],
  darkolivegreen: [85,107,47],
  darkorange: [255,140,0],
  darkorchid: [153,50,204],
  darkred:  [139,0,0],
  darksalmon: [233,150,122],
  darkseagreen: [143,188,143],
  darkslateblue:  [72,61,139],
  darkslategray:  [47,79,79],
  darkslategrey:  [47,79,79],
  darkturquoise:  [0,206,209],
  darkviolet: [148,0,211],
  deeppink: [255,20,147],
  deepskyblue:  [0,191,255],
  dimgray:  [105,105,105],
  dimgrey:  [105,105,105],
  dodgerblue: [30,144,255],
  firebrick:  [178,34,34],
  floralwhite:  [255,250,240],
  forestgreen:  [34,139,34],
  fuchsia:  [255,0,255],
  gainsboro:  [220,220,220],
  ghostwhite: [248,248,255],
  gold: [255,215,0],
  goldenrod:  [218,165,32],
  gray: [128,128,128],
  green:  [0,128,0],
  greenyellow:  [173,255,47],
  grey: [128,128,128],
  honeydew: [240,255,240],
  hotpink:  [255,105,180],
  indianred:  [205,92,92],
  indigo: [75,0,130],
  ivory:  [255,255,240],
  khaki:  [240,230,140],
  lavender: [230,230,250],
  lavenderblush:  [255,240,245],
  lawngreen:  [124,252,0],
  lemonchiffon: [255,250,205],
  lightblue:  [173,216,230],
  lightcoral: [240,128,128],
  lightcyan:  [224,255,255],
  lightgoldenrodyellow: [250,250,210],
  lightgray:  [211,211,211],
  lightgreen: [144,238,144],
  lightgrey:  [211,211,211],
  lightpink:  [255,182,193],
  lightsalmon:  [255,160,122],
  lightseagreen:  [32,178,170],
  lightskyblue: [135,206,250],
  lightslategray: [119,136,153],
  lightslategrey: [119,136,153],
  lightsteelblue: [176,196,222],
  lightyellow:  [255,255,224],
  lime: [0,255,0],
  limegreen:  [50,205,50],
  linen:  [250,240,230],
  magenta:  [255,0,255],
  maroon: [128,0,0],
  mediumaquamarine: [102,205,170],
  mediumblue: [0,0,205],
  mediumorchid: [186,85,211],
  mediumpurple: [147,112,219],
  mediumseagreen: [60,179,113],
  mediumslateblue:  [123,104,238],
  mediumspringgreen:  [0,250,154],
  mediumturquoise:  [72,209,204],
  mediumvioletred:  [199,21,133],
  midnightblue: [25,25,112],
  mintcream:  [245,255,250],
  mistyrose:  [255,228,225],
  moccasin: [255,228,181],
  navajowhite:  [255,222,173],
  navy: [0,0,128],
  oldlace:  [253,245,230],
  olive:  [128,128,0],
  olivedrab:  [107,142,35],
  orange: [255,165,0],
  orangered:  [255,69,0],
  orchid: [218,112,214],
  palegoldenrod:  [238,232,170],
  palegreen:  [152,251,152],
  paleturquoise:  [175,238,238],
  palevioletred:  [219,112,147],
  papayawhip: [255,239,213],
  peachpuff:  [255,218,185],
  peru: [205,133,63],
  pink: [255,192,203],
  plum: [221,160,221],
  powderblue: [176,224,230],
  purple: [128,0,128],
  rebeccapurple: [102, 51, 153],
  red:  [255,0,0],
  rosybrown:  [188,143,143],
  royalblue:  [65,105,225],
  saddlebrown:  [139,69,19],
  salmon: [250,128,114],
  sandybrown: [244,164,96],
  seagreen: [46,139,87],
  seashell: [255,245,238],
  sienna: [160,82,45],
  silver: [192,192,192],
  skyblue:  [135,206,235],
  slateblue:  [106,90,205],
  slategray:  [112,128,144],
  slategrey:  [112,128,144],
  snow: [255,250,250],
  springgreen:  [0,255,127],
  steelblue:  [70,130,180],
  tan:  [210,180,140],
  teal: [0,128,128],
  thistle:  [216,191,216],
  tomato: [255,99,71],
  turquoise:  [64,224,208],
  violet: [238,130,238],
  wheat:  [245,222,179],
  white:  [255,255,255],
  whitesmoke: [245,245,245],
  yellow: [255,255,0],
  yellowgreen:  [154,205,50]
};

var reverseKeywords = {};
for (var key in cssKeywords) {
  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
}

},{}],5:[function(require,module,exports){
var conversions = require(4);

var convert = function() {
   return new Converter();
}

for (var func in conversions) {
  // export Raw versions
  convert[func + "Raw"] =  (function(func) {
    // accept array or plain args
    return function(arg) {
      if (typeof arg == "number")
        arg = Array.prototype.slice.call(arguments);
      return conversions[func](arg);
    }
  })(func);

  var pair = /(\w+)2(\w+)/.exec(func),
      from = pair[1],
      to = pair[2];

  // export rgb2hsl and ["rgb"]["hsl"]
  convert[from] = convert[from] || {};

  convert[from][to] = convert[func] = (function(func) { 
    return function(arg) {
      if (typeof arg == "number")
        arg = Array.prototype.slice.call(arguments);
      
      var val = conversions[func](arg);
      if (typeof val == "string" || val === undefined)
        return val; // keyword

      for (var i = 0; i &lt; val.length; i++)
        val[i] = Math.round(val[i]);
      return val;
    }
  })(func);
}


/* Converter does lazy conversion and caching */
var Converter = function() {
   this.convs = {};
};

/* Either get the values for a space or
  set the values for a space, depending on args */
Converter.prototype.routeSpace = function(space, args) {
   var values = args[0];
   if (values === undefined) {
      // color.rgb()
      return this.getValues(space);
   }
   // color.rgb(10, 10, 10)
   if (typeof values == "number") {
      values = Array.prototype.slice.call(args);        
   }

   return this.setValues(space, values);
};
  
/* Set the values for a space, invalidating cache */
Converter.prototype.setValues = function(space, values) {
   this.space = space;
   this.convs = {};
   this.convs[space] = values;
   return this;
};

/* Get the values for a space. If there's already
  a conversion for the space, fetch it, otherwise
  compute it */
Converter.prototype.getValues = function(space) {
   var vals = this.convs[space];
   if (!vals) {
      var fspace = this.space,
          from = this.convs[fspace];
      vals = convert[fspace][space](from);

      this.convs[space] = vals;
   }
  return vals;
};

["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
   Converter.prototype[space] = function(vals) {
      return this.routeSpace(space, arguments);
   }
});

module.exports = convert;
},{"4":4}],6:[function(require,module,exports){
module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};
},{}],7:[function(require,module,exports){
/**
 * @namespace Chart
 */
var Chart = require(28)();

require(26)(Chart);
require(22)(Chart);
require(25)(Chart);
require(21)(Chart);
require(23)(Chart);
require(24)(Chart);
require(29)(Chart);
require(33)(Chart);
require(31)(Chart);
require(34)(Chart);
require(32)(Chart);
require(35)(Chart);
require(30)(Chart);
require(27)(Chart);
require(36)(Chart);

require(37)(Chart);
require(38)(Chart);
require(39)(Chart);
require(40)(Chart);

require(43)(Chart);
require(41)(Chart);
require(42)(Chart);
require(44)(Chart);
require(45)(Chart);
require(46)(Chart);

// Controllers must be loaded after elements
// See Chart.core.datasetController.dataElementType
require(15)(Chart);
require(16)(Chart);
require(17)(Chart);
require(18)(Chart);
require(19)(Chart);
require(20)(Chart);

require(8)(Chart);
require(9)(Chart);
require(10)(Chart);
require(11)(Chart);
require(12)(Chart);
require(13)(Chart);
require(14)(Chart);

window.Chart = module.exports = Chart;

},{"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18,"19":19,"20":20,"21":21,"22":22,"23":23,"24":24,"25":25,"26":26,"27":27,"28":28,"29":29,"30":30,"31":31,"32":32,"33":33,"34":34,"35":35,"36":36,"37":37,"38":38,"39":39,"40":40,"41":41,"42":42,"43":43,"44":44,"45":45,"46":46,"8":8,"9":9}],8:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Bar = function(context, config) {
		config.type = 'bar';

		return new Chart(context, config);
	};

};

},{}],9:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Bubble = function(context, config) {
		config.type = 'bubble';
		return new Chart(context, config);
	};

};

},{}],10:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Doughnut = function(context, config) {
		config.type = 'doughnut';

		return new Chart(context, config);
	};

};

},{}],11:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Line = function(context, config) {
		config.type = 'line';

		return new Chart(context, config);
	};

};

},{}],12:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.PolarArea = function(context, config) {
		config.type = 'polarArea';

		return new Chart(context, config);
	};

};

},{}],13:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Radar = function(context, config) {
		config.type = 'radar';

		return new Chart(context, config);
	};

};

},{}],14:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var defaultConfig = {
		hover: {
			mode: 'single'
		},

		scales: {
			xAxes: [{
				type: 'linear', // scatter should not use a category axis
				position: 'bottom',
				id: 'x-axis-1' // need an ID so datasets can reference the scale
			}],
			yAxes: [{
				type: 'linear',
				position: 'left',
				id: 'y-axis-1'
			}]
		},

		tooltips: {
			callbacks: {
				title: function() {
					// Title doesn't make sense for scatter since we format the data as a point
					return '';
				},
				label: function(tooltipItem) {
					return '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';
				}
			}
		}
	};

	// Register the default config for this type
	Chart.defaults.scatter = defaultConfig;

	// Scatter charts use line controllers
	Chart.controllers.scatter = Chart.controllers.line;

	Chart.Scatter = function(context, config) {
		config.type = 'scatter';
		return new Chart(context, config);
	};

};

},{}],15:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.bar = {
		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'category',

				// Specific to Bar Controller
				categoryPercentage: 0.8,
				barPercentage: 0.9,

				// grid line settings
				gridLines: {
					offsetGridLines: true
				}
			}],
			yAxes: [{
				type: 'linear'
			}]
		}
	};

	Chart.controllers.bar = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Rectangle,

		initialize: function(chart, datasetIndex) {
			Chart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);

			// Use this to indicate that this is a bar dataset.
			this.getMeta().bar = true;
		},

		// Get the number of datasets that display bars. We use this to correctly calculate the bar width
		getBarCount: function() {
			var me = this;
			var barCount = 0;
			helpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {
				var meta = me.chart.getDatasetMeta(datasetIndex);
				if (meta.bar &amp;&amp; me.chart.isDatasetVisible(datasetIndex)) {
					++barCount;
				}
			}, me);
			return barCount;
		},

		update: function(reset) {
			var me = this;
			helpers.each(me.getMeta().data, function(rectangle, index) {
				me.updateElement(rectangle, index, reset);
			}, me);
		},

		updateElement: function(rectangle, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var yScale = me.getScaleForId(meta.yAxisID);
			var scaleBase = yScale.getBasePixel();
			var rectangleElementOptions = me.chart.options.elements.rectangle;
			var custom = rectangle.custom || {};
			var dataset = me.getDataset();

			rectangle._xScale = xScale;
			rectangle._yScale = yScale;
			rectangle._datasetIndex = me.index;
			rectangle._index = index;

			var ruler = me.getRuler(index);
			rectangle._model = {
				x: me.calculateBarX(index, me.index, ruler),
				y: reset ? scaleBase : me.calculateBarY(index, me.index),

				// Tooltip
				label: me.chart.data.labels[index],
				datasetLabel: dataset.label,

				// Appearance
				base: reset ? scaleBase : me.calculateBarBase(me.index, index),
				width: me.calculateBarWidth(ruler),
				backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),
				borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,
				borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),
				borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)
			};

			rectangle.pivot();
		},

		calculateBarBase: function(datasetIndex, index) {
			var me = this;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var base = 0;

			if (yScale.options.stacked) {
				var chart = me.chart;
				var datasets = chart.data.datasets;
				var value = Number(datasets[datasetIndex].data[index]);

				for (var i = 0; i &lt; datasetIndex; i++) {
					var currentDs = datasets[i];
					var currentDsMeta = chart.getDatasetMeta(i);
					if (currentDsMeta.bar &amp;&amp; currentDsMeta.yAxisID === yScale.id &amp;&amp; chart.isDatasetVisible(i)) {
						var currentVal = Number(currentDs.data[index]);
						base += value &lt; 0 ? Math.min(currentVal, 0) : Math.max(currentVal, 0);
					}
				}

				return yScale.getPixelForValue(base);
			}

			return yScale.getBasePixel();
		},

		getRuler: function(index) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var datasetCount = me.getBarCount();

			var tickWidth;

			if (xScale.options.type === 'category') {
				tickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);
			} else {
				// Average width
				tickWidth = xScale.width / xScale.ticks.length;
			}
			var categoryWidth = tickWidth * xScale.options.categoryPercentage;
			var categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;
			var fullBarWidth = categoryWidth / datasetCount;

			if (xScale.ticks.length !== me.chart.data.labels.length) {
				var perc = xScale.ticks.length / me.chart.data.labels.length;
				fullBarWidth = fullBarWidth * perc;
			}

			var barWidth = fullBarWidth * xScale.options.barPercentage;
			var barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);

			return {
				datasetCount: datasetCount,
				tickWidth: tickWidth,
				categoryWidth: categoryWidth,
				categorySpacing: categorySpacing,
				fullBarWidth: fullBarWidth,
				barWidth: barWidth,
				barSpacing: barSpacing
			};
		},

		calculateBarWidth: function(ruler) {
			var xScale = this.getScaleForId(this.getMeta().xAxisID);
			if (xScale.options.barThickness) {
				return xScale.options.barThickness;
			}
			return xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;
		},

		// Get bar index from the given dataset index accounting for the fact that not all bars are visible
		getBarIndex: function(datasetIndex) {
			var barIndex = 0;
			var meta, j;

			for (j = 0; j &lt; datasetIndex; ++j) {
				meta = this.chart.getDatasetMeta(j);
				if (meta.bar &amp;&amp; this.chart.isDatasetVisible(j)) {
					++barIndex;
				}
			}

			return barIndex;
		},

		calculateBarX: function(index, datasetIndex, ruler) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var barIndex = me.getBarIndex(datasetIndex);
			var leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);
			leftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;

			if (xScale.options.stacked) {
				return leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;
			}

			return leftTick +
				(ruler.barWidth / 2) +
				ruler.categorySpacing +
				(ruler.barWidth * barIndex) +
				(ruler.barSpacing / 2) +
				(ruler.barSpacing * barIndex);
		},

		calculateBarY: function(index, datasetIndex) {
			var me = this;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var value = Number(me.getDataset().data[index]);

			if (yScale.options.stacked) {

				var sumPos = 0,
					sumNeg = 0;

				for (var i = 0; i &lt; datasetIndex; i++) {
					var ds = me.chart.data.datasets[i];
					var dsMeta = me.chart.getDatasetMeta(i);
					if (dsMeta.bar &amp;&amp; dsMeta.yAxisID === yScale.id &amp;&amp; me.chart.isDatasetVisible(i)) {
						var stackedVal = Number(ds.data[index]);
						if (stackedVal &lt; 0) {
							sumNeg += stackedVal || 0;
						} else {
							sumPos += stackedVal || 0;
						}
					}
				}

				if (value &lt; 0) {
					return yScale.getPixelForValue(sumNeg + value);
				}
				return yScale.getPixelForValue(sumPos + value);
			}

			return yScale.getPixelForValue(value);
		},

		draw: function(ease) {
			var me = this;
			var easingDecimal = ease || 1;
			var metaData = me.getMeta().data;
			var dataset = me.getDataset();
			var i, len;

			for (i = 0, len = metaData.length; i &lt; len; ++i) {
				var d = dataset.data[i];
				if (d !== null &amp;&amp; d !== undefined &amp;&amp; !isNaN(d)) {
					metaData[i].transition(easingDecimal).draw();
				}
			}
		},

		setHoverStyle: function(rectangle) {
			var dataset = this.chart.data.datasets[rectangle._datasetIndex];
			var index = rectangle._index;

			var custom = rectangle.custom || {};
			var model = rectangle._model;
			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
		},

		removeHoverStyle: function(rectangle) {
			var dataset = this.chart.data.datasets[rectangle._datasetIndex];
			var index = rectangle._index;
			var custom = rectangle.custom || {};
			var model = rectangle._model;
			var rectangleElementOptions = this.chart.options.elements.rectangle;

			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);
		}

	});


	// including horizontalBar in the bar file, instead of a file of its own
	// it extends bar (like pie extends doughnut)
	Chart.defaults.horizontalBar = {
		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'linear',
				position: 'bottom'
			}],
			yAxes: [{
				position: 'left',
				type: 'category',

				// Specific to Horizontal Bar Controller
				categoryPercentage: 0.8,
				barPercentage: 0.9,

				// grid line settings
				gridLines: {
					offsetGridLines: true
				}
			}]
		},
		elements: {
			rectangle: {
				borderSkipped: 'left'
			}
		},
		tooltips: {
			callbacks: {
				title: function(tooltipItems, data) {
					// Pick first xLabel for now
					var title = '';

					if (tooltipItems.length &gt; 0) {
						if (tooltipItems[0].yLabel) {
							title = tooltipItems[0].yLabel;
						} else if (data.labels.length &gt; 0 &amp;&amp; tooltipItems[0].index &lt; data.labels.length) {
							title = data.labels[tooltipItems[0].index];
						}
					}

					return title;
				},
				label: function(tooltipItem, data) {
					var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';
					return datasetLabel + ': ' + tooltipItem.xLabel;
				}
			}
		}
	};

	Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
		updateElement: function(rectangle, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var yScale = me.getScaleForId(meta.yAxisID);
			var scaleBase = xScale.getBasePixel();
			var custom = rectangle.custom || {};
			var dataset = me.getDataset();
			var rectangleElementOptions = me.chart.options.elements.rectangle;

			rectangle._xScale = xScale;
			rectangle._yScale = yScale;
			rectangle._datasetIndex = me.index;
			rectangle._index = index;

			var ruler = me.getRuler(index);
			rectangle._model = {
				x: reset ? scaleBase : me.calculateBarX(index, me.index),
				y: me.calculateBarY(index, me.index, ruler),

				// Tooltip
				label: me.chart.data.labels[index],
				datasetLabel: dataset.label,

				// Appearance
				base: reset ? scaleBase : me.calculateBarBase(me.index, index),
				height: me.calculateBarHeight(ruler),
				backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),
				borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,
				borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),
				borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)
			};
			rectangle.draw = function() {
				var ctx = this._chart.ctx;
				var vm = this._view;

				var halfHeight = vm.height / 2,
					topY = vm.y - halfHeight,
					bottomY = vm.y + halfHeight,
					right = vm.base - (vm.base - vm.x),
					halfStroke = vm.borderWidth / 2;

				// Canvas doesn't allow us to stroke inside the width so we can
				// adjust the sizes to fit if we're setting a stroke on the line
				if (vm.borderWidth) {
					topY += halfStroke;
					bottomY -= halfStroke;
					right += halfStroke;
				}

				ctx.beginPath();

				ctx.fillStyle = vm.backgroundColor;
				ctx.strokeStyle = vm.borderColor;
				ctx.lineWidth = vm.borderWidth;

				// Corner points, from bottom-left to bottom-right clockwise
				// | 1 2 |
				// | 0 3 |
				var corners = [
					[vm.base, bottomY],
					[vm.base, topY],
					[right, topY],
					[right, bottomY]
				];

				// Find first (starting) corner with fallback to 'bottom'
				var borders = ['bottom', 'left', 'top', 'right'];
				var startCorner = borders.indexOf(vm.borderSkipped, 0);
				if (startCorner === -1) {
					startCorner = 0;
				}

				function cornerAt(cornerIndex) {
					return corners[(startCorner + cornerIndex) % 4];
				}

				// Draw rectangle from 'startCorner'
				ctx.moveTo.apply(ctx, cornerAt(0));
				for (var i = 1; i &lt; 4; i++) {
					ctx.lineTo.apply(ctx, cornerAt(i));
				}

				ctx.fill();
				if (vm.borderWidth) {
					ctx.stroke();
				}
			};

			rectangle.pivot();
		},

		calculateBarBase: function(datasetIndex, index) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var base = 0;

			if (xScale.options.stacked) {
				var chart = me.chart;
				var datasets = chart.data.datasets;
				var value = Number(datasets[datasetIndex].data[index]);

				for (var i = 0; i &lt; datasetIndex; i++) {
					var currentDs = datasets[i];
					var currentDsMeta = chart.getDatasetMeta(i);
					if (currentDsMeta.bar &amp;&amp; currentDsMeta.xAxisID === xScale.id &amp;&amp; chart.isDatasetVisible(i)) {
						var currentVal = Number(currentDs.data[index]);
						base += value &lt; 0 ? Math.min(currentVal, 0) : Math.max(currentVal, 0);
					}
				}

				return xScale.getPixelForValue(base);
			}

			return xScale.getBasePixel();
		},

		getRuler: function(index) {
			var me = this;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var datasetCount = me.getBarCount();

			var tickHeight;
			if (yScale.options.type === 'category') {
				tickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);
			} else {
				// Average width
				tickHeight = yScale.width / yScale.ticks.length;
			}
			var categoryHeight = tickHeight * yScale.options.categoryPercentage;
			var categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;
			var fullBarHeight = categoryHeight / datasetCount;

			if (yScale.ticks.length !== me.chart.data.labels.length) {
				var perc = yScale.ticks.length / me.chart.data.labels.length;
				fullBarHeight = fullBarHeight * perc;
			}

			var barHeight = fullBarHeight * yScale.options.barPercentage;
			var barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);

			return {
				datasetCount: datasetCount,
				tickHeight: tickHeight,
				categoryHeight: categoryHeight,
				categorySpacing: categorySpacing,
				fullBarHeight: fullBarHeight,
				barHeight: barHeight,
				barSpacing: barSpacing
			};
		},

		calculateBarHeight: function(ruler) {
			var me = this;
			var yScale = me.getScaleForId(me.getMeta().yAxisID);
			if (yScale.options.barThickness) {
				return yScale.options.barThickness;
			}
			return yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;
		},

		calculateBarX: function(index, datasetIndex) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var value = Number(me.getDataset().data[index]);

			if (xScale.options.stacked) {

				var sumPos = 0,
					sumNeg = 0;

				for (var i = 0; i &lt; datasetIndex; i++) {
					var ds = me.chart.data.datasets[i];
					var dsMeta = me.chart.getDatasetMeta(i);
					if (dsMeta.bar &amp;&amp; dsMeta.xAxisID === xScale.id &amp;&amp; me.chart.isDatasetVisible(i)) {
						var stackedVal = Number(ds.data[index]);
						if (stackedVal &lt; 0) {
							sumNeg += stackedVal || 0;
						} else {
							sumPos += stackedVal || 0;
						}
					}
				}

				if (value &lt; 0) {
					return xScale.getPixelForValue(sumNeg + value);
				}
				return xScale.getPixelForValue(sumPos + value);
			}

			return xScale.getPixelForValue(value);
		},

		calculateBarY: function(index, datasetIndex, ruler) {
			var me = this;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var barIndex = me.getBarIndex(datasetIndex);
			var topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);
			topTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;

			if (yScale.options.stacked) {
				return topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;
			}

			return topTick +
				(ruler.barHeight / 2) +
				ruler.categorySpacing +
				(ruler.barHeight * barIndex) +
				(ruler.barSpacing / 2) +
				(ruler.barSpacing * barIndex);
		}
	});
};

},{}],16:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.bubble = {
		hover: {
			mode: 'single'
		},

		scales: {
			xAxes: [{
				type: 'linear', // bubble should probably use a linear scale by default
				position: 'bottom',
				id: 'x-axis-0' // need an ID so datasets can reference the scale
			}],
			yAxes: [{
				type: 'linear',
				position: 'left',
				id: 'y-axis-0'
			}]
		},

		tooltips: {
			callbacks: {
				title: function() {
					// Title doesn't make sense for scatter since we format the data as a point
					return '';
				},
				label: function(tooltipItem, data) {
					var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';
					var dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
					return datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';
				}
			}
		}
	};

	Chart.controllers.bubble = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Point,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var points = meta.data;

			// Update Points
			helpers.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			});
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var yScale = me.getScaleForId(meta.yAxisID);

			var custom = point.custom || {};
			var dataset = me.getDataset();
			var data = dataset.data[index];
			var pointElementOptions = me.chart.options.elements.point;
			var dsIndex = me.index;

			helpers.extend(point, {
				// Utility
				_xScale: xScale,
				_yScale: yScale,
				_datasetIndex: dsIndex,
				_index: index,

				// Desired view properties
				_model: {
					x: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),
					y: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),
					// Appearance
					radius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),

					// Tooltip
					hitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)
				}
			});

			// Trick to reset the styles of the point
			Chart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);

			var model = point._model;
			model.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));

			point.pivot();
		},

		getRadius: function(value) {
			return value.r || this.chart.options.elements.point.radius;
		},

		setHoverStyle: function(point) {
			var me = this;
			Chart.DatasetController.prototype.setHoverStyle.call(me, point);

			// Radius
			var dataset = me.chart.data.datasets[point._datasetIndex];
			var index = point._index;
			var custom = point.custom || {};
			var model = point._model;
			model.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);
		},

		removeHoverStyle: function(point) {
			var me = this;
			Chart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);

			var dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];
			var custom = point.custom || {};
			var model = point._model;

			model.radius = custom.radius ? custom.radius : me.getRadius(dataVal);
		}
	});
};

},{}],17:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		defaults = Chart.defaults;

	defaults.doughnut = {
		animation: {
			// Boolean - Whether we animate the rotation of the Doughnut
			animateRotate: true,
			// Boolean - Whether we animate scaling the Doughnut from the centre
			animateScale: false
		},
		aspectRatio: 1,
		hover: {
			mode: 'single'
		},
		legendCallback: function(chart) {
			var text = [];
			text.push('&lt;ul class="' + chart.id + '-legend"&gt;');

			var data = chart.data;
			var datasets = data.datasets;
			var labels = data.labels;

			if (datasets.length) {
				for (var i = 0; i &lt; datasets[0].data.length; ++i) {
					text.push('&lt;li&gt;&lt;span style="background-color:' + datasets[0].backgroundColor[i] + '"&gt;&lt;/span&gt;');
					if (labels[i]) {
						text.push(labels[i]);
					}
					text.push('&lt;/li&gt;');
				}
			}

			text.push('&lt;/ul&gt;');
			return text.join('');
		},
		legend: {
			labels: {
				generateLabels: function(chart) {
					var data = chart.data;
					if (data.labels.length &amp;&amp; data.datasets.length) {
						return data.labels.map(function(label, i) {
							var meta = chart.getDatasetMeta(0);
							var ds = data.datasets[0];
							var arc = meta.data[i];
							var custom = arc &amp;&amp; arc.custom || {};
							var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
							var arcOpts = chart.options.elements.arc;
							var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
							var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
							var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

							return {
								text: label,
								fillStyle: fill,
								strokeStyle: stroke,
								lineWidth: bw,
								hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

								// Extra data used for toggling the correct item
								index: i
							};
						});
					}
					return [];
				}
			},

			onClick: function(e, legendItem) {
				var index = legendItem.index;
				var chart = this.chart;
				var i, ilen, meta;

				for (i = 0, ilen = (chart.data.datasets || []).length; i &lt; ilen; ++i) {
					meta = chart.getDatasetMeta(i);
					// toggle visibility of index if exists
					if (meta.data[index]) {
						meta.data[index].hidden = !meta.data[index].hidden;
					}
				}

				chart.update();
			}
		},

		// The percentage of the chart that we cut out of the middle.
		cutoutPercentage: 50,

		// The rotation of the chart, where the first data arc begins.
		rotation: Math.PI * -0.5,

		// The total circumference of the chart.
		circumference: Math.PI * 2.0,

		// Need to override these to give a nice default
		tooltips: {
			callbacks: {
				title: function() {
					return '';
				},
				label: function(tooltipItem, data) {
					var dataLabel = data.labels[tooltipItem.index];
					var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

					if (helpers.isArray(dataLabel)) {
						// show value on first line of multiline label
						// need to clone because we are changing the value
						dataLabel = dataLabel.slice();
						dataLabel[0] += value;
					} else {
						dataLabel += value;
					}

					return dataLabel;
				}
			}
		}
	};

	defaults.pie = helpers.clone(defaults.doughnut);
	helpers.extend(defaults.pie, {
		cutoutPercentage: 0
	});


	Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Arc,

		linkScales: helpers.noop,

		// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
		getRingIndex: function(datasetIndex) {
			var ringIndex = 0;

			for (var j = 0; j &lt; datasetIndex; ++j) {
				if (this.chart.isDatasetVisible(j)) {
					++ringIndex;
				}
			}

			return ringIndex;
		},

		update: function(reset) {
			var me = this;
			var chart = me.chart,
				chartArea = chart.chartArea,
				opts = chart.options,
				arcOpts = opts.elements.arc,
				availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,
				availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,
				minSize = Math.min(availableWidth, availableHeight),
				offset = {
					x: 0,
					y: 0
				},
				meta = me.getMeta(),
				cutoutPercentage = opts.cutoutPercentage,
				circumference = opts.circumference;

			// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
			if (circumference &lt; Math.PI * 2.0) {
				var startAngle = opts.rotation % (Math.PI * 2.0);
				startAngle += Math.PI * 2.0 * (startAngle &gt;= Math.PI ? -1 : startAngle &lt; -Math.PI ? 1 : 0);
				var endAngle = startAngle + circumference;
				var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};
				var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};
				var contains0 = (startAngle &lt;= 0 &amp;&amp; 0 &lt;= endAngle) || (startAngle &lt;= Math.PI * 2.0 &amp;&amp; Math.PI * 2.0 &lt;= endAngle);
				var contains90 = (startAngle &lt;= Math.PI * 0.5 &amp;&amp; Math.PI * 0.5 &lt;= endAngle) || (startAngle &lt;= Math.PI * 2.5 &amp;&amp; Math.PI * 2.5 &lt;= endAngle);
				var contains180 = (startAngle &lt;= -Math.PI &amp;&amp; -Math.PI &lt;= endAngle) || (startAngle &lt;= Math.PI &amp;&amp; Math.PI &lt;= endAngle);
				var contains270 = (startAngle &lt;= -Math.PI * 0.5 &amp;&amp; -Math.PI * 0.5 &lt;= endAngle) || (startAngle &lt;= Math.PI * 1.5 &amp;&amp; Math.PI * 1.5 &lt;= endAngle);
				var cutout = cutoutPercentage / 100.0;
				var min = {x: contains180 ? -1 : Math.min(start.x * (start.x &lt; 0 ? 1 : cutout), end.x * (end.x &lt; 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y &lt; 0 ? 1 : cutout), end.y * (end.y &lt; 0 ? 1 : cutout))};
				var max = {x: contains0 ? 1 : Math.max(start.x * (start.x &gt; 0 ? 1 : cutout), end.x * (end.x &gt; 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y &gt; 0 ? 1 : cutout), end.y * (end.y &gt; 0 ? 1 : cutout))};
				var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};
				minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
				offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};
			}

			chart.borderWidth = me.getMaxBorderWidth(meta.data);
			chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
			chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
			chart.offsetX = offset.x * chart.outerRadius;
			chart.offsetY = offset.y * chart.outerRadius;

			meta.total = me.calculateTotal();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));
			me.innerRadius = me.outerRadius - chart.radiusLength;

			helpers.each(meta.data, function(arc, index) {
				me.updateElement(arc, index, reset);
			});
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart,
				chartArea = chart.chartArea,
				opts = chart.options,
				animationOpts = opts.animation,
				centerX = (chartArea.left + chartArea.right) / 2,
				centerY = (chartArea.top + chartArea.bottom) / 2,
				startAngle = opts.rotation, // non reset case handled later
				endAngle = opts.rotation, // non reset case handled later
				dataset = me.getDataset(),
				circumference = reset &amp;&amp; animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),
				innerRadius = reset &amp;&amp; animationOpts.animateScale ? 0 : me.innerRadius,
				outerRadius = reset &amp;&amp; animationOpts.animateScale ? 0 : me.outerRadius,
				valueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;

			helpers.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,

				// Desired view properties
				_model: {
					x: centerX + chart.offsetX,
					y: centerY + chart.offsetY,
					startAngle: startAngle,
					endAngle: endAngle,
					circumference: circumference,
					outerRadius: outerRadius,
					innerRadius: innerRadius,
					label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
				}
			});

			var model = arc._model;
			// Resets the visual styles
			this.removeHoverStyle(arc);

			// Set correct angles if not resetting
			if (!reset || !animationOpts.animateRotate) {
				if (index === 0) {
					model.startAngle = opts.rotation;
				} else {
					model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
				}

				model.endAngle = model.startAngle + model.circumference;
			}

			arc.pivot();
		},

		removeHoverStyle: function(arc) {
			Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
		},

		calculateTotal: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var total = 0;
			var value;

			helpers.each(meta.data, function(element, index) {
				value = dataset.data[index];
				if (!isNaN(value) &amp;&amp; !element.hidden) {
					total += Math.abs(value);
				}
			});

			/* if (total === 0) {
				total = NaN;
			}*/

			return total;
		},

		calculateCircumference: function(value) {
			var total = this.getMeta().total;
			if (total &gt; 0 &amp;&amp; !isNaN(value)) {
				return (Math.PI * 2.0) * (value / total);
			}
			return 0;
		},

		// gets the max border or hover width to properly scale pie charts
		getMaxBorderWidth: function(elements) {
			var max = 0,
				index = this.index,
				length = elements.length,
				borderWidth,
				hoverWidth;

			for (var i = 0; i &lt; length; i++) {
				borderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;
				hoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;

				max = borderWidth &gt; max ? borderWidth : max;
				max = hoverWidth &gt; max ? hoverWidth : max;
			}
			return max;
		}
	});
};

},{}],18:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.line = {
		showLines: true,
		spanGaps: false,

		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'category',
				id: 'x-axis-0'
			}],
			yAxes: [{
				type: 'linear',
				id: 'y-axis-0'
			}]
		}
	};

	function lineEnabled(dataset, options) {
		return helpers.getValueOrDefault(dataset.showLine, options.showLines);
	}

	Chart.controllers.line = Chart.DatasetController.extend({

		datasetElementType: Chart.elements.Line,

		dataElementType: Chart.elements.Point,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data || [];
			var options = me.chart.options;
			var lineElementOptions = options.elements.line;
			var scale = me.getScaleForId(meta.yAxisID);
			var i, ilen, custom;
			var dataset = me.getDataset();
			var showLine = lineEnabled(dataset, options);

			// Update Line
			if (showLine) {
				custom = line.custom || {};

				// Compatibility: If the properties are defined with only the old name, use those values
				if ((dataset.tension !== undefined) &amp;&amp; (dataset.lineTension === undefined)) {
					dataset.lineTension = dataset.tension;
				}

				// Utility
				line._scale = scale;
				line._datasetIndex = me.index;
				// Data
				line._children = points;
				// Model
				line._model = {
					// Appearance
					// The default behavior of lines is to break at null values, according
					// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
					// This option gives lines the ability to span gaps
					spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
					tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
					steppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
					cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),
					// Scale
					scaleTop: scale.top,
					scaleBottom: scale.bottom,
					scaleZero: scale.getBasePixel()
				};

				line.pivot();
			}

			// Update Points
			for (i=0, ilen=points.length; i&lt;ilen; ++i) {
				me.updateElement(points[i], i, reset);
			}

			if (showLine &amp;&amp; line._model.tension !== 0) {
				me.updateBezierControlPoints();
			}

			// Now pivot the point for animation
			for (i=0, ilen=points.length; i&lt;ilen; ++i) {
				points[i].pivot();
			}
		},

		getPointBackgroundColor: function(point, index) {
			var backgroundColor = this.chart.options.elements.point.backgroundColor;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.backgroundColor) {
				backgroundColor = custom.backgroundColor;
			} else if (dataset.pointBackgroundColor) {
				backgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);
			} else if (dataset.backgroundColor) {
				backgroundColor = dataset.backgroundColor;
			}

			return backgroundColor;
		},

		getPointBorderColor: function(point, index) {
			var borderColor = this.chart.options.elements.point.borderColor;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.borderColor) {
				borderColor = custom.borderColor;
			} else if (dataset.pointBorderColor) {
				borderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);
			} else if (dataset.borderColor) {
				borderColor = dataset.borderColor;
			}

			return borderColor;
		},

		getPointBorderWidth: function(point, index) {
			var borderWidth = this.chart.options.elements.point.borderWidth;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.borderWidth) {
				borderWidth = custom.borderWidth;
			} else if (dataset.pointBorderWidth) {
				borderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);
			} else if (dataset.borderWidth) {
				borderWidth = dataset.borderWidth;
			}

			return borderWidth;
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var datasetIndex = me.index;
			var value = dataset.data[index];
			var yScale = me.getScaleForId(meta.yAxisID);
			var xScale = me.getScaleForId(meta.xAxisID);
			var pointOptions = me.chart.options.elements.point;
			var x, y;
			var labels = me.chart.data.labels || [];
			var includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) &amp;&amp; (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}
			if ((dataset.hitRadius !== undefined) &amp;&amp; (dataset.pointHitRadius === undefined)) {
				dataset.pointHitRadius = dataset.hitRadius;
			}

			x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);
			y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

			// Utility
			point._xScale = xScale;
			point._yScale = yScale;
			point._datasetIndex = datasetIndex;
			point._index = index;

			// Desired view properties
			point._model = {
				x: x,
				y: y,
				skip: custom.skip || isNaN(x) || isNaN(y),
				// Appearance
				radius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
				pointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
				backgroundColor: me.getPointBackgroundColor(point, index),
				borderColor: me.getPointBorderColor(point, index),
				borderWidth: me.getPointBorderWidth(point, index),
				tension: meta.dataset._model ? meta.dataset._model.tension : 0,
				steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
				// Tooltip
				hitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
			};
		},

		calculatePointY: function(value, index, datasetIndex) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var sumPos = 0;
			var sumNeg = 0;
			var i, ds, dsMeta;

			if (yScale.options.stacked) {
				for (i = 0; i &lt; datasetIndex; i++) {
					ds = chart.data.datasets[i];
					dsMeta = chart.getDatasetMeta(i);
					if (dsMeta.type === 'line' &amp;&amp; dsMeta.yAxisID === yScale.id &amp;&amp; chart.isDatasetVisible(i)) {
						var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
						if (stackedRightValue &lt; 0) {
							sumNeg += stackedRightValue || 0;
						} else {
							sumPos += stackedRightValue || 0;
						}
					}
				}

				var rightValue = Number(yScale.getRightValue(value));
				if (rightValue &lt; 0) {
					return yScale.getPixelForValue(sumNeg + rightValue);
				}
				return yScale.getPixelForValue(sumPos + rightValue);
			}

			return yScale.getPixelForValue(value);
		},

		updateBezierControlPoints: function() {
			var me = this;
			var meta = me.getMeta();
			var area = me.chart.chartArea;
			var points = (meta.data || []);
			var i, ilen, point, model, controlPoints;

			// Only consider points that are drawn in case the spanGaps option is used
			if (meta.dataset._model.spanGaps) {
				points = points.filter(function(pt) {
					return !pt._model.skip;
				});
			}

			function capControlPoint(pt, min, max) {
				return Math.max(Math.min(pt, max), min);
			}

			if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
				helpers.splineCurveMonotone(points);
			} else {
				for (i = 0, ilen = points.length; i &lt; ilen; ++i) {
					point = points[i];
					model = point._model;
					controlPoints = helpers.splineCurve(
						helpers.previousItem(points, i)._model,
						model,
						helpers.nextItem(points, i)._model,
						meta.dataset._model.tension
					);
					model.controlPointPreviousX = controlPoints.previous.x;
					model.controlPointPreviousY = controlPoints.previous.y;
					model.controlPointNextX = controlPoints.next.x;
					model.controlPointNextY = controlPoints.next.y;
				}
			}

			if (me.chart.options.elements.line.capBezierPoints) {
				for (i = 0, ilen = points.length; i &lt; ilen; ++i) {
					model = points[i]._model;
					model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
					model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
					model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
					model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
				}
			}
		},

		draw: function(ease) {
			var me = this;
			var meta = me.getMeta();
			var points = meta.data || [];
			var easingDecimal = ease || 1;
			var i, ilen;

			// Transition Point Locations
			for (i=0, ilen=points.length; i&lt;ilen; ++i) {
				points[i].transition(easingDecimal);
			}

			// Transition and Draw the line
			if (lineEnabled(me.getDataset(), me.chart.options)) {
				meta.dataset.transition(easingDecimal).draw();
			}

			// Draw the points
			for (i=0, ilen=points.length; i&lt;ilen; ++i) {
				points[i].draw();
			}
		},

		setHoverStyle: function(point) {
			// Point
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var index = point._index;
			var custom = point.custom || {};
			var model = point._model;

			model.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
			model.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
		},

		removeHoverStyle: function(point) {
			var me = this;
			var dataset = me.chart.data.datasets[point._datasetIndex];
			var index = point._index;
			var custom = point.custom || {};
			var model = point._model;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) &amp;&amp; (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}

			model.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);
			model.backgroundColor = me.getPointBackgroundColor(point, index);
			model.borderColor = me.getPointBorderColor(point, index);
			model.borderWidth = me.getPointBorderWidth(point, index);
		}
	});
};

},{}],19:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.polarArea = {

		scale: {
			type: 'radialLinear',
			lineArc: true, // so that lines are circular
			ticks: {
				beginAtZero: true
			}
		},

		// Boolean - Whether to animate the rotation of the chart
		animation: {
			animateRotate: true,
			animateScale: true
		},

		startAngle: -0.5 * Math.PI,
		aspectRatio: 1,
		legendCallback: function(chart) {
			var text = [];
			text.push('&lt;ul class="' + chart.id + '-legend"&gt;');

			var data = chart.data;
			var datasets = data.datasets;
			var labels = data.labels;

			if (datasets.length) {
				for (var i = 0; i &lt; datasets[0].data.length; ++i) {
					text.push('&lt;li&gt;&lt;span style="background-color:' + datasets[0].backgroundColor[i] + '"&gt;&lt;/span&gt;');
					if (labels[i]) {
						text.push(labels[i]);
					}
					text.push('&lt;/li&gt;');
				}
			}

			text.push('&lt;/ul&gt;');
			return text.join('');
		},
		legend: {
			labels: {
				generateLabels: function(chart) {
					var data = chart.data;
					if (data.labels.length &amp;&amp; data.datasets.length) {
						return data.labels.map(function(label, i) {
							var meta = chart.getDatasetMeta(0);
							var ds = data.datasets[0];
							var arc = meta.data[i];
							var custom = arc.custom || {};
							var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
							var arcOpts = chart.options.elements.arc;
							var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
							var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
							var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

							return {
								text: label,
								fillStyle: fill,
								strokeStyle: stroke,
								lineWidth: bw,
								hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

								// Extra data used for toggling the correct item
								index: i
							};
						});
					}
					return [];
				}
			},

			onClick: function(e, legendItem) {
				var index = legendItem.index;
				var chart = this.chart;
				var i, ilen, meta;

				for (i = 0, ilen = (chart.data.datasets || []).length; i &lt; ilen; ++i) {
					meta = chart.getDatasetMeta(i);
					meta.data[index].hidden = !meta.data[index].hidden;
				}

				chart.update();
			}
		},

		// Need to override these to give a nice default
		tooltips: {
			callbacks: {
				title: function() {
					return '';
				},
				label: function(tooltipItem, data) {
					return data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;
				}
			}
		}
	};

	Chart.controllers.polarArea = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Arc,

		linkScales: helpers.noop,

		update: function(reset) {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var meta = me.getMeta();
			var opts = chart.options;
			var arcOpts = opts.elements.arc;
			var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
			chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
			chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
			me.innerRadius = me.outerRadius - chart.radiusLength;

			meta.count = me.countVisibleElements();

			helpers.each(meta.data, function(arc, index) {
				me.updateElement(arc, index, reset);
			});
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart;
			var dataset = me.getDataset();
			var opts = chart.options;
			var animationOpts = opts.animation;
			var scale = chart.scale;
			var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
			var labels = chart.data.labels;

			var circumference = me.calculateCircumference(dataset.data[index]);
			var centerX = scale.xCenter;
			var centerY = scale.yCenter;

			// If there is NaN data before us, we need to calculate the starting angle correctly.
			// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data
			var visibleCount = 0;
			var meta = me.getMeta();
			for (var i = 0; i &lt; index; ++i) {
				if (!isNaN(dataset.data[i]) &amp;&amp; !meta.data[i].hidden) {
					++visibleCount;
				}
			}

			// var negHalfPI = -0.5 * Math.PI;
			var datasetStartAngle = opts.startAngle;
			var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
			var startAngle = datasetStartAngle + (circumference * visibleCount);
			var endAngle = startAngle + (arc.hidden ? 0 : circumference);

			var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);

			helpers.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					x: centerX,
					y: centerY,
					innerRadius: 0,
					outerRadius: reset ? resetRadius : distance,
					startAngle: reset &amp;&amp; animationOpts.animateRotate ? datasetStartAngle : startAngle,
					endAngle: reset &amp;&amp; animationOpts.animateRotate ? datasetStartAngle : endAngle,
					label: getValueAtIndexOrDefault(labels, index, labels[index])
				}
			});

			// Apply border and fill style
			me.removeHoverStyle(arc);

			arc.pivot();
		},

		removeHoverStyle: function(arc) {
			Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
		},

		countVisibleElements: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var count = 0;

			helpers.each(meta.data, function(element, index) {
				if (!isNaN(dataset.data[index]) &amp;&amp; !element.hidden) {
					count++;
				}
			});

			return count;
		},

		calculateCircumference: function(value) {
			var count = this.getMeta().count;
			if (count &gt; 0 &amp;&amp; !isNaN(value)) {
				return (2 * Math.PI) / count;
			}
			return 0;
		}
	});
};

},{}],20:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.radar = {
		aspectRatio: 1,
		scale: {
			type: 'radialLinear'
		},
		elements: {
			line: {
				tension: 0 // no bezier in radar
			}
		}
	};

	Chart.controllers.radar = Chart.DatasetController.extend({

		datasetElementType: Chart.elements.Line,

		dataElementType: Chart.elements.Point,

		linkScales: helpers.noop,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data;
			var custom = line.custom || {};
			var dataset = me.getDataset();
			var lineElementOptions = me.chart.options.elements.line;
			var scale = me.chart.scale;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.tension !== undefined) &amp;&amp; (dataset.lineTension === undefined)) {
				dataset.lineTension = dataset.tension;
			}

			helpers.extend(meta.dataset, {
				// Utility
				_datasetIndex: me.index,
				// Data
				_children: points,
				_loop: true,
				// Model
				_model: {
					// Appearance
					tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),

					// Scale
					scaleTop: scale.top,
					scaleBottom: scale.bottom,
					scaleZero: scale.getBasePosition()
				}
			});

			meta.dataset.pivot();

			// Update Points
			helpers.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			}, me);

			// Update bezier control points
			me.updateBezierControlPoints();
		},
		updateElement: function(point, index, reset) {
			var me = this;
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var scale = me.chart.scale;
			var pointElementOptions = me.chart.options.elements.point;
			var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);

			helpers.extend(point, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales
					y: reset ? scale.yCenter : pointPosition.y,

					// Appearance
					tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, me.chart.options.elements.line.tension),
					radius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
					borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
					pointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),

					// Tooltip
					hitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)
				}
			});

			point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));
		},
		updateBezierControlPoints: function() {
			var chartArea = this.chart.chartArea;
			var meta = this.getMeta();

			helpers.each(meta.data, function(point, index) {
				var model = point._model;
				var controlPoints = helpers.splineCurve(
					helpers.previousItem(meta.data, index, true)._model,
					model,
					helpers.nextItem(meta.data, index, true)._model,
					model.tension
				);

				// Prevent the bezier going outside of the bounds of the graph
				model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
				model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);

				model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
				model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);

				// Now pivot the point for animation
				point.pivot();
			});
		},

		draw: function(ease) {
			var meta = this.getMeta();
			var easingDecimal = ease || 1;

			// Transition Point Locations
			helpers.each(meta.data, function(point) {
				point.transition(easingDecimal);
			});

			// Transition and Draw the line
			meta.dataset.transition(easingDecimal).draw();

			// Draw the points
			helpers.each(meta.data, function(point) {
				point.draw();
			});
		},

		setHoverStyle: function(point) {
			// Point
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var custom = point.custom || {};
			var index = point._index;
			var model = point._model;

			model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
		},

		removeHoverStyle: function(point) {
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var custom = point.custom || {};
			var index = point._index;
			var model = point._model;
			var pointElementOptions = this.chart.options.elements.point;

			model.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);
			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);
		}
	});
};

},{}],21:[function(require,module,exports){
/* global window: false */
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.global.animation = {
		duration: 1000,
		easing: 'easeOutQuart',
		onProgress: helpers.noop,
		onComplete: helpers.noop
	};

	Chart.Animation = Chart.Element.extend({
		currentStep: null, // the current animation step
		numSteps: 60, // default number of steps
		easing: '', // the easing to use for this animation
		render: null, // render function used by the animation service

		onAnimationProgress: null, // user specified callback to fire on each step of the animation
		onAnimationComplete: null // user specified callback to fire when the animation finishes
	});

	Chart.animationService = {
		frameDuration: 17,
		animations: [],
		dropFrames: 0,
		request: null,

		/**
		 * @function Chart.animationService.addAnimation
		 * @param chartInstance {ChartController} the chart to animate
		 * @param animationObject {IAnimation} the animation that we will animate
		 * @param duration {Number} length of animation in ms
		 * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions
		 */
		addAnimation: function(chartInstance, animationObject, duration, lazy) {
			var me = this;

			if (!lazy) {
				chartInstance.animating = true;
			}

			for (var index = 0; index &lt; me.animations.length; ++index) {
				if (me.animations[index].chartInstance === chartInstance) {
					// replacing an in progress animation
					me.animations[index].animationObject = animationObject;
					return;
				}
			}

			me.animations.push({
				chartInstance: chartInstance,
				animationObject: animationObject
			});

			// If there are no animations queued, manually kickstart a digest, for lack of a better word
			if (me.animations.length === 1) {
				me.requestAnimationFrame();
			}
		},
		// Cancel the animation for a given chart instance
		cancelAnimation: function(chartInstance) {
			var index = helpers.findIndex(this.animations, function(animationWrapper) {
				return animationWrapper.chartInstance === chartInstance;
			});

			if (index !== -1) {
				this.animations.splice(index, 1);
				chartInstance.animating = false;
			}
		},
		requestAnimationFrame: function() {
			var me = this;
			if (me.request === null) {
				// Skip animation frame requests until the active one is executed.
				// This can happen when processing mouse events, e.g. 'mousemove'
				// and 'mouseout' events will trigger multiple renders.
				me.request = helpers.requestAnimFrame.call(window, function() {
					me.request = null;
					me.startDigest();
				});
			}
		},
		startDigest: function() {
			var me = this;

			var startTime = Date.now();
			var framesToDrop = 0;

			if (me.dropFrames &gt; 1) {
				framesToDrop = Math.floor(me.dropFrames);
				me.dropFrames = me.dropFrames % 1;
			}

			var i = 0;
			while (i &lt; me.animations.length) {
				if (me.animations[i].animationObject.currentStep === null) {
					me.animations[i].animationObject.currentStep = 0;
				}

				me.animations[i].animationObject.currentStep += 1 + framesToDrop;

				if (me.animations[i].animationObject.currentStep &gt; me.animations[i].animationObject.numSteps) {
					me.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;
				}

				me.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);
				if (me.animations[i].animationObject.onAnimationProgress &amp;&amp; me.animations[i].animationObject.onAnimationProgress.call) {
					me.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);
				}

				if (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {
					if (me.animations[i].animationObject.onAnimationComplete &amp;&amp; me.animations[i].animationObject.onAnimationComplete.call) {
						me.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);
					}

					// executed the last frame. Remove the animation.
					me.animations[i].chartInstance.animating = false;

					me.animations.splice(i, 1);
				} else {
					++i;
				}
			}

			var endTime = Date.now();
			var dropFrames = (endTime - startTime) / me.frameDuration;

			me.dropFrames += dropFrames;

			// Do we have more stuff to animate?
			if (me.animations.length &gt; 0) {
				me.requestAnimationFrame();
			}
		}
	};
};

},{}],22:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {
	// Global Chart canvas helpers object for drawing items to canvas
	var helpers = Chart.canvasHelpers = {};

	helpers.drawPoint = function(ctx, pointStyle, radius, x, y) {
		var type, edgeLength, xOffset, yOffset, height, size;

		if (typeof pointStyle === 'object') {
			type = pointStyle.toString();
			if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
				ctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);
				return;
			}
		}

		if (isNaN(radius) || radius &lt;= 0) {
			return;
		}

		switch (pointStyle) {
		// Default includes circle
		default:
			ctx.beginPath();
			ctx.arc(x, y, radius, 0, Math.PI * 2);
			ctx.closePath();
			ctx.fill();
			break;
		case 'triangle':
			ctx.beginPath();
			edgeLength = 3 * radius / Math.sqrt(3);
			height = edgeLength * Math.sqrt(3) / 2;
			ctx.moveTo(x - edgeLength / 2, y + height / 3);
			ctx.lineTo(x + edgeLength / 2, y + height / 3);
			ctx.lineTo(x, y - 2 * height / 3);
			ctx.closePath();
			ctx.fill();
			break;
		case 'rect':
			size = 1 / Math.SQRT2 * radius;
			ctx.beginPath();
			ctx.fillRect(x - size, y - size, 2 * size, 2 * size);
			ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
			break;
		case 'rectRot':
			size = 1 / Math.SQRT2 * radius;
			ctx.beginPath();
			ctx.moveTo(x - size, y);
			ctx.lineTo(x, y + size);
			ctx.lineTo(x + size, y);
			ctx.lineTo(x, y - size);
			ctx.closePath();
			ctx.fill();
			break;
		case 'cross':
			ctx.beginPath();
			ctx.moveTo(x, y + radius);
			ctx.lineTo(x, y - radius);
			ctx.moveTo(x - radius, y);
			ctx.lineTo(x + radius, y);
			ctx.closePath();
			break;
		case 'crossRot':
			ctx.beginPath();
			xOffset = Math.cos(Math.PI / 4) * radius;
			yOffset = Math.sin(Math.PI / 4) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x - xOffset, y + yOffset);
			ctx.lineTo(x + xOffset, y - yOffset);
			ctx.closePath();
			break;
		case 'star':
			ctx.beginPath();
			ctx.moveTo(x, y + radius);
			ctx.lineTo(x, y - radius);
			ctx.moveTo(x - radius, y);
			ctx.lineTo(x + radius, y);
			xOffset = Math.cos(Math.PI / 4) * radius;
			yOffset = Math.sin(Math.PI / 4) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x - xOffset, y + yOffset);
			ctx.lineTo(x + xOffset, y - yOffset);
			ctx.closePath();
			break;
		case 'line':
			ctx.beginPath();
			ctx.moveTo(x - radius, y);
			ctx.lineTo(x + radius, y);
			ctx.closePath();
			break;
		case 'dash':
			ctx.beginPath();
			ctx.moveTo(x, y);
			ctx.lineTo(x + radius, y);
			ctx.closePath();
			break;
		}

		ctx.stroke();
	};
};

},{}],23:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	// Create a dictionary of chart types, to allow for extension of existing types
	Chart.types = {};

	// Store a reference to each instance - allowing us to globally resize chart instances on window resize.
	// Destroy method on the chart will remove the instance of the chart from this reference.
	Chart.instances = {};

	// Controllers available for dataset visualization eg. bar, line, slice, etc.
	Chart.controllers = {};

	/**
	 * The "used" size is the final value of a dimension property after all calculations have
	 * been performed. This method uses the computed style of `element` but returns undefined
	 * if the computed style is not expressed in pixels. That can happen in some cases where
	 * `element` has a size relative to its parent and this last one is not yet displayed,
	 * for example because of `display: none` on a parent node.
	 * TODO(SB) Move this method in the upcoming core.platform class.
	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
	 * @returns {Number} Size in pixels or undefined if unknown.
	 */
	function readUsedSize(element, property) {
		var value = helpers.getStyle(element, property);
		var matches = value &amp;&amp; value.match(/(\d+)px/);
		return matches? Number(matches[1]) : undefined;
	}

	/**
	 * Initializes the canvas style and render size without modifying the canvas display size,
	 * since responsiveness is handled by the controller.resize() method. The config is used
	 * to determine the aspect ratio to apply in case no explicit height has been specified.
	 * TODO(SB) Move this method in the upcoming core.platform class.
	 */
	function initCanvas(canvas, config) {
		var style = canvas.style;

		// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
		// returns null or '' if no explicit value has been set to the canvas attribute.
		var renderHeight = canvas.getAttribute('height');
		var renderWidth = canvas.getAttribute('width');

		// Chart.js modifies some canvas values that we want to restore on destroy
		canvas._chartjs = {
			initial: {
				height: renderHeight,
				width: renderWidth,
				style: {
					display: style.display,
					height: style.height,
					width: style.width
				}
			}
		};

		// Force canvas to display as block to avoid extra space caused by inline
		// elements, which would interfere with the responsive resize process.
		// https://github.com/chartjs/Chart.js/issues/2538
		style.display = style.display || 'block';

		if (renderWidth === null || renderWidth === '') {
			var displayWidth = readUsedSize(canvas, 'width');
			if (displayWidth !== undefined) {
				canvas.width = displayWidth;
			}
		}

		if (renderHeight === null || renderHeight === '') {
			if (canvas.style.height === '') {
				// If no explicit render height and style height, let's apply the aspect ratio,
				// which one can be specified by the user but also by charts as default option
				// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
				canvas.height = canvas.width / (config.options.aspectRatio || 2);
			} else {
				var displayHeight = readUsedSize(canvas, 'height');
				if (displayWidth !== undefined) {
					canvas.height = displayHeight;
				}
			}
		}

		return canvas;
	}

	/**
	 * Restores the canvas initial state, such as render/display sizes and style.
	 * TODO(SB) Move this method in the upcoming core.platform class.
	 */
	function releaseCanvas(canvas) {
		if (!canvas._chartjs) {
			return;
		}

		var initial = canvas._chartjs.initial;
		['height', 'width'].forEach(function(prop) {
			var value = initial[prop];
			if (value === undefined || value === null) {
				canvas.removeAttribute(prop);
			} else {
				canvas.setAttribute(prop, value);
			}
		});

		helpers.each(initial.style || {}, function(value, key) {
			canvas.style[key] = value;
		});

		// The canvas render size might have been changed (and thus the state stack discarded),
		// we can't use save() and restore() to restore the initial state. So make sure that at
		// least the canvas context is reset to the default state by setting the canvas width.
		// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
		canvas.width = canvas.width;

		delete canvas._chartjs;
	}

	/**
	 * TODO(SB) Move this method in the upcoming core.platform class.
	 */
	function acquireContext(item, config) {
		if (typeof item === 'string') {
			item = document.getElementById(item);
		} else if (item.length) {
			// Support for array based queries (such as jQuery)
			item = item[0];
		}

		if (item &amp;&amp; item.canvas) {
			// Support for any object associated to a canvas (including a context2d)
			item = item.canvas;
		}

		if (item instanceof HTMLCanvasElement) {
			// To prevent canvas fingerprinting, some add-ons undefine the getContext
			// method, for example: https://github.com/kkapsner/CanvasBlocker
			// https://github.com/chartjs/Chart.js/issues/2807
			var context = item.getContext &amp;&amp; item.getContext('2d');
			if (context instanceof CanvasRenderingContext2D) {
				initCanvas(item, config);
				return context;
			}
		}

		return null;
	}

	/**
	 * Initializes the given config with global and chart default values.
	 */
	function initConfig(config) {
		config = config || {};

		// Do NOT use configMerge() for the data object because this method merges arrays
		// and so would change references to labels and datasets, preventing data updates.
		var data = config.data = config.data || {};
		data.datasets = data.datasets || [];
		data.labels = data.labels || [];

		config.options = helpers.configMerge(
			Chart.defaults.global,
			Chart.defaults[config.type],
			config.options || {});

		return config;
	}

	/**
	 * @class Chart.Controller
	 * The main controller of a chart.
	 */
	Chart.Controller = function(item, config, instance) {
		var me = this;

		config = initConfig(config);

		var context = acquireContext(item, config);
		var canvas = context &amp;&amp; context.canvas;
		var height = canvas &amp;&amp; canvas.height;
		var width = canvas &amp;&amp; canvas.width;

		instance.ctx = context;
		instance.canvas = canvas;
		instance.config = config;
		instance.width = width;
		instance.height = height;
		instance.aspectRatio = height? width / height : null;

		me.id = helpers.uid();
		me.chart = instance;
		me.config = config;
		me.options = config.options;
		me._bufferedRender = false;

		// Add the chart instance to the global namespace
		Chart.instances[me.id] = me;

		Object.defineProperty(me, 'data', {
			get: function() {
				return me.config.data;
			}
		});

		if (!context || !canvas) {
			// The given item is not a compatible context2d element, let's return before finalizing
			// the chart initialization but after setting basic chart / controller properties that
			// can help to figure out that the chart is not valid (e.g chart.canvas !== null);
			// https://github.com/chartjs/Chart.js/issues/2807
			console.error("Failed to create chart: can't acquire context from the given item");
			return me;
		}

		helpers.retinaScale(instance);

		// Responsiveness is currently based on the use of an iframe, however this method causes
		// performance issues and could be troublesome when used with ad blockers. So make sure
		// that the user is still able to create a chart without iframe when responsive is false.
		// See https://github.com/chartjs/Chart.js/issues/2210
		if (me.options.responsive) {
			helpers.addResizeListener(canvas.parentNode, function() {
				me.resize();
			});

			// Initial resize before chart draws (must be silent to preserve initial animations).
			me.resize(true);
		}

		me.initialize();

		return me;
	};

	helpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller */ {
		initialize: function() {
			var me = this;

			// Before init plugin notification
			Chart.plugins.notify('beforeInit', [me]);

			me.bindEvents();

			// Make sure controllers are built first so that each dataset is bound to an axis before the scales
			// are built
			me.ensureScalesHaveIDs();
			me.buildOrUpdateControllers();
			me.buildScales();
			me.updateLayout();
			me.resetElements();
			me.initToolTip();
			me.update();

			// After init plugin notification
			Chart.plugins.notify('afterInit', [me]);

			return me;
		},

		clear: function() {
			helpers.clear(this.chart);
			return this;
		},

		stop: function() {
			// Stops any current animation loop occurring
			Chart.animationService.cancelAnimation(this);
			return this;
		},

		resize: function(silent) {
			var me = this;
			var chart = me.chart;
			var options = me.options;
			var canvas = chart.canvas;
			var aspectRatio = (options.maintainAspectRatio &amp;&amp; chart.aspectRatio) || null;

			// the canvas render width and height will be casted to integers so make sure that
			// the canvas display style uses the same integer values to avoid blurring effect.
			var newWidth = Math.floor(helpers.getMaximumWidth(canvas));
			var newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));

			if (chart.width === newWidth &amp;&amp; chart.height === newHeight) {
				return;
			}

			canvas.width = chart.width = newWidth;
			canvas.height = chart.height = newHeight;
			canvas.style.width = newWidth + 'px';
			canvas.style.height = newHeight + 'px';

			helpers.retinaScale(chart);

			// Notify any plugins about the resize
			var newSize = {width: newWidth, height: newHeight};
			Chart.plugins.notify('resize', [me, newSize]);

			// Notify of resize
			if (me.options.onResize) {
				me.options.onResize(me, newSize);
			}

			if (!silent) {
				me.stop();
				me.update(me.options.responsiveAnimationDuration);
			}
		},

		ensureScalesHaveIDs: function() {
			var options = this.options;
			var scalesOptions = options.scales || {};
			var scaleOptions = options.scale;

			helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {
				xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);
			});

			helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {
				yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);
			});

			if (scaleOptions) {
				scaleOptions.id = scaleOptions.id || 'scale';
			}
		},

		/**
		 * Builds a map of scale ID to scale object for future lookup.
		 */
		buildScales: function() {
			var me = this;
			var options = me.options;
			var scales = me.scales = {};
			var items = [];

			if (options.scales) {
				items = items.concat(
					(options.scales.xAxes || []).map(function(xAxisOptions) {
						return {options: xAxisOptions, dtype: 'category'};
					}),
					(options.scales.yAxes || []).map(function(yAxisOptions) {
						return {options: yAxisOptions, dtype: 'linear'};
					})
				);
			}

			if (options.scale) {
				items.push({options: options.scale, dtype: 'radialLinear', isDefault: true});
			}

			helpers.each(items, function(item) {
				var scaleOptions = item.options;
				var scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);
				var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);
				if (!scaleClass) {
					return;
				}

				var scale = new scaleClass({
					id: scaleOptions.id,
					options: scaleOptions,
					ctx: me.chart.ctx,
					chart: me
				});

				scales[scale.id] = scale;

				// TODO(SB): I think we should be able to remove this custom case (options.scale)
				// and consider it as a regular scale part of the "scales"" map only! This would
				// make the logic easier and remove some useless? custom code.
				if (item.isDefault) {
					me.scale = scale;
				}
			});

			Chart.scaleService.addScalesToLayout(this);
		},

		updateLayout: function() {
			Chart.layoutService.update(this, this.chart.width, this.chart.height);
		},

		buildOrUpdateControllers: function() {
			var me = this;
			var types = [];
			var newControllers = [];

			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				var meta = me.getDatasetMeta(datasetIndex);
				if (!meta.type) {
					meta.type = dataset.type || me.config.type;
				}

				types.push(meta.type);

				if (meta.controller) {
					meta.controller.updateIndex(datasetIndex);
				} else {
					meta.controller = new Chart.controllers[meta.type](me, datasetIndex);
					newControllers.push(meta.controller);
				}
			}, me);

			if (types.length &gt; 1) {
				for (var i = 1; i &lt; types.length; i++) {
					if (types[i] !== types[i - 1]) {
						me.isCombo = true;
						break;
					}
				}
			}

			return newControllers;
		},

		/**
		 * Reset the elements of all datasets
		 * @method resetElements
		 * @private
		 */
		resetElements: function() {
			var me = this;
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.reset();
			}, me);
		},

		/**
		* Resets the chart back to it's state before the initial animation
		* @method reset
		*/
		reset: function() {
			this.resetElements();
			this.tooltip.initialize();
		},

		update: function(animationDuration, lazy) {
			var me = this;
			Chart.plugins.notify('beforeUpdate', [me]);

			// In case the entire data object changed
			me.tooltip._data = me.data;

			// Make sure dataset controllers are updated and new controllers are reset
			var newControllers = me.buildOrUpdateControllers();

			// Make sure all dataset controllers have correct meta data counts
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
			}, me);

			Chart.layoutService.update(me, me.chart.width, me.chart.height);

			// Apply changes to the datasets that require the scales to have been calculated i.e BorderColor changes
			Chart.plugins.notify('afterScaleUpdate', [me]);

			// Can only reset the new controllers after the scales have been updated
			helpers.each(newControllers, function(controller) {
				controller.reset();
			});

			me.updateDatasets();

			// Do this before render so that any plugins that need final scale updates can use it
			Chart.plugins.notify('afterUpdate', [me]);

			if (me._bufferedRender) {
				me._bufferedRequest = {
					lazy: lazy,
					duration: animationDuration
				};
			} else {
				me.render(animationDuration, lazy);
			}
		},

		/**
		 * @method beforeDatasetsUpdate
		 * @description Called before all datasets are updated. If a plugin returns false,
		 * the datasets update will be cancelled until another chart update is triggered.
		 * @param {Object} instance the chart instance being updated.
		 * @returns {Boolean} false to cancel the datasets update.
		 * @memberof Chart.PluginBase
		 * @since version 2.1.5
		 * @instance
		 */

		/**
		 * @method afterDatasetsUpdate
		 * @description Called after all datasets have been updated. Note that this
		 * extension will not be called if the datasets update has been cancelled.
		 * @param {Object} instance the chart instance being updated.
		 * @memberof Chart.PluginBase
		 * @since version 2.1.5
		 * @instance
		 */

		/**
		 * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate
		 * extension, in which case no datasets will be updated and the afterDatasetsUpdate
		 * notification will be skipped.
		 * @protected
		 * @instance
		 */
		updateDatasets: function() {
			var me = this;
			var i, ilen;

			if (Chart.plugins.notify('beforeDatasetsUpdate', [me])) {
				for (i = 0, ilen = me.data.datasets.length; i &lt; ilen; ++i) {
					me.getDatasetMeta(i).controller.update();
				}

				Chart.plugins.notify('afterDatasetsUpdate', [me]);
			}
		},

		render: function(duration, lazy) {
			var me = this;
			Chart.plugins.notify('beforeRender', [me]);

			var animationOptions = me.options.animation;
			if (animationOptions &amp;&amp; ((typeof duration !== 'undefined' &amp;&amp; duration !== 0) || (typeof duration === 'undefined' &amp;&amp; animationOptions.duration !== 0))) {
				var animation = new Chart.Animation();
				animation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps
				animation.easing = animationOptions.easing;

				// render function
				animation.render = function(chartInstance, animationObject) {
					var easingFunction = helpers.easingEffects[animationObject.easing];
					var stepDecimal = animationObject.currentStep / animationObject.numSteps;
					var easeDecimal = easingFunction(stepDecimal);

					chartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);
				};

				// user events
				animation.onAnimationProgress = animationOptions.onProgress;
				animation.onAnimationComplete = animationOptions.onComplete;

				Chart.animationService.addAnimation(me, animation, duration, lazy);
			} else {
				me.draw();
				if (animationOptions &amp;&amp; animationOptions.onComplete &amp;&amp; animationOptions.onComplete.call) {
					animationOptions.onComplete.call(me);
				}
			}
			return me;
		},

		draw: function(ease) {
			var me = this;
			var easingDecimal = ease || 1;
			me.clear();

			Chart.plugins.notify('beforeDraw', [me, easingDecimal]);

			// Draw all the scales
			helpers.each(me.boxes, function(box) {
				box.draw(me.chartArea);
			}, me);
			if (me.scale) {
				me.scale.draw();
			}

			Chart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);

			// Draw each dataset via its respective controller (reversed to support proper line stacking)
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				if (me.isDatasetVisible(datasetIndex)) {
					me.getDatasetMeta(datasetIndex).controller.draw(ease);
				}
			}, me, true);

			Chart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);

			// Finally draw the tooltip
			me.tooltip.transition(easingDecimal).draw();

			Chart.plugins.notify('afterDraw', [me, easingDecimal]);
		},

		// Get the single element that was clicked on
		// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
		getElementAtEvent: function(e) {
			return Chart.Interaction.modes.single(this, e);
		},

		getElementsAtEvent: function(e) {
			return Chart.Interaction.modes.label(this, e, {intersect: true});
		},

		getElementsAtXAxis: function(e) {
			return Chart.Interaction.modes['x-axis'](this, e, {intersect: true});
		},

		getElementsAtEventForMode: function(e, mode, options) {
			var method = Chart.Interaction.modes[mode];
			if (typeof method === 'function') {
				return method(this, e, options);
			}

			return [];
		},

		getDatasetAtEvent: function(e) {
			return Chart.Interaction.modes.dataset(this, e);
		},

		getDatasetMeta: function(datasetIndex) {
			var me = this;
			var dataset = me.data.datasets[datasetIndex];
			if (!dataset._meta) {
				dataset._meta = {};
			}

			var meta = dataset._meta[me.id];
			if (!meta) {
				meta = dataset._meta[me.id] = {
					type: null,
					data: [],
					dataset: null,
					controller: null,
					hidden: null,			// See isDatasetVisible() comment
					xAxisID: null,
					yAxisID: null
				};
			}

			return meta;
		},

		getVisibleDatasetCount: function() {
			var count = 0;
			for (var i = 0, ilen = this.data.datasets.length; i&lt;ilen; ++i) {
				if (this.isDatasetVisible(i)) {
					count++;
				}
			}
			return count;
		},

		isDatasetVisible: function(datasetIndex) {
			var meta = this.getDatasetMeta(datasetIndex);

			// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
			// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
			return typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
		},

		generateLegend: function() {
			return this.options.legendCallback(this);
		},

		destroy: function() {
			var me = this;
			var canvas = me.chart.canvas;
			var meta, i, ilen;

			me.stop();

			// dataset controllers need to cleanup associated data
			for (i = 0, ilen = me.data.datasets.length; i &lt; ilen; ++i) {
				meta = me.getDatasetMeta(i);
				if (meta.controller) {
					meta.controller.destroy();
					meta.controller = null;
				}
			}

			if (canvas) {
				helpers.unbindEvents(me, me.events);
				helpers.removeResizeListener(canvas.parentNode);
				helpers.clear(me.chart);
				releaseCanvas(canvas);
				me.chart.canvas = null;
				me.chart.ctx = null;
			}

			Chart.plugins.notify('destroy', [me]);

			delete Chart.instances[me.id];
		},

		toBase64Image: function() {
			return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);
		},

		initToolTip: function() {
			var me = this;
			me.tooltip = new Chart.Tooltip({
				_chart: me.chart,
				_chartInstance: me,
				_data: me.data,
				_options: me.options.tooltips
			}, me);
			me.tooltip.initialize();
		},

		bindEvents: function() {
			var me = this;
			helpers.bindEvents(me, me.options.events, function(evt) {
				me.eventHandler(evt);
			});
		},

		updateHoverStyle: function(elements, mode, enabled) {
			var method = enabled? 'setHoverStyle' : 'removeHoverStyle';
			var element, i, ilen;

			for (i=0, ilen=elements.length; i&lt;ilen; ++i) {
				element = elements[i];
				if (element) {
					this.getDatasetMeta(element._datasetIndex).controller[method](element);
				}
			}
		},

		eventHandler: function(e) {
			var me = this;
			var legend = me.legend;
			var tooltip = me.tooltip;
			var hoverOptions = me.options.hover;

			// Buffer any update calls so that renders do not occur
			me._bufferedRender = true;
			me._bufferedRequest = null;

			var changed = me.handleEvent(e);
			changed |= legend &amp;&amp; legend.handleEvent(e);
			changed |= tooltip &amp;&amp; tooltip.handleEvent(e);

			var bufferedRequest = me._bufferedRequest;
			if (bufferedRequest) {
				// If we have an update that was triggered, we need to do a normal render
				me.render(bufferedRequest.duration, bufferedRequest.lazy);
			} else if (changed &amp;&amp; !me.animating) {
				// If entering, leaving, or changing elements, animate the change via pivot
				me.stop();

				// We only need to render at this point. Updating will cause scales to be
				// recomputed generating flicker &amp; using more memory than necessary.
				me.render(hoverOptions.animationDuration, true);
			}

			me._bufferedRender = false;
			me._bufferedRequest = null;

			return me;
		},

		/**
		 * Handle an event
		 * @private
		 * param e {Event} the event to handle
		 * @return {Boolean} true if the chart needs to re-render
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me.options || {};
			var hoverOptions = options.hover;
			var changed = false;

			me.lastActive = me.lastActive || [];

			// Find Active Elements for hover and tooltips
			if (e.type === 'mouseout') {
				me.active = [];
			} else {
				me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
			}

			// On Hover hook
			if (hoverOptions.onHover) {
				hoverOptions.onHover.call(me, me.active);
			}

			if (e.type === 'mouseup' || e.type === 'click') {
				if (options.onClick) {
					options.onClick.call(me, e, me.active);
				}
			}

			// Remove styling for last active (even if it may still be active)
			if (me.lastActive.length) {
				me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
			}

			// Built in hover styling
			if (me.active.length &amp;&amp; hoverOptions.mode) {
				me.updateHoverStyle(me.active, hoverOptions.mode, true);
			}

			changed = !helpers.arrayEquals(me.active, me.lastActive);

			// Remember Last Actives
			me.lastActive = me.active;

			return changed;
		}
	});
};

},{}],24:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

	/**
	 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
	 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
	 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
	 */
	function listenArrayEvents(array, listener) {
		if (array._chartjs) {
			array._chartjs.listeners.push(listener);
			return;
		}

		Object.defineProperty(array, '_chartjs', {
			configurable: true,
			enumerable: false,
			value: {
				listeners: [listener]
			}
		});

		arrayEvents.forEach(function(key) {
			var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
			var base = array[key];

			Object.defineProperty(array, key, {
				configurable: true,
				enumerable: false,
				value: function() {
					var args = Array.prototype.slice.call(arguments);
					var res = base.apply(this, args);

					helpers.each(array._chartjs.listeners, function(object) {
						if (typeof object[method] === 'function') {
							object[method].apply(object, args);
						}
					});

					return res;
				}
			});
		});
	}

	/**
	 * Removes the given array event listener and cleanup extra attached properties (such as
	 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
	 */
	function unlistenArrayEvents(array, listener) {
		var stub = array._chartjs;
		if (!stub) {
			return;
		}

		var listeners = stub.listeners;
		var index = listeners.indexOf(listener);
		if (index !== -1) {
			listeners.splice(index, 1);
		}

		if (listeners.length &gt; 0) {
			return;
		}

		arrayEvents.forEach(function(key) {
			delete array[key];
		});

		delete array._chartjs;
	}

	// Base class for all dataset controllers (line, bar, etc)
	Chart.DatasetController = function(chart, datasetIndex) {
		this.initialize(chart, datasetIndex);
	};

	helpers.extend(Chart.DatasetController.prototype, {

		/**
		 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
		 * @type {Chart.core.element}
		 */
		datasetElementType: null,

		/**
		 * Element type used to generate a meta data (e.g. Chart.element.Point).
		 * @type {Chart.core.element}
		 */
		dataElementType: null,

		initialize: function(chart, datasetIndex) {
			var me = this;
			me.chart = chart;
			me.index = datasetIndex;
			me.linkScales();
			me.addElements();
		},

		updateIndex: function(datasetIndex) {
			this.index = datasetIndex;
		},

		linkScales: function() {
			var me = this;
			var meta = me.getMeta();
			var dataset = me.getDataset();

			if (meta.xAxisID === null) {
				meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
			}
			if (meta.yAxisID === null) {
				meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
			}
		},

		getDataset: function() {
			return this.chart.data.datasets[this.index];
		},

		getMeta: function() {
			return this.chart.getDatasetMeta(this.index);
		},

		getScaleForId: function(scaleID) {
			return this.chart.scales[scaleID];
		},

		reset: function() {
			this.update(true);
		},

		/**
		 * @private
		 */
		destroy: function() {
			if (this._data) {
				unlistenArrayEvents(this._data, this);
			}
		},

		createMetaDataset: function() {
			var me = this;
			var type = me.datasetElementType;
			return type &amp;&amp; new type({
				_chart: me.chart.chart,
				_datasetIndex: me.index
			});
		},

		createMetaData: function(index) {
			var me = this;
			var type = me.dataElementType;
			return type &amp;&amp; new type({
				_chart: me.chart.chart,
				_datasetIndex: me.index,
				_index: index
			});
		},

		addElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data || [];
			var metaData = meta.data;
			var i, ilen;

			for (i=0, ilen=data.length; i&lt;ilen; ++i) {
				metaData[i] = metaData[i] || me.createMetaData(i);
			}

			meta.dataset = meta.dataset || me.createMetaDataset();
		},

		addElementAndReset: function(index) {
			var element = this.createMetaData(index);
			this.getMeta().data.splice(index, 0, element);
			this.updateElement(element, index, true);
		},

		buildOrUpdateElements: function() {
			var me = this;
			var dataset = me.getDataset();
			var data = dataset.data || (dataset.data = []);

			// In order to correctly handle data addition/deletion animation (an thus simulate
			// real-time charts), we need to monitor these data modifications and synchronize
			// the internal meta data accordingly.
			if (me._data !== data) {
				if (me._data) {
					// This case happens when the user replaced the data array instance.
					unlistenArrayEvents(me._data, me);
				}

				listenArrayEvents(data, me);
				me._data = data;
			}

			// Re-sync meta data in case the user replaced the data array or if we missed
			// any updates and so make sure that we handle number of datapoints changing.
			me.resyncElements();
		},

		update: helpers.noop,

		draw: function(ease) {
			var easingDecimal = ease || 1;
			var i, len;
			var metaData = this.getMeta().data;
			for (i = 0, len = metaData.length; i &lt; len; ++i) {
				metaData[i].transition(easingDecimal).draw();
			}
		},

		removeHoverStyle: function(element, elementOpts) {
			var dataset = this.chart.data.datasets[element._datasetIndex],
				index = element._index,
				custom = element.custom || {},
				valueOrDefault = helpers.getValueAtIndexOrDefault,
				model = element._model;

			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);
		},

		setHoverStyle: function(element) {
			var dataset = this.chart.data.datasets[element._datasetIndex],
				index = element._index,
				custom = element.custom || {},
				valueOrDefault = helpers.getValueAtIndexOrDefault,
				getHoverColor = helpers.getHoverColor,
				model = element._model;

			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
		},

		/**
		 * @private
		 */
		resyncElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data;
			var numMeta = meta.data.length;
			var numData = data.length;

			if (numData &lt; numMeta) {
				meta.data.splice(numData, numMeta - numData);
			} else if (numData &gt; numMeta) {
				me.insertElements(numMeta, numData - numMeta);
			}
		},

		/**
		 * @private
		 */
		insertElements: function(start, count) {
			for (var i=0; i&lt;count; ++i) {
				this.addElementAndReset(start + i);
			}
		},

		/**
		 * @private
		 */
		onDataPush: function() {
			this.insertElements(this.getDataset().data.length-1, arguments.length);
		},

		/**
		 * @private
		 */
		onDataPop: function() {
			this.getMeta().data.pop();
		},

		/**
		 * @private
		 */
		onDataShift: function() {
			this.getMeta().data.shift();
		},

		/**
		 * @private
		 */
		onDataSplice: function(start, count) {
			this.getMeta().data.splice(start, count);
			this.insertElements(start, arguments.length - 2);
		},

		/**
		 * @private
		 */
		onDataUnshift: function() {
			this.insertElements(0, arguments.length);
		}
	});

	Chart.DatasetController.extend = helpers.inherits;
};

},{}],25:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.elements = {};

	Chart.Element = function(configuration) {
		helpers.extend(this, configuration);
		this.initialize.apply(this, arguments);
	};

	helpers.extend(Chart.Element.prototype, {

		initialize: function() {
			this.hidden = false;
		},

		pivot: function() {
			var me = this;
			if (!me._view) {
				me._view = helpers.clone(me._model);
			}
			me._start = helpers.clone(me._view);
			return me;
		},

		transition: function(ease) {
			var me = this;

			if (!me._view) {
				me._view = helpers.clone(me._model);
			}

			// No animation -&gt; No Transition
			if (ease === 1) {
				me._view = me._model;
				me._start = null;
				return me;
			}

			if (!me._start) {
				me.pivot();
			}

			helpers.each(me._model, function(value, key) {

				if (key[0] === '_') {
					// Only non-underscored properties
				// Init if doesn't exist
				} else if (!me._view.hasOwnProperty(key)) {
					if (typeof value === 'number' &amp;&amp; !isNaN(me._view[key])) {
						me._view[key] = value * ease;
					} else {
						me._view[key] = value;
					}
				// No unnecessary computations
				} else if (value === me._view[key]) {
					// It's the same! Woohoo!
				// Color transitions if possible
				} else if (typeof value === 'string') {
					try {
						var color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);
						me._view[key] = color.rgbString();
					} catch (err) {
						me._view[key] = value;
					}
				// Number transitions
				} else if (typeof value === 'number') {
					var startVal = me._start[key] !== undefined &amp;&amp; isNaN(me._start[key]) === false ? me._start[key] : 0;
					me._view[key] = ((me._model[key] - startVal) * ease) + startVal;
				// Everything else
				} else {
					me._view[key] = value;
				}
			}, me);

			return me;
		},

		tooltipPosition: function() {
			return {
				x: this._model.x,
				y: this._model.y
			};
		},

		hasValue: function() {
			return helpers.isNumber(this._model.x) &amp;&amp; helpers.isNumber(this._model.y);
		}
	});

	Chart.Element.extend = helpers.inherits;

};

},{}],26:[function(require,module,exports){
/* global window: false */
/* global document: false */
'use strict';

var color = require(3);

module.exports = function(Chart) {
	// Global Chart helpers object for utility methods and classes
	var helpers = Chart.helpers = {};

	// -- Basic js utility methods
	helpers.each = function(loopable, callback, self, reverse) {
		// Check to see if null or undefined firstly.
		var i, len;
		if (helpers.isArray(loopable)) {
			len = loopable.length;
			if (reverse) {
				for (i = len - 1; i &gt;= 0; i--) {
					callback.call(self, loopable[i], i);
				}
			} else {
				for (i = 0; i &lt; len; i++) {
					callback.call(self, loopable[i], i);
				}
			}
		} else if (typeof loopable === 'object') {
			var keys = Object.keys(loopable);
			len = keys.length;
			for (i = 0; i &lt; len; i++) {
				callback.call(self, loopable[keys[i]], keys[i]);
			}
		}
	};
	helpers.clone = function(obj) {
		var objClone = {};
		helpers.each(obj, function(value, key) {
			if (helpers.isArray(value)) {
				objClone[key] = value.slice(0);
			} else if (typeof value === 'object' &amp;&amp; value !== null) {
				objClone[key] = helpers.clone(value);
			} else {
				objClone[key] = value;
			}
		});
		return objClone;
	};
	helpers.extend = function(base) {
		var setFn = function(value, key) {
			base[key] = value;
		};
		for (var i = 1, ilen = arguments.length; i &lt; ilen; i++) {
			helpers.each(arguments[i], setFn);
		}
		return base;
	};
	// Need a special merge function to chart configs since they are now grouped
	helpers.configMerge = function(_base) {
		var base = helpers.clone(_base);
		helpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {
			helpers.each(extension, function(value, key) {
				var baseHasProperty = base.hasOwnProperty(key);
				var baseVal = baseHasProperty ? base[key] : {};

				if (key === 'scales') {
					// Scale config merging is complex. Add our own function here for that
					base[key] = helpers.scaleMerge(baseVal, value);
				} else if (key === 'scale') {
					// Used in polar area &amp; radar charts since there is only one scale
					base[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);
				} else if (baseHasProperty
						&amp;&amp; typeof baseVal === 'object'
						&amp;&amp; !helpers.isArray(baseVal)
						&amp;&amp; baseVal !== null
						&amp;&amp; typeof value === 'object'
						&amp;&amp; !helpers.isArray(value)) {
					// If we are overwriting an object with an object, do a merge of the properties.
					base[key] = helpers.configMerge(baseVal, value);
				} else {
					// can just overwrite the value in this case
					base[key] = value;
				}
			});
		});

		return base;
	};
	helpers.scaleMerge = function(_base, extension) {
		var base = helpers.clone(_base);

		helpers.each(extension, function(value, key) {
			if (key === 'xAxes' || key === 'yAxes') {
				// These properties are arrays of items
				if (base.hasOwnProperty(key)) {
					helpers.each(value, function(valueObj, index) {
						var axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');
						var axisDefaults = Chart.scaleService.getScaleDefaults(axisType);
						if (index &gt;= base[key].length || !base[key][index].type) {
							base[key].push(helpers.configMerge(axisDefaults, valueObj));
						} else if (valueObj.type &amp;&amp; valueObj.type !== base[key][index].type) {
							// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults
							base[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);
						} else {
							// Type is the same
							base[key][index] = helpers.configMerge(base[key][index], valueObj);
						}
					});
				} else {
					base[key] = [];
					helpers.each(value, function(valueObj) {
						var axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');
						base[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));
					});
				}
			} else if (base.hasOwnProperty(key) &amp;&amp; typeof base[key] === 'object' &amp;&amp; base[key] !== null &amp;&amp; typeof value === 'object') {
				// If we are overwriting an object with an object, do a merge of the properties.
				base[key] = helpers.configMerge(base[key], value);

			} else {
				// can just overwrite the value in this case
				base[key] = value;
			}
		});

		return base;
	};
	helpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {
		if (value === undefined || value === null) {
			return defaultValue;
		}

		if (helpers.isArray(value)) {
			return index &lt; value.length ? value[index] : defaultValue;
		}

		return value;
	};
	helpers.getValueOrDefault = function(value, defaultValue) {
		return value === undefined ? defaultValue : value;
	};
	helpers.indexOf = Array.prototype.indexOf?
		function(array, item) {
			return array.indexOf(item);
		}:
		function(array, item) {
			for (var i = 0, ilen = array.length; i &lt; ilen; ++i) {
				if (array[i] === item) {
					return i;
				}
			}
			return -1;
		};
	helpers.where = function(collection, filterCallback) {
		if (helpers.isArray(collection) &amp;&amp; Array.prototype.filter) {
			return collection.filter(filterCallback);
		}
		var filtered = [];

		helpers.each(collection, function(item) {
			if (filterCallback(item)) {
				filtered.push(item);
			}
		});

		return filtered;
	};
	helpers.findIndex = Array.prototype.findIndex?
		function(array, callback, scope) {
			return array.findIndex(callback, scope);
		} :
		function(array, callback, scope) {
			scope = scope === undefined? array : scope;
			for (var i = 0, ilen = array.length; i &lt; ilen; ++i) {
				if (callback.call(scope, array[i], i, array)) {
					return i;
				}
			}
			return -1;
		};
	helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to start of the array
		if (startIndex === undefined || startIndex === null) {
			startIndex = -1;
		}
		for (var i = startIndex + 1; i &lt; arrayToSearch.length; i++) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};
	helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to end of the array
		if (startIndex === undefined || startIndex === null) {
			startIndex = arrayToSearch.length;
		}
		for (var i = startIndex - 1; i &gt;= 0; i--) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};
	helpers.inherits = function(extensions) {
		// Basic javascript inheritance based on the model created in Backbone.js
		var me = this;
		var ChartElement = (extensions &amp;&amp; extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
			return me.apply(this, arguments);
		};

		var Surrogate = function() {
			this.constructor = ChartElement;
		};
		Surrogate.prototype = me.prototype;
		ChartElement.prototype = new Surrogate();

		ChartElement.extend = helpers.inherits;

		if (extensions) {
			helpers.extend(ChartElement.prototype, extensions);
		}

		ChartElement.__super__ = me.prototype;

		return ChartElement;
	};
	helpers.noop = function() {};
	helpers.uid = (function() {
		var id = 0;
		return function() {
			return id++;
		};
	}());
	// -- Math methods
	helpers.isNumber = function(n) {
		return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
	};
	helpers.almostEquals = function(x, y, epsilon) {
		return Math.abs(x - y) &lt; epsilon;
	};
	helpers.max = function(array) {
		return array.reduce(function(max, value) {
			if (!isNaN(value)) {
				return Math.max(max, value);
			}
			return max;
		}, Number.NEGATIVE_INFINITY);
	};
	helpers.min = function(array) {
		return array.reduce(function(min, value) {
			if (!isNaN(value)) {
				return Math.min(min, value);
			}
			return min;
		}, Number.POSITIVE_INFINITY);
	};
	helpers.sign = Math.sign?
		function(x) {
			return Math.sign(x);
		} :
		function(x) {
			x = +x; // convert to a number
			if (x === 0 || isNaN(x)) {
				return x;
			}
			return x &gt; 0 ? 1 : -1;
		};
	helpers.log10 = Math.log10?
		function(x) {
			return Math.log10(x);
		} :
		function(x) {
			return Math.log(x) / Math.LN10;
		};
	helpers.toRadians = function(degrees) {
		return degrees * (Math.PI / 180);
	};
	helpers.toDegrees = function(radians) {
		return radians * (180 / Math.PI);
	};
	// Gets the angle from vertical upright to the point about a centre.
	helpers.getAngleFromPoint = function(centrePoint, anglePoint) {
		var distanceFromXCenter = anglePoint.x - centrePoint.x,
			distanceFromYCenter = anglePoint.y - centrePoint.y,
			radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

		var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

		if (angle &lt; (-0.5 * Math.PI)) {
			angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
		}

		return {
			angle: angle,
			distance: radialDistanceFromCenter
		};
	};
	helpers.distanceBetweenPoints = function(pt1, pt2) {
		return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
	};
	helpers.aliasPixel = function(pixelWidth) {
		return (pixelWidth % 2 === 0) ? 0 : 0.5;
	};
	helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
		// Props to Rob Spencer at scaled innovation for his post on splining between points
		// http://scaledinnovation.com/analytics/splines/aboutSplines.html

		// This function must also respect "skipped" points

		var previous = firstPoint.skip ? middlePoint : firstPoint,
			current = middlePoint,
			next = afterPoint.skip ? middlePoint : afterPoint;

		var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
		var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

		var s01 = d01 / (d01 + d12);
		var s12 = d12 / (d01 + d12);

		// If all points are the same, s01 &amp; s02 will be inf
		s01 = isNaN(s01) ? 0 : s01;
		s12 = isNaN(s12) ? 0 : s12;

		var fa = t * s01; // scaling factor for triangle Ta
		var fb = t * s12;

		return {
			previous: {
				x: current.x - fa * (next.x - previous.x),
				y: current.y - fa * (next.y - previous.y)
			},
			next: {
				x: current.x + fb * (next.x - previous.x),
				y: current.y + fb * (next.y - previous.y)
			}
		};
	};
	helpers.EPSILON = Number.EPSILON || 1e-14;
	helpers.splineCurveMonotone = function(points) {
		// This function calculates B�zier control points in a similar way than |splineCurve|,
		// but preserves monotonicity of the provided data and ensures no local extremums are added
		// between the dataset discrete points due to the interpolation.
		// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

		var pointsWithTangents = (points || []).map(function(point) {
			return {
				model: point._model,
				deltaK: 0,
				mK: 0
			};
		});

		// Calculate slopes (deltaK) and initialize tangents (mK)
		var pointsLen = pointsWithTangents.length;
		var i, pointBefore, pointCurrent, pointAfter;
		for (i = 0; i &lt; pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i &gt; 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i &lt; pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointAfter &amp;&amp; !pointAfter.model.skip) {
				pointCurrent.deltaK = (pointAfter.model.y - pointCurrent.model.y) / (pointAfter.model.x - pointCurrent.model.x);
			}

			if (!pointBefore || pointBefore.model.skip) {
				pointCurrent.mK = pointCurrent.deltaK;
			} else if (!pointAfter || pointAfter.model.skip) {
				pointCurrent.mK = pointBefore.deltaK;
			} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
				pointCurrent.mK = 0;
			} else {
				pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
			}
		}

		// Adjust tangents to ensure monotonic properties
		var alphaK, betaK, tauK, squaredMagnitude;
		for (i = 0; i &lt; pointsLen - 1; ++i) {
			pointCurrent = pointsWithTangents[i];
			pointAfter = pointsWithTangents[i + 1];
			if (pointCurrent.model.skip || pointAfter.model.skip) {
				continue;
			}

			if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
				pointCurrent.mK = pointAfter.mK = 0;
				continue;
			}

			alphaK = pointCurrent.mK / pointCurrent.deltaK;
			betaK = pointAfter.mK / pointCurrent.deltaK;
			squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
			if (squaredMagnitude &lt;= 9) {
				continue;
			}

			tauK = 3 / Math.sqrt(squaredMagnitude);
			pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
			pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
		}

		// Compute control points
		var deltaX;
		for (i = 0; i &lt; pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i &gt; 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i &lt; pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointBefore &amp;&amp; !pointBefore.model.skip) {
				deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
				pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
				pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
			}
			if (pointAfter &amp;&amp; !pointAfter.model.skip) {
				deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
				pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
				pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
			}
		}
	};
	helpers.nextItem = function(collection, index, loop) {
		if (loop) {
			return index &gt;= collection.length - 1 ? collection[0] : collection[index + 1];
		}
		return index &gt;= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
	};
	helpers.previousItem = function(collection, index, loop) {
		if (loop) {
			return index &lt;= 0 ? collection[collection.length - 1] : collection[index - 1];
		}
		return index &lt;= 0 ? collection[0] : collection[index - 1];
	};
	// Implementation of the nice number algorithm used in determining where axis labels will go
	helpers.niceNum = function(range, round) {
		var exponent = Math.floor(helpers.log10(range));
		var fraction = range / Math.pow(10, exponent);
		var niceFraction;

		if (round) {
			if (fraction &lt; 1.5) {
				niceFraction = 1;
			} else if (fraction &lt; 3) {
				niceFraction = 2;
			} else if (fraction &lt; 7) {
				niceFraction = 5;
			} else {
				niceFraction = 10;
			}
		} else if (fraction &lt;= 1.0) {
			niceFraction = 1;
		} else if (fraction &lt;= 2) {
			niceFraction = 2;
		} else if (fraction &lt;= 5) {
			niceFraction = 5;
		} else {
			niceFraction = 10;
		}

		return niceFraction * Math.pow(10, exponent);
	};
	// Easing functions adapted from Robert Penner's easing equations
	// http://www.robertpenner.com/easing/
	var easingEffects = helpers.easingEffects = {
		linear: function(t) {
			return t;
		},
		easeInQuad: function(t) {
			return t * t;
		},
		easeOutQuad: function(t) {
			return -1 * t * (t - 2);
		},
		easeInOutQuad: function(t) {
			if ((t /= 1 / 2) &lt; 1) {
				return 1 / 2 * t * t;
			}
			return -1 / 2 * ((--t) * (t - 2) - 1);
		},
		easeInCubic: function(t) {
			return t * t * t;
		},
		easeOutCubic: function(t) {
			return 1 * ((t = t / 1 - 1) * t * t + 1);
		},
		easeInOutCubic: function(t) {
			if ((t /= 1 / 2) &lt; 1) {
				return 1 / 2 * t * t * t;
			}
			return 1 / 2 * ((t -= 2) * t * t + 2);
		},
		easeInQuart: function(t) {
			return t * t * t * t;
		},
		easeOutQuart: function(t) {
			return -1 * ((t = t / 1 - 1) * t * t * t - 1);
		},
		easeInOutQuart: function(t) {
			if ((t /= 1 / 2) &lt; 1) {
				return 1 / 2 * t * t * t * t;
			}
			return -1 / 2 * ((t -= 2) * t * t * t - 2);
		},
		easeInQuint: function(t) {
			return 1 * (t /= 1) * t * t * t * t;
		},
		easeOutQuint: function(t) {
			return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);
		},
		easeInOutQuint: function(t) {
			if ((t /= 1 / 2) &lt; 1) {
				return 1 / 2 * t * t * t * t * t;
			}
			return 1 / 2 * ((t -= 2) * t * t * t * t + 2);
		},
		easeInSine: function(t) {
			return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;
		},
		easeOutSine: function(t) {
			return 1 * Math.sin(t / 1 * (Math.PI / 2));
		},
		easeInOutSine: function(t) {
			return -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);
		},
		easeInExpo: function(t) {
			return (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));
		},
		easeOutExpo: function(t) {
			return (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);
		},
		easeInOutExpo: function(t) {
			if (t === 0) {
				return 0;
			}
			if (t === 1) {
				return 1;
			}
			if ((t /= 1 / 2) &lt; 1) {
				return 1 / 2 * Math.pow(2, 10 * (t - 1));
			}
			return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);
		},
		easeInCirc: function(t) {
			if (t &gt;= 1) {
				return t;
			}
			return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);
		},
		easeOutCirc: function(t) {
			return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);
		},
		easeInOutCirc: function(t) {
			if ((t /= 1 / 2) &lt; 1) {
				return -1 / 2 * (Math.sqrt(1 - t * t) - 1);
			}
			return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);
		},
		easeInElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 1) === 1) {
				return 1;
			}
			if (!p) {
				p = 1 * 0.3;
			}
			if (a &lt; Math.abs(1)) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));
		},
		easeOutElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 1) === 1) {
				return 1;
			}
			if (!p) {
				p = 1 * 0.3;
			}
			if (a &lt; Math.abs(1)) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			return a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;
		},
		easeInOutElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 1 / 2) === 2) {
				return 1;
			}
			if (!p) {
				p = 1 * (0.3 * 1.5);
			}
			if (a &lt; Math.abs(1)) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			if (t &lt; 1) {
				return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));
			}
			return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;
		},
		easeInBack: function(t) {
			var s = 1.70158;
			return 1 * (t /= 1) * t * ((s + 1) * t - s);
		},
		easeOutBack: function(t) {
			var s = 1.70158;
			return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);
		},
		easeInOutBack: function(t) {
			var s = 1.70158;
			if ((t /= 1 / 2) &lt; 1) {
				return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));
			}
			return 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
		},
		easeInBounce: function(t) {
			return 1 - easingEffects.easeOutBounce(1 - t);
		},
		easeOutBounce: function(t) {
			if ((t /= 1) &lt; (1 / 2.75)) {
				return 1 * (7.5625 * t * t);
			} else if (t &lt; (2 / 2.75)) {
				return 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);
			} else if (t &lt; (2.5 / 2.75)) {
				return 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);
			}
			return 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);
		},
		easeInOutBounce: function(t) {
			if (t &lt; 1 / 2) {
				return easingEffects.easeInBounce(t * 2) * 0.5;
			}
			return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;
		}
	};
	// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	helpers.requestAnimFrame = (function() {
		return window.requestAnimationFrame ||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame ||
			window.oRequestAnimationFrame ||
			window.msRequestAnimationFrame ||
			function(callback) {
				return window.setTimeout(callback, 1000 / 60);
			};
	}());
	helpers.cancelAnimFrame = (function() {
		return window.cancelAnimationFrame ||
			window.webkitCancelAnimationFrame ||
			window.mozCancelAnimationFrame ||
			window.oCancelAnimationFrame ||
			window.msCancelAnimationFrame ||
			function(callback) {
				return window.clearTimeout(callback, 1000 / 60);
			};
	}());
	// -- DOM methods
	helpers.getRelativePosition = function(evt, chart) {
		var mouseX, mouseY;
		var e = evt.originalEvent || evt,
			canvas = evt.currentTarget || evt.srcElement,
			boundingRect = canvas.getBoundingClientRect();

		var touches = e.touches;
		if (touches &amp;&amp; touches.length &gt; 0) {
			mouseX = touches[0].clientX;
			mouseY = touches[0].clientY;

		} else {
			mouseX = e.clientX;
			mouseY = e.clientY;
		}

		// Scale mouse coordinates into canvas coordinates
		// by following the pattern laid out by 'jerryj' in the comments of
		// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
		var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));
		var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));
		var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));
		var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));
		var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
		var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

		// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
		// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
		mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
		mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

		return {
			x: mouseX,
			y: mouseY
		};

	};
	helpers.addEvent = function(node, eventType, method) {
		if (node.addEventListener) {
			node.addEventListener(eventType, method);
		} else if (node.attachEvent) {
			node.attachEvent('on' + eventType, method);
		} else {
			node['on' + eventType] = method;
		}
	};
	helpers.removeEvent = function(node, eventType, handler) {
		if (node.removeEventListener) {
			node.removeEventListener(eventType, handler, false);
		} else if (node.detachEvent) {
			node.detachEvent('on' + eventType, handler);
		} else {
			node['on' + eventType] = helpers.noop;
		}
	};
	helpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {
		// Create the events object if it's not already present
		var events = chartInstance.events = chartInstance.events || {};

		helpers.each(arrayOfEvents, function(eventName) {
			events[eventName] = function() {
				handler.apply(chartInstance, arguments);
			};
			helpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);
		});
	};
	helpers.unbindEvents = function(chartInstance, arrayOfEvents) {
		var canvas = chartInstance.chart.canvas;
		helpers.each(arrayOfEvents, function(handler, eventName) {
			helpers.removeEvent(canvas, eventName, handler);
		});
	};

	// Private helper function to convert max-width/max-height values that may be percentages into a number
	function parseMaxStyle(styleValue, node, parentProperty) {
		var valueInPixels;
		if (typeof(styleValue) === 'string') {
			valueInPixels = parseInt(styleValue, 10);

			if (styleValue.indexOf('%') !== -1) {
				// percentage * size in dimension
				valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
			}
		} else {
			valueInPixels = styleValue;
		}

		return valueInPixels;
	}

	/**
	 * Returns if the given value contains an effective constraint.
	 * @private
	 */
	function isConstrainedValue(value) {
		return value !== undefined &amp;&amp; value !== null &amp;&amp; value !== 'none';
	}

	// Private helper to get a constraint dimension
	// @param domNode : the node to check the constraint on
	// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
	// @param percentageProperty : property of parent to use when calculating width as a percentage
	// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser
	function getConstraintDimension(domNode, maxStyle, percentageProperty) {
		var view = document.defaultView;
		var parentNode = domNode.parentNode;
		var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
		var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
		var hasCNode = isConstrainedValue(constrainedNode);
		var hasCContainer = isConstrainedValue(constrainedContainer);
		var infinity = Number.POSITIVE_INFINITY;

		if (hasCNode || hasCContainer) {
			return Math.min(
				hasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
				hasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
		}

		return 'none';
	}
	// returns Number or undefined if no constraint
	helpers.getConstraintWidth = function(domNode) {
		return getConstraintDimension(domNode, 'max-width', 'clientWidth');
	};
	// returns Number or undefined if no constraint
	helpers.getConstraintHeight = function(domNode) {
		return getConstraintDimension(domNode, 'max-height', 'clientHeight');
	};
	helpers.getMaximumWidth = function(domNode) {
		var container = domNode.parentNode;
		var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);
		var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);
		var w = container.clientWidth - paddingLeft - paddingRight;
		var cw = helpers.getConstraintWidth(domNode);
		return isNaN(cw)? w : Math.min(w, cw);
	};
	helpers.getMaximumHeight = function(domNode) {
		var container = domNode.parentNode;
		var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);
		var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);
		var h = container.clientHeight - paddingTop - paddingBottom;
		var ch = helpers.getConstraintHeight(domNode);
		return isNaN(ch)? h : Math.min(h, ch);
	};
	helpers.getStyle = function(el, property) {
		return el.currentStyle ?
			el.currentStyle[property] :
			document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
	};
	helpers.retinaScale = function(chart) {
		var pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;
		if (pixelRatio === 1) {
			return;
		}

		var canvas = chart.canvas;
		var height = chart.height;
		var width = chart.width;

		canvas.height = height * pixelRatio;
		canvas.width = width * pixelRatio;
		chart.ctx.scale(pixelRatio, pixelRatio);

		// If no style has been set on the canvas, the render size is used as display size,
		// making the chart visually bigger, so let's enforce it to the "correct" values.
		// See https://github.com/chartjs/Chart.js/issues/3575
		canvas.style.height = height + 'px';
		canvas.style.width = width + 'px';
	};
	// -- Canvas methods
	helpers.clear = function(chart) {
		chart.ctx.clearRect(0, 0, chart.width, chart.height);
	};
	helpers.fontString = function(pixelSize, fontStyle, fontFamily) {
		return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
	};
	helpers.longestText = function(ctx, font, arrayOfThings, cache) {
		cache = cache || {};
		var data = cache.data = cache.data || {};
		var gc = cache.garbageCollect = cache.garbageCollect || [];

		if (cache.font !== font) {
			data = cache.data = {};
			gc = cache.garbageCollect = [];
			cache.font = font;
		}

		ctx.font = font;
		var longest = 0;
		helpers.each(arrayOfThings, function(thing) {
			// Undefined strings and arrays should not be measured
			if (thing !== undefined &amp;&amp; thing !== null &amp;&amp; helpers.isArray(thing) !== true) {
				longest = helpers.measureText(ctx, data, gc, longest, thing);
			} else if (helpers.isArray(thing)) {
				// if it is an array lets measure each element
				// to do maybe simplify this function a bit so we can do this more recursively?
				helpers.each(thing, function(nestedThing) {
					// Undefined strings and arrays should not be measured
					if (nestedThing !== undefined &amp;&amp; nestedThing !== null &amp;&amp; !helpers.isArray(nestedThing)) {
						longest = helpers.measureText(ctx, data, gc, longest, nestedThing);
					}
				});
			}
		});

		var gcLen = gc.length / 2;
		if (gcLen &gt; arrayOfThings.length) {
			for (var i = 0; i &lt; gcLen; i++) {
				delete data[gc[i]];
			}
			gc.splice(0, gcLen);
		}
		return longest;
	};
	helpers.measureText = function(ctx, data, gc, longest, string) {
		var textWidth = data[string];
		if (!textWidth) {
			textWidth = data[string] = ctx.measureText(string).width;
			gc.push(string);
		}
		if (textWidth &gt; longest) {
			longest = textWidth;
		}
		return longest;
	};
	helpers.numberOfLabelLines = function(arrayOfThings) {
		var numberOfLines = 1;
		helpers.each(arrayOfThings, function(thing) {
			if (helpers.isArray(thing)) {
				if (thing.length &gt; numberOfLines) {
					numberOfLines = thing.length;
				}
			}
		});
		return numberOfLines;
	};
	helpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {
		ctx.beginPath();
		ctx.moveTo(x + radius, y);
		ctx.lineTo(x + width - radius, y);
		ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
		ctx.lineTo(x + width, y + height - radius);
		ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
		ctx.lineTo(x + radius, y + height);
		ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
		ctx.lineTo(x, y + radius);
		ctx.quadraticCurveTo(x, y, x + radius, y);
		ctx.closePath();
	};
	helpers.color = function(c) {
		if (!color) {
			console.error('Color.js not found!');
			return c;
		}

		/* global CanvasGradient */
		if (c instanceof CanvasGradient) {
			return color(Chart.defaults.global.defaultColor);
		}

		return color(c);
	};
	helpers.addResizeListener = function(node, callback) {
		var iframe = document.createElement('iframe');
		iframe.className = 'chartjs-hidden-iframe';
		iframe.style.cssText =
			'display:block;'+
			'overflow:hidden;'+
			'border:0;'+
			'margin:0;'+
			'top:0;'+
			'left:0;'+
			'bottom:0;'+
			'right:0;'+
			'height:100%;'+
			'width:100%;'+
			'position:absolute;'+
			'pointer-events:none;'+
			'z-index:-1;';

		// Prevent the iframe to gain focus on tab.
		// https://github.com/chartjs/Chart.js/issues/3090
		iframe.tabIndex = -1;

		// Let's keep track of this added iframe and thus avoid DOM query when removing it.
		var stub = node._chartjs = {
			resizer: iframe,
			ticking: false
		};

		// Throttle the callback notification until the next animation frame.
		var notify = function() {
			if (!stub.ticking) {
				stub.ticking = true;
				helpers.requestAnimFrame.call(window, function() {
					if (stub.resizer) {
						stub.ticking = false;
						return callback();
					}
				});
			}
		};

		// If the iframe is re-attached to the DOM, the resize listener is removed because the
		// content is reloaded, so make sure to install the handler after the iframe is loaded.
		// https://github.com/chartjs/Chart.js/issues/3521
		helpers.addEvent(iframe, 'load', function() {
			helpers.addEvent(iframe.contentWindow || iframe, 'resize', notify);

			// The iframe size might have changed while loading, which can also
			// happen if the size has been changed while detached from the DOM.
			notify();
		});

		node.insertBefore(iframe, node.firstChild);
	};
	helpers.removeResizeListener = function(node) {
		if (!node || !node._chartjs) {
			return;
		}

		var iframe = node._chartjs.resizer;
		if (iframe) {
			iframe.parentNode.removeChild(iframe);
			node._chartjs.resizer = null;
		}

		delete node._chartjs;
	};
	helpers.isArray = Array.isArray?
		function(obj) {
			return Array.isArray(obj);
		} :
		function(obj) {
			return Object.prototype.toString.call(obj) === '[object Array]';
		};
	// ! @see http://stackoverflow.com/a/14853974
	helpers.arrayEquals = function(a0, a1) {
		var i, ilen, v0, v1;

		if (!a0 || !a1 || a0.length !== a1.length) {
			return false;
		}

		for (i = 0, ilen=a0.length; i &lt; ilen; ++i) {
			v0 = a0[i];
			v1 = a1[i];

			if (v0 instanceof Array &amp;&amp; v1 instanceof Array) {
				if (!helpers.arrayEquals(v0, v1)) {
					return false;
				}
			} else if (v0 !== v1) {
				// NOTE: two different object instances will never be equal: {x:20} != {x:20}
				return false;
			}
		}

		return true;
	};
	helpers.callCallback = function(fn, args, _tArg) {
		if (fn &amp;&amp; typeof fn.call === 'function') {
			fn.apply(_tArg, args);
		}
	};
	helpers.getHoverColor = function(colorValue) {
		/* global CanvasPattern */
		return (colorValue instanceof CanvasPattern) ?
			colorValue :
			helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();
	};
};

},{"3":3}],27:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {
	var helpers = Chart.helpers;

	/**
	 * Helper function to traverse all of the visible elements in the chart
	 * @param chart {chart} the chart
	 * @param handler {Function} the callback to execute for each visible item
	 */
	function parseVisibleItems(chart, handler) {
		var datasets = chart.data.datasets;
		var meta, i, j, ilen, jlen;

		for (i = 0, ilen = datasets.length; i &lt; ilen; ++i) {
			if (!chart.isDatasetVisible(i)) {
				continue;
			}

			meta = chart.getDatasetMeta(i);
			for (j = 0, jlen = meta.data.length; j &lt; jlen; ++j) {
				var element = meta.data[j];
				if (!element._view.skip) {
					handler(element);
				}
			}
		}
	}

	/**
	 * Helper function to get the items that intersect the event position
	 * @param items {ChartElement[]} elements to filter
	 * @param position {Point} the point to be nearest to
	 * @return {ChartElement[]} the nearest items
	 */
	function getIntersectItems(chart, position) {
		var elements = [];

		parseVisibleItems(chart, function(element) {
			if (element.inRange(position.x, position.y)) {
				elements.push(element);
			}
		});

		return elements;
	}

	/**
	 * Helper function to get the items nearest to the event position considering all visible items in teh chart
	 * @param chart {Chart} the chart to look at elements from
	 * @param position {Point} the point to be nearest to
	 * @param intersect {Boolean} if true, only consider items that intersect the position
	 * @param distanceMetric {Function} Optional function to provide the distance between
	 * @return {ChartElement[]} the nearest items
	 */
	function getNearestItems(chart, position, intersect, distanceMetric) {
		var minDistance = Number.POSITIVE_INFINITY;
		var nearestItems = [];

		if (!distanceMetric) {
			distanceMetric = helpers.distanceBetweenPoints;
		}

		parseVisibleItems(chart, function(element) {
			if (intersect &amp;&amp; !element.inRange(position.x, position.y)) {
				return;
			}

			var center = element.getCenterPoint();
			var distance = distanceMetric(position, center);

			if (distance &lt; minDistance) {
				nearestItems = [element];
				minDistance = distance;
			} else if (distance === minDistance) {
				// Can have multiple items at the same distance in which case we sort by size
				nearestItems.push(element);
			}
		});

		return nearestItems;
	}

	function indexMode(chart, e, options) {
		var position = helpers.getRelativePosition(e, chart.chart);
		var distanceMetric = function(pt1, pt2) {
			return Math.abs(pt1.x - pt2.x);
		};
		var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
		var elements = [];

		if (!items.length) {
			return [];
		}

		chart.data.datasets.forEach(function(dataset, datasetIndex) {
			if (chart.isDatasetVisible(datasetIndex)) {
				var meta = chart.getDatasetMeta(datasetIndex),
					element = meta.data[items[0]._index];

				// don't count items that are skipped (null data)
				if (element &amp;&amp; !element._view.skip) {
					elements.push(element);
				}
			}
		});

		return elements;
	}

	/**
	 * @interface IInteractionOptions
	 */
	/**
	 * If true, only consider items that intersect the point
	 * @name IInterfaceOptions#boolean
	 * @type Boolean
	 */

	/**
	 * @namespace Chart.Interaction
	 * Contains interaction related functions
	 */
	Chart.Interaction = {
		// Helper function for different modes
		modes: {
			single: function(chart, e) {
				var position = helpers.getRelativePosition(e, chart.chart);
				var elements = [];

				parseVisibleItems(chart, function(element) {
					if (element.inRange(position.x, position.y)) {
						elements.push(element);
						return elements;
					}
				});

				return elements.slice(0, 1);
			},

			/**
			 * @function Chart.Interaction.modes.label
			 * @deprecated since version 2.4.0
			 */
			label: indexMode,

			/**
			 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
			 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
			 * @function Chart.Interaction.modes.index
			 * @since v2.4.0
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use during interaction
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			index: indexMode,

			/**
			 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
			 * If the options.intersect is false, we find the nearest item and return the items in that dataset
			 * @function Chart.Interaction.modes.dataset
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use during interaction
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			dataset: function(chart, e, options) {
				var position = helpers.getRelativePosition(e, chart.chart);
				var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);

				if (items.length &gt; 0) {
					items = chart.getDatasetMeta(items[0]._datasetIndex).data;
				}

				return items;
			},

			/**
			 * @function Chart.Interaction.modes.x-axis
			 * @deprecated since version 2.4.0. Use index mode and intersect == true
			 */
			'x-axis': function(chart, e) {
				return indexMode(chart, e, true);
			},

			/**
			 * Point mode returns all elements that hit test based on the event position
			 * of the event
			 * @function Chart.Interaction.modes.intersect
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			point: function(chart, e) {
				var position = helpers.getRelativePosition(e, chart.chart);
				return getIntersectItems(chart, position);
			},

			/**
			 * nearest mode returns the element closest to the point
			 * @function Chart.Interaction.modes.intersect
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			nearest: function(chart, e, options) {
				var position = helpers.getRelativePosition(e, chart.chart);
				var nearestItems = getNearestItems(chart, position, options.intersect);

				// We have multiple items at the same distance from the event. Now sort by smallest
				if (nearestItems.length &gt; 1) {
					nearestItems.sort(function(a, b) {
						var sizeA = a.getArea();
						var sizeB = b.getArea();
						var ret = sizeA - sizeB;

						if (ret === 0) {
							// if equal sort by dataset index
							ret = a._datasetIndex - b._datasetIndex;
						}

						return ret;
					});
				}

				// Return only 1 item
				return nearestItems.slice(0, 1);
			},

			/**
			 * x mode returns the elements that hit-test at the current x coordinate
			 * @function Chart.Interaction.modes.x
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			x: function(chart, e, options) {
				var position = helpers.getRelativePosition(e, chart.chart);
				var items = [];
				var intersectsItem = false;

				parseVisibleItems(chart, function(element) {
					if (element.inXRange(position.x)) {
						items.push(element);
					}

					if (element.inRange(position.x, position.y)) {
						intersectsItem = true;
					}
				});

				// If we want to trigger on an intersect and we don't have any items
				// that intersect the position, return nothing
				if (options.intersect &amp;&amp; !intersectsItem) {
					items = [];
				}
				return items;
			},

			/**
			 * y mode returns the elements that hit-test at the current y coordinate
			 * @function Chart.Interaction.modes.y
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			y: function(chart, e, options) {
				var position = helpers.getRelativePosition(e, chart.chart);
				var items = [];
				var intersectsItem = false;

				parseVisibleItems(chart, function(element) {
					if (element.inYRange(position.y)) {
						items.push(element);
					}

					if (element.inRange(position.x, position.y)) {
						intersectsItem = true;
					}
				});

				// If we want to trigger on an intersect and we don't have any items
				// that intersect the position, return nothing
				if (options.intersect &amp;&amp; !intersectsItem) {
					items = [];
				}
				return items;
			}
		}
	};
};

},{}],28:[function(require,module,exports){
'use strict';

module.exports = function() {

	// Occupy the global variable of Chart, and create a simple base class
	var Chart = function(item, config) {
		this.controller = new Chart.Controller(item, config, this);
		return this.controller;
	};

	// Globally expose the defaults to allow for user updating/changing
	Chart.defaults = {
		global: {
			responsive: true,
			responsiveAnimationDuration: 0,
			maintainAspectRatio: true,
			events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
			hover: {
				onHover: null,
				mode: 'nearest',
				intersect: true,
				animationDuration: 400
			},
			onClick: null,
			defaultColor: 'rgba(0,0,0,0.1)',
			defaultFontColor: '#666',
			defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
			defaultFontSize: 12,
			defaultFontStyle: 'normal',
			showLines: true,

			// Element defaults defined in element extensions
			elements: {},

			// Legend callback string
			legendCallback: function(chart) {
				var text = [];
				text.push('&lt;ul class="' + chart.id + '-legend"&gt;');
				for (var i = 0; i &lt; chart.data.datasets.length; i++) {
					text.push('&lt;li&gt;&lt;span style="background-color:' + chart.data.datasets[i].backgroundColor + '"&gt;&lt;/span&gt;');
					if (chart.data.datasets[i].label) {
						text.push(chart.data.datasets[i].label);
					}
					text.push('&lt;/li&gt;');
				}
				text.push('&lt;/ul&gt;');

				return text.join('');
			}
		}
	};

	Chart.Chart = Chart;

	return Chart;
};

},{}],29:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	// The layout service is very self explanatory.  It's responsible for the layout within a chart.
	// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
	// It is this service's responsibility of carrying out that layout.
	Chart.layoutService = {
		defaults: {},

		// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.
		addBox: function(chartInstance, box) {
			if (!chartInstance.boxes) {
				chartInstance.boxes = [];
			}
			chartInstance.boxes.push(box);
		},

		removeBox: function(chartInstance, box) {
			if (!chartInstance.boxes) {
				return;
			}
			chartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);
		},

		// The most important function
		update: function(chartInstance, width, height) {

			if (!chartInstance) {
				return;
			}

			var layoutOptions = chartInstance.options.layout;
			var padding = layoutOptions ? layoutOptions.padding : null;

			var leftPadding = 0;
			var rightPadding = 0;
			var topPadding = 0;
			var bottomPadding = 0;

			if (!isNaN(padding)) {
				// options.layout.padding is a number. assign to all
				leftPadding = padding;
				rightPadding = padding;
				topPadding = padding;
				bottomPadding = padding;
			} else {
				leftPadding = padding.left || 0;
				rightPadding = padding.right || 0;
				topPadding = padding.top || 0;
				bottomPadding = padding.bottom || 0;
			}

			var leftBoxes = helpers.where(chartInstance.boxes, function(box) {
				return box.options.position === 'left';
			});
			var rightBoxes = helpers.where(chartInstance.boxes, function(box) {
				return box.options.position === 'right';
			});
			var topBoxes = helpers.where(chartInstance.boxes, function(box) {
				return box.options.position === 'top';
			});
			var bottomBoxes = helpers.where(chartInstance.boxes, function(box) {
				return box.options.position === 'bottom';
			});

			// Boxes that overlay the chartarea such as the radialLinear scale
			var chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {
				return box.options.position === 'chartArea';
			});

			// Ensure that full width boxes are at the very top / bottom
			topBoxes.sort(function(a, b) {
				return (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);
			});
			bottomBoxes.sort(function(a, b) {
				return (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);
			});

			// Essentially we now have any number of boxes on each of the 4 sides.
			// Our canvas looks like the following.
			// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
			// B1 is the bottom axis
			// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
			// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
			// an error will be thrown.
			//
			// |----------------------------------------------------|
			// |                  T1 (Full Width)                   |
			// |----------------------------------------------------|
			// |    |    |                 T2                  |    |
			// |    |----|-------------------------------------|----|
			// |    |    | C1 |                           | C2 |    |
			// |    |    |----|                           |----|    |
			// |    |    |                                     |    |
			// | L1 | L2 |           ChartArea (C0)            | R1 |
			// |    |    |                                     |    |
			// |    |    |----|                           |----|    |
			// |    |    | C3 |                           | C4 |    |
			// |    |----|-------------------------------------|----|
			// |    |    |                 B1                  |    |
			// |----------------------------------------------------|
			// |                  B2 (Full Width)                   |
			// |----------------------------------------------------|
			//
			// What we do to find the best sizing, we do the following
			// 1. Determine the minimum size of the chart area.
			// 2. Split the remaining width equally between each vertical axis
			// 3. Split the remaining height equally between each horizontal axis
			// 4. Give each layout the maximum size it can be. The layout will return it's minimum size
			// 5. Adjust the sizes of each axis based on it's minimum reported size.
			// 6. Refit each axis
			// 7. Position each axis in the final location
			// 8. Tell the chart the final location of the chart area
			// 9. Tell any axes that overlay the chart area the positions of the chart area

			// Step 1
			var chartWidth = width - leftPadding - rightPadding;
			var chartHeight = height - topPadding - bottomPadding;
			var chartAreaWidth = chartWidth / 2; // min 50%
			var chartAreaHeight = chartHeight / 2; // min 50%

			// Step 2
			var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);

			// Step 3
			var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);

			// Step 4
			var maxChartAreaWidth = chartWidth;
			var maxChartAreaHeight = chartHeight;
			var minBoxSizes = [];

			function getMinimumBoxSize(box) {
				var minSize;
				var isHorizontal = box.isHorizontal();

				if (isHorizontal) {
					minSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
					maxChartAreaHeight -= minSize.height;
				} else {
					minSize = box.update(verticalBoxWidth, chartAreaHeight);
					maxChartAreaWidth -= minSize.width;
				}

				minBoxSizes.push({
					horizontal: isHorizontal,
					minSize: minSize,
					box: box
				});
			}

			helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);

			// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
			// be if the axes are drawn at their minimum sizes.

			// Steps 5 &amp; 6
			var totalLeftBoxesWidth = leftPadding;
			var totalRightBoxesWidth = rightPadding;
			var totalTopBoxesHeight = topPadding;
			var totalBottomBoxesHeight = bottomPadding;

			// Function to fit a box
			function fitBox(box) {
				var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {
					return minBox.box === box;
				});

				if (minBoxSize) {
					if (box.isHorizontal()) {
						var scaleMargin = {
							left: totalLeftBoxesWidth,
							right: totalRightBoxesWidth,
							top: 0,
							bottom: 0
						};

						// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
						// on the margin. Sometimes they need to increase in size slightly
						box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
					} else {
						box.update(minBoxSize.minSize.width, maxChartAreaHeight);
					}
				}
			}

			// Update, and calculate the left and right margins for the horizontal boxes
			helpers.each(leftBoxes.concat(rightBoxes), fitBox);

			helpers.each(leftBoxes, function(box) {
				totalLeftBoxesWidth += box.width;
			});

			helpers.each(rightBoxes, function(box) {
				totalRightBoxesWidth += box.width;
			});

			// Set the Left and Right margins for the horizontal boxes
			helpers.each(topBoxes.concat(bottomBoxes), fitBox);

			// Figure out how much margin is on the top and bottom of the vertical boxes
			helpers.each(topBoxes, function(box) {
				totalTopBoxesHeight += box.height;
			});

			helpers.each(bottomBoxes, function(box) {
				totalBottomBoxesHeight += box.height;
			});

			function finalFitVerticalBox(box) {
				var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {
					return minSize.box === box;
				});

				var scaleMargin = {
					left: 0,
					right: 0,
					top: totalTopBoxesHeight,
					bottom: totalBottomBoxesHeight
				};

				if (minBoxSize) {
					box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);
				}
			}

			// Let the left layout know the final margin
			helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);

			// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
			totalLeftBoxesWidth = leftPadding;
			totalRightBoxesWidth = rightPadding;
			totalTopBoxesHeight = topPadding;
			totalBottomBoxesHeight = bottomPadding;

			helpers.each(leftBoxes, function(box) {
				totalLeftBoxesWidth += box.width;
			});

			helpers.each(rightBoxes, function(box) {
				totalRightBoxesWidth += box.width;
			});

			helpers.each(topBoxes, function(box) {
				totalTopBoxesHeight += box.height;
			});
			helpers.each(bottomBoxes, function(box) {
				totalBottomBoxesHeight += box.height;
			});

			// Figure out if our chart area changed. This would occur if the dataset layout label rotation
			// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
			// without calling `fit` again
			var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
			var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;

			if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
				helpers.each(leftBoxes, function(box) {
					box.height = newMaxChartAreaHeight;
				});

				helpers.each(rightBoxes, function(box) {
					box.height = newMaxChartAreaHeight;
				});

				helpers.each(topBoxes, function(box) {
					if (!box.options.fullWidth) {
						box.width = newMaxChartAreaWidth;
					}
				});

				helpers.each(bottomBoxes, function(box) {
					if (!box.options.fullWidth) {
						box.width = newMaxChartAreaWidth;
					}
				});

				maxChartAreaHeight = newMaxChartAreaHeight;
				maxChartAreaWidth = newMaxChartAreaWidth;
			}

			// Step 7 - Position the boxes
			var left = leftPadding;
			var top = topPadding;

			function placeBox(box) {
				if (box.isHorizontal()) {
					box.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;
					box.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
					box.top = top;
					box.bottom = top + box.height;

					// Move to next point
					top = box.bottom;

				} else {

					box.left = left;
					box.right = left + box.width;
					box.top = totalTopBoxesHeight;
					box.bottom = totalTopBoxesHeight + maxChartAreaHeight;

					// Move to next point
					left = box.right;
				}
			}

			helpers.each(leftBoxes.concat(topBoxes), placeBox);

			// Account for chart width and height
			left += maxChartAreaWidth;
			top += maxChartAreaHeight;

			helpers.each(rightBoxes, placeBox);
			helpers.each(bottomBoxes, placeBox);

			// Step 8
			chartInstance.chartArea = {
				left: totalLeftBoxesWidth,
				top: totalTopBoxesHeight,
				right: totalLeftBoxesWidth + maxChartAreaWidth,
				bottom: totalTopBoxesHeight + maxChartAreaHeight
			};

			// Step 9
			helpers.each(chartAreaBoxes, function(box) {
				box.left = chartInstance.chartArea.left;
				box.top = chartInstance.chartArea.top;
				box.right = chartInstance.chartArea.right;
				box.bottom = chartInstance.chartArea.bottom;

				box.update(maxChartAreaWidth, maxChartAreaHeight);
			});
		}
	};
};

},{}],30:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var noop = helpers.noop;

	Chart.defaults.global.legend = {

		display: true,
		position: 'top',
		fullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)
		reverse: false,

		// a callback that will handle
		onClick: function(e, legendItem) {
			var index = legendItem.datasetIndex;
			var ci = this.chart;
			var meta = ci.getDatasetMeta(index);

			// See controller.isDatasetVisible comment
			meta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;

			// We hid a dataset ... rerender the chart
			ci.update();
		},

		onHover: null,

		labels: {
			boxWidth: 40,
			padding: 10,
			// Generates labels shown in the legend
			// Valid properties to return:
			// text : text to display
			// fillStyle : fill of coloured box
			// strokeStyle: stroke of coloured box
			// hidden : if this legend item refers to a hidden item
			// lineCap : cap style for line
			// lineDash
			// lineDashOffset :
			// lineJoin :
			// lineWidth :
			generateLabels: function(chart) {
				var data = chart.data;
				return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
					return {
						text: dataset.label,
						fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),
						hidden: !chart.isDatasetVisible(i),
						lineCap: dataset.borderCapStyle,
						lineDash: dataset.borderDash,
						lineDashOffset: dataset.borderDashOffset,
						lineJoin: dataset.borderJoinStyle,
						lineWidth: dataset.borderWidth,
						strokeStyle: dataset.borderColor,
						pointStyle: dataset.pointStyle,

						// Below is extra data used for toggling the datasets
						datasetIndex: i
					};
				}, this) : [];
			}
		}
	};

	/**
	 * Helper function to get the box width based on the usePointStyle option
	 * @param labelopts {Object} the label options on the legend
	 * @param fontSize {Number} the label font size
	 * @return {Number} width of the color box area
	 */
	function getBoxWidth(labelOpts, fontSize) {
		return labelOpts.usePointStyle ?
			fontSize * Math.SQRT2 :
			labelOpts.boxWidth;
	}

	Chart.Legend = Chart.Element.extend({

		initialize: function(config) {
			helpers.extend(this, config);

			// Contains hit boxes for each dataset (in dataset order)
			this.legendHitBoxes = [];

			// Are we in doughnut mode which has a different data type
			this.doughnutMode = false;
		},

		// These methods are ordered by lifecycle. Utilities then follow.
		// Any function defined here is inherited by all legend types.
		// Any function can be extended by the legend type

		beforeUpdate: noop,
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = margins;

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();
			// Labels
			me.beforeBuildLabels();
			me.buildLabels();
			me.afterBuildLabels();

			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;
		},
		afterUpdate: noop,

		//

		beforeSetDimensions: noop,
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;

			// Reset minSize
			me.minSize = {
				width: 0,
				height: 0
			};
		},
		afterSetDimensions: noop,

		//

		beforeBuildLabels: noop,
		buildLabels: function() {
			var me = this;
			me.legendItems = me.options.labels.generateLabels.call(me, me.chart);
			if (me.options.reverse) {
				me.legendItems.reverse();
			}
		},
		afterBuildLabels: noop,

		//

		beforeFit: noop,
		fit: function() {
			var me = this;
			var opts = me.options;
			var labelOpts = opts.labels;
			var display = opts.display;

			var ctx = me.ctx;

			var globalDefault = Chart.defaults.global,
				itemOrDefault = helpers.getValueOrDefault,
				fontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),
				fontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),
				fontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),
				labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

			// Reset hit boxes
			var hitboxes = me.legendHitBoxes = [];

			var minSize = me.minSize;
			var isHorizontal = me.isHorizontal();

			if (isHorizontal) {
				minSize.width = me.maxWidth; // fill all the width
				minSize.height = display ? 10 : 0;
			} else {
				minSize.width = display ? 10 : 0;
				minSize.height = me.maxHeight; // fill all the height
			}

			// Increase sizes here
			if (display) {
				ctx.font = labelFont;

				if (isHorizontal) {
					// Labels

					// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
					var lineWidths = me.lineWidths = [0];
					var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;

					ctx.textAlign = 'left';
					ctx.textBaseline = 'top';

					helpers.each(me.legendItems, function(legendItem, i) {
						var boxWidth = getBoxWidth(labelOpts, fontSize);
						var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

						if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding &gt;= me.width) {
							totalHeight += fontSize + (labelOpts.padding);
							lineWidths[lineWidths.length] = me.left;
						}

						// Store the hitbox width and height here. Final position will be updated in `draw`
						hitboxes[i] = {
							left: 0,
							top: 0,
							width: width,
							height: fontSize
						};

						lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
					});

					minSize.height += totalHeight;

				} else {
					var vPadding = labelOpts.padding;
					var columnWidths = me.columnWidths = [];
					var totalWidth = labelOpts.padding;
					var currentColWidth = 0;
					var currentColHeight = 0;
					var itemHeight = fontSize + vPadding;

					helpers.each(me.legendItems, function(legendItem, i) {
						var boxWidth = getBoxWidth(labelOpts, fontSize);
						var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

						// If too tall, go to new column
						if (currentColHeight + itemHeight &gt; minSize.height) {
							totalWidth += currentColWidth + labelOpts.padding;
							columnWidths.push(currentColWidth); // previous column width

							currentColWidth = 0;
							currentColHeight = 0;
						}

						// Get max width
						currentColWidth = Math.max(currentColWidth, itemWidth);
						currentColHeight += itemHeight;

						// Store the hitbox width and height here. Final position will be updated in `draw`
						hitboxes[i] = {
							left: 0,
							top: 0,
							width: itemWidth,
							height: fontSize
						};
					});

					totalWidth += currentColWidth;
					columnWidths.push(currentColWidth);
					minSize.width += totalWidth;
				}
			}

			me.width = minSize.width;
			me.height = minSize.height;
		},
		afterFit: noop,

		// Shared Methods
		isHorizontal: function() {
			return this.options.position === 'top' || this.options.position === 'bottom';
		},

		// Actually draw the legend on the canvas
		draw: function() {
			var me = this;
			var opts = me.options;
			var labelOpts = opts.labels;
			var globalDefault = Chart.defaults.global,
				lineDefault = globalDefault.elements.line,
				legendWidth = me.width,
				lineWidths = me.lineWidths;

			if (opts.display) {
				var ctx = me.ctx,
					cursor,
					itemOrDefault = helpers.getValueOrDefault,
					fontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),
					fontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),
					fontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),
					fontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),
					labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

				// Canvas setup
				ctx.textAlign = 'left';
				ctx.textBaseline = 'top';
				ctx.lineWidth = 0.5;
				ctx.strokeStyle = fontColor; // for strikethrough effect
				ctx.fillStyle = fontColor; // render in correct colour
				ctx.font = labelFont;

				var boxWidth = getBoxWidth(labelOpts, fontSize),
					hitboxes = me.legendHitBoxes;

				// current position
				var drawLegendBox = function(x, y, legendItem) {
					if (isNaN(boxWidth) || boxWidth &lt;= 0) {
						return;
					}

					// Set the ctx for the box
					ctx.save();

					ctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
					ctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
					ctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
					ctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
					ctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
					ctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
					var isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);

					if (ctx.setLineDash) {
						// IE 9 and 10 do not support line dash
						ctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));
					}

					if (opts.labels &amp;&amp; opts.labels.usePointStyle) {
						// Recalculate x and y for drawPoint() because its expecting
						// x and y to be center of figure (instead of top left)
						var radius = fontSize * Math.SQRT2 / 2;
						var offSet = radius / Math.SQRT2;
						var centerX = x + offSet;
						var centerY = y + offSet;

						// Draw pointStyle as legend symbol
						Chart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
					} else {
						// Draw box as legend symbol
						if (!isLineWidthZero) {
							ctx.strokeRect(x, y, boxWidth, fontSize);
						}
						ctx.fillRect(x, y, boxWidth, fontSize);
					}

					ctx.restore();
				};
				var fillText = function(x, y, legendItem, textWidth) {
					ctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);

					if (legendItem.hidden) {
						// Strikethrough the text if hidden
						ctx.beginPath();
						ctx.lineWidth = 2;
						ctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));
						ctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));
						ctx.stroke();
					}
				};

				// Horizontal
				var isHorizontal = me.isHorizontal();
				if (isHorizontal) {
					cursor = {
						x: me.left + ((legendWidth - lineWidths[0]) / 2),
						y: me.top + labelOpts.padding,
						line: 0
					};
				} else {
					cursor = {
						x: me.left + labelOpts.padding,
						y: me.top + labelOpts.padding,
						line: 0
					};
				}

				var itemHeight = fontSize + labelOpts.padding;
				helpers.each(me.legendItems, function(legendItem, i) {
					var textWidth = ctx.measureText(legendItem.text).width,
						width = boxWidth + (fontSize / 2) + textWidth,
						x = cursor.x,
						y = cursor.y;

					if (isHorizontal) {
						if (x + width &gt;= legendWidth) {
							y = cursor.y += itemHeight;
							cursor.line++;
							x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);
						}
					} else if (y + itemHeight &gt; me.bottom) {
						x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
						y = cursor.y = me.top;
						cursor.line++;
					}

					drawLegendBox(x, y, legendItem);

					hitboxes[i].left = x;
					hitboxes[i].top = y;

					// Fill the actual label
					fillText(x, y, legendItem, textWidth);

					if (isHorizontal) {
						cursor.x += width + (labelOpts.padding);
					} else {
						cursor.y += itemHeight;
					}

				});
			}
		},

		/**
		 * Handle an event
		 * @private
		 * @param e {Event} the event to handle
		 * @return {Boolean} true if a change occured
		 */
		handleEvent: function(e) {
			var me = this;
			var opts = me.options;
			var type = e.type === 'mouseup' ? 'click' : e.type;
			var changed = false;

			if (type === 'mousemove') {
				if (!opts.onHover) {
					return;
				}
			} else if (type === 'click') {
				if (!opts.onClick) {
					return;
				}
			} else {
				return;
			}

			var position = helpers.getRelativePosition(e, me.chart.chart),
				x = position.x,
				y = position.y;

			if (x &gt;= me.left &amp;&amp; x &lt;= me.right &amp;&amp; y &gt;= me.top &amp;&amp; y &lt;= me.bottom) {
				// See if we are touching one of the dataset boxes
				var lh = me.legendHitBoxes;
				for (var i = 0; i &lt; lh.length; ++i) {
					var hitBox = lh[i];

					if (x &gt;= hitBox.left &amp;&amp; x &lt;= hitBox.left + hitBox.width &amp;&amp; y &gt;= hitBox.top &amp;&amp; y &lt;= hitBox.top + hitBox.height) {
						// Touching an element
						if (type === 'click') {
							opts.onClick.call(me, e, me.legendItems[i]);
							changed = true;
							break;
						} else if (type === 'mousemove') {
							opts.onHover.call(me, e, me.legendItems[i]);
							changed = true;
							break;
						}
					}
				}
			}

			return changed;
		}
	});

	// Register the legend plugin
	Chart.plugins.register({
		beforeInit: function(chartInstance) {
			var opts = chartInstance.options;
			var legendOpts = opts.legend;

			if (legendOpts) {
				chartInstance.legend = new Chart.Legend({
					ctx: chartInstance.chart.ctx,
					options: legendOpts,
					chart: chartInstance
				});

				Chart.layoutService.addBox(chartInstance, chartInstance.legend);
			}
		}
	});
};

},{}],31:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var noop = Chart.helpers.noop;

	/**
	 * The plugin service singleton
	 * @namespace Chart.plugins
	 * @since 2.1.0
	 */
	Chart.plugins = {
		_plugins: [],

		/**
		 * Registers the given plugin(s) if not already registered.
		 * @param {Array|Object} plugins plugin instance(s).
		 */
		register: function(plugins) {
			var p = this._plugins;
			([]).concat(plugins).forEach(function(plugin) {
				if (p.indexOf(plugin) === -1) {
					p.push(plugin);
				}
			});
		},

		/**
		 * Unregisters the given plugin(s) only if registered.
		 * @param {Array|Object} plugins plugin instance(s).
		 */
		unregister: function(plugins) {
			var p = this._plugins;
			([]).concat(plugins).forEach(function(plugin) {
				var idx = p.indexOf(plugin);
				if (idx !== -1) {
					p.splice(idx, 1);
				}
			});
		},

		/**
		 * Remove all registered plugins.
		 * @since 2.1.5
		 */
		clear: function() {
			this._plugins = [];
		},

		/**
		 * Returns the number of registered plugins?
		 * @returns {Number}
		 * @since 2.1.5
		 */
		count: function() {
			return this._plugins.length;
		},

		/**
		 * Returns all registered plugin instances.
		 * @returns {Array} array of plugin objects.
		 * @since 2.1.5
		 */
		getAll: function() {
			return this._plugins;
		},

		/**
		 * Calls registered plugins on the specified extension, with the given args. This
		 * method immediately returns as soon as a plugin explicitly returns false. The
		 * returned value can be used, for instance, to interrupt the current action.
		 * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').
		 * @param {Array} [args] extra arguments to apply to the extension call.
		 * @returns {Boolean} false if any of the plugins return false, else returns true.
		 */
		notify: function(extension, args) {
			var plugins = this._plugins;
			var ilen = plugins.length;
			var i, plugin;

			for (i=0; i&lt;ilen; ++i) {
				plugin = plugins[i];
				if (typeof plugin[extension] === 'function') {
					if (plugin[extension].apply(plugin, args || []) === false) {
						return false;
					}
				}
			}

			return true;
		}
	};

	/**
	 * Plugin extension methods.
	 * @interface Chart.PluginBase
	 * @since 2.1.0
	 */
	Chart.PluginBase = Chart.Element.extend({
		// Called at start of chart init
		beforeInit: noop,

		// Called at end of chart init
		afterInit: noop,

		// Called at start of update
		beforeUpdate: noop,

		// Called at end of update
		afterUpdate: noop,

		// Called at start of draw
		beforeDraw: noop,

		// Called at end of draw
		afterDraw: noop,

		// Called during destroy
		destroy: noop
	});

	/**
	 * Provided for backward compatibility, use Chart.plugins instead
	 * @namespace Chart.pluginService
	 * @deprecated since version 2.1.5
	 * @todo remove me at version 3
	 */
	Chart.pluginService = Chart.plugins;
};

},{}],32:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.scale = {
		display: true,
		position: 'left',

		// grid line settings
		gridLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1,
			drawBorder: true,
			drawOnChartArea: true,
			drawTicks: true,
			tickMarkLength: 10,
			zeroLineWidth: 1,
			zeroLineColor: 'rgba(0,0,0,0.25)',
			offsetGridLines: false,
			borderDash: [],
			borderDashOffset: 0.0
		},

		// scale label
		scaleLabel: {
			// actual label
			labelString: '',

			// display property
			display: false
		},

		// label settings
		ticks: {
			beginAtZero: false,
			minRotation: 0,
			maxRotation: 50,
			mirror: false,
			padding: 10,
			reverse: false,
			display: true,
			autoSkip: true,
			autoSkipPadding: 0,
			labelOffset: 0,
			// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
			callback: Chart.Ticks.formatters.values
		}
	};

	Chart.Scale = Chart.Element.extend({

		// These methods are ordered by lifecycle. Utilities then follow.
		// Any function defined here is inherited by all scale types.
		// Any function can be extended by the scale type

		beforeUpdate: function() {
			helpers.callCallback(this.options.beforeUpdate, [this]);
		},
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = helpers.extend({
				left: 0,
				right: 0,
				top: 0,
				bottom: 0
			}, margins);

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();

			// Data min/max
			me.beforeDataLimits();
			me.determineDataLimits();
			me.afterDataLimits();

			// Ticks
			me.beforeBuildTicks();
			me.buildTicks();
			me.afterBuildTicks();

			me.beforeTickToLabelConversion();
			me.convertTicksToLabels();
			me.afterTickToLabelConversion();

			// Tick Rotation
			me.beforeCalculateTickRotation();
			me.calculateTickRotation();
			me.afterCalculateTickRotation();
			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;

		},
		afterUpdate: function() {
			helpers.callCallback(this.options.afterUpdate, [this]);
		},

		//

		beforeSetDimensions: function() {
			helpers.callCallback(this.options.beforeSetDimensions, [this]);
		},
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;
		},
		afterSetDimensions: function() {
			helpers.callCallback(this.options.afterSetDimensions, [this]);
		},

		// Data limits
		beforeDataLimits: function() {
			helpers.callCallback(this.options.beforeDataLimits, [this]);
		},
		determineDataLimits: helpers.noop,
		afterDataLimits: function() {
			helpers.callCallback(this.options.afterDataLimits, [this]);
		},

		//
		beforeBuildTicks: function() {
			helpers.callCallback(this.options.beforeBuildTicks, [this]);
		},
		buildTicks: helpers.noop,
		afterBuildTicks: function() {
			helpers.callCallback(this.options.afterBuildTicks, [this]);
		},

		beforeTickToLabelConversion: function() {
			helpers.callCallback(this.options.beforeTickToLabelConversion, [this]);
		},
		convertTicksToLabels: function() {
			var me = this;
			// Convert ticks to strings
			var tickOpts = me.options.ticks;
			me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);
		},
		afterTickToLabelConversion: function() {
			helpers.callCallback(this.options.afterTickToLabelConversion, [this]);
		},

		//

		beforeCalculateTickRotation: function() {
			helpers.callCallback(this.options.beforeCalculateTickRotation, [this]);
		},
		calculateTickRotation: function() {
			var me = this;
			var context = me.ctx;
			var globalDefaults = Chart.defaults.global;
			var optionTicks = me.options.ticks;

			// Get the width of each grid by calculating the difference
			// between x offsets between 0 and 1.
			var tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);
			var tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);
			var tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);
			var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);
			context.font = tickLabelFont;

			var firstWidth = context.measureText(me.ticks[0]).width;
			var lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;
			var firstRotated;

			me.labelRotation = optionTicks.minRotation || 0;
			me.paddingRight = 0;
			me.paddingLeft = 0;

			if (me.options.display) {
				if (me.isHorizontal()) {
					me.paddingRight = lastWidth / 2 + 3;
					me.paddingLeft = firstWidth / 2 + 3;

					if (!me.longestTextCache) {
						me.longestTextCache = {};
					}
					var originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);
					var labelWidth = originalLabelWidth;
					var cosRotation;
					var sinRotation;

					// Allow 3 pixels x2 padding either side for label readability
					// only the index matters for a dataset scale, but we want a consistent interface between scales
					var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

					// Max label rotation can be set or default to 90 - also act as a loop counter
					while (labelWidth &gt; tickWidth &amp;&amp; me.labelRotation &lt; optionTicks.maxRotation) {
						cosRotation = Math.cos(helpers.toRadians(me.labelRotation));
						sinRotation = Math.sin(helpers.toRadians(me.labelRotation));

						firstRotated = cosRotation * firstWidth;

						// We're right aligning the text now.
						if (firstRotated + tickFontSize / 2 &gt; me.yLabelWidth) {
							me.paddingLeft = firstRotated + tickFontSize / 2;
						}

						me.paddingRight = tickFontSize / 2;

						if (sinRotation * originalLabelWidth &gt; me.maxHeight) {
							// go back one step
							me.labelRotation--;
							break;
						}

						me.labelRotation++;
						labelWidth = cosRotation * originalLabelWidth;
					}
				}
			}

			if (me.margins) {
				me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
				me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
			}
		},
		afterCalculateTickRotation: function() {
			helpers.callCallback(this.options.afterCalculateTickRotation, [this]);
		},

		//

		beforeFit: function() {
			helpers.callCallback(this.options.beforeFit, [this]);
		},
		fit: function() {
			var me = this;
			// Reset
			var minSize = me.minSize = {
				width: 0,
				height: 0
			};

			var opts = me.options;
			var globalDefaults = Chart.defaults.global;
			var tickOpts = opts.ticks;
			var scaleLabelOpts = opts.scaleLabel;
			var gridLineOpts = opts.gridLines;
			var display = opts.display;
			var isHorizontal = me.isHorizontal();

			var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			var tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
			var tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
			var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);

			var scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);

			var tickMarkLength = opts.gridLines.tickMarkLength;

			// Width
			if (isHorizontal) {
				// subtract the margins to line up with the chartArea if we are a full width scale
				minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
			} else {
				minSize.width = display &amp;&amp; gridLineOpts.drawTicks ? tickMarkLength : 0;
			}

			// height
			if (isHorizontal) {
				minSize.height = display &amp;&amp; gridLineOpts.drawTicks ? tickMarkLength : 0;
			} else {
				minSize.height = me.maxHeight; // fill all the height
			}

			// Are we showing a title for the scale?
			if (scaleLabelOpts.display &amp;&amp; display) {
				if (isHorizontal) {
					minSize.height += (scaleLabelFontSize * 1.5);
				} else {
					minSize.width += (scaleLabelFontSize * 1.5);
				}
			}

			if (tickOpts.display &amp;&amp; display) {
				// Don't bother fitting the ticks if we are not showing them
				if (!me.longestTextCache) {
					me.longestTextCache = {};
				}

				var largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);
				var tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);
				var lineSpace = tickFontSize * 0.5;

				if (isHorizontal) {
					// A horizontal axis is more constrained by the height.
					me.longestLabelWidth = largestTextWidth;

					// TODO - improve this calculation
					var labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);

					minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);
					me.ctx.font = tickLabelFont;

					var firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;
					var lastLabelWidth = me.ctx.measureText(me.ticks[me.ticks.length - 1]).width;

					// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated
					// by the font height
					var cosRotation = Math.cos(helpers.toRadians(me.labelRotation));
					var sinRotation = Math.sin(helpers.toRadians(me.labelRotation));
					me.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges
					me.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated
				} else {
					// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first
					var maxLabelWidth = me.maxWidth - minSize.width;

					// Account for padding
					var mirror = tickOpts.mirror;
					if (!mirror) {
						largestTextWidth += me.options.ticks.padding;
					} else {
						// If mirrored text is on the inside so don't expand
						largestTextWidth = 0;
					}

					if (largestTextWidth &lt; maxLabelWidth) {
						// We don't need all the room
						minSize.width += largestTextWidth;
					} else {
						// Expand to max size
						minSize.width = me.maxWidth;
					}

					me.paddingTop = tickFontSize / 2;
					me.paddingBottom = tickFontSize / 2;
				}
			}

			if (me.margins) {
				me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
				me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
				me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
				me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
			}

			me.width = minSize.width;
			me.height = minSize.height;

		},
		afterFit: function() {
			helpers.callCallback(this.options.afterFit, [this]);
		},

		// Shared Methods
		isHorizontal: function() {
			return this.options.position === 'top' || this.options.position === 'bottom';
		},
		isFullWidth: function() {
			return (this.options.fullWidth);
		},

		// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
		getRightValue: function(rawValue) {
			// Null and undefined values first
			if (rawValue === null || typeof(rawValue) === 'undefined') {
				return NaN;
			}
			// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
			if (typeof(rawValue) === 'number' &amp;&amp; !isFinite(rawValue)) {
				return NaN;
			}
			// If it is in fact an object, dive in one more level
			if (typeof(rawValue) === 'object') {
				if ((rawValue instanceof Date) || (rawValue.isValid)) {
					return rawValue;
				}
				return this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);
			}

			// Value is good, return it
			return rawValue;
		},

		// Used to get the value to display in the tooltip for the data at the given index
		// function getLabelForIndex(index, datasetIndex)
		getLabelForIndex: helpers.noop,

		// Used to get data value locations.  Value can either be an index or a numerical value
		getPixelForValue: helpers.noop,

		// Used to get the data value from a given pixel. This is the inverse of getPixelForValue
		getValueForPixel: helpers.noop,

		// Used for tick location, should
		getPixelForTick: function(index, includeOffset) {
			var me = this;
			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);
				var pixel = (tickWidth * index) + me.paddingLeft;

				if (includeOffset) {
					pixel += tickWidth / 2;
				}

				var finalVal = me.left + Math.round(pixel);
				finalVal += me.isFullWidth() ? me.margins.left : 0;
				return finalVal;
			}
			var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
			return me.top + (index * (innerHeight / (me.ticks.length - 1)));
		},

		// Utility for getting the pixel location of a percentage of scale
		getPixelForDecimal: function(decimal /* , includeOffset*/) {
			var me = this;
			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var valueOffset = (innerWidth * decimal) + me.paddingLeft;

				var finalVal = me.left + Math.round(valueOffset);
				finalVal += me.isFullWidth() ? me.margins.left : 0;
				return finalVal;
			}
			return me.top + (decimal * me.height);
		},

		getBasePixel: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.getPixelForValue(
				me.beginAtZero? 0:
				min &lt; 0 &amp;&amp; max &lt; 0? max :
				min &gt; 0 &amp;&amp; max &gt; 0? min :
				0);
		},

		// Actually draw the scale on the canvas
		// @param {rectangle} chartArea : the area of the chart to draw full grid lines on
		draw: function(chartArea) {
			var me = this;
			var options = me.options;
			if (!options.display) {
				return;
			}

			var context = me.ctx;
			var globalDefaults = Chart.defaults.global;
			var optionTicks = options.ticks;
			var gridLines = options.gridLines;
			var scaleLabel = options.scaleLabel;

			var isRotated = me.labelRotation !== 0;
			var skipRatio;
			var useAutoskipper = optionTicks.autoSkip;
			var isHorizontal = me.isHorizontal();

			// figure out the maximum number of gridlines to show
			var maxTicks;
			if (optionTicks.maxTicksLimit) {
				maxTicks = optionTicks.maxTicksLimit;
			}

			var tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
			var tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);
			var tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);
			var tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);
			var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);
			var tl = gridLines.tickMarkLength;
			var borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
			var borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);

			var scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
			var scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);
			var scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);
			var scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);
			var scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);

			var labelRotationRadians = helpers.toRadians(me.labelRotation);
			var cosRotation = Math.cos(labelRotationRadians);
			var longestRotatedLabel = me.longestLabelWidth * cosRotation;

			// Make sure we draw text in the correct color and font
			context.fillStyle = tickFontColor;

			var itemsToDraw = [];

			if (isHorizontal) {
				skipRatio = false;

				// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation
				// See #2584
				if (isRotated) {
					longestRotatedLabel /= 2;
				}

				if ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length &gt; (me.width - (me.paddingLeft + me.paddingRight))) {
					skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));
				}

				// if they defined a max number of optionTicks,
				// increase skipRatio until that number is met
				if (maxTicks &amp;&amp; me.ticks.length &gt; maxTicks) {
					while (!skipRatio || me.ticks.length / (skipRatio || 1) &gt; maxTicks) {
						if (!skipRatio) {
							skipRatio = 1;
						}
						skipRatio += 1;
					}
				}

				if (!useAutoskipper) {
					skipRatio = false;
				}
			}


			var xTickStart = options.position === 'right' ? me.left : me.right - tl;
			var xTickEnd = options.position === 'right' ? me.left + tl : me.right;
			var yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;
			var yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;

			helpers.each(me.ticks, function(label, index) {
				// If the callback returned a null or undefined value, do not draw this line
				if (label === undefined || label === null) {
					return;
				}

				var isLastTick = me.ticks.length === index + 1;

				// Since we always show the last tick,we need may need to hide the last shown one before
				var shouldSkip = (skipRatio &gt; 1 &amp;&amp; index % skipRatio &gt; 0) || (index % skipRatio === 0 &amp;&amp; index + skipRatio &gt;= me.ticks.length);
				if (shouldSkip &amp;&amp; !isLastTick || (label === undefined || label === null)) {
					return;
				}

				var lineWidth, lineColor;
				if (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {
					// Draw the first index specially
					lineWidth = gridLines.zeroLineWidth;
					lineColor = gridLines.zeroLineColor;
				} else {
					lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);
					lineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);
				}

				// Common properties
				var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
				var textAlign = 'middle';
				var textBaseline = 'middle';

				if (isHorizontal) {
					if (!isRotated) {
						textBaseline = options.position === 'top' ? 'bottom' : 'top';
					}

					textAlign = isRotated ? 'right' : 'center';

					var xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines
					labelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)
					labelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;

					tx1 = tx2 = x1 = x2 = xLineValue;
					ty1 = yTickStart;
					ty2 = yTickEnd;
					y1 = chartArea.top;
					y2 = chartArea.bottom;
				} else {
					if (options.position === 'left') {
						if (optionTicks.mirror) {
							labelX = me.right + optionTicks.padding;
							textAlign = 'left';
						} else {
							labelX = me.right - optionTicks.padding;
							textAlign = 'right';
						}
					// right side
					} else if (optionTicks.mirror) {
						labelX = me.left - optionTicks.padding;
						textAlign = 'right';
					} else {
						labelX = me.left + optionTicks.padding;
						textAlign = 'left';
					}

					var yLineValue = me.getPixelForTick(index); // xvalues for grid lines
					yLineValue += helpers.aliasPixel(lineWidth);
					labelY = me.getPixelForTick(index, gridLines.offsetGridLines);

					tx1 = xTickStart;
					tx2 = xTickEnd;
					x1 = chartArea.left;
					x2 = chartArea.right;
					ty1 = ty2 = y1 = y2 = yLineValue;
				}

				itemsToDraw.push({
					tx1: tx1,
					ty1: ty1,
					tx2: tx2,
					ty2: ty2,
					x1: x1,
					y1: y1,
					x2: x2,
					y2: y2,
					labelX: labelX,
					labelY: labelY,
					glWidth: lineWidth,
					glColor: lineColor,
					glBorderDash: borderDash,
					glBorderDashOffset: borderDashOffset,
					rotation: -1 * labelRotationRadians,
					label: label,
					textBaseline: textBaseline,
					textAlign: textAlign
				});
			});

			// Draw all of the tick labels, tick marks, and grid lines at the correct places
			helpers.each(itemsToDraw, function(itemToDraw) {
				if (gridLines.display) {
					context.save();
					context.lineWidth = itemToDraw.glWidth;
					context.strokeStyle = itemToDraw.glColor;
					if (context.setLineDash) {
						context.setLineDash(itemToDraw.glBorderDash);
						context.lineDashOffset = itemToDraw.glBorderDashOffset;
					}

					context.beginPath();

					if (gridLines.drawTicks) {
						context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
						context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
					}

					if (gridLines.drawOnChartArea) {
						context.moveTo(itemToDraw.x1, itemToDraw.y1);
						context.lineTo(itemToDraw.x2, itemToDraw.y2);
					}

					context.stroke();
					context.restore();
				}

				if (optionTicks.display) {
					context.save();
					context.translate(itemToDraw.labelX, itemToDraw.labelY);
					context.rotate(itemToDraw.rotation);
					context.font = tickLabelFont;
					context.textBaseline = itemToDraw.textBaseline;
					context.textAlign = itemToDraw.textAlign;

					var label = itemToDraw.label;
					if (helpers.isArray(label)) {
						for (var i = 0, y = -(label.length - 1)*tickFontSize*0.75; i &lt; label.length; ++i) {
							// We just make sure the multiline element is a string here..
							context.fillText('' + label[i], 0, y);
							// apply same lineSpacing as calculated @ L#320
							y += (tickFontSize * 1.5);
						}
					} else {
						context.fillText(label, 0, 0);
					}
					context.restore();
				}
			});

			if (scaleLabel.display) {
				// Draw the scale label
				var scaleLabelX;
				var scaleLabelY;
				var rotation = 0;

				if (isHorizontal) {
					scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width
					scaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);
				} else {
					var isLeft = options.position === 'left';
					scaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);
					scaleLabelY = me.top + ((me.bottom - me.top) / 2);
					rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
				}

				context.save();
				context.translate(scaleLabelX, scaleLabelY);
				context.rotate(rotation);
				context.textAlign = 'center';
				context.textBaseline = 'middle';
				context.fillStyle = scaleLabelFontColor; // render in correct colour
				context.font = scaleLabelFont;
				context.fillText(scaleLabel.labelString, 0, 0);
				context.restore();
			}

			if (gridLines.drawBorder) {
				// Draw the line at the edge of the axis
				context.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);
				context.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);
				var x1 = me.left,
					x2 = me.right,
					y1 = me.top,
					y2 = me.bottom;

				var aliasPixel = helpers.aliasPixel(context.lineWidth);
				if (isHorizontal) {
					y1 = y2 = options.position === 'top' ? me.bottom : me.top;
					y1 += aliasPixel;
					y2 += aliasPixel;
				} else {
					x1 = x2 = options.position === 'left' ? me.right : me.left;
					x1 += aliasPixel;
					x2 += aliasPixel;
				}

				context.beginPath();
				context.moveTo(x1, y1);
				context.lineTo(x2, y2);
				context.stroke();
			}
		}
	});
};

},{}],33:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.scaleService = {
		// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
		// use the new chart options to grab the correct scale
		constructors: {},
		// Use a registration function so that we can move to an ES6 map when we no longer need to support
		// old browsers

		// Scale config defaults
		defaults: {},
		registerScaleType: function(type, scaleConstructor, defaults) {
			this.constructors[type] = scaleConstructor;
			this.defaults[type] = helpers.clone(defaults);
		},
		getScaleConstructor: function(type) {
			return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
		},
		getScaleDefaults: function(type) {
			// Return the scale defaults merged with the global settings so that we always use the latest ones
			return this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};
		},
		updateScaleDefaults: function(type, additions) {
			var defaults = this.defaults;
			if (defaults.hasOwnProperty(type)) {
				defaults[type] = helpers.extend(defaults[type], additions);
			}
		},
		addScalesToLayout: function(chartInstance) {
			// Adds each scale to the chart.boxes array to be sized accordingly
			helpers.each(chartInstance.scales, function(scale) {
				Chart.layoutService.addBox(chartInstance, scale);
			});
		}
	};
};

},{}],34:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	/**
	 * Namespace to hold static tick generation functions
	 * @namespace Chart.Ticks
	 */
	Chart.Ticks = {
		/**
		 * Namespace to hold generators for different types of ticks
		 * @namespace Chart.Ticks.generators
		 */
		generators: {
			/**
			 * Interface for the options provided to the numeric tick generator
			 * @interface INumericTickGenerationOptions
			 */
			/**
			 * The maximum number of ticks to display
			 * @name INumericTickGenerationOptions#maxTicks
			 * @type Number
			 */
			/**
			 * The distance between each tick.
			 * @name INumericTickGenerationOptions#stepSize
			 * @type Number
			 * @optional
			 */
			/**
			 * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum
			 * @name INumericTickGenerationOptions#min
			 * @type Number
			 * @optional
			 */
			/**
			 * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum
			 * @name INumericTickGenerationOptions#max
			 * @type Number
			 * @optional
			 */

			/**
			 * Generate a set of linear ticks
			 * @method Chart.Ticks.generators.linear
			 * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
			 * @param dataRange {IRange} the range of the data
			 * @returns {Array&lt;Number&gt;} array of tick values
			 */
			linear: function(generationOptions, dataRange) {
				var ticks = [];
				// To get a "nice" value for the tick spacing, we will use the appropriately named
				// "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
				// for details.

				var spacing;
				if (generationOptions.stepSize &amp;&amp; generationOptions.stepSize &gt; 0) {
					spacing = generationOptions.stepSize;
				} else {
					var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);
					spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);
				}
				var niceMin = Math.floor(dataRange.min / spacing) * spacing;
				var niceMax = Math.ceil(dataRange.max / spacing) * spacing;

				// If min, max and stepSize is set and they make an evenly spaced scale use it.
				if (generationOptions.min &amp;&amp; generationOptions.max &amp;&amp; generationOptions.stepSize) {
					var minMaxDeltaDivisibleByStepSize = ((generationOptions.max - generationOptions.min) % generationOptions.stepSize) === 0;
					if (minMaxDeltaDivisibleByStepSize) {
						niceMin = generationOptions.min;
						niceMax = generationOptions.max;
					}
				}

				var numSpaces = (niceMax - niceMin) / spacing;
				// If very close to our rounded value, use it.
				if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
					numSpaces = Math.round(numSpaces);
				} else {
					numSpaces = Math.ceil(numSpaces);
				}

				// Put the values into the ticks array
				ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);
				for (var j = 1; j &lt; numSpaces; ++j) {
					ticks.push(niceMin + (j * spacing));
				}
				ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);

				return ticks;
			},

			/**
			 * Generate a set of logarithmic ticks
			 * @method Chart.Ticks.generators.logarithmic
			 * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
			 * @param dataRange {IRange} the range of the data
			 * @returns {Array&lt;Number&gt;} array of tick values
			 */
			logarithmic: function(generationOptions, dataRange) {
				var ticks = [];
				var getValueOrDefault = helpers.getValueOrDefault;

				// Figure out what the max number of ticks we can support it is based on the size of
				// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
				// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
				// the graph
				var tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));

				while (tickVal &lt; dataRange.max) {
					ticks.push(tickVal);

					var exp;
					var significand;

					if (tickVal === 0) {
						exp = Math.floor(helpers.log10(dataRange.minNotZero));
						significand = Math.round(dataRange.minNotZero / Math.pow(10, exp));
					} else {
						exp = Math.floor(helpers.log10(tickVal));
						significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;
					}

					if (significand === 10) {
						significand = 1;
						++exp;
					}

					tickVal = significand * Math.pow(10, exp);
				}

				var lastTick = getValueOrDefault(generationOptions.max, tickVal);
				ticks.push(lastTick);

				return ticks;
			}
		},

		/**
		 * Namespace to hold formatters for different types of ticks
		 * @namespace Chart.Ticks.formatters
		 */
		formatters: {
			/**
			 * Formatter for value labels
			 * @method Chart.Ticks.formatters.values
			 * @param value the value to display
			 * @return {String|Array} the label to display
			 */
			values: function(value) {
				return helpers.isArray(value) ? value : '' + value;
			},

			/**
			 * Formatter for linear numeric ticks
			 * @method Chart.Ticks.formatters.linear
			 * @param tickValue {Number} the value to be formatted
			 * @param index {Number} the position of the tickValue parameter in the ticks array
			 * @param ticks {Array&lt;Number&gt;} the list of ticks being converted
			 * @return {String} string representation of the tickValue parameter
			 */
			linear: function(tickValue, index, ticks) {
				// If we have lots of ticks, don't use the ones
				var delta = ticks.length &gt; 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

				// If we have a number like 2.5 as the delta, figure out how many decimal places we need
				if (Math.abs(delta) &gt; 1) {
					if (tickValue !== Math.floor(tickValue)) {
						// not an integer
						delta = tickValue - Math.floor(tickValue);
					}
				}

				var logDelta = helpers.log10(Math.abs(delta));
				var tickString = '';

				if (tickValue !== 0) {
					var numDecimal = -1 * Math.floor(logDelta);
					numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
					tickString = tickValue.toFixed(numDecimal);
				} else {
					tickString = '0'; // never show decimal places for 0
				}

				return tickString;
			},

			logarithmic: function(tickValue, index, ticks) {
				var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));

				if (tickValue === 0) {
					return '0';
				} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
					return tickValue.toExponential();
				}
				return '';
			}
		}
	};
};

},{}],35:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.global.title = {
		display: false,
		position: 'top',
		fullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)

		fontStyle: 'bold',
		padding: 10,

		// actual title
		text: ''
	};

	var noop = helpers.noop;
	Chart.Title = Chart.Element.extend({

		initialize: function(config) {
			var me = this;
			helpers.extend(me, config);
			me.options = helpers.configMerge(Chart.defaults.global.title, config.options);

			// Contains hit boxes for each dataset (in dataset order)
			me.legendHitBoxes = [];
		},

		// These methods are ordered by lifecycle. Utilities then follow.

		beforeUpdate: function() {
			var chartOpts = this.chart.options;
			if (chartOpts &amp;&amp; chartOpts.title) {
				this.options = helpers.configMerge(Chart.defaults.global.title, chartOpts.title);
			}
		},
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = margins;

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();
			// Labels
			me.beforeBuildLabels();
			me.buildLabels();
			me.afterBuildLabels();

			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;

		},
		afterUpdate: noop,

		//

		beforeSetDimensions: noop,
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;

			// Reset minSize
			me.minSize = {
				width: 0,
				height: 0
			};
		},
		afterSetDimensions: noop,

		//

		beforeBuildLabels: noop,
		buildLabels: noop,
		afterBuildLabels: noop,

		//

		beforeFit: noop,
		fit: function() {
			var me = this,
				valueOrDefault = helpers.getValueOrDefault,
				opts = me.options,
				globalDefaults = Chart.defaults.global,
				display = opts.display,
				fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),
				minSize = me.minSize;

			if (me.isHorizontal()) {
				minSize.width = me.maxWidth; // fill all the width
				minSize.height = display ? fontSize + (opts.padding * 2) : 0;
			} else {
				minSize.width = display ? fontSize + (opts.padding * 2) : 0;
				minSize.height = me.maxHeight; // fill all the height
			}

			me.width = minSize.width;
			me.height = minSize.height;

		},
		afterFit: noop,

		// Shared Methods
		isHorizontal: function() {
			var pos = this.options.position;
			return pos === 'top' || pos === 'bottom';
		},

		// Actually draw the title block on the canvas
		draw: function() {
			var me = this,
				ctx = me.ctx,
				valueOrDefault = helpers.getValueOrDefault,
				opts = me.options,
				globalDefaults = Chart.defaults.global;

			if (opts.display) {
				var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),
					fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),
					fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),
					titleFont = helpers.fontString(fontSize, fontStyle, fontFamily),
					rotation = 0,
					titleX,
					titleY,
					top = me.top,
					left = me.left,
					bottom = me.bottom,
					right = me.right,
					maxWidth;

				ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour
				ctx.font = titleFont;

				// Horizontal
				if (me.isHorizontal()) {
					titleX = left + ((right - left) / 2); // midpoint of the width
					titleY = top + ((bottom - top) / 2); // midpoint of the height
					maxWidth = right - left;
				} else {
					titleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);
					titleY = top + ((bottom - top) / 2);
					maxWidth = bottom - top;
					rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
				}

				ctx.save();
				ctx.translate(titleX, titleY);
				ctx.rotate(rotation);
				ctx.textAlign = 'center';
				ctx.textBaseline = 'middle';
				ctx.fillText(opts.text, 0, 0, maxWidth);
				ctx.restore();
			}
		}
	});

	// Register the title plugin
	Chart.plugins.register({
		beforeInit: function(chartInstance) {
			var opts = chartInstance.options;
			var titleOpts = opts.title;

			if (titleOpts) {
				chartInstance.titleBlock = new Chart.Title({
					ctx: chartInstance.chart.ctx,
					options: titleOpts,
					chart: chartInstance
				});

				Chart.layoutService.addBox(chartInstance, chartInstance.titleBlock);
			}
		}
	});
};

},{}],36:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	/**
 	 * Helper method to merge the opacity into a color
 	 */
	function mergeOpacity(colorString, opacity) {
		var color = helpers.color(colorString);
		return color.alpha(opacity * color.alpha()).rgbaString();
	}

	Chart.defaults.global.tooltips = {
		enabled: true,
		custom: null,
		mode: 'nearest',
		position: 'average',
		intersect: true,
		backgroundColor: 'rgba(0,0,0,0.8)',
		titleFontStyle: 'bold',
		titleSpacing: 2,
		titleMarginBottom: 6,
		titleFontColor: '#fff',
		titleAlign: 'left',
		bodySpacing: 2,
		bodyFontColor: '#fff',
		bodyAlign: 'left',
		footerFontStyle: 'bold',
		footerSpacing: 2,
		footerMarginTop: 6,
		footerFontColor: '#fff',
		footerAlign: 'left',
		yPadding: 6,
		xPadding: 6,
		caretSize: 5,
		cornerRadius: 6,
		multiKeyBackground: '#fff',
		displayColors: true,
		callbacks: {
			// Args are: (tooltipItems, data)
			beforeTitle: helpers.noop,
			title: function(tooltipItems, data) {
				// Pick first xLabel for now
				var title = '';
				var labels = data.labels;
				var labelCount = labels ? labels.length : 0;

				if (tooltipItems.length &gt; 0) {
					var item = tooltipItems[0];

					if (item.xLabel) {
						title = item.xLabel;
					} else if (labelCount &gt; 0 &amp;&amp; item.index &lt; labelCount) {
						title = labels[item.index];
					}
				}

				return title;
			},
			afterTitle: helpers.noop,

			// Args are: (tooltipItems, data)
			beforeBody: helpers.noop,

			// Args are: (tooltipItem, data)
			beforeLabel: helpers.noop,
			label: function(tooltipItem, data) {
				var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';
				return datasetLabel + ': ' + tooltipItem.yLabel;
			},
			labelColor: function(tooltipItem, chartInstance) {
				var meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);
				var activeElement = meta.data[tooltipItem.index];
				var view = activeElement._view;
				return {
					borderColor: view.borderColor,
					backgroundColor: view.backgroundColor
				};
			},
			afterLabel: helpers.noop,

			// Args are: (tooltipItems, data)
			afterBody: helpers.noop,

			// Args are: (tooltipItems, data)
			beforeFooter: helpers.noop,
			footer: helpers.noop,
			afterFooter: helpers.noop
		}
	};

	// Helper to push or concat based on if the 2nd parameter is an array or not
	function pushOrConcat(base, toPush) {
		if (toPush) {
			if (helpers.isArray(toPush)) {
				// base = base.concat(toPush);
				Array.prototype.push.apply(base, toPush);
			} else {
				base.push(toPush);
			}
		}

		return base;
	}

	// Private helper to create a tooltip item model
	// @param element : the chart element (point, arc, bar) to create the tooltip item for
	// @return : new tooltip item
	function createTooltipItem(element) {
		var xScale = element._xScale;
		var yScale = element._yScale || element._scale; // handle radar || polarArea charts
		var index = element._index,
			datasetIndex = element._datasetIndex;

		return {
			xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
			yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
			index: index,
			datasetIndex: datasetIndex,
			x: element._model.x,
			y: element._model.y
		};
	}

	/**
	 * Helper to get the reset model for the tooltip
	 * @param tooltipOpts {Object} the tooltip options
	 */
	function getBaseModel(tooltipOpts) {
		var globalDefaults = Chart.defaults.global;
		var getValueOrDefault = helpers.getValueOrDefault;

		return {
			// Positioning
			xPadding: tooltipOpts.xPadding,
			yPadding: tooltipOpts.yPadding,
			xAlign: tooltipOpts.xAlign,
			yAlign: tooltipOpts.yAlign,

			// Body
			bodyFontColor: tooltipOpts.bodyFontColor,
			_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
			_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
			_bodyAlign: tooltipOpts.bodyAlign,
			bodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
			bodySpacing: tooltipOpts.bodySpacing,

			// Title
			titleFontColor: tooltipOpts.titleFontColor,
			_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
			_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
			titleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
			_titleAlign: tooltipOpts.titleAlign,
			titleSpacing: tooltipOpts.titleSpacing,
			titleMarginBottom: tooltipOpts.titleMarginBottom,

			// Footer
			footerFontColor: tooltipOpts.footerFontColor,
			_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
			_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
			footerFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
			_footerAlign: tooltipOpts.footerAlign,
			footerSpacing: tooltipOpts.footerSpacing,
			footerMarginTop: tooltipOpts.footerMarginTop,

			// Appearance
			caretSize: tooltipOpts.caretSize,
			cornerRadius: tooltipOpts.cornerRadius,
			backgroundColor: tooltipOpts.backgroundColor,
			opacity: 0,
			legendColorBackground: tooltipOpts.multiKeyBackground,
			displayColors: tooltipOpts.displayColors
		};
	}

	/**
	 * Get the size of the tooltip
	 */
	function getTooltipSize(tooltip, model) {
		var ctx = tooltip._chart.ctx;

		var height = model.yPadding * 2; // Tooltip Padding
		var width = 0;

		// Count of all lines in the body
		var body = model.body;
		var combinedBodyLength = body.reduce(function(count, bodyItem) {
			return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
		}, 0);
		combinedBodyLength += model.beforeBody.length + model.afterBody.length;

		var titleLineCount = model.title.length;
		var footerLineCount = model.footer.length;
		var titleFontSize = model.titleFontSize,
			bodyFontSize = model.bodyFontSize,
			footerFontSize = model.footerFontSize;

		height += titleLineCount * titleFontSize; // Title Lines
		height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
		height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
		height += combinedBodyLength * bodyFontSize; // Body Lines
		height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
		height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
		height += footerLineCount * (footerFontSize); // Footer Lines
		height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

		// Title width
		var widthPadding = 0;
		var maxLineWidth = function(line) {
			width = Math.max(width, ctx.measureText(line).width + widthPadding);
		};

		ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
		helpers.each(model.title, maxLineWidth);

		// Body width
		ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
		helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

		// Body lines may include some extra width due to the color box
		widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
		helpers.each(body, function(bodyItem) {
			helpers.each(bodyItem.before, maxLineWidth);
			helpers.each(bodyItem.lines, maxLineWidth);
			helpers.each(bodyItem.after, maxLineWidth);
		});

		// Reset back to 0
		widthPadding = 0;

		// Footer width
		ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
		helpers.each(model.footer, maxLineWidth);

		// Add padding
		width += 2 * model.xPadding;

		return {
			width: width,
			height: height
		};
	}

	/**
	 * Helper to get the alignment of a tooltip given the size
	 */
	function determineAlignment(tooltip, size) {
		var model = tooltip._model;
		var chart = tooltip._chart;
		var chartArea = tooltip._chartInstance.chartArea;
		var xAlign = 'center';
		var yAlign = 'center';

		if (model.y &lt; size.height) {
			yAlign = 'top';
		} else if (model.y &gt; (chart.height - size.height)) {
			yAlign = 'bottom';
		}

		var lf, rf; // functions to determine left, right alignment
		var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
		var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
		var midX = (chartArea.left + chartArea.right) / 2;
		var midY = (chartArea.top + chartArea.bottom) / 2;

		if (yAlign === 'center') {
			lf = function(x) {
				return x &lt;= midX;
			};
			rf = function(x) {
				return x &gt; midX;
			};
		} else {
			lf = function(x) {
				return x &lt;= (size.width / 2);
			};
			rf = function(x) {
				return x &gt;= (chart.width - (size.width / 2));
			};
		}

		olf = function(x) {
			return x + size.width &gt; chart.width;
		};
		orf = function(x) {
			return x - size.width &lt; 0;
		};
		yf = function(y) {
			return y &lt;= midY ? 'top' : 'bottom';
		};

		if (lf(model.x)) {
			xAlign = 'left';

			// Is tooltip too wide and goes over the right side of the chart.?
			if (olf(model.x)) {
				xAlign = 'center';
				yAlign = yf(model.y);
			}
		} else if (rf(model.x)) {
			xAlign = 'right';

			// Is tooltip too wide and goes outside left edge of canvas?
			if (orf(model.x)) {
				xAlign = 'center';
				yAlign = yf(model.y);
			}
		}

		var opts = tooltip._options;
		return {
			xAlign: opts.xAlign ? opts.xAlign : xAlign,
			yAlign: opts.yAlign ? opts.yAlign : yAlign
		};
	}

	/**
	 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
	 */
	function getBackgroundPoint(vm, size, alignment) {
		// Background Position
		var x = vm.x;
		var y = vm.y;

		var caretSize = vm.caretSize,
			caretPadding = vm.caretPadding,
			cornerRadius = vm.cornerRadius,
			xAlign = alignment.xAlign,
			yAlign = alignment.yAlign,
			paddingAndSize = caretSize + caretPadding,
			radiusAndPadding = cornerRadius + caretPadding;

		if (xAlign === 'right') {
			x -= size.width;
		} else if (xAlign === 'center') {
			x -= (size.width / 2);
		}

		if (yAlign === 'top') {
			y += paddingAndSize;
		} else if (yAlign === 'bottom') {
			y -= size.height + paddingAndSize;
		} else {
			y -= (size.height / 2);
		}

		if (yAlign === 'center') {
			if (xAlign === 'left') {
				x += paddingAndSize;
			} else if (xAlign === 'right') {
				x -= paddingAndSize;
			}
		} else if (xAlign === 'left') {
			x -= radiusAndPadding;
		} else if (xAlign === 'right') {
			x += radiusAndPadding;
		}

		return {
			x: x,
			y: y
		};
	}

	Chart.Tooltip = Chart.Element.extend({
		initialize: function() {
			this._model = getBaseModel(this._options);
		},

		// Get the title
		// Args are: (tooltipItem, data)
		getTitle: function() {
			var me = this;
			var opts = me._options;
			var callbacks = opts.callbacks;

			var beforeTitle = callbacks.beforeTitle.apply(me, arguments),
				title = callbacks.title.apply(me, arguments),
				afterTitle = callbacks.afterTitle.apply(me, arguments);

			var lines = [];
			lines = pushOrConcat(lines, beforeTitle);
			lines = pushOrConcat(lines, title);
			lines = pushOrConcat(lines, afterTitle);

			return lines;
		},

		// Args are: (tooltipItem, data)
		getBeforeBody: function() {
			var lines = this._options.callbacks.beforeBody.apply(this, arguments);
			return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
		},

		// Args are: (tooltipItem, data)
		getBody: function(tooltipItems, data) {
			var me = this;
			var callbacks = me._options.callbacks;
			var bodyItems = [];

			helpers.each(tooltipItems, function(tooltipItem) {
				var bodyItem = {
					before: [],
					lines: [],
					after: []
				};
				pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));
				pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
				pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));

				bodyItems.push(bodyItem);
			});

			return bodyItems;
		},

		// Args are: (tooltipItem, data)
		getAfterBody: function() {
			var lines = this._options.callbacks.afterBody.apply(this, arguments);
			return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
		},

		// Get the footer and beforeFooter and afterFooter lines
		// Args are: (tooltipItem, data)
		getFooter: function() {
			var me = this;
			var callbacks = me._options.callbacks;

			var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
			var footer = callbacks.footer.apply(me, arguments);
			var afterFooter = callbacks.afterFooter.apply(me, arguments);

			var lines = [];
			lines = pushOrConcat(lines, beforeFooter);
			lines = pushOrConcat(lines, footer);
			lines = pushOrConcat(lines, afterFooter);

			return lines;
		},

		update: function(changed) {
			var me = this;
			var opts = me._options;

			// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
			// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
			// which breaks any animations.
			var existingModel = me._model;
			var model = me._model = getBaseModel(opts);
			var active = me._active;

			var data = me._data;
			var chartInstance = me._chartInstance;

			// In the case where active.length === 0 we need to keep these at existing values for good animations
			var alignment = {
				xAlign: existingModel.xAlign,
				yAlign: existingModel.yAlign
			};
			var backgroundPoint = {
				x: existingModel.x,
				y: existingModel.y
			};
			var tooltipSize = {
				width: existingModel.width,
				height: existingModel.height
			};
			var tooltipPosition = {
				x: existingModel.caretX,
				y: existingModel.caretY
			};

			var i, len;

			if (active.length) {
				model.opacity = 1;

				var labelColors = [];
				tooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);

				var tooltipItems = [];
				for (i = 0, len = active.length; i &lt; len; ++i) {
					tooltipItems.push(createTooltipItem(active[i]));
				}

				// If the user provided a filter function, use it to modify the tooltip items
				if (opts.filter) {
					tooltipItems = tooltipItems.filter(function(a) {
						return opts.filter(a, data);
					});
				}

				// If the user provided a sorting function, use it to modify the tooltip items
				if (opts.itemSort) {
					tooltipItems = tooltipItems.sort(function(a, b) {
						return opts.itemSort(a, b, data);
					});
				}

				// Determine colors for boxes
				helpers.each(tooltipItems, function(tooltipItem) {
					labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));
				});

				// Build the Text Lines
				model.title = me.getTitle(tooltipItems, data);
				model.beforeBody = me.getBeforeBody(tooltipItems, data);
				model.body = me.getBody(tooltipItems, data);
				model.afterBody = me.getAfterBody(tooltipItems, data);
				model.footer = me.getFooter(tooltipItems, data);

				// Initial positioning and colors
				model.x = Math.round(tooltipPosition.x);
				model.y = Math.round(tooltipPosition.y);
				model.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);
				model.labelColors = labelColors;

				// data points
				model.dataPoints = tooltipItems;

				// We need to determine alignment of the tooltip
				tooltipSize = getTooltipSize(this, model);
				alignment = determineAlignment(this, tooltipSize);
				// Final Size and Position
				backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);
			} else {
				model.opacity = 0;
			}

			model.xAlign = alignment.xAlign;
			model.yAlign = alignment.yAlign;
			model.x = backgroundPoint.x;
			model.y = backgroundPoint.y;
			model.width = tooltipSize.width;
			model.height = tooltipSize.height;

			// Point where the caret on the tooltip points to
			model.caretX = tooltipPosition.x;
			model.caretY = tooltipPosition.y;

			me._model = model;

			if (changed &amp;&amp; opts.custom) {
				opts.custom.call(me, model);
			}

			return me;
		},
		drawCaret: function(tooltipPoint, size, opacity) {
			var vm = this._view;
			var ctx = this._chart.ctx;
			var x1, x2, x3;
			var y1, y2, y3;
			var caretSize = vm.caretSize;
			var cornerRadius = vm.cornerRadius;
			var xAlign = vm.xAlign,
				yAlign = vm.yAlign;
			var ptX = tooltipPoint.x,
				ptY = tooltipPoint.y;
			var width = size.width,
				height = size.height;

			if (yAlign === 'center') {
				// Left or right side
				if (xAlign === 'left') {
					x1 = ptX;
					x2 = x1 - caretSize;
					x3 = x1;
				} else {
					x1 = ptX + width;
					x2 = x1 + caretSize;
					x3 = x1;
				}

				y2 = ptY + (height / 2);
				y1 = y2 - caretSize;
				y3 = y2 + caretSize;
			} else {
				if (xAlign === 'left') {
					x1 = ptX + cornerRadius;
					x2 = x1 + caretSize;
					x3 = x2 + caretSize;
				} else if (xAlign === 'right') {
					x1 = ptX + width - cornerRadius;
					x2 = x1 - caretSize;
					x3 = x2 - caretSize;
				} else {
					x2 = ptX + (width / 2);
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				}

				if (yAlign === 'top') {
					y1 = ptY;
					y2 = y1 - caretSize;
					y3 = y1;
				} else {
					y1 = ptY + height;
					y2 = y1 + caretSize;
					y3 = y1;
				}
			}

			ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
			ctx.beginPath();
			ctx.moveTo(x1, y1);
			ctx.lineTo(x2, y2);
			ctx.lineTo(x3, y3);
			ctx.closePath();
			ctx.fill();
		},
		drawTitle: function(pt, vm, ctx, opacity) {
			var title = vm.title;

			if (title.length) {
				ctx.textAlign = vm._titleAlign;
				ctx.textBaseline = 'top';

				var titleFontSize = vm.titleFontSize,
					titleSpacing = vm.titleSpacing;

				ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
				ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

				var i, len;
				for (i = 0, len = title.length; i &lt; len; ++i) {
					ctx.fillText(title[i], pt.x, pt.y);
					pt.y += titleFontSize + titleSpacing; // Line Height and spacing

					if (i + 1 === title.length) {
						pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
					}
				}
			}
		},
		drawBody: function(pt, vm, ctx, opacity) {
			var bodyFontSize = vm.bodyFontSize;
			var bodySpacing = vm.bodySpacing;
			var body = vm.body;

			ctx.textAlign = vm._bodyAlign;
			ctx.textBaseline = 'top';

			var textColor = mergeOpacity(vm.bodyFontColor, opacity);
			ctx.fillStyle = textColor;
			ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

			// Before Body
			var xLinePadding = 0;
			var fillLineOfText = function(line) {
				ctx.fillText(line, pt.x + xLinePadding, pt.y);
				pt.y += bodyFontSize + bodySpacing;
			};

			// Before body lines
			helpers.each(vm.beforeBody, fillLineOfText);

			var drawColorBoxes = vm.displayColors;
			xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;

			// Draw body lines now
			helpers.each(body, function(bodyItem, i) {
				helpers.each(bodyItem.before, fillLineOfText);

				helpers.each(bodyItem.lines, function(line) {
					// Draw Legend-like boxes if needed
					if (drawColorBoxes) {
						// Fill a white rect so that colours merge nicely if the opacity is &lt; 1
						ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
						ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

						// Border
						ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
						ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

						// Inner square
						ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
						ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);

						ctx.fillStyle = textColor;
					}

					fillLineOfText(line);
				});

				helpers.each(bodyItem.after, fillLineOfText);
			});

			// Reset back to 0 for after body
			xLinePadding = 0;

			// After body lines
			helpers.each(vm.afterBody, fillLineOfText);
			pt.y -= bodySpacing; // Remove last body spacing
		},
		drawFooter: function(pt, vm, ctx, opacity) {
			var footer = vm.footer;

			if (footer.length) {
				pt.y += vm.footerMarginTop;

				ctx.textAlign = vm._footerAlign;
				ctx.textBaseline = 'top';

				ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
				ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

				helpers.each(footer, function(line) {
					ctx.fillText(line, pt.x, pt.y);
					pt.y += vm.footerFontSize + vm.footerSpacing;
				});
			}
		},
		drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {
			ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
			helpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);
			ctx.fill();
		},
		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;

			if (vm.opacity === 0) {
				return;
			}

			var tooltipSize = {
				width: vm.width,
				height: vm.height
			};
			var pt = {
				x: vm.x,
				y: vm.y
			};

			// IE11/Edge does not like very small opacities, so snap to 0
			var opacity = Math.abs(vm.opacity &lt; 1e-3) ? 0 : vm.opacity;

			if (this._options.enabled) {
				// Draw Background
				this.drawBackground(pt, vm, ctx, tooltipSize, opacity);

				// Draw Caret
				this.drawCaret(pt, tooltipSize, opacity);

				// Draw Title, Body, and Footer
				pt.x += vm.xPadding;
				pt.y += vm.yPadding;

				// Titles
				this.drawTitle(pt, vm, ctx, opacity);

				// Body
				this.drawBody(pt, vm, ctx, opacity);

				// Footer
				this.drawFooter(pt, vm, ctx, opacity);
			}
		},

		/**
		 * Handle an event
		 * @private
		 * @param e {Event} the event to handle
		 * @returns {Boolean} true if the tooltip changed
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me._options;
			var changed = false;

			me._lastActive = me._lastActive || [];

			// Find Active Elements for tooltips
			if (e.type === 'mouseout') {
				me._active = [];
			} else {
				me._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);
			}

			// Remember Last Actives
			changed = !helpers.arrayEquals(me._active, me._lastActive);
			me._lastActive = me._active;

			if (options.enabled || options.custom) {
				me._eventPosition = helpers.getRelativePosition(e, me._chart);

				var model = me._model;
				me.update(true);
				me.pivot();

				// See if our tooltip position changed
				changed |= (model.x !== me._model.x) || (model.y !== me._model.y);
			}

			return changed;
		}
	});

	/**
	 * @namespace Chart.Tooltip.positioners
	 */
	Chart.Tooltip.positioners = {
		/**
		 * Average mode places the tooltip at the average position of the elements shown
		 * @function Chart.Tooltip.positioners.average
		 * @param elements {ChartElement[]} the elements being displayed in the tooltip
		 * @returns {Point} tooltip position
		 */
		average: function(elements) {
			if (!elements.length) {
				return false;
			}

			var i, len;
			var x = 0;
			var y = 0;
			var count = 0;

			for (i = 0, len = elements.length; i &lt; len; ++i) {
				var el = elements[i];
				if (el &amp;&amp; el.hasValue()) {
					var pos = el.tooltipPosition();
					x += pos.x;
					y += pos.y;
					++count;
				}
			}

			return {
				x: Math.round(x / count),
				y: Math.round(y / count)
			};
		},

		/**
		 * Gets the tooltip position nearest of the item nearest to the event position
		 * @function Chart.Tooltip.positioners.nearest
		 * @param elements {Chart.Element[]} the tooltip elements
		 * @param eventPosition {Point} the position of the event in canvas coordinates
		 * @returns {Point} the tooltip position
		 */
		nearest: function(elements, eventPosition) {
			var x = eventPosition.x;
			var y = eventPosition.y;

			var nearestElement;
			var minDistance = Number.POSITIVE_INFINITY;
			var i, len;
			for (i = 0, len = elements.length; i &lt; len; ++i) {
				var el = elements[i];
				if (el &amp;&amp; el.hasValue()) {
					var center = el.getCenterPoint();
					var d = helpers.distanceBetweenPoints(eventPosition, center);

					if (d &lt; minDistance) {
						minDistance = d;
						nearestElement = el;
					}
				}
			}

			if (nearestElement) {
				var tp = nearestElement.tooltipPosition();
				x = tp.x;
				y = tp.y;
			}

			return {
				x: x,
				y: y
			};
		}
	};
};

},{}],37:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		globalOpts = Chart.defaults.global;

	globalOpts.elements.arc = {
		backgroundColor: globalOpts.defaultColor,
		borderColor: '#fff',
		borderWidth: 2
	};

	Chart.elements.Arc = Chart.Element.extend({
		inLabelRange: function(mouseX) {
			var vm = this._view;

			if (vm) {
				return (Math.pow(mouseX - vm.x, 2) &lt; Math.pow(vm.radius + vm.hoverRadius, 2));
			}
			return false;
		},
		inRange: function(chartX, chartY) {
			var vm = this._view;

			if (vm) {
				var pointRelativePosition = helpers.getAngleFromPoint(vm, {
						x: chartX,
						y: chartY
					}),
					angle = pointRelativePosition.angle,
					distance = pointRelativePosition.distance;

				// Sanitise angle range
				var startAngle = vm.startAngle;
				var endAngle = vm.endAngle;
				while (endAngle &lt; startAngle) {
					endAngle += 2.0 * Math.PI;
				}
				while (angle &gt; endAngle) {
					angle -= 2.0 * Math.PI;
				}
				while (angle &lt; startAngle) {
					angle += 2.0 * Math.PI;
				}

				// Check if within the range of the open/close angle
				var betweenAngles = (angle &gt;= startAngle &amp;&amp; angle &lt;= endAngle),
					withinRadius = (distance &gt;= vm.innerRadius &amp;&amp; distance &lt;= vm.outerRadius);

				return (betweenAngles &amp;&amp; withinRadius);
			}
			return false;
		},
		getCenterPoint: function() {
			var vm = this._view;
			var halfAngle = (vm.startAngle + vm.endAngle) / 2;
			var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
			return {
				x: vm.x + Math.cos(halfAngle) * halfRadius,
				y: vm.y + Math.sin(halfAngle) * halfRadius
			};
		},
		getArea: function() {
			var vm = this._view;
			return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
		},
		tooltipPosition: function() {
			var vm = this._view;

			var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),
				rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;
			return {
				x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
				y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
			};
		},
		draw: function() {

			var ctx = this._chart.ctx,
				vm = this._view,
				sA = vm.startAngle,
				eA = vm.endAngle;

			ctx.beginPath();

			ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
			ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);

			ctx.closePath();
			ctx.strokeStyle = vm.borderColor;
			ctx.lineWidth = vm.borderWidth;

			ctx.fillStyle = vm.backgroundColor;

			ctx.fill();
			ctx.lineJoin = 'bevel';

			if (vm.borderWidth) {
				ctx.stroke();
			}
		}
	});
};

},{}],38:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var globalDefaults = Chart.defaults.global;

	Chart.defaults.global.elements.line = {
		tension: 0.4,
		backgroundColor: globalDefaults.defaultColor,
		borderWidth: 3,
		borderColor: globalDefaults.defaultColor,
		borderCapStyle: 'butt',
		borderDash: [],
		borderDashOffset: 0.0,
		borderJoinStyle: 'miter',
		capBezierPoints: true,
		fill: true, // do we fill in the area between the line and its base axis
	};

	Chart.elements.Line = Chart.Element.extend({
		draw: function() {
			var me = this;
			var vm = me._view;
			var spanGaps = vm.spanGaps;
			var fillPoint = vm.scaleZero;
			var loop = me._loop;

			// Handle different fill modes for cartesian lines
			if (!loop) {
				if (vm.fill === 'top') {
					fillPoint = vm.scaleTop;
				} else if (vm.fill === 'bottom') {
					fillPoint = vm.scaleBottom;
				}
			}

			var ctx = me._chart.ctx;
			ctx.save();

			// Helper function to draw a line to a point
			function lineToPoint(previousPoint, point) {
				var pointVM = point._view;
				if (point._view.steppedLine === true) {
					ctx.lineTo(pointVM.x, previousPoint._view.y);
					ctx.lineTo(pointVM.x, pointVM.y);
				} else if (point._view.tension === 0) {
					ctx.lineTo(pointVM.x, pointVM.y);
				} else {
					ctx.bezierCurveTo(
						previousPoint._view.controlPointNextX,
						previousPoint._view.controlPointNextY,
						pointVM.controlPointPreviousX,
						pointVM.controlPointPreviousY,
						pointVM.x,
						pointVM.y
					);
				}
			}

			var points = me._children.slice(); // clone array
			var lastDrawnIndex = -1;

			// If we are looping, adding the first point again
			if (loop &amp;&amp; points.length) {
				points.push(points[0]);
			}

			var index, current, previous, currentVM;

			// Fill Line
			if (points.length &amp;&amp; vm.fill) {
				ctx.beginPath();

				for (index = 0; index &lt; points.length; ++index) {
					current = points[index];
					previous = helpers.previousItem(points, index);
					currentVM = current._view;

					// First point moves to it's starting position no matter what
					if (index === 0) {
						if (loop) {
							ctx.moveTo(fillPoint.x, fillPoint.y);
						} else {
							ctx.moveTo(currentVM.x, fillPoint);
						}

						if (!currentVM.skip) {
							lastDrawnIndex = index;
							ctx.lineTo(currentVM.x, currentVM.y);
						}
					} else {
						previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

						if (currentVM.skip) {
							// Only do this if this is the first point that is skipped
							if (!spanGaps &amp;&amp; lastDrawnIndex === (index - 1)) {
								if (loop) {
									ctx.lineTo(fillPoint.x, fillPoint.y);
								} else {
									ctx.lineTo(previous._view.x, fillPoint);
								}
							}
						} else {
							if (lastDrawnIndex !== (index - 1)) {
								// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.
								// If the first data point is NaN, then there is no real gap to skip
								if (spanGaps &amp;&amp; lastDrawnIndex !== -1) {
									// We are spanning the gap, so simple draw a line to this point
									lineToPoint(previous, current);
								} else if (loop) {
									ctx.lineTo(currentVM.x, currentVM.y);
								} else {
									ctx.lineTo(currentVM.x, fillPoint);
									ctx.lineTo(currentVM.x, currentVM.y);
								}
							} else {
								// Line to next point
								lineToPoint(previous, current);
							}
							lastDrawnIndex = index;
						}
					}
				}

				if (!loop &amp;&amp; lastDrawnIndex !== -1) {
					ctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);
				}

				ctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;
				ctx.closePath();
				ctx.fill();
			}

			// Stroke Line Options
			var globalOptionLineElements = globalDefaults.elements.line;
			ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

			// IE 9 and 10 do not support line dash
			if (ctx.setLineDash) {
				ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
			}

			ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
			ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
			ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
			ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

			// Stroke Line
			ctx.beginPath();
			lastDrawnIndex = -1;

			for (index = 0; index &lt; points.length; ++index) {
				current = points[index];
				previous = helpers.previousItem(points, index);
				currentVM = current._view;

				// First point moves to it's starting position no matter what
				if (index === 0) {
					if (!currentVM.skip) {
						ctx.moveTo(currentVM.x, currentVM.y);
						lastDrawnIndex = index;
					}
				} else {
					previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

					if (!currentVM.skip) {
						if ((lastDrawnIndex !== (index - 1) &amp;&amp; !spanGaps) || lastDrawnIndex === -1) {
							// There was a gap and this is the first point after the gap
							ctx.moveTo(currentVM.x, currentVM.y);
						} else {
							// Line to next point
							lineToPoint(previous, current);
						}
						lastDrawnIndex = index;
					}
				}
			}

			ctx.stroke();
			ctx.restore();
		}
	});
};

},{}],39:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		globalOpts = Chart.defaults.global,
		defaultColor = globalOpts.defaultColor;

	globalOpts.elements.point = {
		radius: 3,
		pointStyle: 'circle',
		backgroundColor: defaultColor,
		borderWidth: 1,
		borderColor: defaultColor,
		// Hover
		hitRadius: 1,
		hoverRadius: 4,
		hoverBorderWidth: 1
	};

	function xRange(mouseX) {
		var vm = this._view;
		return vm ? (Math.pow(mouseX - vm.x, 2) &lt; Math.pow(vm.radius + vm.hitRadius, 2)) : false;
	}

	function yRange(mouseY) {
		var vm = this._view;
		return vm ? (Math.pow(mouseY - vm.y, 2) &lt; Math.pow(vm.radius + vm.hitRadius, 2)) : false;
	}

	Chart.elements.Point = Chart.Element.extend({
		inRange: function(mouseX, mouseY) {
			var vm = this._view;
			return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) &lt; Math.pow(vm.hitRadius + vm.radius, 2)) : false;
		},

		inLabelRange: xRange,
		inXRange: xRange,
		inYRange: yRange,

		getCenterPoint: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y
			};
		},
		getArea: function() {
			return Math.PI * Math.pow(this._view.radius, 2);
		},
		tooltipPosition: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y,
				padding: vm.radius + vm.borderWidth
			};
		},
		draw: function() {
			var vm = this._view;
			var ctx = this._chart.ctx;
			var pointStyle = vm.pointStyle;
			var radius = vm.radius;
			var x = vm.x;
			var y = vm.y;

			if (vm.skip) {
				return;
			}

			ctx.strokeStyle = vm.borderColor || defaultColor;
			ctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);
			ctx.fillStyle = vm.backgroundColor || defaultColor;

			Chart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);
		}
	});
};

},{}],40:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var globalOpts = Chart.defaults.global;

	globalOpts.elements.rectangle = {
		backgroundColor: globalOpts.defaultColor,
		borderWidth: 0,
		borderColor: globalOpts.defaultColor,
		borderSkipped: 'bottom'
	};

	function isVertical(bar) {
		return bar._view.width !== undefined;
	}

	/**
	 * Helper function to get the bounds of the bar regardless of the orientation
	 * @private
	 * @param bar {Chart.Element.Rectangle} the bar
	 * @return {Bounds} bounds of the bar
	 */
	function getBarBounds(bar) {
		var vm = bar._view;
		var x1, x2, y1, y2;

		if (isVertical(bar)) {
			// vertical
			var halfWidth = vm.width / 2;
			x1 = vm.x - halfWidth;
			x2 = vm.x + halfWidth;
			y1 = Math.min(vm.y, vm.base);
			y2 = Math.max(vm.y, vm.base);
		} else {
			// horizontal bar
			var halfHeight = vm.height / 2;
			x1 = Math.min(vm.x, vm.base);
			x2 = Math.max(vm.x, vm.base);
			y1 = vm.y - halfHeight;
			y2 = vm.y + halfHeight;
		}

		return {
			left: x1,
			top: y1,
			right: x2,
			bottom: y2
		};
	}

	Chart.elements.Rectangle = Chart.Element.extend({
		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;

			var halfWidth = vm.width / 2,
				leftX = vm.x - halfWidth,
				rightX = vm.x + halfWidth,
				top = vm.base - (vm.base - vm.y),
				halfStroke = vm.borderWidth / 2;

			// Canvas doesn't allow us to stroke inside the width so we can
			// adjust the sizes to fit if we're setting a stroke on the line
			if (vm.borderWidth) {
				leftX += halfStroke;
				rightX -= halfStroke;
				top += halfStroke;
			}

			ctx.beginPath();
			ctx.fillStyle = vm.backgroundColor;
			ctx.strokeStyle = vm.borderColor;
			ctx.lineWidth = vm.borderWidth;

			// Corner points, from bottom-left to bottom-right clockwise
			// | 1 2 |
			// | 0 3 |
			var corners = [
				[leftX, vm.base],
				[leftX, top],
				[rightX, top],
				[rightX, vm.base]
			];

			// Find first (starting) corner with fallback to 'bottom'
			var borders = ['bottom', 'left', 'top', 'right'];
			var startCorner = borders.indexOf(vm.borderSkipped, 0);
			if (startCorner === -1) {
				startCorner = 0;
			}

			function cornerAt(index) {
				return corners[(startCorner + index) % 4];
			}

			// Draw rectangle from 'startCorner'
			var corner = cornerAt(0);
			ctx.moveTo(corner[0], corner[1]);

			for (var i = 1; i &lt; 4; i++) {
				corner = cornerAt(i);
				ctx.lineTo(corner[0], corner[1]);
			}

			ctx.fill();
			if (vm.borderWidth) {
				ctx.stroke();
			}
		},
		height: function() {
			var vm = this._view;
			return vm.base - vm.y;
		},
		inRange: function(mouseX, mouseY) {
			var inRange = false;

			if (this._view) {
				var bounds = getBarBounds(this);
				inRange = mouseX &gt;= bounds.left &amp;&amp; mouseX &lt;= bounds.right &amp;&amp; mouseY &gt;= bounds.top &amp;&amp; mouseY &lt;= bounds.bottom;
			}

			return inRange;
		},
		inLabelRange: function(mouseX, mouseY) {
			var me = this;
			if (!me._view) {
				return false;
			}

			var inRange = false;
			var bounds = getBarBounds(me);

			if (isVertical(me)) {
				inRange = mouseX &gt;= bounds.left &amp;&amp; mouseX &lt;= bounds.right;
			} else {
				inRange = mouseY &gt;= bounds.top &amp;&amp; mouseY &lt;= bounds.bottom;
			}

			return inRange;
		},
		inXRange: function(mouseX) {
			var bounds = getBarBounds(this);
			return mouseX &gt;= bounds.left &amp;&amp; mouseX &lt;= bounds.right;
		},
		inYRange: function(mouseY) {
			var bounds = getBarBounds(this);
			return mouseY &gt;= bounds.top &amp;&amp; mouseY &lt;= bounds.bottom;
		},
		getCenterPoint: function() {
			var vm = this._view;
			var x, y;
			if (isVertical(this)) {
				x = vm.x;
				y = (vm.y + vm.base) / 2;
			} else {
				x = (vm.x + vm.base) / 2;
				y = vm.y;
			}

			return {x: x, y: y};
		},
		getArea: function() {
			var vm = this._view;
			return vm.width * Math.abs(vm.y - vm.base);
		},
		tooltipPosition: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y
			};
		}
	});

};

},{}],41:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	// Default config for a category scale
	var defaultConfig = {
		position: 'bottom'
	};

	var DatasetScale = Chart.Scale.extend({
		/**
		* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
		* else fall back to data.labels
		* @private
		*/
		getLabels: function() {
			var data = this.chart.data;
			return (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
		},
		// Implement this so that
		determineDataLimits: function() {
			var me = this;
			var labels = me.getLabels();
			me.minIndex = 0;
			me.maxIndex = labels.length - 1;
			var findIndex;

			if (me.options.ticks.min !== undefined) {
				// user specified min value
				findIndex = helpers.indexOf(labels, me.options.ticks.min);
				me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
			}

			if (me.options.ticks.max !== undefined) {
				// user specified max value
				findIndex = helpers.indexOf(labels, me.options.ticks.max);
				me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
			}

			me.min = labels[me.minIndex];
			me.max = labels[me.maxIndex];
		},

		buildTicks: function() {
			var me = this;
			var labels = me.getLabels();
			// If we are viewing some subset of labels, slice the original array
			me.ticks = (me.minIndex === 0 &amp;&amp; me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
		},

		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var data = me.chart.data;
			var isHorizontal = me.isHorizontal();

			if ((data.xLabels &amp;&amp; isHorizontal) || (data.yLabels &amp;&amp; !isHorizontal)) {
				return me.getRightValue(data.datasets[datasetIndex].data[index]);
			}
			return me.ticks[index];
		},

		// Used to get data value locations.  Value can either be an index or a numerical value
		getPixelForValue: function(value, index, datasetIndex, includeOffset) {
			var me = this;
			// 1 is added because we need the length but we have the indexes
			var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);

			if (value !== undefined &amp;&amp; isNaN(index)) {
				var labels = me.getLabels();
				var idx = labels.indexOf(value);
				index = idx !== -1 ? idx : index;
			}

			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var valueWidth = innerWidth / offsetAmt;
				var widthOffset = (valueWidth * (index - me.minIndex)) + me.paddingLeft;

				if (me.options.gridLines.offsetGridLines &amp;&amp; includeOffset || me.maxIndex === me.minIndex &amp;&amp; includeOffset) {
					widthOffset += (valueWidth / 2);
				}

				return me.left + Math.round(widthOffset);
			}
			var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
			var valueHeight = innerHeight / offsetAmt;
			var heightOffset = (valueHeight * (index - me.minIndex)) + me.paddingTop;

			if (me.options.gridLines.offsetGridLines &amp;&amp; includeOffset) {
				heightOffset += (valueHeight / 2);
			}

			return me.top + Math.round(heightOffset);
		},
		getPixelForTick: function(index, includeOffset) {
			return this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var value;
			var offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);
			var horz = me.isHorizontal();
			var innerDimension = horz ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);
			var valueDimension = innerDimension / offsetAmt;

			pixel -= horz ? me.left : me.top;

			if (me.options.gridLines.offsetGridLines) {
				pixel -= (valueDimension / 2);
			}
			pixel -= horz ? me.paddingLeft : me.paddingTop;

			if (pixel &lt;= 0) {
				value = 0;
			} else {
				value = Math.round(pixel / valueDimension);
			}

			return value;
		},
		getBasePixel: function() {
			return this.bottom;
		}
	});

	Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);

};

},{}],42:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	var defaultConfig = {
		position: 'left',
		ticks: {
			callback: Chart.Ticks.formatters.linear
		}
	};

	var LinearScale = Chart.LinearScaleBase.extend({
		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var isHorizontal = me.isHorizontal();

			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// First Calculate the range
			me.min = null;
			me.max = null;

			if (opts.stacked) {
				var valuesPerType = {};

				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (valuesPerType[meta.type] === undefined) {
						valuesPerType[meta.type] = {
							positiveValues: [],
							negativeValues: []
						};
					}

					// Store these per type
					var positiveValues = valuesPerType[meta.type].positiveValues;
					var negativeValues = valuesPerType[meta.type].negativeValues;

					if (chart.isDatasetVisible(datasetIndex) &amp;&amp; IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							positiveValues[index] = positiveValues[index] || 0;
							negativeValues[index] = negativeValues[index] || 0;

							if (opts.relativePoints) {
								positiveValues[index] = 100;
							} else if (value &lt; 0) {
								negativeValues[index] += value;
							} else {
								positiveValues[index] += value;
							}
						});
					}
				});

				helpers.each(valuesPerType, function(valuesForType) {
					var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
					var minVal = helpers.min(values);
					var maxVal = helpers.max(values);
					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
				});

			} else {
				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) &amp;&amp; IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value &lt; me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value &gt; me.max) {
								me.max = value;
							}
						});
					}
				});
			}

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			this.handleTickRangeOptions();
		},
		getTickLimit: function() {
			var maxTicks;
			var me = this;
			var tickOpts = me.options.ticks;

			if (me.isHorizontal()) {
				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));
			} else {
				// The factor of 2 used to scale the font size has been experimentally determined.
				var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);
				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));
			}

			return maxTicks;
		},
		// Called after the ticks are built. We need
		handleDirectionalChanges: function() {
			if (!this.isHorizontal()) {
				// We are in a vertical orientation. The top value is the highest. So reverse the array
				this.ticks.reverse();
			}
		},
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		// Utils
		getPixelForValue: function(value) {
			// This must be called after fit has been run so that
			// this.left, this.top, this.right, and this.bottom have been defined
			var me = this;
			var paddingLeft = me.paddingLeft;
			var paddingBottom = me.paddingBottom;
			var start = me.start;

			var rightValue = +me.getRightValue(value);
			var pixel;
			var innerDimension;
			var range = me.end - start;

			if (me.isHorizontal()) {
				innerDimension = me.width - (paddingLeft + me.paddingRight);
				pixel = me.left + (innerDimension / range * (rightValue - start));
				return Math.round(pixel + paddingLeft);
			}
			innerDimension = me.height - (me.paddingTop + paddingBottom);
			pixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));
			return Math.round(pixel);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var isHorizontal = me.isHorizontal();
			var paddingLeft = me.paddingLeft;
			var paddingBottom = me.paddingBottom;
			var innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);
			var offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;
			return me.start + ((me.end - me.start) * offset);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.ticksAsNumbers[index]);
		}
	});
	Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);

};

},{}],43:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		noop = helpers.noop;

	Chart.LinearScaleBase = Chart.Scale.extend({
		handleTickRangeOptions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
			// do nothing since that would make the chart weird. If the user really wants a weird chart
			// axis, they can manually override it
			if (tickOpts.beginAtZero) {
				var minSign = helpers.sign(me.min);
				var maxSign = helpers.sign(me.max);

				if (minSign &lt; 0 &amp;&amp; maxSign &lt; 0) {
					// move the top up to 0
					me.max = 0;
				} else if (minSign &gt; 0 &amp;&amp; maxSign &gt; 0) {
					// move the bottom down to 0
					me.min = 0;
				}
			}

			if (tickOpts.min !== undefined) {
				me.min = tickOpts.min;
			} else if (tickOpts.suggestedMin !== undefined) {
				me.min = Math.min(me.min, tickOpts.suggestedMin);
			}

			if (tickOpts.max !== undefined) {
				me.max = tickOpts.max;
			} else if (tickOpts.suggestedMax !== undefined) {
				me.max = Math.max(me.max, tickOpts.suggestedMax);
			}

			if (me.min === me.max) {
				me.max++;

				if (!tickOpts.beginAtZero) {
					me.min--;
				}
			}
		},
		getTickLimit: noop,
		handleDirectionalChanges: noop,

		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// Figure out what the max number of ticks we can support it is based on the size of
			// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
			// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
			// the graph. Make sure we always have at least 2 ticks
			var maxTicks = me.getTickLimit();
			maxTicks = Math.max(2, maxTicks);

			var numericGeneratorOptions = {
				maxTicks: maxTicks,
				min: tickOpts.min,
				max: tickOpts.max,
				stepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
			};
			var ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);

			me.handleDirectionalChanges();

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(ticks);
			me.min = helpers.min(ticks);

			if (tickOpts.reverse) {
				ticks.reverse();

				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
		},
		convertTicksToLabels: function() {
			var me = this;
			me.ticksAsNumbers = me.ticks.slice();
			me.zeroLineIndex = me.ticks.indexOf(0);

			Chart.Scale.prototype.convertTicksToLabels.call(me);
		}
	});
};

},{}],44:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	var defaultConfig = {
		position: 'left',

		// label settings
		ticks: {
			callback: Chart.Ticks.formatters.logarithmic
		}
	};

	var LogarithmicScale = Chart.Scale.extend({
		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var getValueOrDefault = helpers.getValueOrDefault;
			var isHorizontal = me.isHorizontal();
			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// Calculate Range
			me.min = null;
			me.max = null;
			me.minNotZero = null;

			if (opts.stacked) {
				var valuesPerType = {};

				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) &amp;&amp; IDMatches(meta)) {
						if (valuesPerType[meta.type] === undefined) {
							valuesPerType[meta.type] = [];
						}

						helpers.each(dataset.data, function(rawValue, index) {
							var values = valuesPerType[meta.type];
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							values[index] = values[index] || 0;

							if (opts.relativePoints) {
								values[index] = 100;
							} else {
								// Don't need to split positive and negative since the log scale can't handle a 0 crossing
								values[index] += value;
							}
						});
					}
				});

				helpers.each(valuesPerType, function(valuesForType) {
					var minVal = helpers.min(valuesForType);
					var maxVal = helpers.max(valuesForType);
					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
				});

			} else {
				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) &amp;&amp; IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value &lt; me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value &gt; me.max) {
								me.max = value;
							}

							if (value !== 0 &amp;&amp; (me.minNotZero === null || value &lt; me.minNotZero)) {
								me.minNotZero = value;
							}
						});
					}
				});
			}

			me.min = getValueOrDefault(tickOpts.min, me.min);
			me.max = getValueOrDefault(tickOpts.max, me.max);

			if (me.min === me.max) {
				if (me.min !== 0 &amp;&amp; me.min !== null) {
					me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
					me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);
				} else {
					me.min = 1;
					me.max = 10;
				}
			}
		},
		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			var generationOptions = {
				min: tickOpts.min,
				max: tickOpts.max
			};
			var ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);

			if (!me.isHorizontal()) {
				// We are in a vertical orientation. The top value is the highest. So reverse the array
				ticks.reverse();
			}

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(ticks);
			me.min = helpers.min(ticks);

			if (tickOpts.reverse) {
				ticks.reverse();

				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
		},
		convertTicksToLabels: function() {
			this.tickValues = this.ticks.slice();

			Chart.Scale.prototype.convertTicksToLabels.call(this);
		},
		// Get the correct tooltip label
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.tickValues[index]);
		},
		getPixelForValue: function(value) {
			var me = this;
			var innerDimension;
			var pixel;

			var start = me.start;
			var newVal = +me.getRightValue(value);
			var range;
			var paddingTop = me.paddingTop;
			var paddingBottom = me.paddingBottom;
			var paddingLeft = me.paddingLeft;
			var opts = me.options;
			var tickOpts = opts.ticks;

			if (me.isHorizontal()) {
				range = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0
				if (newVal === 0) {
					pixel = me.left + paddingLeft;
				} else {
					innerDimension = me.width - (paddingLeft + me.paddingRight);
					pixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));
					pixel += paddingLeft;
				}
			} else {
				// Bottom - top since pixels increase downward on a screen
				innerDimension = me.height - (paddingTop + paddingBottom);
				if (start === 0 &amp;&amp; !tickOpts.reverse) {
					range = helpers.log10(me.end) - helpers.log10(me.minNotZero);
					if (newVal === start) {
						pixel = me.bottom - paddingBottom;
					} else if (newVal === me.minNotZero) {
						pixel = me.bottom - paddingBottom - innerDimension * 0.02;
					} else {
						pixel = me.bottom - paddingBottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));
					}
				} else if (me.end === 0 &amp;&amp; tickOpts.reverse) {
					range = helpers.log10(me.start) - helpers.log10(me.minNotZero);
					if (newVal === me.end) {
						pixel = me.top + paddingTop;
					} else if (newVal === me.minNotZero) {
						pixel = me.top + paddingTop + innerDimension * 0.02;
					} else {
						pixel = me.top + paddingTop + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));
					}
				} else {
					range = helpers.log10(me.end) - helpers.log10(start);
					innerDimension = me.height - (paddingTop + paddingBottom);
					pixel = (me.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));
				}
			}
			return pixel;
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var range = helpers.log10(me.end) - helpers.log10(me.start);
			var value, innerDimension;

			if (me.isHorizontal()) {
				innerDimension = me.width - (me.paddingLeft + me.paddingRight);
				value = me.start * Math.pow(10, (pixel - me.left - me.paddingLeft) * range / innerDimension);
			} else {  // todo: if start === 0
				innerDimension = me.height - (me.paddingTop + me.paddingBottom);
				value = Math.pow(10, (me.bottom - me.paddingBottom - pixel) * range / innerDimension) / me.start;
			}
			return value;
		}
	});
	Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);

};

},{}],45:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var globalDefaults = Chart.defaults.global;

	var defaultConfig = {
		display: true,

		// Boolean - Whether to animate scaling the chart from the centre
		animate: true,
		lineArc: false,
		position: 'chartArea',

		angleLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1
		},

		// label settings
		ticks: {
			// Boolean - Show a backdrop to the scale label
			showLabelBackdrop: true,

			// String - The colour of the label backdrop
			backdropColor: 'rgba(255,255,255,0.75)',

			// Number - The backdrop padding above &amp; below the label in pixels
			backdropPaddingY: 2,

			// Number - The backdrop padding to the side of the label in pixels
			backdropPaddingX: 2,

			callback: Chart.Ticks.formatters.linear
		},

		pointLabels: {
			// Number - Point label font size in pixels
			fontSize: 10,

			// Function - Used to convert point labels
			callback: function(label) {
				return label;
			}
		}
	};

	var LinearRadialScale = Chart.LinearScaleBase.extend({
		getValueCount: function() {
			return this.chart.data.labels.length;
		},
		setDimensions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			// Set the unconstrained dimension before label rotation
			me.width = me.maxWidth;
			me.height = me.maxHeight;
			me.xCenter = Math.round(me.width / 2);
			me.yCenter = Math.round(me.height / 2);

			var minSize = helpers.min([me.height, me.width]);
			var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);
		},
		determineDataLimits: function() {
			var me = this;
			var chart = me.chart;
			me.min = null;
			me.max = null;


			helpers.each(chart.data.datasets, function(dataset, datasetIndex) {
				if (chart.isDatasetVisible(datasetIndex)) {
					var meta = chart.getDatasetMeta(datasetIndex);

					helpers.each(dataset.data, function(rawValue, index) {
						var value = +me.getRightValue(rawValue);
						if (isNaN(value) || meta.data[index].hidden) {
							return;
						}

						if (me.min === null) {
							me.min = value;
						} else if (value &lt; me.min) {
							me.min = value;
						}

						if (me.max === null) {
							me.max = value;
						} else if (value &gt; me.max) {
							me.max = value;
						}
					});
				}
			});

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			me.handleTickRangeOptions();
		},
		getTickLimit: function() {
			var tickOpts = this.options.ticks;
			var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));
		},
		convertTicksToLabels: function() {
			var me = this;
			Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);

			// Point labels
			me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
		},
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		fit: function() {
			/*
			 * Right, this is really confusing and there is a lot of maths going on here
			 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
			 *
			 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
			 *
			 * Solution:
			 *
			 * We assume the radius of the polygon is half the size of the canvas at first
			 * at each index we check if the text overlaps.
			 *
			 * Where it does, we store that angle and that index.
			 *
			 * After finding the largest index and angle we calculate how much we need to remove
			 * from the shape radius to move the point inwards by that x.
			 *
			 * We average the left and right distances to get the maximum shape radius that can fit in the box
			 * along with labels.
			 *
			 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
			 * on each side, removing that from the size, halving it and adding the left x protrusion width.
			 *
			 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
			 * and position it in the most space efficient manner
			 *
			 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
			 */

			var pointLabels = this.options.pointLabels;
			var pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);
			var pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);
			var pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);
			var pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);

			// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
			// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
			var largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),
				pointPosition,
				i,
				textWidth,
				halfTextWidth,
				furthestRight = this.width,
				furthestRightIndex,
				furthestRightAngle,
				furthestLeft = 0,
				furthestLeftIndex,
				furthestLeftAngle,
				xProtrusionLeft,
				xProtrusionRight,
				radiusReductionRight,
				radiusReductionLeft;
			this.ctx.font = pointLabeFont;

			for (i = 0; i &lt; this.getValueCount(); i++) {
				// 5px to space the text slightly out - similar to what we do in the draw function.
				pointPosition = this.getPointPosition(i, largestPossibleRadius);
				textWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;

				// Add quarter circle to make degree 0 mean top of circle
				var angleRadians = this.getIndexAngle(i) + (Math.PI / 2);
				var angle = (angleRadians * 360 / (2 * Math.PI)) % 360;

				if (angle === 0 || angle === 180) {
					// At angle 0 and 180, we're at exactly the top/bottom
					// of the radar chart, so text will be aligned centrally, so we'll half it and compare
					// w/left and right text sizes
					halfTextWidth = textWidth / 2;
					if (pointPosition.x + halfTextWidth &gt; furthestRight) {
						furthestRight = pointPosition.x + halfTextWidth;
						furthestRightIndex = i;
					}
					if (pointPosition.x - halfTextWidth &lt; furthestLeft) {
						furthestLeft = pointPosition.x - halfTextWidth;
						furthestLeftIndex = i;
					}
				} else if (angle &lt; 180) {
					// Less than half the values means we'll left align the text
					if (pointPosition.x + textWidth &gt; furthestRight) {
						furthestRight = pointPosition.x + textWidth;
						furthestRightIndex = i;
					}
				// More than half the values means we'll right align the text
				} else if (pointPosition.x - textWidth &lt; furthestLeft) {
					furthestLeft = pointPosition.x - textWidth;
					furthestLeftIndex = i;
				}
			}

			xProtrusionLeft = furthestLeft;
			xProtrusionRight = Math.ceil(furthestRight - this.width);

			furthestRightAngle = this.getIndexAngle(furthestRightIndex);
			furthestLeftAngle = this.getIndexAngle(furthestLeftIndex);

			radiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);
			radiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);

			// Ensure we actually need to reduce the size of the chart
			radiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;
			radiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;

			this.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);
			this.setCenterPoint(radiusReductionLeft, radiusReductionRight);
		},
		setCenterPoint: function(leftMovement, rightMovement) {
			var me = this;
			var maxRight = me.width - rightMovement - me.drawingArea,
				maxLeft = leftMovement + me.drawingArea;

			me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);
			// Always vertically in the centre as the text height doesn't change
			me.yCenter = Math.round((me.height / 2) + me.top);
		},

		getIndexAngle: function(index) {
			var angleMultiplier = (Math.PI * 2) / this.getValueCount();
			var startAngle = this.chart.options &amp;&amp; this.chart.options.startAngle ?
				this.chart.options.startAngle :
				0;

			var startAngleRadians = startAngle * Math.PI * 2 / 360;

			// Start from the top instead of right, so remove a quarter of the circle
			return index * angleMultiplier - (Math.PI / 2) + startAngleRadians;
		},
		getDistanceFromCenterForValue: function(value) {
			var me = this;

			if (value === null) {
				return 0; // null always in center
			}

			// Take into account half font size + the yPadding of the top value
			var scalingFactor = me.drawingArea / (me.max - me.min);
			if (me.options.reverse) {
				return (me.max - value) * scalingFactor;
			}
			return (value - me.min) * scalingFactor;
		},
		getPointPosition: function(index, distanceFromCenter) {
			var me = this;
			var thisAngle = me.getIndexAngle(index);
			return {
				x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
				y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
			};
		},
		getPointPositionForValue: function(index, value) {
			return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
		},

		getBasePosition: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.getPointPositionForValue(0,
				me.beginAtZero? 0:
				min &lt; 0 &amp;&amp; max &lt; 0? max :
				min &gt; 0 &amp;&amp; max &gt; 0? min :
				0);
		},

		draw: function() {
			var me = this;
			var opts = me.options;
			var gridLineOpts = opts.gridLines;
			var tickOpts = opts.ticks;
			var angleLineOpts = opts.angleLines;
			var pointLabelOpts = opts.pointLabels;
			var getValueOrDefault = helpers.getValueOrDefault;

			if (opts.display) {
				var ctx = me.ctx;

				// Tick Font
				var tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
				var tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
				var tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
				var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);

				helpers.each(me.ticks, function(label, index) {
					// Don't draw a centre value (if it is minimum)
					if (index &gt; 0 || opts.reverse) {
						var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);
						var yHeight = me.yCenter - yCenterOffset;

						// Draw circular lines around the scale
						if (gridLineOpts.display &amp;&amp; index !== 0) {
							ctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);
							ctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);

							if (opts.lineArc) {
								// Draw circular arcs between the points
								ctx.beginPath();
								ctx.arc(me.xCenter, me.yCenter, yCenterOffset, 0, Math.PI * 2);
								ctx.closePath();
								ctx.stroke();
							} else {
								// Draw straight lines connecting each index
								ctx.beginPath();
								for (var i = 0; i &lt; me.getValueCount(); i++) {
									var pointPosition = me.getPointPosition(i, yCenterOffset);
									if (i === 0) {
										ctx.moveTo(pointPosition.x, pointPosition.y);
									} else {
										ctx.lineTo(pointPosition.x, pointPosition.y);
									}
								}
								ctx.closePath();
								ctx.stroke();
							}
						}

						if (tickOpts.display) {
							var tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
							ctx.font = tickLabelFont;

							if (tickOpts.showLabelBackdrop) {
								var labelWidth = ctx.measureText(label).width;
								ctx.fillStyle = tickOpts.backdropColor;
								ctx.fillRect(
									me.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,
									yHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,
									labelWidth + tickOpts.backdropPaddingX * 2,
									tickFontSize + tickOpts.backdropPaddingY * 2
								);
							}

							ctx.textAlign = 'center';
							ctx.textBaseline = 'middle';
							ctx.fillStyle = tickFontColor;
							ctx.fillText(label, me.xCenter, yHeight);
						}
					}
				});

				if (!opts.lineArc) {
					ctx.lineWidth = angleLineOpts.lineWidth;
					ctx.strokeStyle = angleLineOpts.color;

					var outerDistance = me.getDistanceFromCenterForValue(opts.reverse ? me.min : me.max);

					// Point Label Font
					var pointLabelFontSize = getValueOrDefault(pointLabelOpts.fontSize, globalDefaults.defaultFontSize);
					var pointLabeFontStyle = getValueOrDefault(pointLabelOpts.fontStyle, globalDefaults.defaultFontStyle);
					var pointLabeFontFamily = getValueOrDefault(pointLabelOpts.fontFamily, globalDefaults.defaultFontFamily);
					var pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);

					for (var i = me.getValueCount() - 1; i &gt;= 0; i--) {
						if (angleLineOpts.display) {
							var outerPosition = me.getPointPosition(i, outerDistance);
							ctx.beginPath();
							ctx.moveTo(me.xCenter, me.yCenter);
							ctx.lineTo(outerPosition.x, outerPosition.y);
							ctx.stroke();
							ctx.closePath();
						}
						// Extra 3px out for some label spacing
						var pointLabelPosition = me.getPointPosition(i, outerDistance + 5);

						// Keep this in loop since we may support array properties here
						var pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);
						ctx.font = pointLabeFont;
						ctx.fillStyle = pointLabelFontColor;

						var pointLabels = me.pointLabels;

						// Add quarter circle to make degree 0 mean top of circle
						var angleRadians = this.getIndexAngle(i) + (Math.PI / 2);
						var angle = (angleRadians * 360 / (2 * Math.PI)) % 360;

						if (angle === 0 || angle === 180) {
							ctx.textAlign = 'center';
						} else if (angle &lt; 180) {
							ctx.textAlign = 'left';
						} else {
							ctx.textAlign = 'right';
						}

						// Set the correct text baseline based on outer positioning
						if (angle === 90 || angle === 270) {
							ctx.textBaseline = 'middle';
						} else if (angle &gt; 270 || angle &lt; 90) {
							ctx.textBaseline = 'bottom';
						} else {
							ctx.textBaseline = 'top';
						}

						ctx.fillText(pointLabels[i] ? pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);
					}
				}
			}
		}
	});
	Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);

};

},{}],46:[function(require,module,exports){
/* global window: false */
'use strict';

var moment = require(1);
moment = typeof(moment) === 'function' ? moment : window.moment;

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var time = {
		units: [{
			name: 'millisecond',
			steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
		}, {
			name: 'second',
			steps: [1, 2, 5, 10, 30]
		}, {
			name: 'minute',
			steps: [1, 2, 5, 10, 30]
		}, {
			name: 'hour',
			steps: [1, 2, 3, 6, 12]
		}, {
			name: 'day',
			steps: [1, 2, 5]
		}, {
			name: 'week',
			maxStep: 4
		}, {
			name: 'month',
			maxStep: 3
		}, {
			name: 'quarter',
			maxStep: 4
		}, {
			name: 'year',
			maxStep: false
		}]
	};

	var defaultConfig = {
		position: 'bottom',

		time: {
			parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
			format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
			unit: false, // false == automatic or override with week, month, year, etc.
			round: false, // none, or override with week, month, year, etc.
			displayFormat: false, // DEPRECATED
			isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
			minUnit: 'millisecond',

			// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
			displayFormats: {
				millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,
				second: 'h:mm:ss a', // 11:20:01 AM
				minute: 'h:mm:ss a', // 11:20:01 AM
				hour: 'MMM D, hA', // Sept 4, 5PM
				day: 'll', // Sep 4 2015
				week: 'll', // Week 46, or maybe "[W]WW - YYYY" ?
				month: 'MMM YYYY', // Sept 2015
				quarter: '[Q]Q - YYYY', // Q3
				year: 'YYYY' // 2015
			}
		},
		ticks: {
			autoSkip: false
		}
	};

	var TimeScale = Chart.Scale.extend({
		initialize: function() {
			if (!moment) {
				throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');
			}

			Chart.Scale.prototype.initialize.call(this);
		},
		getLabelMoment: function(datasetIndex, index) {
			if (datasetIndex === null || index === null) {
				return null;
			}

			if (typeof this.labelMoments[datasetIndex] !== 'undefined') {
				return this.labelMoments[datasetIndex][index];
			}

			return null;
		},
		getLabelDiff: function(datasetIndex, index) {
			var me = this;
			if (datasetIndex === null || index === null) {
				return null;
			}

			if (me.labelDiffs === undefined) {
				me.buildLabelDiffs();
			}

			if (typeof me.labelDiffs[datasetIndex] !== 'undefined') {
				return me.labelDiffs[datasetIndex][index];
			}

			return null;
		},
		getMomentStartOf: function(tick) {
			var me = this;
			if (me.options.time.unit === 'week' &amp;&amp; me.options.time.isoWeekday !== false) {
				return tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);
			}
			return tick.clone().startOf(me.tickUnit);
		},
		determineDataLimits: function() {
			var me = this;
			me.labelMoments = [];

			// Only parse these once. If the dataset does not have data as x,y pairs, we will use
			// these
			var scaleLabelMoments = [];
			if (me.chart.data.labels &amp;&amp; me.chart.data.labels.length &gt; 0) {
				helpers.each(me.chart.data.labels, function(label) {
					var labelMoment = me.parseTime(label);

					if (labelMoment.isValid()) {
						if (me.options.time.round) {
							labelMoment.startOf(me.options.time.round);
						}
						scaleLabelMoments.push(labelMoment);
					}
				}, me);

				me.firstTick = moment.min.call(me, scaleLabelMoments);
				me.lastTick = moment.max.call(me, scaleLabelMoments);
			} else {
				me.firstTick = null;
				me.lastTick = null;
			}

			helpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {
				var momentsForDataset = [];
				var datasetVisible = me.chart.isDatasetVisible(datasetIndex);

				if (typeof dataset.data[0] === 'object' &amp;&amp; dataset.data[0] !== null) {
					helpers.each(dataset.data, function(value) {
						var labelMoment = me.parseTime(me.getRightValue(value));

						if (labelMoment.isValid()) {
							if (me.options.time.round) {
								labelMoment.startOf(me.options.time.round);
							}
							momentsForDataset.push(labelMoment);

							if (datasetVisible) {
								// May have gone outside the scale ranges, make sure we keep the first and last ticks updated
								me.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;
								me.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;
							}
						}
					}, me);
				} else {
					// We have no labels. Use the ones from the scale
					momentsForDataset = scaleLabelMoments;
				}

				me.labelMoments.push(momentsForDataset);
			}, me);

			// Set these after we've done all the data
			if (me.options.time.min) {
				me.firstTick = me.parseTime(me.options.time.min);
			}

			if (me.options.time.max) {
				me.lastTick = me.parseTime(me.options.time.max);
			}

			// We will modify these, so clone for later
			me.firstTick = (me.firstTick || moment()).clone();
			me.lastTick = (me.lastTick || moment()).clone();
		},
		buildLabelDiffs: function() {
			var me = this;
			me.labelDiffs = [];
			var scaleLabelDiffs = [];
			// Parse common labels once
			if (me.chart.data.labels &amp;&amp; me.chart.data.labels.length &gt; 0) {
				helpers.each(me.chart.data.labels, function(label) {
					var labelMoment = me.parseTime(label);

					if (labelMoment.isValid()) {
						if (me.options.time.round) {
							labelMoment.startOf(me.options.time.round);
						}
						scaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));
					}
				}, me);
			}

			helpers.each(me.chart.data.datasets, function(dataset) {
				var diffsForDataset = [];

				if (typeof dataset.data[0] === 'object' &amp;&amp; dataset.data[0] !== null) {
					helpers.each(dataset.data, function(value) {
						var labelMoment = me.parseTime(me.getRightValue(value));

						if (labelMoment.isValid()) {
							if (me.options.time.round) {
								labelMoment.startOf(me.options.time.round);
							}
							diffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));
						}
					}, me);
				} else {
					// We have no labels. Use common ones
					diffsForDataset = scaleLabelDiffs;
				}

				me.labelDiffs.push(diffsForDataset);
			}, me);
		},
		buildTicks: function() {
			var me = this;

			me.ctx.save();
			var tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);
			var tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);
			var tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);
			var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);
			me.ctx.font = tickLabelFont;

			me.ticks = [];
			me.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step
			me.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)

			// Set unit override if applicable
			if (me.options.time.unit) {
				me.tickUnit = me.options.time.unit || 'day';
				me.displayFormat = me.options.time.displayFormats[me.tickUnit];
				me.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);
				me.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);
			} else {
				// Determine the smallest needed unit of the time
				var innerWidth = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);

				// Crude approximation of what the label length might be
				var tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);
				var tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;
				var cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));
				var sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));
				tickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);
				var labelCapacity = innerWidth / (tickLabelWidth);

				// Start as small as possible
				me.tickUnit = me.options.time.minUnit;
				me.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);
				me.displayFormat = me.options.time.displayFormats[me.tickUnit];

				var unitDefinitionIndex = 0;
				var unitDefinition = time.units[unitDefinitionIndex];

				// While we aren't ideal and we don't have units left
				while (unitDefinitionIndex &lt; time.units.length) {
					// Can we scale this unit. If `false` we can scale infinitely
					me.unitScale = 1;

					if (helpers.isArray(unitDefinition.steps) &amp;&amp; Math.ceil(me.scaleSizeInUnits / labelCapacity) &lt; helpers.max(unitDefinition.steps)) {
						// Use one of the predefined steps
						for (var idx = 0; idx &lt; unitDefinition.steps.length; ++idx) {
							if (unitDefinition.steps[idx] &gt;= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {
								me.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);
								break;
							}
						}

						break;
					} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) &lt; unitDefinition.maxStep)) {
						// We have a max step. Scale this unit
						me.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));
						break;
					} else {
						// Move to the next unit up
						++unitDefinitionIndex;
						unitDefinition = time.units[unitDefinitionIndex];

						me.tickUnit = unitDefinition.name;
						var leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);
						var trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);
						me.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;
						me.displayFormat = me.options.time.displayFormats[unitDefinition.name];
					}
				}
			}

			var roundedStart;

			// Only round the first tick if we have no hard minimum
			if (!me.options.time.min) {
				me.firstTick = me.getMomentStartOf(me.firstTick);
				roundedStart = me.firstTick;
			} else {
				roundedStart = me.getMomentStartOf(me.firstTick);
			}

			// Only round the last tick if we have no hard maximum
			if (!me.options.time.max) {
				var roundedEnd = me.getMomentStartOf(me.lastTick);
				var delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);
				if (delta &lt; 0) {
					// Do not use end of because we need me to be in the next time unit
					me.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));
				} else if (delta &gt;= 0) {
					me.lastTick = roundedEnd;
				}

				me.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);
			}

			// Tick displayFormat override
			if (me.options.time.displayFormat) {
				me.displayFormat = me.options.time.displayFormat;
			}

			// first tick. will have been rounded correctly if options.time.min is not specified
			me.ticks.push(me.firstTick.clone());

			// For every unit in between the first and last moment, create a moment and add it to the ticks tick
			for (var i = 1; i &lt;= me.scaleSizeInUnits; ++i) {
				var newTick = roundedStart.clone().add(i, me.tickUnit);

				// Are we greater than the max time
				if (me.options.time.max &amp;&amp; newTick.diff(me.lastTick, me.tickUnit, true) &gt;= 0) {
					break;
				}

				if (i % me.unitScale === 0) {
					me.ticks.push(newTick);
				}
			}

			// Always show the right tick
			var diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);
			if (diff !== 0 || me.scaleSizeInUnits === 0) {
				// this is a weird case. If the &lt;max&gt; option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart
				// but the last tick was not rounded.
				if (me.options.time.max) {
					me.ticks.push(me.lastTick.clone());
					me.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);
				} else {
					me.ticks.push(me.lastTick.clone());
					me.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);
				}
			}

			me.ctx.restore();

			// Invalidate label diffs cache
			me.labelDiffs = undefined;
		},
		// Get tooltip label
		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var label = me.chart.data.labels &amp;&amp; index &lt; me.chart.data.labels.length ? me.chart.data.labels[index] : '';

			if (typeof me.chart.data.datasets[datasetIndex].data[0] === 'object') {
				label = me.getRightValue(me.chart.data.datasets[datasetIndex].data[index]);
			}

			// Format nicely
			if (me.options.time.tooltipFormat) {
				label = me.parseTime(label).format(me.options.time.tooltipFormat);
			}

			return label;
		},
		// Function to format an individual tick mark
		tickFormatFunction: function(tick, index, ticks) {
			var formattedTick = tick.format(this.displayFormat);
			var tickOpts = this.options.ticks;
			var callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);

			if (callback) {
				return callback(formattedTick, index, ticks);
			}
			return formattedTick;
		},
		convertTicksToLabels: function() {
			var me = this;
			me.tickMoments = me.ticks;
			me.ticks = me.ticks.map(me.tickFormatFunction, me);
		},
		getPixelForValue: function(value, index, datasetIndex) {
			var me = this;
			var offset = null;
			if (index !== undefined &amp;&amp; datasetIndex !== undefined) {
				offset = me.getLabelDiff(datasetIndex, index);
			}

			if (offset === null) {
				if (!value || !value.isValid) {
					// not already a moment object
					value = me.parseTime(me.getRightValue(value));
				}
				if (value &amp;&amp; value.isValid &amp;&amp; value.isValid()) {
					offset = value.diff(me.firstTick, me.tickUnit, true);
				}
			}

			if (offset !== null) {
				var decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;

				if (me.isHorizontal()) {
					var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
					var valueOffset = (innerWidth * decimal) + me.paddingLeft;

					return me.left + Math.round(valueOffset);
				}
				var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
				var heightOffset = (innerHeight * decimal) + me.paddingTop;

				return me.top + Math.round(heightOffset);
			}
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.tickMoments[index], null, null);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var innerDimension = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);
			var offset = (pixel - (me.isHorizontal() ? me.left + me.paddingLeft : me.top + me.paddingTop)) / innerDimension;
			offset *= me.scaleSizeInUnits;
			return me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');
		},
		parseTime: function(label) {
			var me = this;
			if (typeof me.options.time.parser === 'string') {
				return moment(label, me.options.time.parser);
			}
			if (typeof me.options.time.parser === 'function') {
				return me.options.time.parser(label);
			}
			// Date objects
			if (typeof label.getMonth === 'function' || typeof label === 'number') {
				return moment(label);
			}
			// Moment support
			if (label.isValid &amp;&amp; label.isValid()) {
				return label;
			}
			// Custom parsing (return an instance of moment)
			if (typeof me.options.time.format !== 'string' &amp;&amp; me.options.time.format.call) {
				console.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');
				return me.options.time.format(label);
			}
			// Moment format parsing
			return moment(label, me.options.time.format);
		}
	});
	Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);

};

},{"1":1}]},{},[7])(7)
});</contentText>
  </asset>
  <asset name="lib/fullcalendar.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-11-14
 */
!function(t){"function"==typeof define&amp;&amp;define.amd?define(["jquery","moment"],t):"object"==typeof exports?module.exports=t(require("jquery"),require("moment")):t(jQuery,moment)}(function(t,e){function n(t){return q(t,qt)}function i(t,e){e.left&amp;&amp;t.css({"border-left-width":1,"margin-left":e.left-1}),e.right&amp;&amp;t.css({"border-right-width":1,"margin-right":e.right-1})}function r(t){t.css({"margin-left":"","margin-right":"","border-left-width":"","border-right-width":""})}function s(){t("body").addClass("fc-not-allowed")}function o(){t("body").removeClass("fc-not-allowed")}function l(e,n,i){var r=Math.floor(n/e.length),s=Math.floor(n-r*(e.length-1)),o=[],l=[],u=[],d=0;a(e),e.each(function(n,i){var a=n===e.length-1?s:r,c=t(i).outerHeight(!0);c&lt;a?(o.push(i),l.push(c),u.push(t(i).height())):d+=c}),i&amp;&amp;(n-=d,r=Math.floor(n/o.length),s=Math.floor(n-r*(o.length-1))),t(o).each(function(e,n){var i=e===o.length-1?s:r,a=l[e],d=u[e],c=i-(a-d);a&lt;i&amp;&amp;t(n).height(c)})}function a(t){t.height("")}function u(e){var n=0;return e.find("&gt; *").each(function(e,i){var r=t(i).outerWidth();r&gt;n&amp;&amp;(n=r)}),n++,e.width(n),n}function d(t,e){var n,i=t.add(e);return i.css({position:"relative",left:-1}),n=t.outerHeight()-e.outerHeight(),i.css({position:"",left:""}),n}function c(e){var n=e.css("position"),i=e.parents().filter(function(){var e=t(this);return/(auto|scroll)/.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==n&amp;&amp;i.length?i:t(e[0].ownerDocument||document)}function h(t,e){var n=t.offset(),i=n.left-(e?e.left:0),r=n.top-(e?e.top:0);return{left:i,right:i+t.outerWidth(),top:r,bottom:r+t.outerHeight()}}function f(t,e){var n=t.offset(),i=p(t),r=n.left+y(t,"border-left-width")+i.left-(e?e.left:0),s=n.top+y(t,"border-top-width")+i.top-(e?e.top:0);return{left:r,right:r+t[0].clientWidth,top:s,bottom:s+t[0].clientHeight}}function g(t,e){var n=t.offset(),i=n.left+y(t,"border-left-width")+y(t,"padding-left")-(e?e.left:0),r=n.top+y(t,"border-top-width")+y(t,"padding-top")-(e?e.top:0);return{left:i,right:i+t.width(),top:r,bottom:r+t.height()}}function p(t){var e=t.innerWidth()-t[0].clientWidth,n={left:0,right:0,top:0,bottom:t.innerHeight()-t[0].clientHeight};return v()&amp;&amp;"rtl"==t.css("direction")?n.left=e:n.right=e,n}function v(){return null===Zt&amp;&amp;(Zt=m()),Zt}function m(){var e=t("&lt;div&gt;&lt;div/&gt;&lt;/div&gt;").css({position:"absolute",top:-1e3,left:0,border:0,padding:0,overflow:"scroll",direction:"rtl"}).appendTo("body"),n=e.children(),i=n.offset().left&gt;e.offset().left;return e.remove(),i}function y(t,e){return parseFloat(t.css(e))||0}function S(t){return 1==t.which&amp;&amp;!t.ctrlKey}function w(t){if(void 0!==t.pageX)return t.pageX;var e=t.originalEvent.touches;return e?e[0].pageX:void 0}function E(t){if(void 0!==t.pageY)return t.pageY;var e=t.originalEvent.touches;return e?e[0].pageY:void 0}function D(t){return/^touch/.test(t.type)}function b(t){t.addClass("fc-unselectable").on("selectstart",C)}function C(t){t.preventDefault()}function H(t){return!!window.addEventListener&amp;&amp;(window.addEventListener("scroll",t,!0),!0)}function T(t){return!!window.removeEventListener&amp;&amp;(window.removeEventListener("scroll",t,!0),!0)}function x(t,e){var n={left:Math.max(t.left,e.left),right:Math.min(t.right,e.right),top:Math.max(t.top,e.top),bottom:Math.min(t.bottom,e.bottom)};return n.left&lt;n.right&amp;&amp;n.top&lt;n.bottom&amp;&amp;n}function R(t,e){return{left:Math.min(Math.max(t.left,e.left),e.right),top:Math.min(Math.max(t.top,e.top),e.bottom)}}function I(t){return{left:(t.left+t.right)/2,top:(t.top+t.bottom)/2}}function k(t,e){return{left:t.left-e.left,top:t.top-e.top}}function M(e){var n,i,r=[],s=[];for("string"==typeof e?s=e.split(/\s*,\s*/):"function"==typeof e?s=[e]:t.isArray(e)&amp;&amp;(s=e),n=0;n&lt;s.length;n++)i=s[n],"string"==typeof i?r.push("-"==i.charAt(0)?{field:i.substring(1),order:-1}:{field:i,order:1}):"function"==typeof i&amp;&amp;r.push({func:i});return r}function L(t,e,n){var i,r;for(i=0;i&lt;n.length;i++)if(r=B(t,e,n[i]))return r;return 0}function B(t,e,n){return n.func?n.func(t,e):z(t[n.field],e[n.field])*(n.order||1)}function z(e,n){return e||n?null==n?-1:null==e?1:"string"===t.type(e)||"string"===t.type(n)?String(e).localeCompare(String(n)):e-n:0}function F(t,e){var n,i,r,s,o=t.start,l=t.end,a=e.start,u=e.end;if(l&gt;a&amp;&amp;o&lt;u)return o&gt;=a?(n=o.clone(),r=!0):(n=a.clone(),r=!1),l&lt;=u?(i=l.clone(),s=!0):(i=u.clone(),s=!1),{start:n,end:i,isStart:r,isEnd:s}}function N(t,n){return e.duration({days:t.clone().stripTime().diff(n.clone().stripTime(),"days"),ms:t.time()-n.time()})}function G(t,n){return e.duration({days:t.clone().stripTime().diff(n.clone().stripTime(),"days")})}function A(t,n,i){return e.duration(Math.round(t.diff(n,i,!0)),i)}function O(t,e){var n,i,r;for(n=0;n&lt;Xt.length&amp;&amp;(i=Xt[n],r=V(i,t,e),!(r&gt;=1&amp;&amp;ot(r)));n++);return i}function V(t,n,i){return null!=i?i.diff(n,t,!0):e.isDuration(n)?n.as(t):n.end.diff(n.start,t,!0)}function P(t,e,n){var i;return W(n)?(e-t)/n:(i=n.asMonths(),Math.abs(i)&gt;=1&amp;&amp;ot(i)?e.diff(t,"months",!0)/i:e.diff(t,"days",!0)/n.asDays())}function _(t,e){var n,i;return W(t)||W(e)?t/e:(n=t.asMonths(),i=e.asMonths(),Math.abs(n)&gt;=1&amp;&amp;ot(n)&amp;&amp;Math.abs(i)&gt;=1&amp;&amp;ot(i)?n/i:t.asDays()/e.asDays())}function Y(t,n){var i;return W(t)?e.duration(t*n):(i=t.asMonths(),Math.abs(i)&gt;=1&amp;&amp;ot(i)?e.duration({months:i*n}):e.duration({days:t.asDays()*n}))}function W(t){return Boolean(t.hours()||t.minutes()||t.seconds()||t.milliseconds())}function j(t){return"[object Date]"===Object.prototype.toString.call(t)||t instanceof Date}function U(t){return/^\d+\:\d+(?:\:\d+\.?(?:\d{3})?)?$/.test(t)}function q(t,e){var n,i,r,s,o,l,a={};if(e)for(n=0;n&lt;e.length;n++){for(i=e[n],r=[],s=t.length-1;s&gt;=0;s--)if(o=t[s][i],"object"==typeof o)r.unshift(o);else if(void 0!==o){a[i]=o;break}r.length&amp;&amp;(a[i]=q(r))}for(n=t.length-1;n&gt;=0;n--){l=t[n];for(i in l)i in a||(a[i]=l[i])}return a}function Z(t){var e=function(){};return e.prototype=t,new e}function $(t,e){for(var n in t)X(t,n)&amp;&amp;(e[n]=t[n])}function X(t,e){return Kt.call(t,e)}function K(e){return/undefined|null|boolean|number|string/.test(t.type(e))}function Q(e,n,i){if(t.isFunction(e)&amp;&amp;(e=[e]),e){var r,s;for(r=0;r&lt;e.length;r++)s=e[r].apply(n,i)||s;return s}}function J(){for(var t=0;t&lt;arguments.length;t++)if(void 0!==arguments[t])return arguments[t]}function tt(t){return(t+"").replace(/&amp;/g,"&amp;amp;").replace(/&lt;/g,"&amp;lt;").replace(/&gt;/g,"&amp;gt;").replace(/'/g,"&amp;#039;").replace(/"/g,"&amp;quot;").replace(/\n/g,"&lt;br /&gt;")}function et(t){return t.replace(/&amp;.*?;/g,"")}function nt(e){var n=[];return t.each(e,function(t,e){null!=e&amp;&amp;n.push(t+":"+e)}),n.join(";")}function it(e){var n=[];return t.each(e,function(t,e){null!=e&amp;&amp;n.push(t+'="'+tt(e)+'"')}),n.join(" ")}function rt(t){return t.charAt(0).toUpperCase()+t.slice(1)}function st(t,e){return t-e}function ot(t){return t%1===0}function lt(t,e){var n=t[e];return function(){return n.apply(t,arguments)}}function at(t,e,n){var i,r,s,o,l,a=function(){var u=+new Date-o;u&lt;e?i=setTimeout(a,e-u):(i=null,n||(l=t.apply(s,r),s=r=null))};return function(){s=this,r=arguments,o=+new Date;var u=n&amp;&amp;!i;return i||(i=setTimeout(a,e)),u&amp;&amp;(l=t.apply(s,r),s=r=null),l}}function ut(e,n){return e&amp;&amp;e.then&amp;&amp;"resolved"!==e.state()?n?e.then(n):void 0:t.when(n())}function dt(n,i,r){var s,o,l,a,u=n[0],d=1==n.length&amp;&amp;"string"==typeof u;return e.isMoment(u)||j(u)||void 0===u?a=e.apply(null,n):(s=!1,o=!1,d?Qt.test(u)?(u+="-01",n=[u],s=!0,o=!0):(l=Jt.exec(u))&amp;&amp;(s=!l[5],o=!0):t.isArray(u)&amp;&amp;(o=!0),a=i||s?e.utc.apply(e,n):e.apply(null,n),s?(a._ambigTime=!0,a._ambigZone=!0):r&amp;&amp;(o?a._ambigZone=!0:d&amp;&amp;a.utcOffset(u))),a._fullCalendar=!0,a}function ct(t,e){return ee.format.call(t,e)}function ht(t,e){return ft(t,yt(e))}function ft(t,e){var n,i="";for(n=0;n&lt;e.length;n++)i+=gt(t,e[n]);return i}function gt(t,e){var n,i;return"string"==typeof e?e:(n=e.token)?ie[n]?ie[n](t):ct(t,n):e.maybe&amp;&amp;(i=ft(t,e.maybe),i.match(/[1-9]/))?i:""}function pt(t,e,n,i,r){var s;return t=jt.moment.parseZone(t),e=jt.moment.parseZone(e),s=t.localeData(),n=s.longDateFormat(n)||n,i=i||" - ",vt(t,e,yt(n),i,r)}function vt(t,e,n,i,r){var s,o,l,a,u=t.clone().stripZone(),d=e.clone().stripZone(),c="",h="",f="",g="",p="";for(o=0;o&lt;n.length&amp;&amp;(s=mt(t,e,u,d,n[o]),s!==!1);o++)c+=s;for(l=n.length-1;l&gt;o&amp;&amp;(s=mt(t,e,u,d,n[l]),s!==!1);l--)h=s+h;for(a=o;a&lt;=l;a++)f+=gt(t,n[a]),g+=gt(e,n[a]);return(f||g)&amp;&amp;(p=r?g+i+f:f+i+g),c+p+h}function mt(t,e,n,i,r){var s,o;return"string"==typeof r?r:!!((s=r.token)&amp;&amp;(o=re[s.charAt(0)],o&amp;&amp;n.isSame(i,o)))&amp;&amp;ct(t,s)}function yt(t){return t in se?se[t]:se[t]=St(t)}function St(t){for(var e,n=[],i=/\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g;e=i.exec(t);)e[1]?n.push(e[1]):e[2]?n.push({maybe:St(e[2])}):e[3]?n.push({token:e[3]}):e[5]&amp;&amp;n.push(e[5]);return n}function wt(){}function Et(t,e){var n;return X(e,"constructor")&amp;&amp;(n=e.constructor),"function"!=typeof n&amp;&amp;(n=e.constructor=function(){t.apply(this,arguments)}),n.prototype=Z(t.prototype),$(e,n.prototype),$(t,n),n}function Dt(t,e){$(e,t.prototype)}function bt(t,e){return!t&amp;&amp;!e||!(!t||!e)&amp;&amp;(t.component===e.component&amp;&amp;Ct(t,e)&amp;&amp;Ct(e,t))}function Ct(t,e){for(var n in t)if(!/^(component|left|right|top|bottom)$/.test(n)&amp;&amp;t[n]!==e[n])return!1;return!0}function Ht(t){return{start:t.start.clone(),end:t.end?t.end.clone():null,allDay:t.allDay}}function Tt(t){var e=Rt(t);return"background"===e||"inverse-background"===e}function xt(t){return"inverse-background"===Rt(t)}function Rt(t){return J((t.source||{}).rendering,t.rendering)}function It(t){var e,n,i={};for(e=0;e&lt;t.length;e++)n=t[e],(i[n._id]||(i[n._id]=[])).push(n);return i}function kt(t,e){return t.start-e.start}function Mt(n){var i,r,s,o,l=jt.dataAttrPrefix;return l&amp;&amp;(l+="-"),i=n.data(l+"event")||null,i&amp;&amp;(i="object"==typeof i?t.extend({},i):{},r=i.start,null==r&amp;&amp;(r=i.time),s=i.duration,o=i.stick,delete i.start,delete i.time,delete i.duration,delete i.stick),null==r&amp;&amp;(r=n.data(l+"start")),null==r&amp;&amp;(r=n.data(l+"time")),null==s&amp;&amp;(s=n.data(l+"duration")),null==o&amp;&amp;(o=n.data(l+"stick")),r=null!=r?e.duration(r):null,s=null!=s?e.duration(s):null,o=Boolean(o),{eventProps:i,startTime:r,duration:s,stick:o}}function Lt(t,e){var n,i;for(n=0;n&lt;e.length;n++)if(i=e[n],i.leftCol&lt;=t.rightCol&amp;&amp;i.rightCol&gt;=t.leftCol)return!0;return!1}function Bt(t,e){return t.leftCol-e.leftCol}function zt(t){var e,n,i,r=[];for(e=0;e&lt;t.length;e++){for(n=t[e],i=0;i&lt;r.length&amp;&amp;Gt(n,r[i]).length;i++);n.level=i,(r[i]||(r[i]=[])).push(n)}return r}function Ft(t){var e,n,i,r,s;for(e=0;e&lt;t.length;e++)for(n=t[e],i=0;i&lt;n.length;i++)for(r=n[i],r.forwardSegs=[],s=e+1;s&lt;t.length;s++)Gt(r,t[s],r.forwardSegs)}function Nt(t){var e,n,i=t.forwardSegs,r=0;if(void 0===t.forwardPressure){for(e=0;e&lt;i.length;e++)n=i[e],Nt(n),r=Math.max(r,1+n.forwardPressure);t.forwardPressure=r}}function Gt(t,e,n){n=n||[];for(var i=0;i&lt;e.length;i++)At(t,e[i])&amp;&amp;n.push(e[i]);return n}function At(t,e){return t.bottom&gt;e.top&amp;&amp;t.top&lt;e.bottom}function Ot(n,i){function r(t){t._locale=U}function s(){$?u()&amp;&amp;(g(),d()):o()}function o(){n.addClass("fc"),n.on("click.fc","a[data-goto]",function(e){var n=t(this),i=n.data("goto"),r=j.moment(i.date),s=i.type,o=K.opt("navLink"+rt(s)+"Click");"function"==typeof o?o(r,e):("string"==typeof o&amp;&amp;(s=o),N(r,s))}),j.bindOption("theme",function(t){X=t?"ui":"fc",n.toggleClass("ui-widget",t),n.toggleClass("fc-unthemed",!t)}),j.bindOptions(["isRTL","locale"],function(t){n.toggleClass("fc-ltr",!t),n.toggleClass("fc-rtl",t)}),$=t("&lt;div class='fc-view-container'/&gt;").prependTo(n),q=j.header=new _t(j),l(),d(j.options.defaultView),j.options.handleWindowResize&amp;&amp;(J=at(m,j.options.windowResizeDelay),t(window).resize(J))}function l(){q.render(),q.el&amp;&amp;n.prepend(q.el)}function a(){K&amp;&amp;K.removeElement(),q.removeElement(),$.remove(),n.removeClass("fc fc-ltr fc-rtl fc-unthemed ui-widget"),n.off(".fc"),J&amp;&amp;t(window).unbind("resize",J)}function u(){return n.is(":visible")}function d(e,n){lt++,K&amp;&amp;e&amp;&amp;K.type!==e&amp;&amp;(A(),c()),!K&amp;&amp;e&amp;&amp;(K=j.view=ot[e]||(ot[e]=j.instantiateView(e)),K.setElement(t("&lt;div class='fc-view fc-"+e+"-view' /&gt;").appendTo($)),q.activateButton(e)),K&amp;&amp;(tt=K.massageCurrentDate(tt),K.displaying&amp;&amp;tt&gt;=K.intervalStart&amp;&amp;tt&lt;K.intervalEnd||u()&amp;&amp;(K.display(tt,n),O(),H(),T(),E())),O(),lt--}function c(){q.deactivateButton(K.type),K.removeElement(),K=j.view=null}function h(){lt++,A();var t=K.type,e=K.queryScroll();c(),d(t,e),O(),lt--}function f(t){if(u())return t&amp;&amp;p(),lt++,K.updateSize(!0),lt--,!0}function g(){u()&amp;&amp;p()}function p(){var t=j.options.contentHeight,e=j.options.height;Q="number"==typeof t?t:"function"==typeof t?t():"number"==typeof e?e-v():"function"==typeof e?e()-v():"parent"===e?n.parent().height()-v():Math.round($.width()/Math.max(j.options.aspectRatio,.5))}function v(){return q.el?q.el.outerHeight(!0):0}function m(t){!lt&amp;&amp;t.target===window&amp;&amp;K.start&amp;&amp;f(!0)&amp;&amp;K.trigger("windowResize",st)}function y(){D()}function S(t){it(j.getEventSourcesByMatchArray(t))}function w(){u()&amp;&amp;(A(),K.displayEvents(ut),O())}function E(){!j.options.lazyFetching||et(K.start,K.end)?D():w()}function D(){nt(K.start,K.end)}function b(t){ut=t,w()}function C(){w()}function H(){q.updateTitle(K.title)}function T(){var t=j.getNow();t&gt;=K.intervalStart&amp;&amp;t&lt;K.intervalEnd?q.disableButton("today"):q.enableButton("today")}function x(t,e){K.select(j.buildSelectSpan.apply(j,arguments))}function R(){K&amp;&amp;K.unselect()}function I(){tt=K.computePrevDate(tt),d()}function k(){tt=K.computeNextDate(tt),d()}function M(){tt.add(-1,"years"),d()}function L(){tt.add(1,"years"),d()}function B(){tt=j.getNow(),d()}function z(t){tt=j.moment(t).stripZone(),d()}function F(t){tt.add(e.duration(t)),d()}function N(t,e){var n;e=e||"day",n=j.getViewSpec(e)||j.getUnitViewSpec(e),tt=t.clone(),d(n?n.type:null)}function G(){return j.applyTimezone(tt)}function A(){$.css({width:"100%",height:$.height(),overflow:"hidden"})}function O(){$.css({width:"",height:"",overflow:""})}function V(){return j}function P(){return K}function _(t,e){var n;if("string"==typeof t){if(void 0===e)return j.options[t];n={},n[t]=e,Y(n)}else"object"==typeof t&amp;&amp;Y(t)}function Y(t){var e,n=0;for(e in t)j.dynamicOverrides[e]=t[e];j.viewSpecCache={},j.populateOptionsHash();for(e in t)j.triggerOptionHandlers(e),n++;if(1===n){if("height"===e||"contentHeight"===e||"aspectRatio"===e)return void f(!0);if("defaultDate"===e)return;if("businessHours"===e)return void(K&amp;&amp;(K.unrenderBusinessHours(),K.renderBusinessHours()));if("timezone"===e)return j.rezoneArrayEventSources(),void y()}l(),ot={},h()}function W(t,e){var n=Array.prototype.slice.call(arguments,2);if(e=e||st,this.triggerWith(t,e,n),j.options[t])return j.options[t].apply(e,n)}var j=this;j.render=s,j.destroy=a,j.refetchEvents=y,j.refetchEventSources=S,j.reportEvents=b,j.reportEventChange=C,j.rerenderEvents=w,j.changeView=d,j.select=x,j.unselect=R,j.prev=I,j.next=k,j.prevYear=M,j.nextYear=L,j.today=B,j.gotoDate=z,j.incrementDate=F,j.zoomTo=N,j.getDate=G,j.getCalendar=V,j.getView=P,j.option=_,j.trigger=W,j.dynamicOverrides={},j.viewSpecCache={},j.optionHandlers={},j.overrides=t.extend({},i),j.populateOptionsHash();var U;j.bindOptions(["locale","monthNames","monthNamesShort","dayNames","dayNamesShort","firstDay","weekNumberCalculation"],function(t,e,n,i,s,o,l){if("iso"===l&amp;&amp;(l="ISO"),U=Z(Pt(t)),e&amp;&amp;(U._months=e),n&amp;&amp;(U._monthsShort=n),i&amp;&amp;(U._weekdays=i),s&amp;&amp;(U._weekdaysShort=s),null==o&amp;&amp;"ISO"===l&amp;&amp;(o=1),null!=o){var a=Z(U._week);a.dow=o,U._week=a}"ISO"!==l&amp;&amp;"local"!==l&amp;&amp;"function"!=typeof l||(U._fullCalendar_weekCalc=l),tt&amp;&amp;r(tt)}),j.defaultAllDayEventDuration=e.duration(j.options.defaultAllDayEventDuration),j.defaultTimedEventDuration=e.duration(j.options.defaultTimedEventDuration),j.moment=function(){var t;return"local"===j.options.timezone?(t=jt.moment.apply(null,arguments),t.hasTime()&amp;&amp;t.local()):t="UTC"===j.options.timezone?jt.moment.utc.apply(null,arguments):jt.moment.parseZone.apply(null,arguments),r(t),t},j.localizeMoment=r,j.getIsAmbigTimezone=function(){return"local"!==j.options.timezone&amp;&amp;"UTC"!==j.options.timezone},j.applyTimezone=function(t){if(!t.hasTime())return t.clone();var e,n=j.moment(t.toArray()),i=t.time()-n.time();return i&amp;&amp;(e=n.clone().add(i),t.time()-e.time()===0&amp;&amp;(n=e)),n},j.getNow=function(){var t=j.options.now;return"function"==typeof t&amp;&amp;(t=t()),j.moment(t).stripZone()},j.getEventEnd=function(t){return t.end?t.end.clone():j.getDefaultEventEnd(t.allDay,t.start)},j.getDefaultEventEnd=function(t,e){var n=e.clone();return t?n.stripTime().add(j.defaultAllDayEventDuration):n.add(j.defaultTimedEventDuration),j.getIsAmbigTimezone()&amp;&amp;n.stripZone(),n},j.humanizeDuration=function(t){return t.locale(j.options.locale).humanize()},Yt.call(j);var q,$,X,K,Q,J,tt,et=j.isFetchNeeded,nt=j.fetchEvents,it=j.fetchEventSources,st=n[0],ot={},lt=0,ut=[];tt=null!=j.options.defaultDate?j.moment(j.options.defaultDate).stripZone():j.getNow(),j.getSuggestedViewHeight=function(){return void 0===Q&amp;&amp;g(),Q},j.isHeightAuto=function(){return"auto"===j.options.contentHeight||"auto"===j.options.height},j.freezeContentHeight=A,j.unfreezeContentHeight=O,j.initialize()}function Vt(e){t.each(He,function(t,n){null==e[t]&amp;&amp;(e[t]=n(e))})}function Pt(t){return e.localeData(t)||e.localeData("en")}function _t(e){function n(){var n=e.options,s=n.header;f=n.theme?"ui":"fc",s?(h?h.empty():h=this.el=t("&lt;div class='fc-toolbar'/&gt;"),h.append(r("left")).append(r("right")).append(r("center")).append('&lt;div class="fc-clear"/&gt;')):i()}function i(){h&amp;&amp;(h.remove(),h=c.el=null)}function r(n){var i=t('&lt;div class="fc-'+n+'"/&gt;'),r=e.options,s=r.header[n];return s&amp;&amp;t.each(s.split(" "),function(n){var s,o=t(),l=!0;t.each(this.split(","),function(n,i){var s,a,u,d,c,h,p,v,m,y;"title"==i?(o=o.add(t("&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;")),l=!1):((s=(r.customButtons||{})[i])?(u=function(t){s.click&amp;&amp;s.click.call(y[0],t)},d="",c=s.text):(a=e.getViewSpec(i))?(u=function(){e.changeView(i)},g.push(i),d=a.buttonTextOverride,c=a.buttonTextDefault):e[i]&amp;&amp;(u=function(){e[i]()},d=(e.overrides.buttonText||{})[i],c=r.buttonText[i]),u&amp;&amp;(h=s?s.themeIcon:r.themeButtonIcons[i],p=s?s.icon:r.buttonIcons[i],v=d?tt(d):h&amp;&amp;r.theme?"&lt;span class='ui-icon ui-icon-"+h+"'&gt;&lt;/span&gt;":p&amp;&amp;!r.theme?"&lt;span class='fc-icon fc-icon-"+p+"'&gt;&lt;/span&gt;":tt(c),m=["fc-"+i+"-button",f+"-button",f+"-state-default"],y=t('&lt;button type="button" class="'+m.join(" ")+'"&gt;'+v+"&lt;/button&gt;").click(function(t){y.hasClass(f+"-state-disabled")||(u(t),(y.hasClass(f+"-state-active")||y.hasClass(f+"-state-disabled"))&amp;&amp;y.removeClass(f+"-state-hover"))}).mousedown(function(){y.not("."+f+"-state-active").not("."+f+"-state-disabled").addClass(f+"-state-down")}).mouseup(function(){y.removeClass(f+"-state-down")}).hover(function(){y.not("."+f+"-state-active").not("."+f+"-state-disabled").addClass(f+"-state-hover")},function(){y.removeClass(f+"-state-hover").removeClass(f+"-state-down")}),o=o.add(y)))}),l&amp;&amp;o.first().addClass(f+"-corner-left").end().last().addClass(f+"-corner-right").end(),o.length&gt;1?(s=t("&lt;div/&gt;"),l&amp;&amp;s.addClass("fc-button-group"),s.append(o),i.append(s)):i.append(o)}),i}function s(t){h&amp;&amp;h.find("h2").text(t)}function o(t){h&amp;&amp;h.find(".fc-"+t+"-button").addClass(f+"-state-active")}function l(t){h&amp;&amp;h.find(".fc-"+t+"-button").removeClass(f+"-state-active")}function a(t){h&amp;&amp;h.find(".fc-"+t+"-button").prop("disabled",!0).addClass(f+"-state-disabled")}function u(t){h&amp;&amp;h.find(".fc-"+t+"-button").prop("disabled",!1).removeClass(f+"-state-disabled")}function d(){return g}var c=this;c.render=n,c.removeElement=i,c.updateTitle=s,c.activateButton=o,c.deactivateButton=l,c.disableButton=a,c.enableButton=u,c.getViewsWithButtons=d,c.el=null;var h,f,g=[]}function Yt(){function n(t,e){return!O||t&lt;O||e&gt;V}function i(t,e){O=t,V=e,r(Y,"reset")}function r(t,e){var n,i;for("reset"===e?j=[]:"add"!==e&amp;&amp;(j=w(j,t)),n=0;n&lt;t.length;n++)i=t[n],"pending"!==i._status&amp;&amp;W++,i._fetchId=(i._fetchId||0)+1,i._status="pending";for(n=0;n&lt;t.length;n++)i=t[n],s(i,i._fetchId)}function s(e,n){a(e,function(i){var r,s,o,a=t.isArray(e.events);if(n===e._fetchId&amp;&amp;"rejected"!==e._status){if(e._status="resolved",i)for(r=0;r&lt;i.length;r++)s=i[r],o=a?s:R(s,e),o&amp;&amp;j.push.apply(j,L(o));l()}})}function o(t){var e="pending"===t._status;t._status="rejected",e&amp;&amp;l()}function l(){W--,W||P(j)}function a(e,n){var i,r,s=jt.sourceFetchers;for(i=0;i&lt;s.length;i++){if(r=s[i].call(F,e,O.clone(),V.clone(),F.options.timezone,n),r===!0)return;if("object"==typeof r)return void a(r,n)}var o=e.events;if(o)t.isFunction(o)?(F.pushLoading(),o.call(F,O.clone(),V.clone(),F.options.timezone,function(t){n(t),F.popLoading()})):t.isArray(o)?n(o):n();else{var l=e.url;if(l){var u,d=e.success,c=e.error,h=e.complete;u=t.isFunction(e.data)?e.data():e.data;var f=t.extend({},u||{}),g=J(e.startParam,F.options.startParam),p=J(e.endParam,F.options.endParam),v=J(e.timezoneParam,F.options.timezoneParam);g&amp;&amp;(f[g]=O.format()),p&amp;&amp;(f[p]=V.format()),F.options.timezone&amp;&amp;"local"!=F.options.timezone&amp;&amp;(f[v]=F.options.timezone),F.pushLoading(),t.ajax(t.extend({},Te,e,{data:f,success:function(e){e=e||[];var i=Q(d,this,arguments);t.isArray(i)&amp;&amp;(e=i),n(e)},error:function(){Q(c,this,arguments),n()},complete:function(){Q(h,this,arguments),F.popLoading()}}))}else n()}}function u(t){var e=d(t);e&amp;&amp;(Y.push(e),r([e],"add"))}function d(e){var n,i,r=jt.sourceNormalizers;if(t.isFunction(e)||t.isArray(e)?n={events:e}:"string"==typeof e?n={url:e}:"object"==typeof e&amp;&amp;(n=t.extend({},e)),n){for(n.className?"string"==typeof n.className&amp;&amp;(n.className=n.className.split(/\s+/)):n.className=[],t.isArray(n.events)&amp;&amp;(n.origArray=n.events,n.events=t.map(n.events,function(t){return R(t,n)})),i=0;i&lt;r.length;i++)r[i].call(F,n);return n}}function c(t){f(m(t))}function h(t){null==t?f(Y,!0):f(v(t))}function f(e,n){var i;for(i=0;i&lt;e.length;i++)o(e[i]);n?(Y=[],j=[]):(Y=t.grep(Y,function(t){for(i=0;i&lt;e.length;i++)if(t===e[i])return!1;return!0}),j=w(j,e)),P(j)}function g(){return Y.slice(1)}function p(e){return t.grep(Y,function(t){return t.id&amp;&amp;t.id===e})[0]}function v(e){e?t.isArray(e)||(e=[e]):e=[];var n,i=[];for(n=0;n&lt;e.length;n++)i.push.apply(i,m(e[n]));return i}function m(e){var n,i;for(n=0;n&lt;Y.length;n++)if(i=Y[n],i===e)return[i];return i=p(e),i?[i]:t.grep(Y,function(t){return y(e,t)})}function y(t,e){return t&amp;&amp;e&amp;&amp;S(t)==S(e)}function S(t){return("object"==typeof t?t.origArray||t.googleCalendarId||t.url||t.events:null)||t}function w(e,n){return t.grep(e,function(t){for(var e=0;e&lt;n.length;e++)if(t.source===n[e])return!1;return!0})}function E(t){t.start=F.moment(t.start),t.end?t.end=F.moment(t.end):t.end=null,B(t,D(t)),P(j)}function D(e){var n={};return t.each(e,function(t,e){b(t)&amp;&amp;void 0!==e&amp;&amp;K(e)&amp;&amp;(n[t]=e)}),n}function b(t){return!/^_|^(id|allDay|start|end)$/.test(t)}function C(t,e){var n,i,r,s=R(t);if(s){for(n=L(s),i=0;i&lt;n.length;i++)r=n[i],r.source||(e&amp;&amp;(_.events.push(r),r.source=_),j.push(r));return P(j),n}return[]}function H(e){var n,i;for(null==e?e=function(){return!0}:t.isFunction(e)||(n=e+"",e=function(t){return t._id==n}),j=t.grep(j,e,!0),i=0;i&lt;Y.length;i++)t.isArray(Y[i].events)&amp;&amp;(Y[i].events=t.grep(Y[i].events,e,!0));P(j)}function T(e){return t.isFunction(e)?t.grep(j,e):null!=e?(e+="",t.grep(j,function(t){return t._id==e})):j}function x(t){t.start=F.moment(t.start),t.end&amp;&amp;(t.end=F.moment(t.end)),Wt(t)}function R(n,i){var r,s,o,l={};if(F.options.eventDataTransform&amp;&amp;(n=F.options.eventDataTransform(n)),i&amp;&amp;i.eventDataTransform&amp;&amp;(n=i.eventDataTransform(n)),t.extend(l,n),i&amp;&amp;(l.source=i),l._id=n._id||(void 0===n.id?"_fc"+xe++:n.id+""),n.className?"string"==typeof n.className?l.className=n.className.split(/\s+/):l.className=n.className:l.className=[],r=n.start||n.date,s=n.end,U(r)&amp;&amp;(r=e.duration(r)),U(s)&amp;&amp;(s=e.duration(s)),n.dow||e.isDuration(r)||e.isDuration(s))l.start=r?e.duration(r):null,l.end=s?e.duration(s):null,l._recurring=!0;else{if(r&amp;&amp;(r=F.moment(r),!r.isValid()))return!1;s&amp;&amp;(s=F.moment(s),s.isValid()||(s=null)),o=n.allDay,void 0===o&amp;&amp;(o=J(i?i.allDayDefault:void 0,F.options.allDayDefault)),I(r,s,o,l)}return F.normalizeEvent(l),l}function I(t,e,n,i){i.start=t,i.end=e,i.allDay=n,k(i),Wt(i)}function k(t){M(t),t.end&amp;&amp;!t.end.isAfter(t.start)&amp;&amp;(t.end=null),t.end||(F.options.forceEventDuration?t.end=F.getDefaultEventEnd(t.allDay,t.start):t.end=null)}function M(t){null==t.allDay&amp;&amp;(t.allDay=!(t.start.hasTime()||t.end&amp;&amp;t.end.hasTime())),t.allDay?(t.start.stripTime(),t.end&amp;&amp;t.end.stripTime()):(t.start.hasTime()||(t.start=F.applyTimezone(t.start.time(0))),t.end&amp;&amp;!t.end.hasTime()&amp;&amp;(t.end=F.applyTimezone(t.end.time(0))))}function L(e,n,i){var r,s,o,l,a,u,d,c,h,f=[];if(n=n||O,i=i||V,e)if(e._recurring){if(s=e.dow)for(r={},o=0;o&lt;s.length;o++)r[s[o]]=!0;for(l=n.clone().stripTime();l.isBefore(i);)r&amp;&amp;!r[l.day()]||(a=e.start,u=e.end,d=l.clone(),c=null,a&amp;&amp;(d=d.time(a)),u&amp;&amp;(c=l.clone().time(u)),h=t.extend({},e),I(d,c,!a&amp;&amp;!u,h),f.push(h)),l.add(1,"days")}else f.push(e);return f}function B(e,n,i){function r(t,e){return i?A(t,e,i):n.allDay?G(t,e):N(t,e)}var s,o,l,a,u,d,c={};return n=n||{},n.start||(n.start=e.start.clone()),void 0===n.end&amp;&amp;(n.end=e.end?e.end.clone():null),null==n.allDay&amp;&amp;(n.allDay=e.allDay),k(n),s={start:e._start.clone(),end:e._end?e._end.clone():F.getDefaultEventEnd(e._allDay,e._start),allDay:n.allDay},k(s),o=null!==e._end&amp;&amp;null===n.end,l=r(n.start,s.start),n.end?(a=r(n.end,s.end),u=a.subtract(l)):u=null,t.each(n,function(t,e){b(t)&amp;&amp;void 0!==e&amp;&amp;(c[t]=e)}),d=z(T(e._id),o,n.allDay,l,u,c),{dateDelta:l,durationDelta:u,undo:d}}function z(e,n,i,r,s,o){var l=F.getIsAmbigTimezone(),a=[];return r&amp;&amp;!r.valueOf()&amp;&amp;(r=null),s&amp;&amp;!s.valueOf()&amp;&amp;(s=null),t.each(e,function(e,u){var d,c;d={start:u.start.clone(),end:u.end?u.end.clone():null,allDay:u.allDay},t.each(o,function(t){d[t]=u[t]}),c={start:u._start,end:u._end,allDay:i},k(c),n?c.end=null:s&amp;&amp;!c.end&amp;&amp;(c.end=F.getDefaultEventEnd(c.allDay,c.start)),r&amp;&amp;(c.start.add(r),c.end&amp;&amp;c.end.add(r)),s&amp;&amp;c.end.add(s),l&amp;&amp;!c.allDay&amp;&amp;(r||s)&amp;&amp;(c.start.stripZone(),c.end&amp;&amp;c.end.stripZone()),t.extend(u,o,c),Wt(u),a.push(function(){t.extend(u,d),Wt(u)})}),function(){for(var t=0;t&lt;a.length;t++)a[t]()}}var F=this;F.isFetchNeeded=n,F.fetchEvents=i,F.fetchEventSources=r,F.getEventSources=g,F.getEventSourceById=p,F.getEventSourcesByMatchArray=v,F.getEventSourcesByMatch=m,F.addEventSource=u,F.removeEventSource=c,F.removeEventSources=h,F.updateEvent=E,F.renderEvent=C,F.removeEvents=H,F.clientEvents=T,F.mutateEvent=B,F.normalizeEventDates=k,F.normalizeEventTimes=M;var O,V,P=F.reportEvents,_={events:[]},Y=[_],W=0,j=[];t.each((F.options.events?[F.options.events]:[]).concat(F.options.eventSources||[]),function(t,e){var n=d(e);n&amp;&amp;Y.push(n)}),F.rezoneArrayEventSources=function(){var e,n,i;for(e=0;e&lt;Y.length;e++)if(n=Y[e].events,t.isArray(n))for(i=0;i&lt;n.length;i++)x(n[i])},F.buildEventFromInput=R,F.expandEvent=L,F.getEventCache=function(){return j}}function Wt(t){t._allDay=t.allDay,t._start=t.start.clone(),t._end=t.end?t.end.clone():null}var jt=t.fullCalendar={version:"3.0.1",internalApiVersion:6},Ut=jt.views={};t.fn.fullCalendar=function(e){var n=Array.prototype.slice.call(arguments,1),i=this;return this.each(function(r,s){var o,l=t(s),a=l.data("fullCalendar");"string"==typeof e?a&amp;&amp;t.isFunction(a[e])&amp;&amp;(o=a[e].apply(a,n),r||(i=o),"destroy"===e&amp;&amp;l.removeData("fullCalendar")):a||(a=new Ee(l,e),l.data("fullCalendar",a),a.render())}),i};var qt=["header","buttonText","buttonIcons","themeButtonIcons"];jt.intersectRanges=F,jt.applyAll=Q,jt.debounce=at,jt.isInt=ot,jt.htmlEscape=tt,jt.cssToStr=nt,jt.proxy=lt,jt.capitaliseFirstLetter=rt,jt.getOuterRect=h,jt.getClientRect=f,jt.getContentRect=g,jt.getScrollbarWidths=p;var Zt=null;jt.preventDefault=C,jt.intersectRects=x,jt.parseFieldSpecs=M,jt.compareByFieldSpecs=L,jt.compareByFieldSpec=B,jt.flexibleCompare=z,jt.computeIntervalUnit=O,jt.divideRangeByDuration=P,jt.divideDurationByDuration=_,jt.multiplyDuration=Y,jt.durationHasTime=W;var $t=["sun","mon","tue","wed","thu","fri","sat"],Xt=["year","month","week","day","hour","minute","second","millisecond"];jt.log=function(){var t=window.console;if(t&amp;&amp;t.log)return t.log.apply(t,arguments)},jt.warn=function(){var t=window.console;return t&amp;&amp;t.warn?t.warn.apply(t,arguments):jt.log.apply(jt,arguments)};var Kt={}.hasOwnProperty,Qt=/^\s*\d{4}-\d\d$/,Jt=/^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/,te=e.fn,ee=t.extend({},te),ne=e.momentProperties;ne.push("_fullCalendar"),ne.push("_ambigTime"),ne.push("_ambigZone"),jt.moment=function(){return dt(arguments)},jt.moment.utc=function(){var t=dt(arguments,!0);return t.hasTime()&amp;&amp;t.utc(),t},jt.moment.parseZone=function(){return dt(arguments,!0,!0)},te.week=te.weeks=function(t){var e=this._locale._fullCalendar_weekCalc;return null==t&amp;&amp;"function"==typeof e?e(this):"ISO"===e?ee.isoWeek.apply(this,arguments):ee.week.apply(this,arguments)},te.time=function(t){if(!this._fullCalendar)return ee.time.apply(this,arguments);if(null==t)return e.duration({hours:this.hours(),minutes:this.minutes(),seconds:this.seconds(),milliseconds:this.milliseconds()});this._ambigTime=!1,e.isDuration(t)||e.isMoment(t)||(t=e.duration(t));var n=0;return e.isDuration(t)&amp;&amp;(n=24*Math.floor(t.asDays())),this.hours(n+t.hours()).minutes(t.minutes()).seconds(t.seconds()).milliseconds(t.milliseconds())},te.stripTime=function(){return this._ambigTime||(this.utc(!0),this.set({hours:0,minutes:0,seconds:0,ms:0}),this._ambigTime=!0,this._ambigZone=!0),this},te.hasTime=function(){return!this._ambigTime},te.stripZone=function(){var t;return this._ambigZone||(t=this._ambigTime,this.utc(!0),this._ambigTime=t||!1,this._ambigZone=!0),this},te.hasZone=function(){return!this._ambigZone},te.local=function(t){return ee.local.call(this,this._ambigZone||t),this._ambigTime=!1,this._ambigZone=!1,this},te.utc=function(t){return ee.utc.call(this,t),this._ambigTime=!1,this._ambigZone=!1,this},te.utcOffset=function(t){return null!=t&amp;&amp;(this._ambigTime=!1,this._ambigZone=!1),ee.utcOffset.apply(this,arguments)},te.format=function(){return this._fullCalendar&amp;&amp;arguments[0]?ht(this,arguments[0]):this._ambigTime?ct(this,"YYYY-MM-DD"):this._ambigZone?ct(this,"YYYY-MM-DD[T]HH:mm:ss"):ee.format.apply(this,arguments)},te.toISOString=function(){return this._ambigTime?ct(this,"YYYY-MM-DD"):this._ambigZone?ct(this,"YYYY-MM-DD[T]HH:mm:ss"):ee.toISOString.apply(this,arguments)};var ie={t:function(t){return ct(t,"a").charAt(0)},T:function(t){return ct(t,"A").charAt(0)}};jt.formatRange=pt;var re={Y:"year",M:"month",D:"day",d:"day",A:"second",a:"second",T:"second",t:"second",H:"second",h:"second",m:"second",s:"second"},se={},oe={Y:{value:1,unit:"year"},M:{value:2,unit:"month"},W:{value:3,unit:"week"},w:{value:3,unit:"week"},D:{value:4,unit:"day"},d:{value:4,unit:"day"}};jt.queryMostGranularFormatUnit=function(t){var e,n,i,r,s=yt(t);for(e=0;e&lt;s.length;e++)n=s[e],n.token&amp;&amp;(i=oe[n.token.charAt(0)],i&amp;&amp;(!r||i.value&gt;r.value)&amp;&amp;(r=i));return r?r.unit:null},jt.Class=wt,wt.extend=function(){var t,e,n=arguments.length;for(t=0;t&lt;n;t++)e=arguments[t],t&lt;n-1&amp;&amp;Dt(this,e);return Et(this,e||{})},wt.mixin=function(t){Dt(this,t)};var le=jt.EmitterMixin={on:function(e,n){var i=function(t,e){return n.apply(e.context||this,e.args||[])};return n.guid||(n.guid=t.guid++),i.guid=n.guid,t(this).on(e,i),this},off:function(e,n){return t(this).off(e,n),this},trigger:function(e){var n=Array.prototype.slice.call(arguments,1);return t(this).triggerHandler(e,{args:n}),this},triggerWith:function(e,n,i){return t(this).triggerHandler(e,{context:n,args:i}),this}},ae=jt.ListenerMixin=function(){var e=0,n={listenerId:null,listenTo:function(e,n,i){if("object"==typeof n)for(var r in n)n.hasOwnProperty(r)&amp;&amp;this.listenTo(e,r,n[r]);else"string"==typeof n&amp;&amp;e.on(n+"."+this.getListenerNamespace(),t.proxy(i,this))},stopListeningTo:function(t,e){t.off((e||"")+"."+this.getListenerNamespace())},getListenerNamespace:function(){return null==this.listenerId&amp;&amp;(this.listenerId=e++),"_listener"+this.listenerId}};return n}(),ue={isIgnoringMouse:!1,delayUnignoreMouse:null,initMouseIgnoring:function(t){this.delayUnignoreMouse=at(lt(this,"unignoreMouse"),t||1e3)},tempIgnoreMouse:function(){this.isIgnoringMouse=!0,this.delayUnignoreMouse()},unignoreMouse:function(){this.isIgnoringMouse=!1}},de=wt.extend(ae,{isHidden:!0,options:null,el:null,margin:10,constructor:function(t){this.options=t||{}},show:function(){
this.isHidden&amp;&amp;(this.el||this.render(),this.el.show(),this.position(),this.isHidden=!1,this.trigger("show"))},hide:function(){this.isHidden||(this.el.hide(),this.isHidden=!0,this.trigger("hide"))},render:function(){var e=this,n=this.options;this.el=t('&lt;div class="fc-popover"/&gt;').addClass(n.className||"").css({top:0,left:0}).append(n.content).appendTo(n.parentEl),this.el.on("click",".fc-close",function(){e.hide()}),n.autoHide&amp;&amp;this.listenTo(t(document),"mousedown",this.documentMousedown)},documentMousedown:function(e){this.el&amp;&amp;!t(e.target).closest(this.el).length&amp;&amp;this.hide()},removeElement:function(){this.hide(),this.el&amp;&amp;(this.el.remove(),this.el=null),this.stopListeningTo(t(document),"mousedown")},position:function(){var e,n,i,r,s,o=this.options,l=this.el.offsetParent().offset(),a=this.el.outerWidth(),u=this.el.outerHeight(),d=t(window),h=c(this.el);r=o.top||0,s=void 0!==o.left?o.left:void 0!==o.right?o.right-a:0,h.is(window)||h.is(document)?(h=d,e=0,n=0):(i=h.offset(),e=i.top,n=i.left),e+=d.scrollTop(),n+=d.scrollLeft(),o.viewportConstrain!==!1&amp;&amp;(r=Math.min(r,e+h.outerHeight()-u-this.margin),r=Math.max(r,e+this.margin),s=Math.min(s,n+h.outerWidth()-a-this.margin),s=Math.max(s,n+this.margin)),this.el.css({top:r-l.top,left:s-l.left})},trigger:function(t){this.options[t]&amp;&amp;this.options[t].apply(this,Array.prototype.slice.call(arguments,1))}}),ce=jt.CoordCache=wt.extend({els:null,forcedOffsetParentEl:null,origin:null,boundingRect:null,isHorizontal:!1,isVertical:!1,lefts:null,rights:null,tops:null,bottoms:null,constructor:function(e){this.els=t(e.els),this.isHorizontal=e.isHorizontal,this.isVertical=e.isVertical,this.forcedOffsetParentEl=e.offsetParent?t(e.offsetParent):null},build:function(){var t=this.forcedOffsetParentEl||this.els.eq(0).offsetParent();this.origin=t.offset(),this.boundingRect=this.queryBoundingRect(),this.isHorizontal&amp;&amp;this.buildElHorizontals(),this.isVertical&amp;&amp;this.buildElVerticals()},clear:function(){this.origin=null,this.boundingRect=null,this.lefts=null,this.rights=null,this.tops=null,this.bottoms=null},ensureBuilt:function(){this.origin||this.build()},buildElHorizontals:function(){var e=[],n=[];this.els.each(function(i,r){var s=t(r),o=s.offset().left,l=s.outerWidth();e.push(o),n.push(o+l)}),this.lefts=e,this.rights=n},buildElVerticals:function(){var e=[],n=[];this.els.each(function(i,r){var s=t(r),o=s.offset().top,l=s.outerHeight();e.push(o),n.push(o+l)}),this.tops=e,this.bottoms=n},getHorizontalIndex:function(t){this.ensureBuilt();var e,n=this.lefts,i=this.rights,r=n.length;for(e=0;e&lt;r;e++)if(t&gt;=n[e]&amp;&amp;t&lt;i[e])return e},getVerticalIndex:function(t){this.ensureBuilt();var e,n=this.tops,i=this.bottoms,r=n.length;for(e=0;e&lt;r;e++)if(t&gt;=n[e]&amp;&amp;t&lt;i[e])return e},getLeftOffset:function(t){return this.ensureBuilt(),this.lefts[t]},getLeftPosition:function(t){return this.ensureBuilt(),this.lefts[t]-this.origin.left},getRightOffset:function(t){return this.ensureBuilt(),this.rights[t]},getRightPosition:function(t){return this.ensureBuilt(),this.rights[t]-this.origin.left},getWidth:function(t){return this.ensureBuilt(),this.rights[t]-this.lefts[t]},getTopOffset:function(t){return this.ensureBuilt(),this.tops[t]},getTopPosition:function(t){return this.ensureBuilt(),this.tops[t]-this.origin.top},getBottomOffset:function(t){return this.ensureBuilt(),this.bottoms[t]},getBottomPosition:function(t){return this.ensureBuilt(),this.bottoms[t]-this.origin.top},getHeight:function(t){return this.ensureBuilt(),this.bottoms[t]-this.tops[t]},queryBoundingRect:function(){var t=c(this.els.eq(0));if(!t.is(document))return f(t)},isPointInBounds:function(t,e){return this.isLeftInBounds(t)&amp;&amp;this.isTopInBounds(e)},isLeftInBounds:function(t){return!this.boundingRect||t&gt;=this.boundingRect.left&amp;&amp;t&lt;this.boundingRect.right},isTopInBounds:function(t){return!this.boundingRect||t&gt;=this.boundingRect.top&amp;&amp;t&lt;this.boundingRect.bottom}}),he=jt.DragListener=wt.extend(ae,ue,{options:null,subjectEl:null,originX:null,originY:null,scrollEl:null,isInteracting:!1,isDistanceSurpassed:!1,isDelayEnded:!1,isDragging:!1,isTouch:!1,delay:null,delayTimeoutId:null,minDistance:null,handleTouchScrollProxy:null,constructor:function(t){this.options=t||{},this.handleTouchScrollProxy=lt(this,"handleTouchScroll"),this.initMouseIgnoring(500)},startInteraction:function(e,n){var i=D(e);if("mousedown"===e.type){if(this.isIgnoringMouse)return;if(!S(e))return;e.preventDefault()}this.isInteracting||(n=n||{},this.delay=J(n.delay,this.options.delay,0),this.minDistance=J(n.distance,this.options.distance,0),this.subjectEl=this.options.subjectEl,this.isInteracting=!0,this.isTouch=i,this.isDelayEnded=!1,this.isDistanceSurpassed=!1,this.originX=w(e),this.originY=E(e),this.scrollEl=c(t(e.target)),this.bindHandlers(),this.initAutoScroll(),this.handleInteractionStart(e),this.startDelay(e),this.minDistance||this.handleDistanceSurpassed(e))},handleInteractionStart:function(t){this.trigger("interactionStart",t)},endInteraction:function(t,e){this.isInteracting&amp;&amp;(this.endDrag(t),this.delayTimeoutId&amp;&amp;(clearTimeout(this.delayTimeoutId),this.delayTimeoutId=null),this.destroyAutoScroll(),this.unbindHandlers(),this.isInteracting=!1,this.handleInteractionEnd(t,e),this.isTouch&amp;&amp;this.tempIgnoreMouse())},handleInteractionEnd:function(t,e){this.trigger("interactionEnd",t,e||!1)},bindHandlers:function(){var e=this,n=1;this.isTouch?(this.listenTo(t(document),{touchmove:this.handleTouchMove,touchend:this.endInteraction,touchcancel:this.endInteraction,touchstart:function(t){n?n--:e.endInteraction(t,!0)}}),!H(this.handleTouchScrollProxy)&amp;&amp;this.scrollEl&amp;&amp;this.listenTo(this.scrollEl,"scroll",this.handleTouchScroll)):this.listenTo(t(document),{mousemove:this.handleMouseMove,mouseup:this.endInteraction}),this.listenTo(t(document),{selectstart:C,contextmenu:C})},unbindHandlers:function(){this.stopListeningTo(t(document)),T(this.handleTouchScrollProxy),this.scrollEl&amp;&amp;this.stopListeningTo(this.scrollEl,"scroll")},startDrag:function(t,e){this.startInteraction(t,e),this.isDragging||(this.isDragging=!0,this.handleDragStart(t))},handleDragStart:function(t){this.trigger("dragStart",t)},handleMove:function(t){var e,n=w(t)-this.originX,i=E(t)-this.originY,r=this.minDistance;this.isDistanceSurpassed||(e=n*n+i*i,e&gt;=r*r&amp;&amp;this.handleDistanceSurpassed(t)),this.isDragging&amp;&amp;this.handleDrag(n,i,t)},handleDrag:function(t,e,n){this.trigger("drag",t,e,n),this.updateAutoScroll(n)},endDrag:function(t){this.isDragging&amp;&amp;(this.isDragging=!1,this.handleDragEnd(t))},handleDragEnd:function(t){this.trigger("dragEnd",t)},startDelay:function(t){var e=this;this.delay?this.delayTimeoutId=setTimeout(function(){e.handleDelayEnd(t)},this.delay):this.handleDelayEnd(t)},handleDelayEnd:function(t){this.isDelayEnded=!0,this.isDistanceSurpassed&amp;&amp;this.startDrag(t)},handleDistanceSurpassed:function(t){this.isDistanceSurpassed=!0,this.isDelayEnded&amp;&amp;this.startDrag(t)},handleTouchMove:function(t){this.isDragging&amp;&amp;t.preventDefault(),this.handleMove(t)},handleMouseMove:function(t){this.handleMove(t)},handleTouchScroll:function(t){this.isDragging||this.endInteraction(t,!0)},trigger:function(t){this.options[t]&amp;&amp;this.options[t].apply(this,Array.prototype.slice.call(arguments,1)),this["_"+t]&amp;&amp;this["_"+t].apply(this,Array.prototype.slice.call(arguments,1))}});he.mixin({isAutoScroll:!1,scrollBounds:null,scrollTopVel:null,scrollLeftVel:null,scrollIntervalId:null,scrollSensitivity:30,scrollSpeed:200,scrollIntervalMs:50,initAutoScroll:function(){var t=this.scrollEl;this.isAutoScroll=this.options.scroll&amp;&amp;t&amp;&amp;!t.is(window)&amp;&amp;!t.is(document),this.isAutoScroll&amp;&amp;this.listenTo(t,"scroll",at(this.handleDebouncedScroll,100))},destroyAutoScroll:function(){this.endAutoScroll(),this.isAutoScroll&amp;&amp;this.stopListeningTo(this.scrollEl,"scroll")},computeScrollBounds:function(){this.isAutoScroll&amp;&amp;(this.scrollBounds=h(this.scrollEl))},updateAutoScroll:function(t){var e,n,i,r,s=this.scrollSensitivity,o=this.scrollBounds,l=0,a=0;o&amp;&amp;(e=(s-(E(t)-o.top))/s,n=(s-(o.bottom-E(t)))/s,i=(s-(w(t)-o.left))/s,r=(s-(o.right-w(t)))/s,e&gt;=0&amp;&amp;e&lt;=1?l=e*this.scrollSpeed*-1:n&gt;=0&amp;&amp;n&lt;=1&amp;&amp;(l=n*this.scrollSpeed),i&gt;=0&amp;&amp;i&lt;=1?a=i*this.scrollSpeed*-1:r&gt;=0&amp;&amp;r&lt;=1&amp;&amp;(a=r*this.scrollSpeed)),this.setScrollVel(l,a)},setScrollVel:function(t,e){this.scrollTopVel=t,this.scrollLeftVel=e,this.constrainScrollVel(),!this.scrollTopVel&amp;&amp;!this.scrollLeftVel||this.scrollIntervalId||(this.scrollIntervalId=setInterval(lt(this,"scrollIntervalFunc"),this.scrollIntervalMs))},constrainScrollVel:function(){var t=this.scrollEl;this.scrollTopVel&lt;0?t.scrollTop()&lt;=0&amp;&amp;(this.scrollTopVel=0):this.scrollTopVel&gt;0&amp;&amp;t.scrollTop()+t[0].clientHeight&gt;=t[0].scrollHeight&amp;&amp;(this.scrollTopVel=0),this.scrollLeftVel&lt;0?t.scrollLeft()&lt;=0&amp;&amp;(this.scrollLeftVel=0):this.scrollLeftVel&gt;0&amp;&amp;t.scrollLeft()+t[0].clientWidth&gt;=t[0].scrollWidth&amp;&amp;(this.scrollLeftVel=0)},scrollIntervalFunc:function(){var t=this.scrollEl,e=this.scrollIntervalMs/1e3;this.scrollTopVel&amp;&amp;t.scrollTop(t.scrollTop()+this.scrollTopVel*e),this.scrollLeftVel&amp;&amp;t.scrollLeft(t.scrollLeft()+this.scrollLeftVel*e),this.constrainScrollVel(),this.scrollTopVel||this.scrollLeftVel||this.endAutoScroll()},endAutoScroll:function(){this.scrollIntervalId&amp;&amp;(clearInterval(this.scrollIntervalId),this.scrollIntervalId=null,this.handleScrollEnd())},handleDebouncedScroll:function(){this.scrollIntervalId||this.handleScrollEnd()},handleScrollEnd:function(){}});var fe=he.extend({component:null,origHit:null,hit:null,coordAdjust:null,constructor:function(t,e){he.call(this,e),this.component=t},handleInteractionStart:function(t){var e,n,i,r=this.subjectEl;this.computeCoords(),t?(n={left:w(t),top:E(t)},i=n,r&amp;&amp;(e=h(r),i=R(i,e)),this.origHit=this.queryHit(i.left,i.top),r&amp;&amp;this.options.subjectCenter&amp;&amp;(this.origHit&amp;&amp;(e=x(this.origHit,e)||e),i=I(e)),this.coordAdjust=k(i,n)):(this.origHit=null,this.coordAdjust=null),he.prototype.handleInteractionStart.apply(this,arguments)},computeCoords:function(){this.component.prepareHits(),this.computeScrollBounds()},handleDragStart:function(t){var e;he.prototype.handleDragStart.apply(this,arguments),e=this.queryHit(w(t),E(t)),e&amp;&amp;this.handleHitOver(e)},handleDrag:function(t,e,n){var i;he.prototype.handleDrag.apply(this,arguments),i=this.queryHit(w(n),E(n)),bt(i,this.hit)||(this.hit&amp;&amp;this.handleHitOut(),i&amp;&amp;this.handleHitOver(i))},handleDragEnd:function(){this.handleHitDone(),he.prototype.handleDragEnd.apply(this,arguments)},handleHitOver:function(t){var e=bt(t,this.origHit);this.hit=t,this.trigger("hitOver",this.hit,e,this.origHit)},handleHitOut:function(){this.hit&amp;&amp;(this.trigger("hitOut",this.hit),this.handleHitDone(),this.hit=null)},handleHitDone:function(){this.hit&amp;&amp;this.trigger("hitDone",this.hit)},handleInteractionEnd:function(){he.prototype.handleInteractionEnd.apply(this,arguments),this.origHit=null,this.hit=null,this.component.releaseHits()},handleScrollEnd:function(){he.prototype.handleScrollEnd.apply(this,arguments),this.computeCoords()},queryHit:function(t,e){return this.coordAdjust&amp;&amp;(t+=this.coordAdjust.left,e+=this.coordAdjust.top),this.component.queryHit(t,e)}}),ge=wt.extend(ae,{options:null,sourceEl:null,el:null,parentEl:null,top0:null,left0:null,y0:null,x0:null,topDelta:null,leftDelta:null,isFollowing:!1,isHidden:!1,isAnimating:!1,constructor:function(e,n){this.options=n=n||{},this.sourceEl=e,this.parentEl=n.parentEl?t(n.parentEl):e.parent()},start:function(e){this.isFollowing||(this.isFollowing=!0,this.y0=E(e),this.x0=w(e),this.topDelta=0,this.leftDelta=0,this.isHidden||this.updatePosition(),D(e)?this.listenTo(t(document),"touchmove",this.handleMove):this.listenTo(t(document),"mousemove",this.handleMove))},stop:function(e,n){function i(){r.isAnimating=!1,r.removeElement(),r.top0=r.left0=null,n&amp;&amp;n()}var r=this,s=this.options.revertDuration;this.isFollowing&amp;&amp;!this.isAnimating&amp;&amp;(this.isFollowing=!1,this.stopListeningTo(t(document)),e&amp;&amp;s&amp;&amp;!this.isHidden?(this.isAnimating=!0,this.el.animate({top:this.top0,left:this.left0},{duration:s,complete:i})):i())},getEl:function(){var t=this.el;return t||(t=this.el=this.sourceEl.clone().addClass(this.options.additionalClass||"").css({position:"absolute",visibility:"",display:this.isHidden?"none":"",margin:0,right:"auto",bottom:"auto",width:this.sourceEl.width(),height:this.sourceEl.height(),opacity:this.options.opacity||"",zIndex:this.options.zIndex}),t.addClass("fc-unselectable"),t.appendTo(this.parentEl)),t},removeElement:function(){this.el&amp;&amp;(this.el.remove(),this.el=null)},updatePosition:function(){var t,e;this.getEl(),null===this.top0&amp;&amp;(t=this.sourceEl.offset(),e=this.el.offsetParent().offset(),this.top0=t.top-e.top,this.left0=t.left-e.left),this.el.css({top:this.top0+this.topDelta,left:this.left0+this.leftDelta})},handleMove:function(t){this.topDelta=E(t)-this.y0,this.leftDelta=w(t)-this.x0,this.isHidden||this.updatePosition()},hide:function(){this.isHidden||(this.isHidden=!0,this.el&amp;&amp;this.el.hide())},show:function(){this.isHidden&amp;&amp;(this.isHidden=!1,this.updatePosition(),this.getEl().show())}}),pe=jt.Grid=wt.extend(ae,ue,{hasDayInteractions:!0,view:null,isRTL:null,start:null,end:null,el:null,elsByFill:null,eventTimeFormat:null,displayEventTime:null,displayEventEnd:null,minResizeDuration:null,largeUnit:null,dayDragListener:null,segDragListener:null,segResizeListener:null,externalDragListener:null,constructor:function(t){this.view=t,this.isRTL=t.opt("isRTL"),this.elsByFill={},this.dayDragListener=this.buildDayDragListener(),this.initMouseIgnoring()},computeEventTimeFormat:function(){return this.view.opt("smallTimeFormat")},computeDisplayEventTime:function(){return!0},computeDisplayEventEnd:function(){return!0},setRange:function(t){this.start=t.start.clone(),this.end=t.end.clone(),this.rangeUpdated(),this.processRangeOptions()},rangeUpdated:function(){},processRangeOptions:function(){var t,e,n=this.view;this.eventTimeFormat=n.opt("eventTimeFormat")||n.opt("timeFormat")||this.computeEventTimeFormat(),t=n.opt("displayEventTime"),null==t&amp;&amp;(t=this.computeDisplayEventTime()),e=n.opt("displayEventEnd"),null==e&amp;&amp;(e=this.computeDisplayEventEnd()),this.displayEventTime=t,this.displayEventEnd=e},spanToSegs:function(t){},diffDates:function(t,e){return this.largeUnit?A(t,e,this.largeUnit):N(t,e)},prepareHits:function(){},releaseHits:function(){},queryHit:function(t,e){},getHitSpan:function(t){},getHitEl:function(t){},setElement:function(t){this.el=t,this.hasDayInteractions&amp;&amp;(b(t),this.bindDayHandler("touchstart",this.dayTouchStart),this.bindDayHandler("mousedown",this.dayMousedown)),this.bindSegHandlers(),this.bindGlobalHandlers()},bindDayHandler:function(e,n){var i=this;this.el.on(e,function(e){if(!t(e.target).is(i.segSelector+","+i.segSelector+" *,.fc-more,a[data-goto]"))return n.call(i,e)})},removeElement:function(){this.unbindGlobalHandlers(),this.clearDragListeners(),this.el.remove()},renderSkeleton:function(){},renderDates:function(){},unrenderDates:function(){},bindGlobalHandlers:function(){this.listenTo(t(document),{dragstart:this.externalDragStart,sortstart:this.externalDragStart})},unbindGlobalHandlers:function(){this.stopListeningTo(t(document))},dayMousedown:function(t){this.isIgnoringMouse||this.dayDragListener.startInteraction(t,{})},dayTouchStart:function(t){var e=this.view;(e.isSelected||e.selectedEvent)&amp;&amp;this.tempIgnoreMouse(),this.dayDragListener.startInteraction(t,{delay:this.view.opt("longPressDelay")})},buildDayDragListener:function(){var t,e,n=this,i=this.view,r=i.opt("selectable"),l=new fe(this,{scroll:i.opt("dragScroll"),interactionStart:function(){t=l.origHit,e=null},dragStart:function(){i.unselect()},hitOver:function(i,o,l){l&amp;&amp;(o||(t=null),r&amp;&amp;(e=n.computeSelection(n.getHitSpan(l),n.getHitSpan(i)),e?n.renderSelection(e):e===!1&amp;&amp;s()))},hitOut:function(){t=null,e=null,n.unrenderSelection()},hitDone:function(){o()},interactionEnd:function(r,s){s||(t&amp;&amp;!n.isIgnoringMouse&amp;&amp;i.triggerDayClick(n.getHitSpan(t),n.getHitEl(t),r),e&amp;&amp;i.reportSelection(e,r))}});return l},clearDragListeners:function(){this.dayDragListener.endInteraction(),this.segDragListener&amp;&amp;this.segDragListener.endInteraction(),this.segResizeListener&amp;&amp;this.segResizeListener.endInteraction(),this.externalDragListener&amp;&amp;this.externalDragListener.endInteraction()},renderEventLocationHelper:function(t,e){var n=this.fabricateHelperEvent(t,e);return this.renderHelper(n,e)},fabricateHelperEvent:function(t,e){var n=e?Z(e.event):{};return n.start=t.start.clone(),n.end=t.end?t.end.clone():null,n.allDay=null,this.view.calendar.normalizeEventDates(n),n.className=(n.className||[]).concat("fc-helper"),e||(n.editable=!1),n},renderHelper:function(t,e){},unrenderHelper:function(){},renderSelection:function(t){this.renderHighlight(t)},unrenderSelection:function(){this.unrenderHighlight()},computeSelection:function(t,e){var n=this.computeSelectionSpan(t,e);return!(n&amp;&amp;!this.view.calendar.isSelectionSpanAllowed(n))&amp;&amp;n},computeSelectionSpan:function(t,e){var n=[t.start,t.end,e.start,e.end];return n.sort(st),{start:n[0].clone(),end:n[3].clone()}},renderHighlight:function(t){this.renderFill("highlight",this.spanToSegs(t))},unrenderHighlight:function(){this.unrenderFill("highlight")},highlightSegClasses:function(){return["fc-highlight"]},renderBusinessHours:function(){},unrenderBusinessHours:function(){},getNowIndicatorUnit:function(){},renderNowIndicator:function(t){},unrenderNowIndicator:function(){},renderFill:function(t,e){},unrenderFill:function(t){var e=this.elsByFill[t];e&amp;&amp;(e.remove(),delete this.elsByFill[t])},renderFillSegEls:function(e,n){var i,r=this,s=this[e+"SegEl"],o="",l=[];if(n.length){for(i=0;i&lt;n.length;i++)o+=this.fillSegHtml(e,n[i]);t(o).each(function(e,i){var o=n[e],a=t(i);s&amp;&amp;(a=s.call(r,o,a)),a&amp;&amp;(a=t(a),a.is(r.fillSegTag)&amp;&amp;(o.el=a,l.push(o)))})}return l},fillSegTag:"div",fillSegHtml:function(t,e){var n=this[t+"SegClasses"],i=this[t+"SegCss"],r=n?n.call(this,e):[],s=nt(i?i.call(this,e):{});return"&lt;"+this.fillSegTag+(r.length?' class="'+r.join(" ")+'"':"")+(s?' style="'+s+'"':"")+" /&gt;"},getDayClasses:function(t){var e=this.view,n=e.calendar.getNow(),i=["fc-"+$t[t.day()]];return 1==e.intervalDuration.as("months")&amp;&amp;t.month()!=e.intervalStart.month()&amp;&amp;i.push("fc-other-month"),t.isSame(n,"day")?i.push("fc-today",e.highlightStateClass):t&lt;n?i.push("fc-past"):i.push("fc-future"),i}});pe.mixin({segSelector:".fc-event-container &gt; *",mousedOverSeg:null,isDraggingSeg:!1,isResizingSeg:!1,isDraggingExternal:!1,segs:null,renderEvents:function(t){var e,n=[],i=[];for(e=0;e&lt;t.length;e++)(Tt(t[e])?n:i).push(t[e]);this.segs=[].concat(this.renderBgEvents(n),this.renderFgEvents(i))},renderBgEvents:function(t){var e=this.eventsToSegs(t);return this.renderBgSegs(e)||e},renderFgEvents:function(t){var e=this.eventsToSegs(t);return this.renderFgSegs(e)||e},unrenderEvents:function(){this.handleSegMouseout(),this.clearDragListeners(),this.unrenderFgSegs(),this.unrenderBgSegs(),this.segs=null},getEventSegs:function(){return this.segs||[]},renderFgSegs:function(t){},unrenderFgSegs:function(){},renderFgSegEls:function(e,n){var i,r=this.view,s="",o=[];if(e.length){for(i=0;i&lt;e.length;i++)s+=this.fgSegHtml(e[i],n);t(s).each(function(n,i){var s=e[n],l=r.resolveEventEl(s.event,t(i));l&amp;&amp;(l.data("fc-seg",s),s.el=l,o.push(s))})}return o},fgSegHtml:function(t,e){},renderBgSegs:function(t){return this.renderFill("bgEvent",t)},unrenderBgSegs:function(){this.unrenderFill("bgEvent")},bgEventSegEl:function(t,e){return this.view.resolveEventEl(t.event,e)},bgEventSegClasses:function(t){var e=t.event,n=e.source||{};return["fc-bgevent"].concat(e.className,n.className||[])},bgEventSegCss:function(t){return{"background-color":this.getSegSkinCss(t)["background-color"]}},businessHoursSegClasses:function(t){return["fc-nonbusiness","fc-bgevent"]},buildBusinessHourSegs:function(e){var n=this.view.calendar.getCurrentBusinessHourEvents(e);return!n.length&amp;&amp;this.view.calendar.options.businessHours&amp;&amp;(n=[t.extend({},Re,{start:this.view.end,end:this.view.end,dow:null})]),this.eventsToSegs(n)},bindSegHandlers:function(){this.bindSegHandlersToEl(this.el)},bindSegHandlersToEl:function(t){this.bindSegHandlerToEl(t,"touchstart",this.handleSegTouchStart),this.bindSegHandlerToEl(t,"touchend",this.handleSegTouchEnd),this.bindSegHandlerToEl(t,"mouseenter",this.handleSegMouseover),this.bindSegHandlerToEl(t,"mouseleave",this.handleSegMouseout),this.bindSegHandlerToEl(t,"mousedown",this.handleSegMousedown),this.bindSegHandlerToEl(t,"click",this.handleSegClick)},bindSegHandlerToEl:function(e,n,i){var r=this;e.on(n,this.segSelector,function(e){var n=t(this).data("fc-seg");if(n&amp;&amp;!r.isDraggingSeg&amp;&amp;!r.isResizingSeg)return i.call(r,n,e)})},handleSegClick:function(t,e){var n=this.view.trigger("eventClick",t.el[0],t.event,e);n===!1&amp;&amp;e.preventDefault()},handleSegMouseover:function(t,e){this.isIgnoringMouse||this.mousedOverSeg||(this.mousedOverSeg=t,this.view.isEventResizable(t.event)&amp;&amp;t.el.addClass("fc-allow-mouse-resize"),this.view.trigger("eventMouseover",t.el[0],t.event,e))},handleSegMouseout:function(t,e){e=e||{},this.mousedOverSeg&amp;&amp;(t=t||this.mousedOverSeg,this.mousedOverSeg=null,this.view.isEventResizable(t.event)&amp;&amp;t.el.removeClass("fc-allow-mouse-resize"),this.view.trigger("eventMouseout",t.el[0],t.event,e))},handleSegMousedown:function(t,e){var n=this.startSegResize(t,e,{distance:5});!n&amp;&amp;this.view.isEventDraggable(t.event)&amp;&amp;this.buildSegDragListener(t).startInteraction(e,{distance:5})},handleSegTouchStart:function(t,e){var n,i=this.view,r=t.event,s=i.isEventSelected(r),o=i.isEventDraggable(r),l=i.isEventResizable(r),a=!1;s&amp;&amp;l&amp;&amp;(a=this.startSegResize(t,e)),a||!o&amp;&amp;!l||(n=o?this.buildSegDragListener(t):this.buildSegSelectListener(t),n.startInteraction(e,{delay:s?0:this.view.opt("longPressDelay")})),this.tempIgnoreMouse()},handleSegTouchEnd:function(t,e){this.tempIgnoreMouse()},startSegResize:function(e,n,i){return!!t(n.target).is(".fc-resizer")&amp;&amp;(this.buildSegResizeListener(e,t(n.target).is(".fc-start-resizer")).startInteraction(n,i),!0)},buildSegDragListener:function(t){var e,n,i,r=this,l=this.view,a=l.calendar,u=t.el,d=t.event;if(this.segDragListener)return this.segDragListener;var c=this.segDragListener=new fe(l,{scroll:l.opt("dragScroll"),subjectEl:u,subjectCenter:!0,interactionStart:function(i){t.component=r,e=!1,n=new ge(t.el,{additionalClass:"fc-dragging",parentEl:l.el,opacity:c.isTouch?null:l.opt("dragOpacity"),revertDuration:l.opt("dragRevertDuration"),zIndex:2}),n.hide(),n.start(i)},dragStart:function(n){c.isTouch&amp;&amp;!l.isEventSelected(d)&amp;&amp;l.selectEvent(d),e=!0,r.handleSegMouseout(t,n),r.segDragStart(t,n),l.hideEvent(d)},hitOver:function(e,o,u){var h;t.hit&amp;&amp;(u=t.hit),i=r.computeEventDrop(u.component.getHitSpan(u),e.component.getHitSpan(e),d),i&amp;&amp;!a.isEventSpanAllowed(r.eventToSpan(i),d)&amp;&amp;(s(),i=null),i&amp;&amp;(h=l.renderDrag(i,t))?(h.addClass("fc-dragging"),c.isTouch||r.applyDragOpacity(h),n.hide()):n.show(),o&amp;&amp;(i=null)},hitOut:function(){l.unrenderDrag(),n.show(),i=null},hitDone:function(){o()},interactionEnd:function(s){delete t.component,n.stop(!i,function(){e&amp;&amp;(l.unrenderDrag(),l.showEvent(d),r.segDragStop(t,s)),i&amp;&amp;l.reportEventDrop(d,i,this.largeUnit,u,s)}),r.segDragListener=null}});return c},buildSegSelectListener:function(t){var e=this,n=this.view,i=t.event;if(this.segDragListener)return this.segDragListener;var r=this.segDragListener=new he({dragStart:function(t){r.isTouch&amp;&amp;!n.isEventSelected(i)&amp;&amp;n.selectEvent(i)},interactionEnd:function(t){e.segDragListener=null}});return r},segDragStart:function(t,e){this.isDraggingSeg=!0,this.view.trigger("eventDragStart",t.el[0],t.event,e,{})},segDragStop:function(t,e){this.isDraggingSeg=!1,this.view.trigger("eventDragStop",t.el[0],t.event,e,{})},computeEventDrop:function(t,e,n){var i,r,s=this.view.calendar,o=t.start,l=e.start;return o.hasTime()===l.hasTime()?(i=this.diffDates(l,o),n.allDay&amp;&amp;W(i)?(r={start:n.start.clone(),end:s.getEventEnd(n),allDay:!1},s.normalizeEventTimes(r)):r=Ht(n),r.start.add(i),r.end&amp;&amp;r.end.add(i)):r={start:l.clone(),end:null,allDay:!l.hasTime()},r},applyDragOpacity:function(t){var e=this.view.opt("dragOpacity");null!=e&amp;&amp;t.css("opacity",e)},externalDragStart:function(e,n){var i,r,s=this.view;s.opt("droppable")&amp;&amp;(i=t((n?n.item:null)||e.target),r=s.opt("dropAccept"),(t.isFunction(r)?r.call(i[0],i):i.is(r))&amp;&amp;(this.isDraggingExternal||this.listenToExternalDrag(i,e,n)))},listenToExternalDrag:function(t,e,n){var i,r=this,l=this.view.calendar,a=Mt(t),u=r.externalDragListener=new fe(this,{interactionStart:function(){r.isDraggingExternal=!0},hitOver:function(t){i=r.computeExternalDrop(t.component.getHitSpan(t),a),i&amp;&amp;!l.isExternalSpanAllowed(r.eventToSpan(i),i,a.eventProps)&amp;&amp;(s(),i=null),i&amp;&amp;r.renderDrag(i)},hitOut:function(){i=null},hitDone:function(){o(),r.unrenderDrag()},interactionEnd:function(e){i&amp;&amp;r.view.reportExternalDrop(a,i,t,e,n),r.isDraggingExternal=!1,r.externalDragListener=null}});u.startDrag(e)},computeExternalDrop:function(t,e){var n=this.view.calendar,i={start:n.applyTimezone(t.start),end:null};return e.startTime&amp;&amp;!i.start.hasTime()&amp;&amp;i.start.time(e.startTime),e.duration&amp;&amp;(i.end=i.start.clone().add(e.duration)),i},renderDrag:function(t,e){},unrenderDrag:function(){},buildSegResizeListener:function(t,e){var n,i,r=this,l=this.view,a=l.calendar,u=t.el,d=t.event,c=a.getEventEnd(d),h=this.segResizeListener=new fe(this,{scroll:l.opt("dragScroll"),subjectEl:u,interactionStart:function(){n=!1},dragStart:function(e){n=!0,r.handleSegMouseout(t,e),r.segResizeStart(t,e)},hitOver:function(n,o,u){var h=r.getHitSpan(u),f=r.getHitSpan(n);i=e?r.computeEventStartResize(h,f,d):r.computeEventEndResize(h,f,d),i&amp;&amp;(a.isEventSpanAllowed(r.eventToSpan(i),d)?i.start.isSame(d.start.clone().stripZone())&amp;&amp;i.end.isSame(c.clone().stripZone())&amp;&amp;(i=null):(s(),i=null)),i&amp;&amp;(l.hideEvent(d),r.renderEventResize(i,t))},hitOut:function(){i=null},hitDone:function(){r.unrenderEventResize(),l.showEvent(d),o()},interactionEnd:function(e){n&amp;&amp;r.segResizeStop(t,e),i&amp;&amp;l.reportEventResize(d,i,this.largeUnit,u,e),r.segResizeListener=null}});return h},segResizeStart:function(t,e){this.isResizingSeg=!0,this.view.trigger("eventResizeStart",t.el[0],t.event,e,{})},segResizeStop:function(t,e){this.isResizingSeg=!1,this.view.trigger("eventResizeStop",t.el[0],t.event,e,{})},computeEventStartResize:function(t,e,n){return this.computeEventResize("start",t,e,n)},computeEventEndResize:function(t,e,n){return this.computeEventResize("end",t,e,n)},computeEventResize:function(t,e,n,i){var r,s,o=this.view.calendar,l=this.diffDates(n[t],e[t]);return r={start:i.start.clone(),end:o.getEventEnd(i),allDay:i.allDay},r.allDay&amp;&amp;W(l)&amp;&amp;(r.allDay=!1,o.normalizeEventTimes(r)),r[t].add(l),r.start.isBefore(r.end)||(s=this.minResizeDuration||(i.allDay?o.defaultAllDayEventDuration:o.defaultTimedEventDuration),"start"==t?r.start=r.end.clone().subtract(s):r.end=r.start.clone().add(s)),r},renderEventResize:function(t,e){},unrenderEventResize:function(){},getEventTimeText:function(t,e,n){return null==e&amp;&amp;(e=this.eventTimeFormat),null==n&amp;&amp;(n=this.displayEventEnd),this.displayEventTime&amp;&amp;t.start.hasTime()?n&amp;&amp;t.end?this.view.formatRange(t,e):t.start.format(e):""},getSegClasses:function(t,e,n){var i=this.view,r=["fc-event",t.isStart?"fc-start":"fc-not-start",t.isEnd?"fc-end":"fc-not-end"].concat(this.getSegCustomClasses(t));return e&amp;&amp;r.push("fc-draggable"),n&amp;&amp;r.push("fc-resizable"),i.isEventSelected(t.event)&amp;&amp;r.push("fc-selected"),r},getSegCustomClasses:function(t){var e=t.event;return[].concat(e.className,e.source?e.source.className:[])},getSegSkinCss:function(t){return{"background-color":this.getSegBackgroundColor(t),"border-color":this.getSegBorderColor(t),color:this.getSegTextColor(t)}},getSegBackgroundColor:function(t){return t.event.backgroundColor||t.event.color||this.getSegDefaultBackgroundColor(t)},getSegDefaultBackgroundColor:function(t){var e=t.event.source||{};return e.backgroundColor||e.color||this.view.opt("eventBackgroundColor")||this.view.opt("eventColor")},getSegBorderColor:function(t){return t.event.borderColor||t.event.color||this.getSegDefaultBorderColor(t)},getSegDefaultBorderColor:function(t){var e=t.event.source||{};return e.borderColor||e.color||this.view.opt("eventBorderColor")||this.view.opt("eventColor")},getSegTextColor:function(t){return t.event.textColor||this.getSegDefaultTextColor(t)},getSegDefaultTextColor:function(t){var e=t.event.source||{};return e.textColor||this.view.opt("eventTextColor")},eventToSegs:function(t){return this.eventsToSegs([t])},eventToSpan:function(t){return this.eventToSpans(t)[0]},eventToSpans:function(t){var e=this.eventToRange(t);return this.eventRangeToSpans(e,t)},eventsToSegs:function(e,n){var i=this,r=It(e),s=[];return t.each(r,function(t,e){var r,o=[];for(r=0;r&lt;e.length;r++)o.push(i.eventToRange(e[r]));if(xt(e[0]))for(o=i.invertRanges(o),r=0;r&lt;o.length;r++)s.push.apply(s,i.eventRangeToSegs(o[r],e[0],n));else for(r=0;r&lt;o.length;r++)s.push.apply(s,i.eventRangeToSegs(o[r],e[r],n))}),s},eventToRange:function(t){var e=this.view.calendar,n=t.start.clone().stripZone(),i=(t.end?t.end.clone():e.getDefaultEventEnd(null!=t.allDay?t.allDay:!t.start.hasTime(),t.start)).stripZone();return e.localizeMoment(n),e.localizeMoment(i),{start:n,end:i}},eventRangeToSegs:function(t,e,n){var i,r=this.eventRangeToSpans(t,e),s=[];for(i=0;i&lt;r.length;i++)s.push.apply(s,this.eventSpanToSegs(r[i],e,n));return s},eventRangeToSpans:function(e,n){return[t.extend({},e)]},eventSpanToSegs:function(t,e,n){var i,r,s=n?n(t):this.spanToSegs(t);for(i=0;i&lt;s.length;i++)r=s[i],r.event=e,r.eventStartMS=+t.start,r.eventDurationMS=t.end-t.start;return s},invertRanges:function(t){var e,n,i=this.view,r=i.start.clone(),s=i.end.clone(),o=[],l=r;for(t.sort(kt),e=0;e&lt;t.length;e++)n=t[e],n.start&gt;l&amp;&amp;o.push({start:l,end:n.start}),l=n.end;return l&lt;s&amp;&amp;o.push({start:l,end:s}),o},sortEventSegs:function(t){t.sort(lt(this,"compareEventSegs"))},compareEventSegs:function(t,e){return t.eventStartMS-e.eventStartMS||e.eventDurationMS-t.eventDurationMS||e.event.allDay-t.event.allDay||L(t.event,e.event,this.view.eventOrderSpecs)}}),jt.pluckEventDateProps=Ht,jt.isBgEvent=Tt,jt.dataAttrPrefix="";var ve=jt.DayTableMixin={breakOnWeeks:!1,dayDates:null,dayIndices:null,daysPerRow:null,rowCnt:null,colCnt:null,colHeadFormat:null,updateDayTable:function(){for(var t,e,n,i=this.view,r=this.start.clone(),s=-1,o=[],l=[];r.isBefore(this.end);)i.isHiddenDay(r)?o.push(s+.5):(s++,o.push(s),l.push(r.clone())),r.add(1,"days");if(this.breakOnWeeks){for(e=l[0].day(),t=1;t&lt;l.length&amp;&amp;l[t].day()!=e;t++);n=Math.ceil(l.length/t)}else n=1,t=l.length;this.dayDates=l,this.dayIndices=o,this.daysPerRow=t,this.rowCnt=n,this.updateDayTableCols()},updateDayTableCols:function(){this.colCnt=this.computeColCnt(),this.colHeadFormat=this.view.opt("columnFormat")||this.computeColHeadFormat()},computeColCnt:function(){return this.daysPerRow},getCellDate:function(t,e){return this.dayDates[this.getCellDayIndex(t,e)].clone()},getCellRange:function(t,e){var n=this.getCellDate(t,e),i=n.clone().add(1,"days");return{start:n,end:i}},getCellDayIndex:function(t,e){return t*this.daysPerRow+this.getColDayIndex(e)},getColDayIndex:function(t){return this.isRTL?this.colCnt-1-t:t},getDateDayIndex:function(t){var e=this.dayIndices,n=t.diff(this.start,"days");return n&lt;0?e[0]-1:n&gt;=e.length?e[e.length-1]+1:e[n]},computeColHeadFormat:function(){return this.rowCnt&gt;1||this.colCnt&gt;10?"ddd":this.colCnt&gt;1?this.view.opt("dayOfMonthFormat"):"dddd"},sliceRangeByRow:function(t){var e,n,i,r,s,o=this.daysPerRow,l=this.view.computeDayRange(t),a=this.getDateDayIndex(l.start),u=this.getDateDayIndex(l.end.clone().subtract(1,"days")),d=[];for(e=0;e&lt;this.rowCnt;e++)n=e*o,i=n+o-1,r=Math.max(a,n),s=Math.min(u,i),r=Math.ceil(r),s=Math.floor(s),r&lt;=s&amp;&amp;d.push({row:e,firstRowDayIndex:r-n,lastRowDayIndex:s-n,isStart:r===a,isEnd:s===u});return d},sliceRangeByDay:function(t){var e,n,i,r,s,o,l=this.daysPerRow,a=this.view.computeDayRange(t),u=this.getDateDayIndex(a.start),d=this.getDateDayIndex(a.end.clone().subtract(1,"days")),c=[];for(e=0;e&lt;this.rowCnt;e++)for(n=e*l,i=n+l-1,r=n;r&lt;=i;r++)s=Math.max(u,r),o=Math.min(d,r),s=Math.ceil(s),o=Math.floor(o),s&lt;=o&amp;&amp;c.push({row:e,firstRowDayIndex:s-n,lastRowDayIndex:o-n,isStart:s===u,isEnd:o===d});return c;
},renderHeadHtml:function(){var t=this.view;return'&lt;div class="fc-row '+t.widgetHeaderClass+'"&gt;&lt;table&gt;&lt;thead&gt;'+this.renderHeadTrHtml()+"&lt;/thead&gt;&lt;/table&gt;&lt;/div&gt;"},renderHeadIntroHtml:function(){return this.renderIntroHtml()},renderHeadTrHtml:function(){return"&lt;tr&gt;"+(this.isRTL?"":this.renderHeadIntroHtml())+this.renderHeadDateCellsHtml()+(this.isRTL?this.renderHeadIntroHtml():"")+"&lt;/tr&gt;"},renderHeadDateCellsHtml:function(){var t,e,n=[];for(t=0;t&lt;this.colCnt;t++)e=this.getCellDate(0,t),n.push(this.renderHeadDateCellHtml(e));return n.join("")},renderHeadDateCellHtml:function(t,e,n){var i=this.view;return'&lt;th class="fc-day-header '+i.widgetHeaderClass+" fc-"+$t[t.day()]+'"'+(1===this.rowCnt?' data-date="'+t.format("YYYY-MM-DD")+'"':"")+(e&gt;1?' colspan="'+e+'"':"")+(n?" "+n:"")+"&gt;"+i.buildGotoAnchorHtml({date:t,forceOff:this.rowCnt&gt;1||1===this.colCnt},tt(t.format(this.colHeadFormat)))+"&lt;/th&gt;"},renderBgTrHtml:function(t){return"&lt;tr&gt;"+(this.isRTL?"":this.renderBgIntroHtml(t))+this.renderBgCellsHtml(t)+(this.isRTL?this.renderBgIntroHtml(t):"")+"&lt;/tr&gt;"},renderBgIntroHtml:function(t){return this.renderIntroHtml()},renderBgCellsHtml:function(t){var e,n,i=[];for(e=0;e&lt;this.colCnt;e++)n=this.getCellDate(t,e),i.push(this.renderBgCellHtml(n));return i.join("")},renderBgCellHtml:function(t,e){var n=this.view,i=this.getDayClasses(t);return i.unshift("fc-day",n.widgetContentClass),'&lt;td class="'+i.join(" ")+'" data-date="'+t.format("YYYY-MM-DD")+'"'+(e?" "+e:"")+"&gt;&lt;/td&gt;"},renderIntroHtml:function(){},bookendCells:function(t){var e=this.renderIntroHtml();e&amp;&amp;(this.isRTL?t.append(e):t.prepend(e))}},me=jt.DayGrid=pe.extend(ve,{numbersVisible:!1,bottomCoordPadding:0,rowEls:null,cellEls:null,helperEls:null,rowCoordCache:null,colCoordCache:null,renderDates:function(t){var e,n,i=this.view,r=this.rowCnt,s=this.colCnt,o="";for(e=0;e&lt;r;e++)o+=this.renderDayRowHtml(e,t);for(this.el.html(o),this.rowEls=this.el.find(".fc-row"),this.cellEls=this.el.find(".fc-day"),this.rowCoordCache=new ce({els:this.rowEls,isVertical:!0}),this.colCoordCache=new ce({els:this.cellEls.slice(0,this.colCnt),isHorizontal:!0}),e=0;e&lt;r;e++)for(n=0;n&lt;s;n++)i.trigger("dayRender",null,this.getCellDate(e,n),this.getCellEl(e,n))},unrenderDates:function(){this.removeSegPopover()},renderBusinessHours:function(){var t=this.buildBusinessHourSegs(!0);this.renderFill("businessHours",t,"bgevent")},unrenderBusinessHours:function(){this.unrenderFill("businessHours")},renderDayRowHtml:function(t,e){var n=this.view,i=["fc-row","fc-week",n.widgetContentClass];return e&amp;&amp;i.push("fc-rigid"),'&lt;div class="'+i.join(" ")+'"&gt;&lt;div class="fc-bg"&gt;&lt;table&gt;'+this.renderBgTrHtml(t)+'&lt;/table&gt;&lt;/div&gt;&lt;div class="fc-content-skeleton"&gt;&lt;table&gt;'+(this.numbersVisible?"&lt;thead&gt;"+this.renderNumberTrHtml(t)+"&lt;/thead&gt;":"")+"&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;"},renderNumberTrHtml:function(t){return"&lt;tr&gt;"+(this.isRTL?"":this.renderNumberIntroHtml(t))+this.renderNumberCellsHtml(t)+(this.isRTL?this.renderNumberIntroHtml(t):"")+"&lt;/tr&gt;"},renderNumberIntroHtml:function(t){return this.renderIntroHtml()},renderNumberCellsHtml:function(t){var e,n,i=[];for(e=0;e&lt;this.colCnt;e++)n=this.getCellDate(t,e),i.push(this.renderNumberCellHtml(n));return i.join("")},renderNumberCellHtml:function(t){var e,n,i="";return this.view.dayNumbersVisible||this.view.cellWeekNumbersVisible?(e=this.getDayClasses(t),e.unshift("fc-day-top"),this.view.cellWeekNumbersVisible&amp;&amp;(n="ISO"===t._locale._fullCalendar_weekCalc?1:t._locale.firstDayOfWeek()),i+='&lt;td class="'+e.join(" ")+'" data-date="'+t.format()+'"&gt;',this.view.cellWeekNumbersVisible&amp;&amp;t.day()==n&amp;&amp;(i+=this.view.buildGotoAnchorHtml({date:t,type:"week"},{class:"fc-week-number"},t.format("w"))),this.view.dayNumbersVisible&amp;&amp;(i+=this.view.buildGotoAnchorHtml(t,{class:"fc-day-number"},t.date())),i+="&lt;/td&gt;"):"&lt;td/&gt;"},computeEventTimeFormat:function(){return this.view.opt("extraSmallTimeFormat")},computeDisplayEventEnd:function(){return 1==this.colCnt},rangeUpdated:function(){this.updateDayTable()},spanToSegs:function(t){var e,n,i=this.sliceRangeByRow(t);for(e=0;e&lt;i.length;e++)n=i[e],this.isRTL?(n.leftCol=this.daysPerRow-1-n.lastRowDayIndex,n.rightCol=this.daysPerRow-1-n.firstRowDayIndex):(n.leftCol=n.firstRowDayIndex,n.rightCol=n.lastRowDayIndex);return i},prepareHits:function(){this.colCoordCache.build(),this.rowCoordCache.build(),this.rowCoordCache.bottoms[this.rowCnt-1]+=this.bottomCoordPadding},releaseHits:function(){this.colCoordCache.clear(),this.rowCoordCache.clear()},queryHit:function(t,e){if(this.colCoordCache.isLeftInBounds(t)&amp;&amp;this.rowCoordCache.isTopInBounds(e)){var n=this.colCoordCache.getHorizontalIndex(t),i=this.rowCoordCache.getVerticalIndex(e);if(null!=i&amp;&amp;null!=n)return this.getCellHit(i,n)}},getHitSpan:function(t){return this.getCellRange(t.row,t.col)},getHitEl:function(t){return this.getCellEl(t.row,t.col)},getCellHit:function(t,e){return{row:t,col:e,component:this,left:this.colCoordCache.getLeftOffset(e),right:this.colCoordCache.getRightOffset(e),top:this.rowCoordCache.getTopOffset(t),bottom:this.rowCoordCache.getBottomOffset(t)}},getCellEl:function(t,e){return this.cellEls.eq(t*this.colCnt+e)},renderDrag:function(t,e){if(this.renderHighlight(this.eventToSpan(t)),e&amp;&amp;e.component!==this)return this.renderEventLocationHelper(t,e)},unrenderDrag:function(){this.unrenderHighlight(),this.unrenderHelper()},renderEventResize:function(t,e){return this.renderHighlight(this.eventToSpan(t)),this.renderEventLocationHelper(t,e)},unrenderEventResize:function(){this.unrenderHighlight(),this.unrenderHelper()},renderHelper:function(e,n){var i,r=[],s=this.eventToSegs(e);return s=this.renderFgSegEls(s),i=this.renderSegRows(s),this.rowEls.each(function(e,s){var o,l=t(s),a=t('&lt;div class="fc-helper-skeleton"&gt;&lt;table/&gt;&lt;/div&gt;');o=n&amp;&amp;n.row===e?n.el.position().top:l.find(".fc-content-skeleton tbody").position().top,a.css("top",o).find("table").append(i[e].tbodyEl),l.append(a),r.push(a[0])}),this.helperEls=t(r)},unrenderHelper:function(){this.helperEls&amp;&amp;(this.helperEls.remove(),this.helperEls=null)},fillSegTag:"td",renderFill:function(e,n,i){var r,s,o,l=[];for(n=this.renderFillSegEls(e,n),r=0;r&lt;n.length;r++)s=n[r],o=this.renderFillRow(e,s,i),this.rowEls.eq(s.row).append(o),l.push(o[0]);return this.elsByFill[e]=t(l),n},renderFillRow:function(e,n,i){var r,s,o=this.colCnt,l=n.leftCol,a=n.rightCol+1;return i=i||e.toLowerCase(),r=t('&lt;div class="fc-'+i+'-skeleton"&gt;&lt;table&gt;&lt;tr/&gt;&lt;/table&gt;&lt;/div&gt;'),s=r.find("tr"),l&gt;0&amp;&amp;s.append('&lt;td colspan="'+l+'"/&gt;'),s.append(n.el.attr("colspan",a-l)),a&lt;o&amp;&amp;s.append('&lt;td colspan="'+(o-a)+'"/&gt;'),this.bookendCells(s),r}});me.mixin({rowStructs:null,unrenderEvents:function(){this.removeSegPopover(),pe.prototype.unrenderEvents.apply(this,arguments)},getEventSegs:function(){return pe.prototype.getEventSegs.call(this).concat(this.popoverSegs||[])},renderBgSegs:function(e){var n=t.grep(e,function(t){return t.event.allDay});return pe.prototype.renderBgSegs.call(this,n)},renderFgSegs:function(e){var n;return e=this.renderFgSegEls(e),n=this.rowStructs=this.renderSegRows(e),this.rowEls.each(function(e,i){t(i).find(".fc-content-skeleton &gt; table").append(n[e].tbodyEl)}),e},unrenderFgSegs:function(){for(var t,e=this.rowStructs||[];t=e.pop();)t.tbodyEl.remove();this.rowStructs=null},renderSegRows:function(t){var e,n,i=[];for(e=this.groupSegRows(t),n=0;n&lt;e.length;n++)i.push(this.renderSegRow(n,e[n]));return i},fgSegHtml:function(t,e){var n,i,r=this.view,s=t.event,o=r.isEventDraggable(s),l=!e&amp;&amp;s.allDay&amp;&amp;t.isStart&amp;&amp;r.isEventResizableFromStart(s),a=!e&amp;&amp;s.allDay&amp;&amp;t.isEnd&amp;&amp;r.isEventResizableFromEnd(s),u=this.getSegClasses(t,o,l||a),d=nt(this.getSegSkinCss(t)),c="";return u.unshift("fc-day-grid-event","fc-h-event"),t.isStart&amp;&amp;(n=this.getEventTimeText(s),n&amp;&amp;(c='&lt;span class="fc-time"&gt;'+tt(n)+"&lt;/span&gt;")),i='&lt;span class="fc-title"&gt;'+(tt(s.title||"")||"&amp;nbsp;")+"&lt;/span&gt;",'&lt;a class="'+u.join(" ")+'"'+(s.url?' href="'+tt(s.url)+'"':"")+(d?' style="'+d+'"':"")+'&gt;&lt;div class="fc-content"&gt;'+(this.isRTL?i+" "+c:c+" "+i)+"&lt;/div&gt;"+(l?'&lt;div class="fc-resizer fc-start-resizer" /&gt;':"")+(a?'&lt;div class="fc-resizer fc-end-resizer" /&gt;':"")+"&lt;/a&gt;"},renderSegRow:function(e,n){function i(e){for(;o&lt;e;)d=(m[r-1]||[])[o],d?d.attr("rowspan",parseInt(d.attr("rowspan")||1,10)+1):(d=t("&lt;td/&gt;"),l.append(d)),v[r][o]=d,m[r][o]=d,o++}var r,s,o,l,a,u,d,c=this.colCnt,h=this.buildSegLevels(n),f=Math.max(1,h.length),g=t("&lt;tbody/&gt;"),p=[],v=[],m=[];for(r=0;r&lt;f;r++){if(s=h[r],o=0,l=t("&lt;tr/&gt;"),p.push([]),v.push([]),m.push([]),s)for(a=0;a&lt;s.length;a++){for(u=s[a],i(u.leftCol),d=t('&lt;td class="fc-event-container"/&gt;').append(u.el),u.leftCol!=u.rightCol?d.attr("colspan",u.rightCol-u.leftCol+1):m[r][o]=d;o&lt;=u.rightCol;)v[r][o]=d,p[r][o]=u,o++;l.append(d)}i(c),this.bookendCells(l),g.append(l)}return{row:e,tbodyEl:g,cellMatrix:v,segMatrix:p,segLevels:h,segs:n}},buildSegLevels:function(t){var e,n,i,r=[];for(this.sortEventSegs(t),e=0;e&lt;t.length;e++){for(n=t[e],i=0;i&lt;r.length&amp;&amp;Lt(n,r[i]);i++);n.level=i,(r[i]||(r[i]=[])).push(n)}for(i=0;i&lt;r.length;i++)r[i].sort(Bt);return r},groupSegRows:function(t){var e,n=[];for(e=0;e&lt;this.rowCnt;e++)n.push([]);for(e=0;e&lt;t.length;e++)n[t[e].row].push(t[e]);return n}}),me.mixin({segPopover:null,popoverSegs:null,removeSegPopover:function(){this.segPopover&amp;&amp;this.segPopover.hide()},limitRows:function(t){var e,n,i=this.rowStructs||[];for(e=0;e&lt;i.length;e++)this.unlimitRow(e),n=!!t&amp;&amp;("number"==typeof t?t:this.computeRowLevelLimit(e)),n!==!1&amp;&amp;this.limitRow(e,n)},computeRowLevelLimit:function(e){function n(e,n){s=Math.max(s,t(n).outerHeight())}var i,r,s,o=this.rowEls.eq(e),l=o.height(),a=this.rowStructs[e].tbodyEl.children();for(i=0;i&lt;a.length;i++)if(r=a.eq(i).removeClass("fc-limited"),s=0,r.find("&gt; td &gt; :first-child").each(n),r.position().top+s&gt;l)return i;return!1},limitRow:function(e,n){function i(i){for(;D&lt;i;)u=S.getCellSegs(e,D,n),u.length&amp;&amp;(h=s[n-1][D],y=S.renderMoreLink(e,D,u),m=t("&lt;div/&gt;").append(y),h.append(m),E.push(m[0])),D++}var r,s,o,l,a,u,d,c,h,f,g,p,v,m,y,S=this,w=this.rowStructs[e],E=[],D=0;if(n&amp;&amp;n&lt;w.segLevels.length){for(r=w.segLevels[n-1],s=w.cellMatrix,o=w.tbodyEl.children().slice(n).addClass("fc-limited").get(),l=0;l&lt;r.length;l++){for(a=r[l],i(a.leftCol),c=[],d=0;D&lt;=a.rightCol;)u=this.getCellSegs(e,D,n),c.push(u),d+=u.length,D++;if(d){for(h=s[n-1][a.leftCol],f=h.attr("rowspan")||1,g=[],p=0;p&lt;c.length;p++)v=t('&lt;td class="fc-more-cell"/&gt;').attr("rowspan",f),u=c[p],y=this.renderMoreLink(e,a.leftCol+p,[a].concat(u)),m=t("&lt;div/&gt;").append(y),v.append(m),g.push(v[0]),E.push(v[0]);h.addClass("fc-limited").after(t(g)),o.push(h[0])}}i(this.colCnt),w.moreEls=t(E),w.limitedEls=t(o)}},unlimitRow:function(t){var e=this.rowStructs[t];e.moreEls&amp;&amp;(e.moreEls.remove(),e.moreEls=null),e.limitedEls&amp;&amp;(e.limitedEls.removeClass("fc-limited"),e.limitedEls=null)},renderMoreLink:function(e,n,i){var r=this,s=this.view;return t('&lt;a class="fc-more"/&gt;').text(this.getMoreLinkText(i.length)).on("click",function(o){var l=s.opt("eventLimitClick"),a=r.getCellDate(e,n),u=t(this),d=r.getCellEl(e,n),c=r.getCellSegs(e,n),h=r.resliceDaySegs(c,a),f=r.resliceDaySegs(i,a);"function"==typeof l&amp;&amp;(l=s.trigger("eventLimitClick",null,{date:a,dayEl:d,moreEl:u,segs:h,hiddenSegs:f},o)),"popover"===l?r.showSegPopover(e,n,u,h):"string"==typeof l&amp;&amp;s.calendar.zoomTo(a,l)})},showSegPopover:function(t,e,n,i){var r,s,o=this,l=this.view,a=n.parent();r=1==this.rowCnt?l.el:this.rowEls.eq(t),s={className:"fc-more-popover",content:this.renderSegPopoverContent(t,e,i),parentEl:this.view.el,top:r.offset().top,autoHide:!0,viewportConstrain:l.opt("popoverViewportConstrain"),hide:function(){o.segPopover.removeElement(),o.segPopover=null,o.popoverSegs=null}},this.isRTL?s.right=a.offset().left+a.outerWidth()+1:s.left=a.offset().left-1,this.segPopover=new de(s),this.segPopover.show(),this.bindSegHandlersToEl(this.segPopover.el)},renderSegPopoverContent:function(e,n,i){var r,s=this.view,o=s.opt("theme"),l=this.getCellDate(e,n).format(s.opt("dayPopoverFormat")),a=t('&lt;div class="fc-header '+s.widgetHeaderClass+'"&gt;&lt;span class="fc-close '+(o?"ui-icon ui-icon-closethick":"fc-icon fc-icon-x")+'"&gt;&lt;/span&gt;&lt;span class="fc-title"&gt;'+tt(l)+'&lt;/span&gt;&lt;div class="fc-clear"/&gt;&lt;/div&gt;&lt;div class="fc-body '+s.widgetContentClass+'"&gt;&lt;div class="fc-event-container"&gt;&lt;/div&gt;&lt;/div&gt;'),u=a.find(".fc-event-container");for(i=this.renderFgSegEls(i,!0),this.popoverSegs=i,r=0;r&lt;i.length;r++)this.prepareHits(),i[r].hit=this.getCellHit(e,n),this.releaseHits(),u.append(i[r].el);return a},resliceDaySegs:function(e,n){var i=t.map(e,function(t){return t.event}),r=n.clone(),s=r.clone().add(1,"days"),o={start:r,end:s};return e=this.eventsToSegs(i,function(t){var e=F(t,o);return e?[e]:[]}),this.sortEventSegs(e),e},getMoreLinkText:function(t){var e=this.view.opt("eventLimitText");return"function"==typeof e?e(t):"+"+t+" "+e},getCellSegs:function(t,e,n){for(var i,r=this.rowStructs[t].segMatrix,s=n||0,o=[];s&lt;r.length;)i=r[s][e],i&amp;&amp;o.push(i),s++;return o}});var ye=jt.TimeGrid=pe.extend(ve,{slotDuration:null,snapDuration:null,snapsPerSlot:null,minTime:null,maxTime:null,labelFormat:null,labelInterval:null,colEls:null,slatContainerEl:null,slatEls:null,nowIndicatorEls:null,colCoordCache:null,slatCoordCache:null,constructor:function(){pe.apply(this,arguments),this.processOptions()},renderDates:function(){this.el.html(this.renderHtml()),this.colEls=this.el.find(".fc-day"),this.slatContainerEl=this.el.find(".fc-slats"),this.slatEls=this.slatContainerEl.find("tr"),this.colCoordCache=new ce({els:this.colEls,isHorizontal:!0}),this.slatCoordCache=new ce({els:this.slatEls,isVertical:!0}),this.renderContentSkeleton()},renderHtml:function(){return'&lt;div class="fc-bg"&gt;&lt;table&gt;'+this.renderBgTrHtml(0)+'&lt;/table&gt;&lt;/div&gt;&lt;div class="fc-slats"&gt;&lt;table&gt;'+this.renderSlatRowHtml()+"&lt;/table&gt;&lt;/div&gt;"},renderSlatRowHtml:function(){for(var t,n,i,r=this.view,s=this.isRTL,o="",l=e.duration(+this.minTime);l&lt;this.maxTime;)t=this.start.clone().time(l),n=ot(_(l,this.labelInterval)),i='&lt;td class="fc-axis fc-time '+r.widgetContentClass+'" '+r.axisStyleAttr()+"&gt;"+(n?"&lt;span&gt;"+tt(t.format(this.labelFormat))+"&lt;/span&gt;":"")+"&lt;/td&gt;",o+='&lt;tr data-time="'+t.format("HH:mm:ss")+'"'+(n?"":' class="fc-minor"')+"&gt;"+(s?"":i)+'&lt;td class="'+r.widgetContentClass+'"/&gt;'+(s?i:"")+"&lt;/tr&gt;",l.add(this.slotDuration);return o},processOptions:function(){var n,i=this.view,r=i.opt("slotDuration"),s=i.opt("snapDuration");r=e.duration(r),s=s?e.duration(s):r,this.slotDuration=r,this.snapDuration=s,this.snapsPerSlot=r/s,this.minResizeDuration=s,this.minTime=e.duration(i.opt("minTime")),this.maxTime=e.duration(i.opt("maxTime")),n=i.opt("slotLabelFormat"),t.isArray(n)&amp;&amp;(n=n[n.length-1]),this.labelFormat=n||i.opt("smallTimeFormat"),n=i.opt("slotLabelInterval"),this.labelInterval=n?e.duration(n):this.computeLabelInterval(r)},computeLabelInterval:function(t){var n,i,r;for(n=Ne.length-1;n&gt;=0;n--)if(i=e.duration(Ne[n]),r=_(i,t),ot(r)&amp;&amp;r&gt;1)return i;return e.duration(t)},computeEventTimeFormat:function(){return this.view.opt("noMeridiemTimeFormat")},computeDisplayEventEnd:function(){return!0},prepareHits:function(){this.colCoordCache.build(),this.slatCoordCache.build()},releaseHits:function(){this.colCoordCache.clear()},queryHit:function(t,e){var n=this.snapsPerSlot,i=this.colCoordCache,r=this.slatCoordCache;if(i.isLeftInBounds(t)&amp;&amp;r.isTopInBounds(e)){var s=i.getHorizontalIndex(t),o=r.getVerticalIndex(e);if(null!=s&amp;&amp;null!=o){var l=r.getTopOffset(o),a=r.getHeight(o),u=(e-l)/a,d=Math.floor(u*n),c=o*n+d,h=l+d/n*a,f=l+(d+1)/n*a;return{col:s,snap:c,component:this,left:i.getLeftOffset(s),right:i.getRightOffset(s),top:h,bottom:f}}}},getHitSpan:function(t){var e,n=this.getCellDate(0,t.col),i=this.computeSnapTime(t.snap);return n.time(i),e=n.clone().add(this.snapDuration),{start:n,end:e}},getHitEl:function(t){return this.colEls.eq(t.col)},rangeUpdated:function(){this.updateDayTable()},computeSnapTime:function(t){return e.duration(this.minTime+this.snapDuration*t)},spanToSegs:function(t){var e,n=this.sliceRangeByTimes(t);for(e=0;e&lt;n.length;e++)this.isRTL?n[e].col=this.daysPerRow-1-n[e].dayIndex:n[e].col=n[e].dayIndex;return n},sliceRangeByTimes:function(t){var e,n,i,r,s=[];for(n=0;n&lt;this.daysPerRow;n++)i=this.dayDates[n].clone(),r={start:i.clone().time(this.minTime),end:i.clone().time(this.maxTime)},e=F(t,r),e&amp;&amp;(e.dayIndex=n,s.push(e));return s},updateSize:function(t){this.slatCoordCache.build(),t&amp;&amp;this.updateSegVerticals([].concat(this.fgSegs||[],this.bgSegs||[],this.businessSegs||[]))},getTotalSlatHeight:function(){return this.slatContainerEl.outerHeight()},computeDateTop:function(t,n){return this.computeTimeTop(e.duration(t-n.clone().stripTime()))},computeTimeTop:function(t){var e,n,i=this.slatEls.length,r=(t-this.minTime)/this.slotDuration;return r=Math.max(0,r),r=Math.min(i,r),e=Math.floor(r),e=Math.min(e,i-1),n=r-e,this.slatCoordCache.getTopPosition(e)+this.slatCoordCache.getHeight(e)*n},renderDrag:function(t,e){return e?this.renderEventLocationHelper(t,e):void this.renderHighlight(this.eventToSpan(t))},unrenderDrag:function(){this.unrenderHelper(),this.unrenderHighlight()},renderEventResize:function(t,e){return this.renderEventLocationHelper(t,e)},unrenderEventResize:function(){this.unrenderHelper()},renderHelper:function(t,e){return this.renderHelperSegs(this.eventToSegs(t),e)},unrenderHelper:function(){this.unrenderHelperSegs()},renderBusinessHours:function(){this.renderBusinessSegs(this.buildBusinessHourSegs())},unrenderBusinessHours:function(){this.unrenderBusinessSegs()},getNowIndicatorUnit:function(){return"minute"},renderNowIndicator:function(e){var n,i=this.spanToSegs({start:e,end:e}),r=this.computeDateTop(e,e),s=[];for(n=0;n&lt;i.length;n++)s.push(t('&lt;div class="fc-now-indicator fc-now-indicator-line"&gt;&lt;/div&gt;').css("top",r).appendTo(this.colContainerEls.eq(i[n].col))[0]);i.length&gt;0&amp;&amp;s.push(t('&lt;div class="fc-now-indicator fc-now-indicator-arrow"&gt;&lt;/div&gt;').css("top",r).appendTo(this.el.find(".fc-content-skeleton"))[0]),this.nowIndicatorEls=t(s)},unrenderNowIndicator:function(){this.nowIndicatorEls&amp;&amp;(this.nowIndicatorEls.remove(),this.nowIndicatorEls=null)},renderSelection:function(t){this.view.opt("selectHelper")?this.renderEventLocationHelper(t):this.renderHighlight(t)},unrenderSelection:function(){this.unrenderHelper(),this.unrenderHighlight()},renderHighlight:function(t){this.renderHighlightSegs(this.spanToSegs(t))},unrenderHighlight:function(){this.unrenderHighlightSegs()}});ye.mixin({colContainerEls:null,fgContainerEls:null,bgContainerEls:null,helperContainerEls:null,highlightContainerEls:null,businessContainerEls:null,fgSegs:null,bgSegs:null,helperSegs:null,highlightSegs:null,businessSegs:null,renderContentSkeleton:function(){var e,n,i="";for(e=0;e&lt;this.colCnt;e++)i+='&lt;td&gt;&lt;div class="fc-content-col"&gt;&lt;div class="fc-event-container fc-helper-container"&gt;&lt;/div&gt;&lt;div class="fc-event-container"&gt;&lt;/div&gt;&lt;div class="fc-highlight-container"&gt;&lt;/div&gt;&lt;div class="fc-bgevent-container"&gt;&lt;/div&gt;&lt;div class="fc-business-container"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;';n=t('&lt;div class="fc-content-skeleton"&gt;&lt;table&gt;&lt;tr&gt;'+i+"&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;"),this.colContainerEls=n.find(".fc-content-col"),this.helperContainerEls=n.find(".fc-helper-container"),this.fgContainerEls=n.find(".fc-event-container:not(.fc-helper-container)"),this.bgContainerEls=n.find(".fc-bgevent-container"),this.highlightContainerEls=n.find(".fc-highlight-container"),this.businessContainerEls=n.find(".fc-business-container"),this.bookendCells(n.find("tr")),this.el.append(n)},renderFgSegs:function(t){return t=this.renderFgSegsIntoContainers(t,this.fgContainerEls),this.fgSegs=t,t},unrenderFgSegs:function(){this.unrenderNamedSegs("fgSegs")},renderHelperSegs:function(e,n){var i,r,s,o=[];for(e=this.renderFgSegsIntoContainers(e,this.helperContainerEls),i=0;i&lt;e.length;i++)r=e[i],n&amp;&amp;n.col===r.col&amp;&amp;(s=n.el,r.el.css({left:s.css("left"),right:s.css("right"),"margin-left":s.css("margin-left"),"margin-right":s.css("margin-right")})),o.push(r.el[0]);return this.helperSegs=e,t(o)},unrenderHelperSegs:function(){this.unrenderNamedSegs("helperSegs")},renderBgSegs:function(t){return t=this.renderFillSegEls("bgEvent",t),this.updateSegVerticals(t),this.attachSegsByCol(this.groupSegsByCol(t),this.bgContainerEls),this.bgSegs=t,t},unrenderBgSegs:function(){this.unrenderNamedSegs("bgSegs")},renderHighlightSegs:function(t){t=this.renderFillSegEls("highlight",t),this.updateSegVerticals(t),this.attachSegsByCol(this.groupSegsByCol(t),this.highlightContainerEls),this.highlightSegs=t},unrenderHighlightSegs:function(){this.unrenderNamedSegs("highlightSegs")},renderBusinessSegs:function(t){t=this.renderFillSegEls("businessHours",t),this.updateSegVerticals(t),this.attachSegsByCol(this.groupSegsByCol(t),this.businessContainerEls),this.businessSegs=t},unrenderBusinessSegs:function(){this.unrenderNamedSegs("businessSegs")},groupSegsByCol:function(t){var e,n=[];for(e=0;e&lt;this.colCnt;e++)n.push([]);for(e=0;e&lt;t.length;e++)n[t[e].col].push(t[e]);return n},attachSegsByCol:function(t,e){var n,i,r;for(n=0;n&lt;this.colCnt;n++)for(i=t[n],r=0;r&lt;i.length;r++)e.eq(n).append(i[r].el)},unrenderNamedSegs:function(t){var e,n=this[t];if(n){for(e=0;e&lt;n.length;e++)n[e].el.remove();this[t]=null}},renderFgSegsIntoContainers:function(t,e){var n,i;for(t=this.renderFgSegEls(t),n=this.groupSegsByCol(t),i=0;i&lt;this.colCnt;i++)this.updateFgSegCoords(n[i]);return this.attachSegsByCol(n,e),t},fgSegHtml:function(t,e){var n,i,r,s=this.view,o=t.event,l=s.isEventDraggable(o),a=!e&amp;&amp;t.isStart&amp;&amp;s.isEventResizableFromStart(o),u=!e&amp;&amp;t.isEnd&amp;&amp;s.isEventResizableFromEnd(o),d=this.getSegClasses(t,l,a||u),c=nt(this.getSegSkinCss(t));return d.unshift("fc-time-grid-event","fc-v-event"),s.isMultiDayEvent(o)?(t.isStart||t.isEnd)&amp;&amp;(n=this.getEventTimeText(t),i=this.getEventTimeText(t,"LT"),r=this.getEventTimeText(t,null,!1)):(n=this.getEventTimeText(o),i=this.getEventTimeText(o,"LT"),r=this.getEventTimeText(o,null,!1)),'&lt;a class="'+d.join(" ")+'"'+(o.url?' href="'+tt(o.url)+'"':"")+(c?' style="'+c+'"':"")+'&gt;&lt;div class="fc-content"&gt;'+(n?'&lt;div class="fc-time" data-start="'+tt(r)+'" data-full="'+tt(i)+'"&gt;&lt;span&gt;'+tt(n)+"&lt;/span&gt;&lt;/div&gt;":"")+(o.title?'&lt;div class="fc-title"&gt;'+tt(o.title)+"&lt;/div&gt;":"")+'&lt;/div&gt;&lt;div class="fc-bg"/&gt;'+(u?'&lt;div class="fc-resizer fc-end-resizer" /&gt;':"")+"&lt;/a&gt;"},updateSegVerticals:function(t){this.computeSegVerticals(t),this.assignSegVerticals(t)},computeSegVerticals:function(t){var e,n;for(e=0;e&lt;t.length;e++)n=t[e],n.top=this.computeDateTop(n.start,n.start),n.bottom=this.computeDateTop(n.end,n.start)},assignSegVerticals:function(t){var e,n;for(e=0;e&lt;t.length;e++)n=t[e],n.el.css(this.generateSegVerticalCss(n))},generateSegVerticalCss:function(t){return{top:t.top,bottom:-t.bottom}},updateFgSegCoords:function(t){this.computeSegVerticals(t),this.computeFgSegHorizontals(t),this.assignSegVerticals(t),this.assignFgSegHorizontals(t)},computeFgSegHorizontals:function(t){var e,n,i;if(this.sortEventSegs(t),e=zt(t),Ft(e),n=e[0]){for(i=0;i&lt;n.length;i++)Nt(n[i]);for(i=0;i&lt;n.length;i++)this.computeFgSegForwardBack(n[i],0,0)}},computeFgSegForwardBack:function(t,e,n){var i,r=t.forwardSegs;if(void 0===t.forwardCoord)for(r.length?(this.sortForwardSegs(r),this.computeFgSegForwardBack(r[0],e+1,n),t.forwardCoord=r[0].backwardCoord):t.forwardCoord=1,t.backwardCoord=t.forwardCoord-(t.forwardCoord-n)/(e+1),i=0;i&lt;r.length;i++)this.computeFgSegForwardBack(r[i],0,t.forwardCoord)},sortForwardSegs:function(t){t.sort(lt(this,"compareForwardSegs"))},compareForwardSegs:function(t,e){return e.forwardPressure-t.forwardPressure||(t.backwardCoord||0)-(e.backwardCoord||0)||this.compareEventSegs(t,e)},assignFgSegHorizontals:function(t){var e,n;for(e=0;e&lt;t.length;e++)n=t[e],n.el.css(this.generateFgSegHorizontalCss(n)),n.bottom-n.top&lt;30&amp;&amp;n.el.addClass("fc-short")},generateFgSegHorizontalCss:function(t){var e,n,i=this.view.opt("slotEventOverlap"),r=t.backwardCoord,s=t.forwardCoord,o=this.generateSegVerticalCss(t);return i&amp;&amp;(s=Math.min(1,r+2*(s-r))),this.isRTL?(e=1-s,n=r):(e=r,n=1-s),o.zIndex=t.level+1,o.left=100*e+"%",o.right=100*n+"%",i&amp;&amp;t.forwardPressure&amp;&amp;(o[this.isRTL?"marginLeft":"marginRight"]=20),o}});var Se=jt.View=wt.extend(le,ae,{type:null,name:null,title:null,calendar:null,options:null,el:null,displaying:null,isSkeletonRendered:!1,isEventsRendered:!1,start:null,end:null,intervalStart:null,intervalEnd:null,intervalDuration:null,intervalUnit:null,isRTL:!1,isSelected:!1,selectedEvent:null,eventOrderSpecs:null,widgetHeaderClass:null,widgetContentClass:null,highlightStateClass:null,nextDayThreshold:null,isHiddenDayHash:null,isNowIndicatorRendered:null,initialNowDate:null,initialNowQueriedMs:null,nowIndicatorTimeoutID:null,nowIndicatorIntervalID:null,constructor:function(t,n,i,r){this.calendar=t,this.type=this.name=n,this.options=i,this.intervalDuration=r||e.duration(1,"day"),this.nextDayThreshold=e.duration(this.opt("nextDayThreshold")),this.initThemingProps(),this.initHiddenDays(),this.isRTL=this.opt("isRTL"),this.eventOrderSpecs=M(this.opt("eventOrder")),this.initialize()},initialize:function(){},opt:function(t){return this.options[t]},trigger:function(t,e){var n=this.calendar;return n.trigger.apply(n,[t,e||this].concat(Array.prototype.slice.call(arguments,2),[this]))},setDate:function(t){this.setRange(this.computeRange(t))},setRange:function(e){t.extend(this,e),this.updateTitle()},computeRange:function(t){var e,n,i=O(this.intervalDuration),r=t.clone().startOf(i),s=r.clone().add(this.intervalDuration);return/year|month|week|day/.test(i)?(r.stripTime(),s.stripTime()):(r.hasTime()||(r=this.calendar.time(0)),s.hasTime()||(s=this.calendar.time(0))),e=r.clone(),e=this.skipHiddenDays(e),n=s.clone(),n=this.skipHiddenDays(n,-1,!0),{intervalUnit:i,intervalStart:r,intervalEnd:s,start:e,end:n}},computePrevDate:function(t){return this.massageCurrentDate(t.clone().startOf(this.intervalUnit).subtract(this.intervalDuration),-1)},computeNextDate:function(t){return this.massageCurrentDate(t.clone().startOf(this.intervalUnit).add(this.intervalDuration))},massageCurrentDate:function(t,e){return this.intervalDuration.as("days")&lt;=1&amp;&amp;this.isHiddenDay(t)&amp;&amp;(t=this.skipHiddenDays(t,e),t.startOf("day")),t},updateTitle:function(){this.title=this.computeTitle()},computeTitle:function(){return this.formatRange({start:this.calendar.applyTimezone(this.intervalStart),end:this.calendar.applyTimezone(this.intervalEnd)},this.opt("titleFormat")||this.computeTitleFormat(),this.opt("titleRangeSeparator"))},computeTitleFormat:function(){return"year"==this.intervalUnit?"YYYY":"month"==this.intervalUnit?this.opt("monthYearFormat"):this.intervalDuration.as("days")&gt;1?"ll":"LL"},formatRange:function(t,e,n){var i=t.end;return i.hasTime()||(i=i.clone().subtract(1)),pt(t.start,i,e,n,this.opt("isRTL"))},getAllDayHtml:function(){return this.opt("allDayHtml")||tt(this.opt("allDayText"))},buildGotoAnchorHtml:function(e,n,i){var r,s,o,l;return t.isPlainObject(e)?(r=e.date,s=e.type,o=e.forceOff):r=e,r=jt.moment(r),l={date:r.format("YYYY-MM-DD"),type:s||"day"},"string"==typeof n&amp;&amp;(i=n,n=null),n=n?" "+it(n):"",i=i||"",!o&amp;&amp;this.opt("navLinks")?"&lt;a"+n+' data-goto="'+tt(JSON.stringify(l))+'"&gt;'+i+"&lt;/a&gt;":"&lt;span"+n+"&gt;"+i+"&lt;/span&gt;"},setElement:function(t){this.el=t,this.bindGlobalHandlers()},removeElement:function(){this.clear(),this.isSkeletonRendered&amp;&amp;(this.unrenderSkeleton(),this.isSkeletonRendered=!1),this.unbindGlobalHandlers(),this.el.remove()},display:function(t,e){var n=this,i=null;return null!=e&amp;&amp;this.displaying&amp;&amp;(i=this.queryScroll()),this.calendar.freezeContentHeight(),ut(this.clear(),function(){return n.displaying=ut(n.displayView(t),function(){null!=e?n.setScroll(e):n.forceScroll(n.computeInitialScroll(i)),n.calendar.unfreezeContentHeight(),n.triggerRender()})})},clear:function(){var e=this,n=this.displaying;return n?ut(n,function(){return e.displaying=null,e.clearEvents(),e.clearView()}):t.when()},displayView:function(t){this.isSkeletonRendered||(this.renderSkeleton(),this.isSkeletonRendered=!0),t&amp;&amp;this.setDate(t),this.render&amp;&amp;this.render(),this.renderDates(),this.updateSize(),this.renderBusinessHours(),this.startNowIndicator()},clearView:function(){this.unselect(),this.stopNowIndicator(),this.triggerUnrender(),this.unrenderBusinessHours(),this.unrenderDates(),this.destroy&amp;&amp;this.destroy()},renderSkeleton:function(){},unrenderSkeleton:function(){},renderDates:function(){},unrenderDates:function(){},triggerRender:function(){this.trigger("viewRender",this,this,this.el)},triggerUnrender:function(){this.trigger("viewDestroy",this,this,this.el)},bindGlobalHandlers:function(){this.listenTo(t(document),"mousedown",this.handleDocumentMousedown),this.listenTo(t(document),"touchstart",this.processUnselect)},unbindGlobalHandlers:function(){this.stopListeningTo(t(document))},initThemingProps:function(){var t=this.opt("theme")?"ui":"fc";this.widgetHeaderClass=t+"-widget-header",this.widgetContentClass=t+"-widget-content",this.highlightStateClass=t+"-state-highlight"},renderBusinessHours:function(){},unrenderBusinessHours:function(){},startNowIndicator:function(){var t,n,i,r=this;this.opt("nowIndicator")&amp;&amp;(t=this.getNowIndicatorUnit(),t&amp;&amp;(n=lt(this,"updateNowIndicator"),this.initialNowDate=this.calendar.getNow(),this.initialNowQueriedMs=+new Date,this.renderNowIndicator(this.initialNowDate),this.isNowIndicatorRendered=!0,i=this.initialNowDate.clone().startOf(t).add(1,t)-this.initialNowDate,this.nowIndicatorTimeoutID=setTimeout(function(){r.nowIndicatorTimeoutID=null,n(),i=+e.duration(1,t),i=Math.max(100,i),r.nowIndicatorIntervalID=setInterval(n,i)},i)))},updateNowIndicator:function(){this.isNowIndicatorRendered&amp;&amp;(this.unrenderNowIndicator(),this.renderNowIndicator(this.initialNowDate.clone().add(new Date-this.initialNowQueriedMs)))},stopNowIndicator:function(){this.isNowIndicatorRendered&amp;&amp;(this.nowIndicatorTimeoutID&amp;&amp;(clearTimeout(this.nowIndicatorTimeoutID),this.nowIndicatorTimeoutID=null),this.nowIndicatorIntervalID&amp;&amp;(clearTimeout(this.nowIndicatorIntervalID),this.nowIndicatorIntervalID=null),this.unrenderNowIndicator(),this.isNowIndicatorRendered=!1)},getNowIndicatorUnit:function(){},renderNowIndicator:function(t){},unrenderNowIndicator:function(){},updateSize:function(t){var e;t&amp;&amp;(e=this.queryScroll()),this.updateHeight(t),this.updateWidth(t),this.updateNowIndicator(),t&amp;&amp;this.setScroll(e)},updateWidth:function(t){},updateHeight:function(t){var e=this.calendar;this.setHeight(e.getSuggestedViewHeight(),e.isHeightAuto())},setHeight:function(t,e){},computeInitialScroll:function(t){return 0},queryScroll:function(){},setScroll:function(t){},forceScroll:function(t){var e=this;this.setScroll(t),setTimeout(function(){e.setScroll(t)},0)},displayEvents:function(t){var e=this.queryScroll();this.clearEvents(),this.renderEvents(t),this.isEventsRendered=!0,this.setScroll(e),this.triggerEventRender()},clearEvents:function(){var t;this.isEventsRendered&amp;&amp;(t=this.queryScroll(),this.triggerEventUnrender(),this.destroyEvents&amp;&amp;this.destroyEvents(),this.unrenderEvents(),this.setScroll(t),this.isEventsRendered=!1)},renderEvents:function(t){},unrenderEvents:function(){},triggerEventRender:function(){this.renderedEventSegEach(function(t){this.trigger("eventAfterRender",t.event,t.event,t.el)}),this.trigger("eventAfterAllRender")},triggerEventUnrender:function(){this.renderedEventSegEach(function(t){this.trigger("eventDestroy",t.event,t.event,t.el)})},resolveEventEl:function(e,n){var i=this.trigger("eventRender",e,e,n);return i===!1?n=null:i&amp;&amp;i!==!0&amp;&amp;(n=t(i)),n},showEvent:function(t){this.renderedEventSegEach(function(t){t.el.css("visibility","")},t)},hideEvent:function(t){this.renderedEventSegEach(function(t){t.el.css("visibility","hidden")},t)},renderedEventSegEach:function(t,e){var n,i=this.getEventSegs();for(n=0;n&lt;i.length;n++)e&amp;&amp;i[n].event._id!==e._id||i[n].el&amp;&amp;t.call(this,i[n])},getEventSegs:function(){return[]},isEventDraggable:function(t){return this.isEventStartEditable(t)},isEventStartEditable:function(t){return J(t.startEditable,(t.source||{}).startEditable,this.opt("eventStartEditable"),this.isEventGenerallyEditable(t))},isEventGenerallyEditable:function(t){return J(t.editable,(t.source||{}).editable,this.opt("editable"))},reportEventDrop:function(t,e,n,i,r){
var s=this.calendar,o=s.mutateEvent(t,e,n),l=function(){o.undo(),s.reportEventChange()};this.triggerEventDrop(t,o.dateDelta,l,i,r),s.reportEventChange()},triggerEventDrop:function(t,e,n,i,r){this.trigger("eventDrop",i[0],t,e,n,r,{})},reportExternalDrop:function(e,n,i,r,s){var o,l,a=e.eventProps;a&amp;&amp;(o=t.extend({},a,n),l=this.calendar.renderEvent(o,e.stick)[0]),this.triggerExternalDrop(l,n,i,r,s)},triggerExternalDrop:function(t,e,n,i,r){this.trigger("drop",n[0],e.start,i,r),t&amp;&amp;this.trigger("eventReceive",null,t)},renderDrag:function(t,e){},unrenderDrag:function(){},isEventResizableFromStart:function(t){return this.opt("eventResizableFromStart")&amp;&amp;this.isEventResizable(t)},isEventResizableFromEnd:function(t){return this.isEventResizable(t)},isEventResizable:function(t){var e=t.source||{};return J(t.durationEditable,e.durationEditable,this.opt("eventDurationEditable"),t.editable,e.editable,this.opt("editable"))},reportEventResize:function(t,e,n,i,r){var s=this.calendar,o=s.mutateEvent(t,e,n),l=function(){o.undo(),s.reportEventChange()};this.triggerEventResize(t,o.durationDelta,l,i,r),s.reportEventChange()},triggerEventResize:function(t,e,n,i,r){this.trigger("eventResize",i[0],t,e,n,r,{})},select:function(t,e){this.unselect(e),this.renderSelection(t),this.reportSelection(t,e)},renderSelection:function(t){},reportSelection:function(t,e){this.isSelected=!0,this.triggerSelect(t,e)},triggerSelect:function(t,e){this.trigger("select",null,this.calendar.applyTimezone(t.start),this.calendar.applyTimezone(t.end),e)},unselect:function(t){this.isSelected&amp;&amp;(this.isSelected=!1,this.destroySelection&amp;&amp;this.destroySelection(),this.unrenderSelection(),this.trigger("unselect",null,t))},unrenderSelection:function(){},selectEvent:function(t){this.selectedEvent&amp;&amp;this.selectedEvent===t||(this.unselectEvent(),this.renderedEventSegEach(function(t){t.el.addClass("fc-selected")},t),this.selectedEvent=t)},unselectEvent:function(){this.selectedEvent&amp;&amp;(this.renderedEventSegEach(function(t){t.el.removeClass("fc-selected")},this.selectedEvent),this.selectedEvent=null)},isEventSelected:function(t){return this.selectedEvent&amp;&amp;this.selectedEvent._id===t._id},handleDocumentMousedown:function(t){S(t)&amp;&amp;this.processUnselect(t)},processUnselect:function(t){this.processRangeUnselect(t),this.processEventUnselect(t)},processRangeUnselect:function(e){var n;this.isSelected&amp;&amp;this.opt("unselectAuto")&amp;&amp;(n=this.opt("unselectCancel"),n&amp;&amp;t(e.target).closest(n).length||this.unselect(e))},processEventUnselect:function(e){this.selectedEvent&amp;&amp;(t(e.target).closest(".fc-selected").length||this.unselectEvent())},triggerDayClick:function(t,e,n){this.trigger("dayClick",e,this.calendar.applyTimezone(t.start),n)},initHiddenDays:function(){var e,n=this.opt("hiddenDays")||[],i=[],r=0;for(this.opt("weekends")===!1&amp;&amp;n.push(0,6),e=0;e&lt;7;e++)(i[e]=t.inArray(e,n)!==-1)||r++;if(!r)throw"invalid hiddenDays";this.isHiddenDayHash=i},isHiddenDay:function(t){return e.isMoment(t)&amp;&amp;(t=t.day()),this.isHiddenDayHash[t]},skipHiddenDays:function(t,e,n){var i=t.clone();for(e=e||1;this.isHiddenDayHash[(i.day()+(n?e:0)+7)%7];)i.add(e,"days");return i},computeDayRange:function(t){var e,n=t.start.clone().stripTime(),i=t.end,r=null;return i&amp;&amp;(r=i.clone().stripTime(),e=+i.time(),e&amp;&amp;e&gt;=this.nextDayThreshold&amp;&amp;r.add(1,"days")),(!i||r&lt;=n)&amp;&amp;(r=n.clone().add(1,"days")),{start:n,end:r}},isMultiDayEvent:function(t){var e=this.computeDayRange(t);return e.end.diff(e.start,"days")&gt;1}}),we=jt.Scroller=wt.extend({el:null,scrollEl:null,overflowX:null,overflowY:null,constructor:function(t){t=t||{},this.overflowX=t.overflowX||t.overflow||"auto",this.overflowY=t.overflowY||t.overflow||"auto"},render:function(){this.el=this.renderEl(),this.applyOverflow()},renderEl:function(){return this.scrollEl=t('&lt;div class="fc-scroller"&gt;&lt;/div&gt;')},clear:function(){this.setHeight("auto"),this.applyOverflow()},destroy:function(){this.el.remove()},applyOverflow:function(){this.scrollEl.css({"overflow-x":this.overflowX,"overflow-y":this.overflowY})},lockOverflow:function(t){var e=this.overflowX,n=this.overflowY;t=t||this.getScrollbarWidths(),"auto"===e&amp;&amp;(e=t.top||t.bottom||this.scrollEl[0].scrollWidth-1&gt;this.scrollEl[0].clientWidth?"scroll":"hidden"),"auto"===n&amp;&amp;(n=t.left||t.right||this.scrollEl[0].scrollHeight-1&gt;this.scrollEl[0].clientHeight?"scroll":"hidden"),this.scrollEl.css({"overflow-x":e,"overflow-y":n})},setHeight:function(t){this.scrollEl.height(t)},getScrollTop:function(){return this.scrollEl.scrollTop()},setScrollTop:function(t){this.scrollEl.scrollTop(t)},getClientWidth:function(){return this.scrollEl[0].clientWidth},getClientHeight:function(){return this.scrollEl[0].clientHeight},getScrollbarWidths:function(){return p(this.scrollEl)}}),Ee=jt.Calendar=wt.extend({dirDefaults:null,localeDefaults:null,overrides:null,dynamicOverrides:null,options:null,viewSpecCache:null,view:null,header:null,loadingLevel:0,constructor:Ot,initialize:function(){},populateOptionsHash:function(){var t,e,i,r;t=J(this.dynamicOverrides.locale,this.overrides.locale),e=De[t],e||(t=Ee.defaults.locale,e=De[t]||{}),i=J(this.dynamicOverrides.isRTL,this.overrides.isRTL,e.isRTL,Ee.defaults.isRTL),r=i?Ee.rtlDefaults:{},this.dirDefaults=r,this.localeDefaults=e,this.options=n([Ee.defaults,r,e,this.overrides,this.dynamicOverrides]),Vt(this.options)},getViewSpec:function(t){var e=this.viewSpecCache;return e[t]||(e[t]=this.buildViewSpec(t))},getUnitViewSpec:function(e){var n,i,r;if(t.inArray(e,Xt)!=-1)for(n=this.header.getViewsWithButtons(),t.each(jt.views,function(t){n.push(t)}),i=0;i&lt;n.length;i++)if(r=this.getViewSpec(n[i]),r&amp;&amp;r.singleUnit==e)return r},buildViewSpec:function(t){for(var i,r,s,o,l=this.overrides.views||{},a=[],u=[],d=[],c=t;c;)i=Ut[c],r=l[c],c=null,"function"==typeof i&amp;&amp;(i={class:i}),i&amp;&amp;(a.unshift(i),u.unshift(i.defaults||{}),s=s||i.duration,c=c||i.type),r&amp;&amp;(d.unshift(r),s=s||r.duration,c=c||r.type);return i=q(a),i.type=t,!!i.class&amp;&amp;(s&amp;&amp;(s=e.duration(s),s.valueOf()&amp;&amp;(i.duration=s,o=O(s),1===s.as(o)&amp;&amp;(i.singleUnit=o,d.unshift(l[o]||{})))),i.defaults=n(u),i.overrides=n(d),this.buildViewSpecOptions(i),this.buildViewSpecButtonText(i,t),i)},buildViewSpecOptions:function(t){t.options=n([Ee.defaults,t.defaults,this.dirDefaults,this.localeDefaults,this.overrides,t.overrides,this.dynamicOverrides]),Vt(t.options)},buildViewSpecButtonText:function(t,e){function n(n){var i=n.buttonText||{};return i[e]||(t.buttonTextKey?i[t.buttonTextKey]:null)||(t.singleUnit?i[t.singleUnit]:null)}t.buttonTextOverride=n(this.dynamicOverrides)||n(this.overrides)||t.overrides.buttonText,t.buttonTextDefault=n(this.localeDefaults)||n(this.dirDefaults)||t.defaults.buttonText||n(Ee.defaults)||(t.duration?this.humanizeDuration(t.duration):null)||e},instantiateView:function(t){var e=this.getViewSpec(t);return new e.class(this,t,e.options,e.duration)},isValidViewType:function(t){return Boolean(this.getViewSpec(t))},pushLoading:function(){this.loadingLevel++||this.trigger("loading",null,!0,this.view)},popLoading:function(){--this.loadingLevel||this.trigger("loading",null,!1,this.view)},buildSelectSpan:function(t,e){var n,i=this.moment(t).stripZone();return n=e?this.moment(e).stripZone():i.hasTime()?i.clone().add(this.defaultTimedEventDuration):i.clone().add(this.defaultAllDayEventDuration),{start:i,end:n}}});Ee.mixin(le),Ee.mixin({optionHandlers:null,bindOption:function(t,e){this.bindOptions([t],e)},bindOptions:function(t,e){var n,i={func:e,names:t};for(n=0;n&lt;t.length;n++)this.registerOptionHandlerObj(t[n],i);this.triggerOptionHandlerObj(i)},registerOptionHandlerObj:function(t,e){(this.optionHandlers[t]||(this.optionHandlers[t]=[])).push(e)},triggerOptionHandlers:function(t){var e,n=this.optionHandlers[t]||[];for(e=0;e&lt;n.length;e++)this.triggerOptionHandlerObj(n[e])},triggerOptionHandlerObj:function(t){var e,n=t.names,i=[];for(e=0;e&lt;n.length;e++)i.push(this.options[n[e]]);t.func.apply(this,i)}}),Ee.defaults={titleRangeSeparator:" – ",monthYearFormat:"MMMM YYYY",defaultTimedEventDuration:"02:00:00",defaultAllDayEventDuration:{days:1},forceEventDuration:!1,nextDayThreshold:"09:00:00",defaultView:"month",aspectRatio:1.35,header:{left:"title",center:"",right:"today prev,next"},weekends:!0,weekNumbers:!1,weekNumberTitle:"W",weekNumberCalculation:"local",scrollTime:"06:00:00",lazyFetching:!0,startParam:"start",endParam:"end",timezoneParam:"timezone",timezone:!1,isRTL:!1,buttonText:{prev:"prev",next:"next",prevYear:"prev year",nextYear:"next year",year:"year",today:"today",month:"month",week:"week",day:"day"},buttonIcons:{prev:"left-single-arrow",next:"right-single-arrow",prevYear:"left-double-arrow",nextYear:"right-double-arrow"},allDayText:"all-day",theme:!1,themeButtonIcons:{prev:"circle-triangle-w",next:"circle-triangle-e",prevYear:"seek-prev",nextYear:"seek-next"},dragOpacity:.75,dragRevertDuration:500,dragScroll:!0,unselectAuto:!0,dropAccept:"*",eventOrder:"title",eventLimit:!1,eventLimitText:"more",eventLimitClick:"popover",dayPopoverFormat:"LL",handleWindowResize:!0,windowResizeDelay:100,longPressDelay:1e3},Ee.englishDefaults={dayPopoverFormat:"dddd, MMMM D"},Ee.rtlDefaults={header:{left:"next,prev today",center:"",right:"title"},buttonIcons:{prev:"right-single-arrow",next:"left-single-arrow",prevYear:"right-double-arrow",nextYear:"left-double-arrow"},themeButtonIcons:{prev:"circle-triangle-e",next:"circle-triangle-w",nextYear:"seek-prev",prevYear:"seek-next"}};var De=jt.locales={};jt.datepickerLocale=function(e,n,i){var r=De[e]||(De[e]={});r.isRTL=i.isRTL,r.weekNumberTitle=i.weekHeader,t.each(be,function(t,e){r[t]=e(i)}),t.datepicker&amp;&amp;(t.datepicker.regional[n]=t.datepicker.regional[e]=i,t.datepicker.regional.en=t.datepicker.regional[""],t.datepicker.setDefaults(i))},jt.locale=function(e,i){var r,s;r=De[e]||(De[e]={}),i&amp;&amp;(r=De[e]=n([r,i])),s=Pt(e),t.each(Ce,function(t,e){null==r[t]&amp;&amp;(r[t]=e(s,r))}),Ee.defaults.locale=e};var be={buttonText:function(t){return{prev:et(t.prevText),next:et(t.nextText),today:et(t.currentText)}},monthYearFormat:function(t){return t.showMonthAfterYear?"YYYY["+t.yearSuffix+"] MMMM":"MMMM YYYY["+t.yearSuffix+"]"}},Ce={dayOfMonthFormat:function(t,e){var n=t.longDateFormat("l");return n=n.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g,""),e.isRTL?n+=" ddd":n="ddd "+n,n},mediumTimeFormat:function(t){return t.longDateFormat("LT").replace(/\s*a$/i,"a")},smallTimeFormat:function(t){return t.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"a")},extraSmallTimeFormat:function(t){return t.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"t")},hourFormat:function(t){return t.longDateFormat("LT").replace(":mm","").replace(/(\Wmm)$/,"").replace(/\s*a$/i,"a")},noMeridiemTimeFormat:function(t){return t.longDateFormat("LT").replace(/\s*a$/i,"")}},He={smallDayDateFormat:function(t){return t.isRTL?"D dd":"dd D"},weekFormat:function(t){return t.isRTL?"w[ "+t.weekNumberTitle+"]":"["+t.weekNumberTitle+" ]w"},smallWeekFormat:function(t){return t.isRTL?"w["+t.weekNumberTitle+"]":"["+t.weekNumberTitle+"]w"}};jt.locale("en",Ee.englishDefaults),jt.sourceNormalizers=[],jt.sourceFetchers=[];var Te={dataType:"json",cache:!1},xe=1;Ee.prototype.normalizeEvent=function(t){},Ee.prototype.spanContainsSpan=function(t,e){var n=t.start.clone().stripZone(),i=this.getEventEnd(t).stripZone();return e.start&gt;=n&amp;&amp;e.end&lt;=i},Ee.prototype.getPeerEvents=function(t,e){var n,i,r=this.getEventCache(),s=[];for(n=0;n&lt;r.length;n++)i=r[n],e&amp;&amp;e._id===i._id||s.push(i);return s},Ee.prototype.isEventSpanAllowed=function(t,e){var n=e.source||{},i=J(e.constraint,n.constraint,this.options.eventConstraint),r=J(e.overlap,n.overlap,this.options.eventOverlap);return this.isSpanAllowed(t,i,r,e)&amp;&amp;(!this.options.eventAllow||this.options.eventAllow(t,e)!==!1)},Ee.prototype.isExternalSpanAllowed=function(e,n,i){var r,s;return i&amp;&amp;(r=t.extend({},i,n),s=this.expandEvent(this.buildEventFromInput(r))[0]),s?this.isEventSpanAllowed(e,s):this.isSelectionSpanAllowed(e)},Ee.prototype.isSelectionSpanAllowed=function(t){return this.isSpanAllowed(t,this.options.selectConstraint,this.options.selectOverlap)&amp;&amp;(!this.options.selectAllow||this.options.selectAllow(t)!==!1)},Ee.prototype.isSpanAllowed=function(t,e,n,i){var r,s,o,l,a,u;if(null!=e&amp;&amp;(r=this.constraintToEvents(e))){for(s=!1,l=0;l&lt;r.length;l++)if(this.spanContainsSpan(r[l],t)){s=!0;break}if(!s)return!1}for(o=this.getPeerEvents(t,i),l=0;l&lt;o.length;l++)if(a=o[l],this.eventIntersectsRange(a,t)){if(n===!1)return!1;if("function"==typeof n&amp;&amp;!n(a,i))return!1;if(i){if(u=J(a.overlap,(a.source||{}).overlap),u===!1)return!1;if("function"==typeof u&amp;&amp;!u(i,a))return!1}}return!0},Ee.prototype.constraintToEvents=function(t){return"businessHours"===t?this.getCurrentBusinessHourEvents():"object"==typeof t?null!=t.start?this.expandEvent(this.buildEventFromInput(t)):null:this.clientEvents(t)},Ee.prototype.eventIntersectsRange=function(t,e){var n=t.start.clone().stripZone(),i=this.getEventEnd(t).stripZone();return e.start&lt;i&amp;&amp;e.end&gt;n};var Re={id:"_fcBusinessHours",start:"09:00",end:"17:00",dow:[1,2,3,4,5],rendering:"inverse-background"};Ee.prototype.getCurrentBusinessHourEvents=function(t){return this.computeBusinessHourEvents(t,this.options.businessHours)},Ee.prototype.computeBusinessHourEvents=function(e,n){return n===!0?this.expandBusinessHourEvents(e,[{}]):t.isPlainObject(n)?this.expandBusinessHourEvents(e,[n]):t.isArray(n)?this.expandBusinessHourEvents(e,n,!0):[]},Ee.prototype.expandBusinessHourEvents=function(e,n,i){var r,s,o=this.getView(),l=[];for(r=0;r&lt;n.length;r++)s=n[r],i&amp;&amp;!s.dow||(s=t.extend({},Re,s),e&amp;&amp;(s.start=null,s.end=null),l.push.apply(l,this.expandEvent(this.buildEventFromInput(s),o.start,o.end)));return l};var Ie=jt.BasicView=Se.extend({scroller:null,dayGridClass:me,dayGrid:null,dayNumbersVisible:!1,colWeekNumbersVisible:!1,cellWeekNumbersVisible:!1,weekNumberWidth:null,headContainerEl:null,headRowEl:null,initialize:function(){this.dayGrid=this.instantiateDayGrid(),this.scroller=new we({overflowX:"hidden",overflowY:"auto"})},instantiateDayGrid:function(){var t=this.dayGridClass.extend(ke);return new t(this)},setRange:function(t){Se.prototype.setRange.call(this,t),this.dayGrid.breakOnWeeks=/year|month|week/.test(this.intervalUnit),this.dayGrid.setRange(t)},computeRange:function(t){var e=Se.prototype.computeRange.call(this,t);return/year|month/.test(e.intervalUnit)&amp;&amp;(e.start.startOf("week"),e.start=this.skipHiddenDays(e.start),e.end.weekday()&amp;&amp;(e.end.add(1,"week").startOf("week"),e.end=this.skipHiddenDays(e.end,-1,!0))),e},renderDates:function(){this.dayNumbersVisible=this.dayGrid.rowCnt&gt;1,this.opt("weekNumbers")&amp;&amp;(this.opt("weekNumbersWithinDays")?(this.cellWeekNumbersVisible=!0,this.colWeekNumbersVisible=!1):(this.cellWeekNumbersVisible=!1,this.colWeekNumbersVisible=!0)),this.dayGrid.numbersVisible=this.dayNumbersVisible||this.cellWeekNumbersVisible||this.colWeekNumbersVisible,this.el.addClass("fc-basic-view").html(this.renderSkeletonHtml()),this.renderHead(),this.scroller.render();var e=this.scroller.el.addClass("fc-day-grid-container"),n=t('&lt;div class="fc-day-grid" /&gt;').appendTo(e);this.el.find(".fc-body &gt; tr &gt; td").append(e),this.dayGrid.setElement(n),this.dayGrid.renderDates(this.hasRigidRows())},renderHead:function(){this.headContainerEl=this.el.find(".fc-head-container").html(this.dayGrid.renderHeadHtml()),this.headRowEl=this.headContainerEl.find(".fc-row")},unrenderDates:function(){this.dayGrid.unrenderDates(),this.dayGrid.removeElement(),this.scroller.destroy()},renderBusinessHours:function(){this.dayGrid.renderBusinessHours()},unrenderBusinessHours:function(){this.dayGrid.unrenderBusinessHours()},renderSkeletonHtml:function(){return'&lt;table&gt;&lt;thead class="fc-head"&gt;&lt;tr&gt;&lt;td class="fc-head-container '+this.widgetHeaderClass+'"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody class="fc-body"&gt;&lt;tr&gt;&lt;td class="'+this.widgetContentClass+'"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;'},weekNumberStyleAttr:function(){return null!==this.weekNumberWidth?'style="width:'+this.weekNumberWidth+'px"':""},hasRigidRows:function(){var t=this.opt("eventLimit");return t&amp;&amp;"number"!=typeof t},updateWidth:function(){this.colWeekNumbersVisible&amp;&amp;(this.weekNumberWidth=u(this.el.find(".fc-week-number")))},setHeight:function(t,e){var n,s,o=this.opt("eventLimit");this.scroller.clear(),r(this.headRowEl),this.dayGrid.removeSegPopover(),o&amp;&amp;"number"==typeof o&amp;&amp;this.dayGrid.limitRows(o),n=this.computeScrollerHeight(t),this.setGridHeight(n,e),o&amp;&amp;"number"!=typeof o&amp;&amp;this.dayGrid.limitRows(o),e||(this.scroller.setHeight(n),s=this.scroller.getScrollbarWidths(),(s.left||s.right)&amp;&amp;(i(this.headRowEl,s),n=this.computeScrollerHeight(t),this.scroller.setHeight(n)),this.scroller.lockOverflow(s))},computeScrollerHeight:function(t){return t-d(this.el,this.scroller.el)},setGridHeight:function(t,e){e?a(this.dayGrid.rowEls):l(this.dayGrid.rowEls,t,!0)},queryScroll:function(){return this.scroller.getScrollTop()},setScroll:function(t){this.scroller.setScrollTop(t)},prepareHits:function(){this.dayGrid.prepareHits()},releaseHits:function(){this.dayGrid.releaseHits()},queryHit:function(t,e){return this.dayGrid.queryHit(t,e)},getHitSpan:function(t){return this.dayGrid.getHitSpan(t)},getHitEl:function(t){return this.dayGrid.getHitEl(t)},renderEvents:function(t){this.dayGrid.renderEvents(t),this.updateHeight()},getEventSegs:function(){return this.dayGrid.getEventSegs()},unrenderEvents:function(){this.dayGrid.unrenderEvents()},renderDrag:function(t,e){return this.dayGrid.renderDrag(t,e)},unrenderDrag:function(){this.dayGrid.unrenderDrag()},renderSelection:function(t){this.dayGrid.renderSelection(t)},unrenderSelection:function(){this.dayGrid.unrenderSelection()}}),ke={renderHeadIntroHtml:function(){var t=this.view;return t.colWeekNumbersVisible?'&lt;th class="fc-week-number '+t.widgetHeaderClass+'" '+t.weekNumberStyleAttr()+"&gt;&lt;span&gt;"+tt(t.opt("weekNumberTitle"))+"&lt;/span&gt;&lt;/th&gt;":""},renderNumberIntroHtml:function(t){var e=this.view,n=this.getCellDate(t,0);return e.colWeekNumbersVisible?'&lt;td class="fc-week-number" '+e.weekNumberStyleAttr()+"&gt;"+e.buildGotoAnchorHtml({date:n,type:"week",forceOff:1===this.colCnt},n.format("w"))+"&lt;/td&gt;":""},renderBgIntroHtml:function(){var t=this.view;return t.colWeekNumbersVisible?'&lt;td class="fc-week-number '+t.widgetContentClass+'" '+t.weekNumberStyleAttr()+"&gt;&lt;/td&gt;":""},renderIntroHtml:function(){var t=this.view;return t.colWeekNumbersVisible?'&lt;td class="fc-week-number" '+t.weekNumberStyleAttr()+"&gt;&lt;/td&gt;":""}},Me=jt.MonthView=Ie.extend({computeRange:function(t){var e,n=Ie.prototype.computeRange.call(this,t);return this.isFixedWeeks()&amp;&amp;(e=Math.ceil(n.end.diff(n.start,"weeks",!0)),n.end.add(6-e,"weeks")),n},setGridHeight:function(t,e){e&amp;&amp;(t*=this.rowCnt/6),l(this.dayGrid.rowEls,t,!e)},isFixedWeeks:function(){return this.opt("fixedWeekCount")}});Ut.basic={class:Ie},Ut.basicDay={type:"basic",duration:{days:1}},Ut.basicWeek={type:"basic",duration:{weeks:1}},Ut.month={class:Me,duration:{months:1},defaults:{fixedWeekCount:!0}};var Le=jt.AgendaView=Se.extend({scroller:null,timeGridClass:ye,timeGrid:null,dayGridClass:me,dayGrid:null,axisWidth:null,headContainerEl:null,noScrollRowEls:null,bottomRuleEl:null,initialize:function(){this.timeGrid=this.instantiateTimeGrid(),this.opt("allDaySlot")&amp;&amp;(this.dayGrid=this.instantiateDayGrid()),this.scroller=new we({overflowX:"hidden",overflowY:"auto"})},instantiateTimeGrid:function(){var t=this.timeGridClass.extend(Be);return new t(this)},instantiateDayGrid:function(){var t=this.dayGridClass.extend(ze);return new t(this)},setRange:function(t){Se.prototype.setRange.call(this,t),this.timeGrid.setRange(t),this.dayGrid&amp;&amp;this.dayGrid.setRange(t)},renderDates:function(){this.el.addClass("fc-agenda-view").html(this.renderSkeletonHtml()),this.renderHead(),this.scroller.render();var e=this.scroller.el.addClass("fc-time-grid-container"),n=t('&lt;div class="fc-time-grid" /&gt;').appendTo(e);this.el.find(".fc-body &gt; tr &gt; td").append(e),this.timeGrid.setElement(n),this.timeGrid.renderDates(),this.bottomRuleEl=t('&lt;hr class="fc-divider '+this.widgetHeaderClass+'"/&gt;').appendTo(this.timeGrid.el),this.dayGrid&amp;&amp;(this.dayGrid.setElement(this.el.find(".fc-day-grid")),this.dayGrid.renderDates(),this.dayGrid.bottomCoordPadding=this.dayGrid.el.next("hr").outerHeight()),this.noScrollRowEls=this.el.find(".fc-row:not(.fc-scroller *)")},renderHead:function(){this.headContainerEl=this.el.find(".fc-head-container").html(this.timeGrid.renderHeadHtml())},unrenderDates:function(){this.timeGrid.unrenderDates(),this.timeGrid.removeElement(),this.dayGrid&amp;&amp;(this.dayGrid.unrenderDates(),this.dayGrid.removeElement()),this.scroller.destroy()},renderSkeletonHtml:function(){return'&lt;table&gt;&lt;thead class="fc-head"&gt;&lt;tr&gt;&lt;td class="fc-head-container '+this.widgetHeaderClass+'"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody class="fc-body"&gt;&lt;tr&gt;&lt;td class="'+this.widgetContentClass+'"&gt;'+(this.dayGrid?'&lt;div class="fc-day-grid"/&gt;&lt;hr class="fc-divider '+this.widgetHeaderClass+'"/&gt;':"")+"&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"},axisStyleAttr:function(){return null!==this.axisWidth?'style="width:'+this.axisWidth+'px"':""},renderBusinessHours:function(){this.timeGrid.renderBusinessHours(),this.dayGrid&amp;&amp;this.dayGrid.renderBusinessHours()},unrenderBusinessHours:function(){this.timeGrid.unrenderBusinessHours(),this.dayGrid&amp;&amp;this.dayGrid.unrenderBusinessHours()},getNowIndicatorUnit:function(){return this.timeGrid.getNowIndicatorUnit()},renderNowIndicator:function(t){this.timeGrid.renderNowIndicator(t)},unrenderNowIndicator:function(){this.timeGrid.unrenderNowIndicator()},updateSize:function(t){this.timeGrid.updateSize(t),Se.prototype.updateSize.call(this,t)},updateWidth:function(){this.axisWidth=u(this.el.find(".fc-axis"))},setHeight:function(t,e){var n,s,o;this.bottomRuleEl.hide(),this.scroller.clear(),r(this.noScrollRowEls),this.dayGrid&amp;&amp;(this.dayGrid.removeSegPopover(),n=this.opt("eventLimit"),n&amp;&amp;"number"!=typeof n&amp;&amp;(n=Fe),n&amp;&amp;this.dayGrid.limitRows(n)),e||(s=this.computeScrollerHeight(t),this.scroller.setHeight(s),o=this.scroller.getScrollbarWidths(),(o.left||o.right)&amp;&amp;(i(this.noScrollRowEls,o),s=this.computeScrollerHeight(t),this.scroller.setHeight(s)),this.scroller.lockOverflow(o),this.timeGrid.getTotalSlatHeight()&lt;s&amp;&amp;this.bottomRuleEl.show())},computeScrollerHeight:function(t){return t-d(this.el,this.scroller.el)},computeInitialScroll:function(){var t=e.duration(this.opt("scrollTime")),n=this.timeGrid.computeTimeTop(t);return n=Math.ceil(n),n&amp;&amp;n++,n},queryScroll:function(){return this.scroller.getScrollTop()},setScroll:function(t){this.scroller.setScrollTop(t)},prepareHits:function(){this.timeGrid.prepareHits(),this.dayGrid&amp;&amp;this.dayGrid.prepareHits()},releaseHits:function(){this.timeGrid.releaseHits(),this.dayGrid&amp;&amp;this.dayGrid.releaseHits()},queryHit:function(t,e){var n=this.timeGrid.queryHit(t,e);return!n&amp;&amp;this.dayGrid&amp;&amp;(n=this.dayGrid.queryHit(t,e)),n},getHitSpan:function(t){return t.component.getHitSpan(t)},getHitEl:function(t){return t.component.getHitEl(t)},renderEvents:function(t){var e,n,i=[],r=[],s=[];for(n=0;n&lt;t.length;n++)t[n].allDay?i.push(t[n]):r.push(t[n]);e=this.timeGrid.renderEvents(r),this.dayGrid&amp;&amp;(s=this.dayGrid.renderEvents(i)),this.updateHeight()},getEventSegs:function(){return this.timeGrid.getEventSegs().concat(this.dayGrid?this.dayGrid.getEventSegs():[])},unrenderEvents:function(){this.timeGrid.unrenderEvents(),this.dayGrid&amp;&amp;this.dayGrid.unrenderEvents()},renderDrag:function(t,e){return t.start.hasTime()?this.timeGrid.renderDrag(t,e):this.dayGrid?this.dayGrid.renderDrag(t,e):void 0},unrenderDrag:function(){this.timeGrid.unrenderDrag(),this.dayGrid&amp;&amp;this.dayGrid.unrenderDrag()},renderSelection:function(t){t.start.hasTime()||t.end.hasTime()?this.timeGrid.renderSelection(t):this.dayGrid&amp;&amp;this.dayGrid.renderSelection(t)},unrenderSelection:function(){this.timeGrid.unrenderSelection(),this.dayGrid&amp;&amp;this.dayGrid.unrenderSelection()}}),Be={renderHeadIntroHtml:function(){var t,e=this.view;return e.opt("weekNumbers")?(t=this.start.format(e.opt("smallWeekFormat")),'&lt;th class="fc-axis fc-week-number '+e.widgetHeaderClass+'" '+e.axisStyleAttr()+"&gt;"+e.buildGotoAnchorHtml({date:this.start,type:"week",forceOff:this.colCnt&gt;1},tt(t))+"&lt;/th&gt;"):'&lt;th class="fc-axis '+e.widgetHeaderClass+'" '+e.axisStyleAttr()+"&gt;&lt;/th&gt;"},renderBgIntroHtml:function(){var t=this.view;return'&lt;td class="fc-axis '+t.widgetContentClass+'" '+t.axisStyleAttr()+"&gt;&lt;/td&gt;"},renderIntroHtml:function(){var t=this.view;return'&lt;td class="fc-axis" '+t.axisStyleAttr()+"&gt;&lt;/td&gt;"}},ze={renderBgIntroHtml:function(){var t=this.view;return'&lt;td class="fc-axis '+t.widgetContentClass+'" '+t.axisStyleAttr()+"&gt;&lt;span&gt;"+t.getAllDayHtml()+"&lt;/span&gt;&lt;/td&gt;"},renderIntroHtml:function(){var t=this.view;return'&lt;td class="fc-axis" '+t.axisStyleAttr()+"&gt;&lt;/td&gt;"}},Fe=5,Ne=[{hours:1},{minutes:30},{minutes:15},{seconds:30},{seconds:15}];Ut.agenda={class:Le,defaults:{allDaySlot:!0,slotDuration:"00:30:00",minTime:"00:00:00",maxTime:"24:00:00",slotEventOverlap:!0}},Ut.agendaDay={type:"agenda",duration:{days:1}},Ut.agendaWeek={type:"agenda",duration:{weeks:1}};var Ge=Se.extend({grid:null,scroller:null,initialize:function(){this.grid=new Ae(this),this.scroller=new we({overflowX:"hidden",overflowY:"auto"})},setRange:function(t){Se.prototype.setRange.call(this,t),this.grid.setRange(t)},renderSkeleton:function(){this.el.addClass("fc-list-view "+this.widgetContentClass),this.scroller.render(),this.scroller.el.appendTo(this.el),this.grid.setElement(this.scroller.scrollEl)},unrenderSkeleton:function(){this.scroller.destroy()},setHeight:function(t,e){this.scroller.setHeight(this.computeScrollerHeight(t))},computeScrollerHeight:function(t){return t-d(this.el,this.scroller.el)},renderEvents:function(t){this.grid.renderEvents(t)},unrenderEvents:function(){this.grid.unrenderEvents()},isEventResizable:function(t){return!1},isEventDraggable:function(t){return!1}}),Ae=pe.extend({segSelector:".fc-list-item",hasDayInteractions:!1,spanToSegs:function(t){for(var e,n=this.view,i=n.start.clone().time(0),r=0,s=[];i&lt;n.end;)if(e=F(t,{start:i,end:i.clone().add(1,"day")}),e&amp;&amp;(e.dayIndex=r,s.push(e)),i.add(1,"day"),r++,e&amp;&amp;!e.isEnd&amp;&amp;t.end.hasTime()&amp;&amp;t.end&lt;i.clone().add(this.view.nextDayThreshold)){e.end=t.end.clone(),e.isEnd=!0;break}return s},computeEventTimeFormat:function(){return this.view.opt("mediumTimeFormat")},handleSegClick:function(e,n){var i;pe.prototype.handleSegClick.apply(this,arguments),t(n.target).closest("a[href]").length||(i=e.event.url,i&amp;&amp;!n.isDefaultPrevented()&amp;&amp;(window.location.href=i))},renderFgSegs:function(t){return t=this.renderFgSegEls(t),t.length?this.renderSegList(t):this.renderEmptyMessage(),t},renderEmptyMessage:function(){this.el.html('&lt;div class="fc-list-empty-wrap2"&gt;&lt;div class="fc-list-empty-wrap1"&gt;&lt;div class="fc-list-empty"&gt;'+tt(this.view.opt("noEventsMessage"))+"&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;")},renderSegList:function(e){var n,i,r,s=this.groupSegsByDay(e),o=t('&lt;table class="fc-list-table"&gt;&lt;tbody/&gt;&lt;/table&gt;'),l=o.find("tbody");for(n=0;n&lt;s.length;n++)if(i=s[n])for(l.append(this.dayHeaderHtml(this.view.start.clone().add(n,"days"))),this.sortEventSegs(i),r=0;r&lt;i.length;r++)l.append(i[r].el);this.el.empty().append(o)},groupSegsByDay:function(t){var e,n,i=[];for(e=0;e&lt;t.length;e++)n=t[e],(i[n.dayIndex]||(i[n.dayIndex]=[])).push(n);return i},dayHeaderHtml:function(t){var e=this.view,n=e.opt("listDayFormat"),i=e.opt("listDayAltFormat");return'&lt;tr class="fc-list-heading" data-date="'+t.format("YYYY-MM-DD")+'"&gt;&lt;td class="'+e.widgetHeaderClass+'" colspan="3"&gt;'+(n?e.buildGotoAnchorHtml(t,{class:"fc-list-heading-main"},tt(t.format(n))):"")+(i?e.buildGotoAnchorHtml(t,{class:"fc-list-heading-alt"},tt(t.format(i))):"")+"&lt;/td&gt;&lt;/tr&gt;"},fgSegHtml:function(t){var e,n=this.view,i=["fc-list-item"].concat(this.getSegCustomClasses(t)),r=this.getSegBackgroundColor(t),s=t.event,o=s.url;return e=s.allDay?n.getAllDayHtml():n.isMultiDayEvent(s)?t.isStart||t.isEnd?tt(this.getEventTimeText(t)):n.getAllDayHtml():tt(this.getEventTimeText(s)),o&amp;&amp;i.push("fc-has-url"),'&lt;tr class="'+i.join(" ")+'"&gt;'+(this.displayEventTime?'&lt;td class="fc-list-item-time '+n.widgetContentClass+'"&gt;'+(e||"")+"&lt;/td&gt;":"")+'&lt;td class="fc-list-item-marker '+n.widgetContentClass+'"&gt;&lt;span class="fc-event-dot"'+(r?' style="background-color:'+r+'"':"")+'&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class="fc-list-item-title '+n.widgetContentClass+'"&gt;&lt;a'+(o?' href="'+tt(o)+'"':"")+"&gt;"+tt(t.event.title||"")+"&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;"}});return Ut.list={class:Ge,buttonTextKey:"list",defaults:{buttonText:"list",listDayFormat:"LL",noEventsMessage:"No events to display"}},Ut.listDay={type:"list",duration:{days:1},defaults:{listDayFormat:"dddd"}},Ut.listWeek={type:"list",duration:{weeks:1},defaults:{listDayFormat:"dddd",listDayAltFormat:"LL"}},Ut.listMonth={type:"list",duration:{month:1},defaults:{listDayAltFormat:"dddd"}},Ut.listYear={type:"list",duration:{year:1},defaults:{listDayAltFormat:"dddd"}},jt});</contentText>
  </asset>
  <asset name="lib/interact.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-11-14
 */
(function(F){function ma(){}function t(a){if(!a||"object"!==typeof a)return!1;var b=V(a)||q;return/object|function/.test(typeof b.Element)?a instanceof b.Element:1===a.nodeType&amp;&amp;"string"===typeof a.nodeName}function Ba(a){return a===q||!(!a||!a.Window)&amp;&amp;a instanceof a.Window}function da(a){return z(a)&amp;&amp;void 0!==typeof a.length&amp;&amp;A(a.splice)}function z(a){return!!a&amp;&amp;"object"===typeof a}function A(a){return"function"===typeof a}function K(a){return"number"===typeof a}function H(a){return"boolean"===
typeof a}function N(a){return"string"===typeof a}function ea(a){if(!N(a))return!1;Q.querySelector(a);return!0}function x(a,b){for(var c in b)a[c]=b[c];return a}function ra(a,b){for(var c in b){var d=!1,e;for(e in Ca)if(0===c.indexOf(e)&amp;&amp;Ca[e].test(c)){d=!0;break}d||(a[c]=b[c])}return a}function sa(a,b){a.page=a.page||{};a.page.x=b.page.x;a.page.y=b.page.y;a.client=a.client||{};a.client.x=b.client.x;a.client.y=b.client.y;a.timeStamp=b.timeStamp}function Ta(a,b,c){a.page.x=c.page.x-b.page.x;a.page.y=
c.page.y-b.page.y;a.client.x=c.client.x-b.client.x;a.client.y=c.client.y-b.client.y;a.timeStamp=(new Date).getTime()-b.timeStamp;b=Math.max(a.timeStamp/1E3,.001);a.page.speed=fa(a.page.x,a.page.y)/b;a.page.vx=a.page.x/b;a.page.vy=a.page.y/b;a.client.speed=fa(a.client.x,a.page.y)/b;a.client.vx=a.client.x/b;a.client.vy=a.client.y/b}function Ua(a){return a instanceof q.Event||ga&amp;&amp;q.Touch&amp;&amp;a instanceof q.Touch}function ta(a,b,c){c=c||{};a=a||"page";c.x=b[a+"X"];c.y=b[a+"Y"];return c}function Da(a,b){b=
b||{};Va&amp;&amp;Ua(a)?(ta("screen",a,b),b.x+=q.scrollX,b.y+=q.scrollY):ta("page",a,b);return b}function Wa(a,b){b=b||{};Va&amp;&amp;Ua(a)?ta("screen",a,b):ta("client",a,b);return b}function O(a){return K(a.pointerId)?a.pointerId:a.identifier}function Ea(a){return a instanceof nb?a.correspondingUseElement:a}function V(a){if(Ba(a))return a;a=a.ownerDocument||a;return a.defaultView||a.parentWindow||q}function Fa(a){return(a=a instanceof Xa?a.getBoundingClientRect():a.getClientRects()[0])&amp;&amp;{left:a.left,right:a.right,
top:a.top,bottom:a.bottom,width:a.width||a.right-a.left,height:a.height||a.bottom-a.top}}function ua(a){var b,c=Fa(a);!ob&amp;&amp;c&amp;&amp;(b=(b=V(a))||q,a=b.scrollX||b.document.documentElement.scrollLeft,b=b.scrollY||b.document.documentElement.scrollTop,c.left+=a,c.right+=a,c.top+=b,c.bottom+=b);return c}function Ga(a){var b=[];da(a)?(b[0]=a[0],b[1]=a[1]):"touchend"===a.type?1===a.touches.length?(b[0]=a.touches[0],b[1]=a.changedTouches[0]):0===a.touches.length&amp;&amp;(b[0]=a.changedTouches[0],b[1]=a.changedTouches[1]):
(b[0]=a.touches[0],b[1]=a.touches[1]);return b}function Ya(a){for(var b={pageX:0,pageY:0,clientX:0,clientY:0,screenX:0,screenY:0},c,d=0;d&lt;a.length;d++)for(c in b)b[c]+=a[d][c];for(c in b)b[c]/=a.length;return b}function Ha(a){if(a.length||a.touches&amp;&amp;1&lt;a.touches.length){a=Ga(a);var b=Math.min(a[0].pageX,a[1].pageX),c=Math.min(a[0].pageY,a[1].pageY);return{x:b,y:c,left:b,top:c,width:Math.max(a[0].pageX,a[1].pageX)-b,height:Math.max(a[0].pageY,a[1].pageY)-c}}}function Ia(a,b){b=b||D.deltaSource;var c=
b+"X",d=b+"Y",e=Ga(a);return fa(e[0][c]-e[1][c],e[0][d]-e[1][d])}function Ja(a,b,c){c=c||D.deltaSource;var d=c+"X";c+="Y";a=Ga(a);d=180*Math.atan((a[0][c]-a[1][c])/(a[0][d]-a[1][d]))/Math.PI;K(b)&amp;&amp;(b=(d-b)%360,315&lt;b?d-=360+d/360|0:135&lt;b?d-=180+d/360|0:-315&gt;b?d+=360+d/360|0:-135&gt;b&amp;&amp;(d+=180+d/360|0));return d}function na(a,b){var c=a?a.options.origin:D.origin;"parent"===c?c=L(b):"self"===c?c=a.getRect(b):ea(c)&amp;&amp;(c=Ka(b,c)||{x:0,y:0});A(c)&amp;&amp;(c=c(a&amp;&amp;b));t(c)&amp;&amp;(c=ua(c));c.x="x"in c?c.x:c.left;c.y="y"in
c?c.y:c.top;return c}function Za(a,b,c,d){var e=1-a;return e*e*b+2*e*a*c+a*a*d}function Y(a,b){for(;b;){if(b===a)return!0;b=b.parentNode}return!1}function Ka(a,b){for(var c=L(a);t(c);){if(R(c,b))return c;c=L(c)}return null}function L(a){if((a=a.parentNode)&amp;&amp;a instanceof $a)for(;(a=a.host)&amp;&amp;a&amp;&amp;a instanceof $a;);return a}function va(a,b){return a._context===b.ownerDocument||Y(a._context,b)}function Z(a,b,c){return(a=a.options.ignoreFrom)&amp;&amp;t(c)?N(a)?La(c,a,b):t(a)?Y(a,c):!1:!1}function aa(a,b,c){return(a=
a.options.allowFrom)?t(c)?N(a)?La(c,a,b):t(a)?Y(a,c):!1:!1:!0}function ab(a,b){if(!b)return!1;var c=b.options.drag.axis;return"xy"===a||"xy"===c||c===a}function Ma(a,b){var c=a.options;/^resize/.test(b)&amp;&amp;(b="resize");return c[b].snap&amp;&amp;c[b].snap.enabled}function Na(a,b){var c=a.options;/^resize/.test(b)&amp;&amp;(b="resize");return c[b].restrict&amp;&amp;c[b].restrict.enabled}function ha(a,b,c){for(var d=a.options,e=d[c.name].max,d=d[c.name].maxPerElement,h=0,f=0,g=0,k=0,y=r.length;k&lt;y;k++){var n=r[k],u=n.prepared.name;
if(n.interacting()&amp;&amp;(h++,h&gt;=wa||n.target===a&amp;&amp;(f+=u===c.name|0,f&gt;=e||n.element===b&amp;&amp;(g++,u!==c.name||g&gt;=d))))return!1}return 0&lt;wa}function xa(){this.prevDropElement=this.prevDropTarget=this.dropElement=this.dropTarget=this.element=this.target=null;this.prepared={name:null,axis:null,edges:null};this.matches=[];this.matchElements=[];this.inertiaStatus={active:!1,smoothEnd:!1,ending:!1,startEvent:null,upCoords:{},xe:0,ye:0,sx:0,sy:0,t0:0,vx0:0,vys:0,duration:0,resumeDx:0,resumeDy:0,lambda_v0:0,one_ve_v0:0,
i:null};if(A(Function.prototype.bind))this.boundInertiaFrame=this.inertiaFrame.bind(this),this.boundSmoothEndFrame=this.smoothEndFrame.bind(this);else{var a=this;this.boundInertiaFrame=function(){return a.inertiaFrame()};this.boundSmoothEndFrame=function(){return a.smoothEndFrame()}}this.activeDrops={dropzones:[],elements:[],rects:[]};this.pointers=[];this.pointerIds=[];this.downTargets=[];this.downTimes=[];this.holdTimers=[];this.prevCoords={page:{x:0,y:0},client:{x:0,y:0},timeStamp:0};this.curCoords=
{page:{x:0,y:0},client:{x:0,y:0},timeStamp:0};this.startCoords={page:{x:0,y:0},client:{x:0,y:0},timeStamp:0};this.pointerDelta={page:{x:0,y:0,vx:0,vy:0,speed:0},client:{x:0,y:0,vx:0,vy:0,speed:0},timeStamp:0};this.downEvent=null;this.downPointer={};this.prevEvent=this._curEventTarget=this._eventTarget=null;this.tapTime=0;this.prevTap=null;this.startOffset={left:0,right:0,top:0,bottom:0};this.restrictOffset={left:0,right:0,top:0,bottom:0};this.snapOffsets=[];this.gesture={start:{x:0,y:0},startDistance:0,
prevDistance:0,distance:0,scale:1,startAngle:0,prevAngle:0};this.snapStatus={x:0,y:0,dx:0,dy:0,realX:0,realY:0,snappedX:0,snappedY:0,targets:[],locked:!1,changed:!1};this.restrictStatus={dx:0,dy:0,restrictedX:0,restrictedY:0,snap:null,restricted:!1,changed:!1};this.restrictStatus.snap=this.snapStatus;this.resizing=this.dragging=this.gesturing=this.pointerWasMoved=this.pointerIsDown=!1;this.resizeAxes="xy";this.mouse=!1;r.push(this)}function bb(a,b,c){var d=0,e=r.length,h=/mouse/i.test(a.pointerType||
b)||4===a.pointerType,f;a=O(a);if(/down|start/i.test(b))for(d=0;d&lt;e;d++){f=r[d];var g=c;if(f.inertiaStatus.active&amp;&amp;f.target.options[f.prepared.name].inertia.allowResume&amp;&amp;f.mouse===h)for(;g;){if(g===f.element)return f;g=L(g)}}if(h||!ga&amp;&amp;!oa){for(d=0;d&lt;e;d++)if(r[d].mouse&amp;&amp;!r[d].inertiaStatus.active)return r[d];for(d=0;d&lt;e;d++)if(r[d].mouse&amp;&amp;(!/down/.test(b)||!r[d].inertiaStatus.active))return f;f=new xa;f.mouse=!0;return f}for(d=0;d&lt;e;d++)if(-1!==v(r[d].pointerIds,a))return r[d];if(/up|end|out/i.test(b))return null;
for(d=0;d&lt;e;d++)if(f=r[d],!(f.prepared.name&amp;&amp;!f.target.options.gesture.enabled||f.interacting()||!h&amp;&amp;f.mouse))return f;return new xa}function cb(a){return function(b){var c,d=Ea(b.path?b.path[0]:b.target),e=Ea(b.currentTarget),h;if(ga&amp;&amp;/touch/.test(b.type))for(db=(new Date).getTime(),h=0;h&lt;b.changedTouches.length;h++){var f=b.changedTouches[h];if(c=bb(f,b.type,d))c._updateEventTargets(d,e),c[a](f,b,d,e)}else{if(!oa&amp;&amp;/mouse/.test(b.type)){for(h=0;h&lt;r.length;h++)if(!r[h].mouse&amp;&amp;r[h].pointerIsDown)return;
if(500&gt;(new Date).getTime()-db)return}if(c=bb(b,b.type,d))c._updateEventTargets(d,e),c[a](b,b,d,e)}}}function G(a,b,c,d,e,h){var f,g,k=a.target,y=a.snapStatus,n=a.restrictStatus,u=a.pointers,E=(k&amp;&amp;k.options||D).deltaSource,eb=E+"X",l=E+"Y",ia=k?k.options:D,w=na(k,e),m="start"===d,p="end"===d;f=m?a.startCoords:a.curCoords;e=e||a.element;g=x({},f.page);f=x({},f.client);g.x-=w.x;g.y-=w.y;f.x-=w.x;f.y-=w.y;var I=ia[c].snap&amp;&amp;ia[c].snap.relativePoints;!Ma(k,c)||m&amp;&amp;I&amp;&amp;I.length||(this.snap={range:y.range,
locked:y.locked,x:y.snappedX,y:y.snappedY,realX:y.realX,realY:y.realY,dx:y.dx,dy:y.dy},y.locked&amp;&amp;(g.x+=y.dx,g.y+=y.dy,f.x+=y.dx,f.y+=y.dy));!Na(k,c)||m&amp;&amp;ia[c].restrict.elementRect||!n.restricted||(g.x+=n.dx,g.y+=n.dy,f.x+=n.dx,f.y+=n.dy,this.restrict={dx:n.dx,dy:n.dy});this.pageX=g.x;this.pageY=g.y;this.clientX=f.x;this.clientY=f.y;this.x0=a.startCoords.page.x-w.x;this.y0=a.startCoords.page.y-w.y;this.clientX0=a.startCoords.client.x-w.x;this.clientY0=a.startCoords.client.y-w.y;this.ctrlKey=b.ctrlKey;
this.altKey=b.altKey;this.shiftKey=b.shiftKey;this.metaKey=b.metaKey;this.button=b.button;this.buttons=b.buttons;this.target=e;this.t0=a.downTimes[0];this.type=c+(d||"");this.interaction=a;this.interactable=k;e=a.inertiaStatus;e.active&amp;&amp;(this.detail="inertia");h&amp;&amp;(this.relatedTarget=h);p?"client"===E?(this.dx=f.x-a.startCoords.client.x,this.dy=f.y-a.startCoords.client.y):(this.dx=g.x-a.startCoords.page.x,this.dy=g.y-a.startCoords.page.y):m?this.dy=this.dx=0:"inertiastart"===d?(this.dx=a.prevEvent.dx,
this.dy=a.prevEvent.dy):"client"===E?(this.dx=f.x-a.prevEvent.clientX,this.dy=f.y-a.prevEvent.clientY):(this.dx=g.x-a.prevEvent.pageX,this.dy=g.y-a.prevEvent.pageY);a.prevEvent&amp;&amp;"inertia"===a.prevEvent.detail&amp;&amp;!e.active&amp;&amp;ia[c].inertia&amp;&amp;ia[c].inertia.zeroResumeDelta&amp;&amp;(e.resumeDx+=this.dx,e.resumeDy+=this.dy,this.dx=this.dy=0);"resize"===c&amp;&amp;a.resizeAxes?ia.resize.square?("y"===a.resizeAxes?this.dx=this.dy:this.dy=this.dx,this.axes="xy"):(this.axes=a.resizeAxes,"x"===a.resizeAxes?this.dy=0:"y"===a.resizeAxes&amp;&amp;
(this.dx=0)):"gesture"===c&amp;&amp;(this.touches=[u[0],u[1]],m?(this.distance=Ia(u,E),this.box=Ha(u),this.scale=1,this.ds=0,this.angle=Ja(u,void 0,E),this.da=0):p||b instanceof G?(this.distance=a.prevEvent.distance,this.box=a.prevEvent.box,this.scale=a.prevEvent.scale,this.ds=this.scale-1,this.angle=a.prevEvent.angle,this.da=this.angle-a.gesture.startAngle):(this.distance=Ia(u,E),this.box=Ha(u),this.scale=this.distance/a.gesture.startDistance,this.angle=Ja(u,a.gesture.prevAngle,E),this.ds=this.scale-a.gesture.prevScale,
this.da=this.angle-a.gesture.prevAngle));m?(this.timeStamp=a.downTimes[0],this.velocityY=this.velocityX=this.speed=this.duration=this.dt=0):"inertiastart"===d?(this.timeStamp=a.prevEvent.timeStamp,this.dt=a.prevEvent.dt,this.duration=a.prevEvent.duration,this.speed=a.prevEvent.speed,this.velocityX=a.prevEvent.velocityX,this.velocityY=a.prevEvent.velocityY):(this.timeStamp=(new Date).getTime(),this.dt=this.timeStamp-a.prevEvent.timeStamp,this.duration=this.timeStamp-a.downTimes[0],b instanceof G?(b=
this[eb]-a.prevEvent[eb],l=this[l]-a.prevEvent[l],c=this.dt/1E3,this.speed=fa(b,l)/c,this.velocityX=b/c,this.velocityY=l/c):(this.speed=a.pointerDelta[E].speed,this.velocityX=a.pointerDelta[E].vx,this.velocityY=a.pointerDelta[E].vy));(p||"inertiastart"===d)&amp;&amp;600&lt;a.prevEvent.speed&amp;&amp;150&gt;this.timeStamp-a.prevEvent.timeStamp&amp;&amp;(d=180*Math.atan2(a.prevEvent.velocityY,a.prevEvent.velocityX)/Math.PI,0&gt;d&amp;&amp;(d+=360),p=112.5&lt;=d&amp;&amp;247.5&gt;d,l=202.5&lt;=d&amp;&amp;337.5&gt;d,this.swipe={up:l,down:!l&amp;&amp;22.5&lt;=d&amp;&amp;157.5&gt;d,left:p,right:!p&amp;&amp;
(292.5&lt;=d||67.5&gt;d),angle:d,speed:a.prevEvent.speed,velocity:{x:a.prevEvent.velocityX,y:a.prevEvent.velocityY}})}function fb(){this.originalEvent.preventDefault()}function gb(a){var b="";"drag"===a.name&amp;&amp;(b=za.drag);if("resize"===a.name)if(a.axis)b=za[a.name+a.axis];else if(a.edges){for(var b="resize",c=["top","bottom","left","right"],d=0;4&gt;d;d++)a.edges[c[d]]&amp;&amp;(b+=c[d]);b=za[b]}return b}function hb(a,b,c){a=this.getRect(c);var d=!1,e=null,h=null,f,g=x({},b.curCoords.page),e=this.options;if(!a)return null;
if(S.resize&amp;&amp;e.resize.enabled)if(d=e.resize,f={left:!1,right:!1,top:!1,bottom:!1},z(d.edges)){for(var k in f){var y=f,n=k,u;a:{u=k;var E=d.edges[k],l=g,m=b._eventTarget,p=c,w=a,ya=d.margin||pa;if(E){if(!0===E){var q=K(w.width)?w.width:w.right-w.left,I=K(w.height)?w.height:w.bottom-w.top;0&gt;q&amp;&amp;("left"===u?u="right":"right"===u&amp;&amp;(u="left"));0&gt;I&amp;&amp;("top"===u?u="bottom":"bottom"===u&amp;&amp;(u="top"));if("left"===u){u=l.x&lt;(0&lt;=q?w.left:w.right)+ya;break a}if("top"===u){u=l.y&lt;(0&lt;=I?w.top:w.bottom)+ya;break a}if("right"===
u){u=l.x&gt;(0&lt;=q?w.right:w.left)-ya;break a}if("bottom"===u){u=l.y&gt;(0&lt;=I?w.bottom:w.top)-ya;break a}}u=t(m)?t(E)?E===m:La(m,E,p):!1}else u=!1}y[n]=u}f.left=f.left&amp;&amp;!f.right;f.top=f.top&amp;&amp;!f.bottom;d=f.left||f.right||f.top||f.bottom}else c="y"!==e.resize.axis&amp;&amp;g.x&gt;a.right-pa,a="x"!==e.resize.axis&amp;&amp;g.y&gt;a.bottom-pa,d=c||a,h=(c?"x":"")+(a?"y":"");e=d?"resize":S.drag&amp;&amp;e.drag.enabled?"drag":null;S.gesture&amp;&amp;2&lt;=b.pointerIds.length&amp;&amp;!b.dragging&amp;&amp;!b.resizing&amp;&amp;(e="gesture");return e?{name:e,axis:h,edges:f}:null}
function W(a,b){if(!z(a))return null;var c=a.name,d=b.options;return("resize"===c&amp;&amp;d.resize.enabled||"drag"===c&amp;&amp;d.drag.enabled||"gesture"===c&amp;&amp;d.gesture.enabled)&amp;&amp;S[c]?a:null}function qa(a,b){var c={},d=P[a.type],e=Ea(a.path?a.path[0]:a.target),h=e;b=b?!0:!1;for(var f in a)c[f]=a[f];c.originalEvent=a;for(c.preventDefault=fb;t(h);){for(f=0;f&lt;d.selectors.length;f++){var g=d.contexts[f];if(R(h,d.selectors[f])&amp;&amp;Y(g,e)&amp;&amp;Y(g,h)){g=d.listeners[f];c.currentTarget=h;for(var k=0;k&lt;g.length;k++)if(g[k][1]===
b)g[k][0](c)}}h=L(h)}}function Aa(a){return qa.call(this,a,!0)}function l(a,b){return B.get(a,b)||new C(a,b)}function C(a,b){this._element=a;this._iEvents=this._iEvents||{};var c;if(ea(a)){this.selector=a;var d=b&amp;&amp;b.context;c=d?V(d):q;d&amp;&amp;(c.Node?d instanceof c.Node:t(d)||d===c.document)&amp;&amp;(this._context=d)}else c=V(a),t(a,c)&amp;&amp;(ba?(n.add(this._element,J.down,m.pointerDown),n.add(this._element,J.move,m.pointerHover)):(n.add(this._element,"mousedown",m.pointerDown),n.add(this._element,"mousemove",m.pointerHover),
n.add(this._element,"touchstart",m.pointerDown),n.add(this._element,"touchmove",m.pointerHover)));this._doc=c.document;-1===v(ja,this._doc)&amp;&amp;ib(this._doc);B.push(this);this.set(b)}function M(a,b){var c=!1;return function(){c||(q.console.warn(b),c=!0);return a.apply(this,arguments)}}function jb(a){for(var b=0;b&lt;r.length;b++)r[b].pointerEnd(a,a)}function ib(a){if(-1===v(ja,a)){var b=a.defaultView||a.parentWindow,c;for(c in P)n.add(a,c,qa),n.add(a,c,Aa,!0);ba?(J=ba===b.MSPointerEvent?{up:"MSPointerUp",
down:"MSPointerDown",over:"mouseover",out:"mouseout",move:"MSPointerMove",cancel:"MSPointerCancel"}:{up:"pointerup",down:"pointerdown",over:"pointerover",out:"pointerout",move:"pointermove",cancel:"pointercancel"},n.add(a,J.down,m.selectorDown),n.add(a,J.move,m.pointerMove),n.add(a,J.over,m.pointerOver),n.add(a,J.out,m.pointerOut),n.add(a,J.up,m.pointerUp),n.add(a,J.cancel,m.pointerCancel),n.add(a,J.move,m.autoScrollMove)):(n.add(a,"mousedown",m.selectorDown),n.add(a,"mousemove",m.pointerMove),n.add(a,
"mouseup",m.pointerUp),n.add(a,"mouseover",m.pointerOver),n.add(a,"mouseout",m.pointerOut),n.add(a,"touchstart",m.selectorDown),n.add(a,"touchmove",m.pointerMove),n.add(a,"touchend",m.pointerUp),n.add(a,"touchcancel",m.pointerCancel),n.add(a,"mousemove",m.autoScrollMove),n.add(a,"touchmove",m.autoScrollMove));n.add(b,"blur",jb);try{if(b.frameElement){var d=b.frameElement.ownerDocument,e=d.defaultView;n.add(d,"mouseup",m.pointerEnd);n.add(d,"touchend",m.pointerEnd);n.add(d,"touchcancel",m.pointerEnd);
n.add(d,"pointerup",m.pointerEnd);n.add(d,"MSPointerUp",m.pointerEnd);n.add(e,"blur",jb)}}catch(h){l.windowParentError=h}n.add(a,"dragstart",function(a){for(var b=0;b&lt;r.length;b++){var c=r[b];if(c.element&amp;&amp;(c.element===a.target||Y(c.element,a.target))){c.checkAndPreventDefault(a,c.target,c.element);break}}});n.useAttachEvent&amp;&amp;(n.add(a,"selectstart",function(a){var b=r[0];b.currentAction()&amp;&amp;b.checkAndPreventDefault(a)}),n.add(a,"dblclick",cb("ie8Dblclick")));ja.push(a)}}function v(a,b){for(var c=0,
d=a.length;c&lt;d;c++)if(a[c]===b)return c;return-1}function R(a,b,c){if(ka)return ka(a,b,c);q!==F&amp;&amp;(b=b.replace(/\/deep\//g," "));return a[Oa](b)}function La(a,b,c){for(;t(a);){if(R(a,b))return!0;a=L(a);if(a===c)return R(a,b)}return!1}if(F){var q=function(){var a=F.document.createTextNode("");return a.ownerDocument!==F.document&amp;&amp;"function"===typeof F.wrap&amp;&amp;F.wrap(a)===a?F.wrap(F):F}(),Q=q.document,$a=q.DocumentFragment||ma,Xa=q.SVGElement||ma,pb=q.SVGSVGElement||ma,nb=q.SVGElementInstance||ma,qb=q.HTMLElement||
q.Element,ba=q.PointerEvent||q.MSPointerEvent,J,fa=Math.hypot||function(a,b){return Math.sqrt(a*a+b*b)},la={},ja=[],B=[],r=[],Pa=!1,P={},D={base:{accept:null,actionChecker:null,styleCursor:!0,preventDefault:"auto",origin:{x:0,y:0},deltaSource:"page",allowFrom:null,ignoreFrom:null,_context:Q,dropChecker:null},drag:{enabled:!1,manualStart:!0,max:Infinity,maxPerElement:1,snap:null,restrict:null,inertia:null,autoScroll:null,axis:"xy"},drop:{enabled:!1,accept:null,overlap:"pointer"},resize:{enabled:!1,
manualStart:!1,max:Infinity,maxPerElement:1,snap:null,restrict:null,inertia:null,autoScroll:null,square:!1,preserveAspectRatio:!1,axis:"xy",margin:NaN,edges:null,invert:"none"},gesture:{manualStart:!1,enabled:!1,max:Infinity,maxPerElement:1,restrict:null},perAction:{manualStart:!1,max:Infinity,maxPerElement:1,snap:{enabled:!1,endOnly:!1,range:Infinity,targets:null,offsets:null,relativePoints:null},restrict:{enabled:!1,endOnly:!1},autoScroll:{enabled:!1,container:null,margin:60,speed:300},inertia:{enabled:!1,
resistance:10,minSpeed:100,endSpeed:10,allowResume:!0,zeroResumeDelta:!0,smoothEndDuration:300}},_holdDuration:600},p={interaction:null,i:null,x:0,y:0,scroll:function(){var a=p.interaction.target.options[p.interaction.prepared.name].autoScroll,b=a.container||V(p.interaction.element),c=(new Date).getTime(),d=(c-p.prevTimeX)/1E3,e=(c-p.prevTimeY)/1E3,h;a.velocity?(h=a.velocity.x,a=a.velocity.y):h=a=a.speed;d*=h;e*=a;if(1&lt;=d||1&lt;=e)Ba(b)?b.scrollBy(p.x*d,p.y*e):b&amp;&amp;(b.scrollLeft+=p.x*d,b.scrollTop+=p.y*
e),1&lt;=d&amp;&amp;(p.prevTimeX=c),1&lt;=e&amp;&amp;(p.prevTimeY=c);p.isScrolling&amp;&amp;(X(p.i),p.i=T(p.scroll))},isScrolling:!1,prevTimeX:0,prevTimeY:0,start:function(a){p.isScrolling=!0;X(p.i);p.interaction=a;p.prevTimeX=(new Date).getTime();p.prevTimeY=(new Date).getTime();p.i=T(p.scroll)},stop:function(){p.isScrolling=!1;X(p.i)}},ga="ontouchstart"in q||q.DocumentTouch&amp;&amp;Q instanceof q.DocumentTouch,oa=!!ba,pa=ga||oa?20:10,Qa=1,db=0,wa=Infinity,za=Q.all&amp;&amp;!q.atob?{drag:"move",resizex:"e-resize",resizey:"s-resize",resizexy:"se-resize",
resizetop:"n-resize",resizeleft:"w-resize",resizebottom:"s-resize",resizeright:"e-resize",resizetopleft:"se-resize",resizebottomright:"se-resize",resizetopright:"ne-resize",resizebottomleft:"ne-resize",gesture:""}:{drag:"move",resizex:"ew-resize",resizey:"ns-resize",resizexy:"nwse-resize",resizetop:"ns-resize",resizeleft:"ew-resize",resizebottom:"ns-resize",resizeright:"ew-resize",resizetopleft:"nwse-resize",resizebottomright:"nwse-resize",resizetopright:"nesw-resize",resizebottomleft:"nesw-resize",
gesture:""},S={drag:!0,resize:!0,gesture:!0},kb="onmousewheel"in Q?"mousewheel":"wheel",ca="dragstart dragmove draginertiastart dragend dragenter dragleave dropactivate dropdeactivate dropmove drop resizestart resizemove resizeinertiastart resizeend gesturestart gesturemove gestureinertiastart gestureend down move up cancel tap doubletap hold".split(" "),U={},Va="Opera"==navigator.appName&amp;&amp;ga&amp;&amp;navigator.userAgent.match("Presto"),ob=/iP(hone|od|ad)/.test(navigator.platform)&amp;&amp;/OS 7[^\d]/.test(navigator.appVersion),
Oa="matches"in Element.prototype?"matches":"webkitMatchesSelector"in Element.prototype?"webkitMatchesSelector":"mozMatchesSelector"in Element.prototype?"mozMatchesSelector":"oMatchesSelector"in Element.prototype?"oMatchesSelector":"msMatchesSelector",ka,T=F.requestAnimationFrame,X=F.cancelAnimationFrame,n=function(){function a(b,c,d,h){var l,m=v(k,b),p=y[m],q,I,r=d;if(p&amp;&amp;p.events)if(e&amp;&amp;(q=n[m],I=v(q.supplied,d),r=q.wrapped[I]),"all"===c)for(c in p.events)p.events.hasOwnProperty(c)&amp;&amp;a(b,c,"all");else{if(p.events[c]){var t=
p.events[c].length;if("all"===d){for(l=0;l&lt;t;l++)a(b,c,p.events[c][l],Boolean(h));return}for(l=0;l&lt;t;l++)if(p.events[c][l]===d){b[f](g+c,r,h||!1);p.events[c].splice(l,1);e&amp;&amp;q&amp;&amp;(q.useCount[I]--,0===q.useCount[I]&amp;&amp;(q.supplied.splice(I,1),q.wrapped.splice(I,1),q.useCount.splice(I,1)));break}p.events[c]&amp;&amp;0===p.events[c].length&amp;&amp;(p.events[c]=null,p.typeCount--)}p.typeCount||(y.splice(m,1),k.splice(m,1),n.splice(m,1))}}function b(){this.returnValue=!1}function c(){this.cancelBubble=!0}function d(){this.immediatePropagationStopped=
this.cancelBubble=!0}var e="attachEvent"in q&amp;&amp;!("addEventListener"in q),h=e?"attachEvent":"addEventListener",f=e?"detachEvent":"removeEventListener",g=e?"on":"",k=[],y=[],n=[];return{add:function(a,f,l,p){var m=v(k,a),q=y[m];q||(q={events:{},typeCount:0},m=k.push(a)-1,y.push(q),n.push(e?{supplied:[],wrapped:[],useCount:[]}:null));q.events[f]||(q.events[f]=[],q.typeCount++);if(-1===v(q.events[f],l)){if(e){var m=n[m],r=v(m.supplied,l),t=m.wrapped[r]||function(e){e.immediatePropagationStopped||(e.target=
e.srcElement,e.currentTarget=a,e.preventDefault=e.preventDefault||b,e.stopPropagation=e.stopPropagation||c,e.stopImmediatePropagation=e.stopImmediatePropagation||d,/mouse|click/.test(e.type)&amp;&amp;(e.pageX=e.clientX+V(a).document.documentElement.scrollLeft,e.pageY=e.clientY+V(a).document.documentElement.scrollTop),l(e))};p=a[h](g+f,t,Boolean(p));-1===r?(m.supplied.push(l),m.wrapped.push(t),m.useCount.push(1)):m.useCount[r]++}else p=a[h](f,l,p||!1);q.events[f].push(l);return p}},remove:a,useAttachEvent:e,
_elements:k,_targets:y,_attachedListeners:n}}(),Ca={webkit:/(Movement[XY]|Radius[XY]|RotationAngle|Force)$/};xa.prototype={getPageXY:function(a,b){return Da(a,b,this)},getClientXY:function(a,b){return Wa(a,b,this)},setEventXY:function(a,b){var c=1&lt;b.length?Ya(b):b[0];Da(c,la,this);a.page.x=la.x;a.page.y=la.y;Wa(c,la,this);a.client.x=la.x;a.client.y=la.y;a.timeStamp=(new Date).getTime()},pointerOver:function(a,b,c){function d(a,b){a&amp;&amp;va(a,c)&amp;&amp;!Z(a,c,c)&amp;&amp;aa(a,c,c)&amp;&amp;R(c,b)&amp;&amp;(e.push(a),h.push(c))}if(!this.prepared.name&amp;&amp;
this.mouse){var e=[],h=[],f=this.element;this.addPointer(a);!this.target||!Z(this.target,this.element,c)&amp;&amp;aa(this.target,this.element,c)||(this.element=this.target=null,this.matches=[],this.matchElements=[]);var g=B.get(c),k=g&amp;&amp;!Z(g,c,c)&amp;&amp;aa(g,c,c)&amp;&amp;W(g.getAction(a,b,this,c),g);k&amp;&amp;!ha(g,c,k)&amp;&amp;(k=null);k?(this.target=g,this.element=c,this.matches=[],this.matchElements=[]):(B.forEachSelector(d),this.validateSelector(a,b,e,h)?(this.matches=e,this.matchElements=h,this.pointerHover(a,b,this.matches,this.matchElements),
n.add(c,ba?J.move:"mousemove",m.pointerHover)):this.target&amp;&amp;(Y(f,c)?(this.pointerHover(a,b,this.matches,this.matchElements),n.add(this.element,ba?J.move:"mousemove",m.pointerHover)):(this.element=this.target=null,this.matches=[],this.matchElements=[])))}},pointerHover:function(a,b,c,d,e,h){c=this.target;if(!this.prepared.name&amp;&amp;this.mouse){var f;this.setEventXY(this.curCoords,[a]);e?f=this.validateSelector(a,b,e,h):c&amp;&amp;(f=W(c.getAction(this.pointers[0],b,this,this.element),this.target));c&amp;&amp;c.options.styleCursor&amp;&amp;
(c._doc.documentElement.style.cursor=f?gb(f):"")}else this.prepared.name&amp;&amp;this.checkAndPreventDefault(b,c,this.element)},pointerOut:function(a,b,c){this.prepared.name||(B.get(c)||n.remove(c,ba?J.move:"mousemove",m.pointerHover),this.target&amp;&amp;this.target.options.styleCursor&amp;&amp;!this.interacting()&amp;&amp;(this.target._doc.documentElement.style.cursor=""))},selectorDown:function(a,b,c,d){function e(a,b,d){d=ka?d.querySelectorAll(b):void 0;va(a,g)&amp;&amp;!Z(a,g,c)&amp;&amp;aa(a,g,c)&amp;&amp;R(g,b,d)&amp;&amp;(h.matches.push(a),h.matchElements.push(g))}
var h=this,f=n.useAttachEvent?x({},b):b,g=c,k=this.addPointer(a),l;this.holdTimers[k]=setTimeout(function(){h.pointerHold(n.useAttachEvent?f:a,f,c,d)},D._holdDuration);this.pointerIsDown=!0;if(this.inertiaStatus.active&amp;&amp;this.target.selector)for(;t(g);){if(g===this.element&amp;&amp;W(this.target.getAction(a,b,this,this.element),this.target).name===this.prepared.name){X(this.inertiaStatus.i);this.inertiaStatus.active=!1;this.collectEventTargets(a,b,c,"down");return}g=L(g)}if(!this.interacting()){this.setEventXY(this.curCoords,
[a]);for(this.downEvent=b;t(g)&amp;&amp;!l;)this.matches=[],this.matchElements=[],B.forEachSelector(e),l=this.validateSelector(a,b,this.matches,this.matchElements),g=L(g);if(l)return this.prepared.name=l.name,this.prepared.axis=l.axis,this.prepared.edges=l.edges,this.collectEventTargets(a,b,c,"down"),this.pointerDown(a,b,c,d,l);this.downTimes[k]=(new Date).getTime();this.downTargets[k]=c;ra(this.downPointer,a);sa(this.prevCoords,this.curCoords);this.pointerWasMoved=!1}this.collectEventTargets(a,b,c,"down")},
pointerDown:function(a,b,c,d,e){if(!e&amp;&amp;!this.inertiaStatus.active&amp;&amp;this.pointerWasMoved&amp;&amp;this.prepared.name)this.checkAndPreventDefault(b,this.target,this.element);else{this.pointerIsDown=!0;this.downEvent=b;var h=this.addPointer(a),f;if(1&lt;this.pointerIds.length&amp;&amp;this.target._element===this.element){var g=W(e||this.target.getAction(a,b,this,this.element),this.target);ha(this.target,this.element,g)&amp;&amp;(f=g);this.prepared.name=null}else this.prepared.name||(g=B.get(d))&amp;&amp;!Z(g,d,c)&amp;&amp;aa(g,d,c)&amp;&amp;(f=W(e||
g.getAction(a,b,this,d),g,c))&amp;&amp;ha(g,d,f)&amp;&amp;(this.target=g,this.element=d);var k=(g=this.target)&amp;&amp;g.options;!g||!e&amp;&amp;this.prepared.name?this.inertiaStatus.active&amp;&amp;d===this.element&amp;&amp;W(g.getAction(a,b,this,this.element),g).name===this.prepared.name&amp;&amp;(X(this.inertiaStatus.i),this.inertiaStatus.active=!1,this.checkAndPreventDefault(b,g,this.element)):(f=f||W(e||g.getAction(a,b,this,d),g,this.element),this.setEventXY(this.startCoords,this.pointers),f&amp;&amp;(k.styleCursor&amp;&amp;(g._doc.documentElement.style.cursor=
gb(f)),this.resizeAxes="resize"===f.name?f.axis:null,"gesture"===f&amp;&amp;2&gt;this.pointerIds.length&amp;&amp;(f=null),this.prepared.name=f.name,this.prepared.axis=f.axis,this.prepared.edges=f.edges,this.snapStatus.snappedX=this.snapStatus.snappedY=this.restrictStatus.restrictedX=this.restrictStatus.restrictedY=NaN,this.downTimes[h]=(new Date).getTime(),this.downTargets[h]=c,ra(this.downPointer,a),sa(this.prevCoords,this.startCoords),this.pointerWasMoved=!1,this.checkAndPreventDefault(b,g,this.element)))}},setModifications:function(a,
b){var c=this.target,d=!0,e=Ma(c,this.prepared.name)&amp;&amp;(!c.options[this.prepared.name].snap.endOnly||b),c=Na(c,this.prepared.name)&amp;&amp;(!c.options[this.prepared.name].restrict.endOnly||b);e?this.setSnapping(a):this.snapStatus.locked=!1;c?this.setRestriction(a):this.restrictStatus.restricted=!1;e&amp;&amp;this.snapStatus.locked&amp;&amp;!this.snapStatus.changed?d=c&amp;&amp;this.restrictStatus.restricted&amp;&amp;this.restrictStatus.changed:c&amp;&amp;this.restrictStatus.restricted&amp;&amp;!this.restrictStatus.changed&amp;&amp;(d=!1);return d},setStartOffsets:function(a,
b,c){a=b.getRect(c);var d=na(b,c);c=b.options[this.prepared.name].snap;b=b.options[this.prepared.name].restrict;var e,h;a?(this.startOffset.left=this.startCoords.page.x-a.left,this.startOffset.top=this.startCoords.page.y-a.top,this.startOffset.right=a.right-this.startCoords.page.x,this.startOffset.bottom=a.bottom-this.startCoords.page.y,e="width"in a?a.width:a.right-a.left,h="height"in a?a.height:a.bottom-a.top):this.startOffset.left=this.startOffset.top=this.startOffset.right=this.startOffset.bottom=
0;this.snapOffsets.splice(0);d=c&amp;&amp;"startCoords"===c.offset?{x:this.startCoords.page.x-d.x,y:this.startCoords.page.y-d.y}:c&amp;&amp;c.offset||{x:0,y:0};if(a&amp;&amp;c&amp;&amp;c.relativePoints&amp;&amp;c.relativePoints.length)for(var f=0;f&lt;c.relativePoints.length;f++)this.snapOffsets.push({x:this.startOffset.left-e*c.relativePoints[f].x+d.x,y:this.startOffset.top-h*c.relativePoints[f].y+d.y});else this.snapOffsets.push(d);a&amp;&amp;b.elementRect?(this.restrictOffset.left=this.startOffset.left-e*b.elementRect.left,this.restrictOffset.top=
this.startOffset.top-h*b.elementRect.top,this.restrictOffset.right=this.startOffset.right-e*(1-b.elementRect.right),this.restrictOffset.bottom=this.startOffset.bottom-h*(1-b.elementRect.bottom)):this.restrictOffset.left=this.restrictOffset.top=this.restrictOffset.right=this.restrictOffset.bottom=0},start:function(a,b,c){this.interacting()||!this.pointerIsDown||this.pointerIds.length&lt;("gesture"===a.name?2:1)||(-1===v(r,this)&amp;&amp;r.push(this),this.prepared.name||this.setEventXY(this.startCoords),this.prepared.name=
a.name,this.prepared.axis=a.axis,this.prepared.edges=a.edges,this.target=b,this.element=c,this.setStartOffsets(a.name,b,c),this.setModifications(this.startCoords.page),this.prevEvent=this[this.prepared.name+"Start"](this.downEvent))},pointerMove:function(a,b,c,d,e){if(this.inertiaStatus.active){d=this.inertiaStatus.upCoords.page;var h=this.inertiaStatus.upCoords.client;this.setEventXY(this.curCoords,[{pageX:d.x+this.inertiaStatus.sx,pageY:d.y+this.inertiaStatus.sy,clientX:h.x+this.inertiaStatus.sx,
clientY:h.y+this.inertiaStatus.sy}])}else this.recordPointer(a),this.setEventXY(this.curCoords,this.pointers);d=this.curCoords.page.x===this.prevCoords.page.x&amp;&amp;this.curCoords.page.y===this.prevCoords.page.y&amp;&amp;this.curCoords.client.x===this.prevCoords.client.x&amp;&amp;this.curCoords.client.y===this.prevCoords.client.y;var f,g,h=this.mouse?0:v(this.pointerIds,O(a));this.pointerIsDown&amp;&amp;!this.pointerWasMoved&amp;&amp;(f=this.curCoords.client.x-this.startCoords.client.x,g=this.curCoords.client.y-this.startCoords.client.y,
this.pointerWasMoved=fa(f,g)&gt;Qa);d||this.pointerIsDown&amp;&amp;!this.pointerWasMoved||(this.pointerIsDown&amp;&amp;clearTimeout(this.holdTimers[h]),this.collectEventTargets(a,b,c,"move"));if(this.pointerIsDown)if(d&amp;&amp;this.pointerWasMoved&amp;&amp;!e)this.checkAndPreventDefault(b,this.target,this.element);else if(Ta(this.pointerDelta,this.prevCoords,this.curCoords),this.prepared.name){if(this.pointerWasMoved&amp;&amp;(!this.inertiaStatus.active||a instanceof G&amp;&amp;/inertiastart/.test(a.type))){if(!this.interacting()&amp;&amp;(Ta(this.pointerDelta,
this.prevCoords,this.curCoords),"drag"===this.prepared.name)){f=Math.abs(f);g=Math.abs(g);d=this.target.options.drag.axis;var k=f&gt;g?"x":f&lt;g?"y":"xy";if("xy"!==k&amp;&amp;"xy"!==d&amp;&amp;d!==k){this.prepared.name=null;for(var l=c;t(l);){if((g=B.get(l))&amp;&amp;g!==this.target&amp;&amp;!g.options.drag.manualStart&amp;&amp;"drag"===g.getAction(this.downPointer,this.downEvent,this,l).name&amp;&amp;ab(k,g)){this.prepared.name="drag";this.target=g;this.element=l;break}l=L(l)}if(!this.prepared.name){var n=this;g=function(a,b,d){d=ka?d.querySelectorAll(b):
void 0;if(a!==n.target&amp;&amp;va(a,c)&amp;&amp;!a.options.drag.manualStart&amp;&amp;!Z(a,l,c)&amp;&amp;aa(a,l,c)&amp;&amp;R(l,b,d)&amp;&amp;"drag"===a.getAction(n.downPointer,n.downEvent,n,l).name&amp;&amp;ab(k,a)&amp;&amp;ha(a,l,"drag"))return a};for(l=c;t(l);){if(f=B.forEachSelector(g)){this.prepared.name="drag";this.target=f;this.element=l;break}l=L(l)}}}}if((g=!!this.prepared.name&amp;&amp;!this.interacting())&amp;&amp;(this.target.options[this.prepared.name].manualStart||!ha(this.target,this.element,this.prepared))){this.stop(b);return}if(this.prepared.name&amp;&amp;this.target){g&amp;&amp;
this.start(this.prepared,this.target,this.element);if(this.setModifications(this.curCoords.page,e)||g)this.prevEvent=this[this.prepared.name+"Move"](b);this.checkAndPreventDefault(b,this.target,this.element)}}sa(this.prevCoords,this.curCoords);(this.dragging||this.resizing)&amp;&amp;this.autoScrollMove(a)}},dragStart:function(a){var b=new G(this,a,"drag","start",this.element);this.dragging=!0;this.target.fire(b);this.activeDrops.dropzones=[];this.activeDrops.elements=[];this.activeDrops.rects=[];this.dynamicDrop||
this.setActiveDrops(this.element);a=this.getDropEvents(a,b);a.activate&amp;&amp;this.fireActiveDrops(a.activate);return b},dragMove:function(a){var b=this.target,c=new G(this,a,"drag","move",this.element),d=this.getDrop(c,a,this.element);this.dropTarget=d.dropzone;this.dropElement=d.element;a=this.getDropEvents(a,c);b.fire(c);a.leave&amp;&amp;this.prevDropTarget.fire(a.leave);a.enter&amp;&amp;this.dropTarget.fire(a.enter);a.move&amp;&amp;this.dropTarget.fire(a.move);this.prevDropTarget=this.dropTarget;this.prevDropElement=this.dropElement;
return c},resizeStart:function(a){a=new G(this,a,"resize","start",this.element);if(this.prepared.edges){var b=this.target.getRect(this.element);if(this.target.options.resize.square||this.target.options.resize.preserveAspectRatio){var c=x({},this.prepared.edges);c.top=c.top||c.left&amp;&amp;!c.bottom;c.left=c.left||c.top&amp;&amp;!c.right;c.bottom=c.bottom||c.right&amp;&amp;!c.top;c.right=c.right||c.bottom&amp;&amp;!c.left;this.prepared._linkedEdges=c}else this.prepared._linkedEdges=null;this.target.options.resize.preserveAspectRatio&amp;&amp;
(this.resizeStartAspectRatio=b.width/b.height);this.resizeRects={start:b,current:x({},b),restricted:x({},b),previous:x({},b),delta:{left:0,right:0,width:0,top:0,bottom:0,height:0}};a.rect=this.resizeRects.restricted;a.deltaRect=this.resizeRects.delta}this.target.fire(a);this.resizing=!0;return a},resizeMove:function(a){a=new G(this,a,"resize","move",this.element);var b=this.prepared.edges,c=this.target.options.resize.invert,d="reposition"===c||"negate"===c;if(b){var e=a.dx,h=a.dy,f=this.resizeRects.start,
g=this.resizeRects.current,k=this.resizeRects.restricted,l=this.resizeRects.delta,n=x(this.resizeRects.previous,k),m=b;if(this.target.options.resize.preserveAspectRatio){var p=this.resizeStartAspectRatio,b=this.prepared._linkedEdges;if(m.left&amp;&amp;m.bottom||m.right&amp;&amp;m.top)h=-e/p;else if(m.left||m.right)h=e/p;else if(m.top||m.bottom)e=h*p}else if(this.target.options.resize.square)if(b=this.prepared._linkedEdges,m.left&amp;&amp;m.bottom||m.right&amp;&amp;m.top)h=-e;else if(m.left||m.right)h=e;else if(m.top||m.bottom)e=
h;b.top&amp;&amp;(g.top+=h);b.bottom&amp;&amp;(g.bottom+=h);b.left&amp;&amp;(g.left+=e);b.right&amp;&amp;(g.right+=e);d?(x(k,g),"reposition"===c&amp;&amp;(k.top&gt;k.bottom&amp;&amp;(b=k.top,k.top=k.bottom,k.bottom=b),k.left&gt;k.right&amp;&amp;(b=k.left,k.left=k.right,k.right=b))):(k.top=Math.min(g.top,f.bottom),k.bottom=Math.max(g.bottom,f.top),k.left=Math.min(g.left,f.right),k.right=Math.max(g.right,f.left));k.width=k.right-k.left;k.height=k.bottom-k.top;for(var q in k)l[q]=k[q]-n[q];a.edges=this.prepared.edges;a.rect=k;a.deltaRect=l}this.target.fire(a);
return a},gestureStart:function(a){a=new G(this,a,"gesture","start",this.element);a.ds=0;this.gesture.startDistance=this.gesture.prevDistance=a.distance;this.gesture.startAngle=this.gesture.prevAngle=a.angle;this.gesture.scale=1;this.gesturing=!0;this.target.fire(a);return a},gestureMove:function(a){if(!this.pointerIds.length)return this.prevEvent;a=new G(this,a,"gesture","move",this.element);a.ds=a.scale-this.gesture.scale;this.target.fire(a);this.gesture.prevAngle=a.angle;this.gesture.prevDistance=
a.distance;Infinity===a.scale||null===a.scale||void 0===a.scale||isNaN(a.scale)||(this.gesture.scale=a.scale);return a},pointerHold:function(a,b,c){this.collectEventTargets(a,b,c,"hold")},pointerUp:function(a,b,c,d){var e=this.mouse?0:v(this.pointerIds,O(a));clearTimeout(this.holdTimers[e]);this.collectEventTargets(a,b,c,"up");this.collectEventTargets(a,b,c,"tap");this.pointerEnd(a,b,c,d);this.removePointer(a)},pointerCancel:function(a,b,c,d){var e=this.mouse?0:v(this.pointerIds,O(a));clearTimeout(this.holdTimers[e]);
this.collectEventTargets(a,b,c,"cancel");this.pointerEnd(a,b,c,d);this.removePointer(a)},ie8Dblclick:function(a,b,c){this.prevTap&amp;&amp;b.clientX===this.prevTap.clientX&amp;&amp;b.clientY===this.prevTap.clientY&amp;&amp;c===this.prevTap.target&amp;&amp;(this.downTargets[0]=c,this.downTimes[0]=(new Date).getTime(),this.collectEventTargets(a,b,c,"tap"))},pointerEnd:function(a,b,c,d){var e,h=this.target,f=h&amp;&amp;h.options,g=f&amp;&amp;this.prepared.name&amp;&amp;f[this.prepared.name].inertia;e=this.inertiaStatus;if(this.interacting()){if(e.active&amp;&amp;
!e.ending)return;var k=(new Date).getTime(),l=!1,m=!1,n=!1,p=Ma(h,this.prepared.name)&amp;&amp;f[this.prepared.name].snap.endOnly,q=Na(h,this.prepared.name)&amp;&amp;f[this.prepared.name].restrict.endOnly,r=0,t=0,f=this.dragging?"x"===f.drag.axis?Math.abs(this.pointerDelta.client.vx):"y"===f.drag.axis?Math.abs(this.pointerDelta.client.vy):this.pointerDelta.client.speed:this.pointerDelta.client.speed,m=(l=g&amp;&amp;g.enabled&amp;&amp;"gesture"!==this.prepared.name&amp;&amp;b!==e.startEvent)&amp;&amp;50&gt;k-this.curCoords.timeStamp&amp;&amp;f&gt;g.minSpeed&amp;&amp;
f&gt;g.endSpeed;l&amp;&amp;!m&amp;&amp;(p||q)&amp;&amp;(g={},g.snap=g.restrict=g,p&amp;&amp;(this.setSnapping(this.curCoords.page,g),g.locked&amp;&amp;(r+=g.dx,t+=g.dy)),q&amp;&amp;(this.setRestriction(this.curCoords.page,g),g.restricted&amp;&amp;(r+=g.dx,t+=g.dy)),r||t)&amp;&amp;(n=!0);if(m||n){sa(e.upCoords,this.curCoords);this.pointers[0]=e.startEvent=new G(this,b,this.prepared.name,"inertiastart",this.element);e.t0=k;h.fire(e.startEvent);m?(e.vx0=this.pointerDelta.client.vx,e.vy0=this.pointerDelta.client.vy,e.v0=f,this.calcInertia(e),b=x({},this.curCoords.page),
h=na(h,this.element),b.x=b.x+e.xe-h.x,b.y=b.y+e.ye-h.y,h={useStatusXY:!0,x:b.x,y:b.y,dx:0,dy:0,snap:null},h.snap=h,r=t=0,p&amp;&amp;(b=this.setSnapping(this.curCoords.page,h),b.locked&amp;&amp;(r+=b.dx,t+=b.dy)),q&amp;&amp;(h=this.setRestriction(this.curCoords.page,h),h.restricted&amp;&amp;(r+=h.dx,t+=h.dy)),e.modifiedXe+=r,e.modifiedYe+=t,e.i=T(this.boundInertiaFrame)):(e.smoothEnd=!0,e.xe=r,e.ye=t,e.sx=e.sy=0,e.i=T(this.boundSmoothEndFrame));e.active=!0;return}(p||q)&amp;&amp;this.pointerMove(a,b,c,d,!0)}this.dragging?(e=new G(this,b,
"drag","end",this.element),q=this.getDrop(e,b,this.element),this.dropTarget=q.dropzone,this.dropElement=q.element,q=this.getDropEvents(b,e),q.leave&amp;&amp;this.prevDropTarget.fire(q.leave),q.enter&amp;&amp;this.dropTarget.fire(q.enter),q.drop&amp;&amp;this.dropTarget.fire(q.drop),q.deactivate&amp;&amp;this.fireActiveDrops(q.deactivate),h.fire(e)):this.resizing?(e=new G(this,b,"resize","end",this.element),h.fire(e)):this.gesturing&amp;&amp;(e=new G(this,b,"gesture","end",this.element),h.fire(e));this.stop(b)},collectDrops:function(a){var b=
[],c=[],d;a=a||this.element;for(d=0;d&lt;B.length;d++)if(B[d].options.drop.enabled){var e=B[d],h=e.options.drop.accept;if(!(t(h)&amp;&amp;h!==a||N(h)&amp;&amp;!R(a,h)))for(var h=e.selector?e._context.querySelectorAll(e.selector):[e._element],f=0,g=h.length;f&lt;g;f++){var k=h[f];k!==a&amp;&amp;(b.push(e),c.push(k))}}return{dropzones:b,elements:c}},fireActiveDrops:function(a){var b,c,d,e;for(b=0;b&lt;this.activeDrops.dropzones.length;b++)c=this.activeDrops.dropzones[b],d=this.activeDrops.elements[b],d!==e&amp;&amp;(a.target=d,c.fire(a)),
e=d},setActiveDrops:function(a){a=this.collectDrops(a,!0);this.activeDrops.dropzones=a.dropzones;this.activeDrops.elements=a.elements;this.activeDrops.rects=[];for(a=0;a&lt;this.activeDrops.dropzones.length;a++)this.activeDrops.rects[a]=this.activeDrops.dropzones[a].getRect(this.activeDrops.elements[a])},getDrop:function(a,b,c){var d=[];Pa&amp;&amp;this.setActiveDrops(c);for(var e=0;e&lt;this.activeDrops.dropzones.length;e++){var h=this.activeDrops.elements[e];d.push(this.activeDrops.dropzones[e].dropCheck(a,b,
this.target,c,h,this.activeDrops.rects[e])?h:null)}c=(b=d[0])?0:-1;for(var f,e=[],g=[],h=1;h&lt;d.length;h++)if((a=d[h])&amp;&amp;a!==b)if(!b)b=a,c=h;else if(a.parentNode!==a.ownerDocument)if(b.parentNode===a.ownerDocument)b=a,c=h;else{if(!e.length)for(f=b;f.parentNode&amp;&amp;f.parentNode!==f.ownerDocument;)e.unshift(f),f=f.parentNode;if(b instanceof qb&amp;&amp;a instanceof Xa&amp;&amp;!(a instanceof pb)){if(a===b.parentNode)continue;f=a.ownerSVGElement}else f=a;for(g=[];f.parentNode!==f.ownerDocument;)g.unshift(f),f=f.parentNode;
for(f=0;g[f]&amp;&amp;g[f]===e[f];)f++;f=[g[f-1],g[f],e[f]];for(g=f[0].lastChild;g;){if(g===f[1]){b=a;c=h;e=[];break}else if(g===f[2])break;g=g.previousSibling}}d=c;return{dropzone:this.activeDrops.dropzones[d]||null,element:this.activeDrops.elements[d]||null}},getDropEvents:function(a,b){var c={enter:null,leave:null,activate:null,deactivate:null,move:null,drop:null};this.dropElement!==this.prevDropElement&amp;&amp;(this.prevDropTarget&amp;&amp;(c.leave={target:this.prevDropElement,dropzone:this.prevDropTarget,relatedTarget:b.target,
draggable:b.interactable,dragEvent:b,interaction:this,timeStamp:b.timeStamp,type:"dragleave"},b.dragLeave=this.prevDropElement,b.prevDropzone=this.prevDropTarget),this.dropTarget&amp;&amp;(c.enter={target:this.dropElement,dropzone:this.dropTarget,relatedTarget:b.target,draggable:b.interactable,dragEvent:b,interaction:this,timeStamp:b.timeStamp,type:"dragenter"},b.dragEnter=this.dropElement,b.dropzone=this.dropTarget));"dragend"===b.type&amp;&amp;this.dropTarget&amp;&amp;(c.drop={target:this.dropElement,dropzone:this.dropTarget,
relatedTarget:b.target,draggable:b.interactable,dragEvent:b,interaction:this,timeStamp:b.timeStamp,type:"drop"},b.dropzone=this.dropTarget);"dragstart"===b.type&amp;&amp;(c.activate={target:null,dropzone:null,relatedTarget:b.target,draggable:b.interactable,dragEvent:b,interaction:this,timeStamp:b.timeStamp,type:"dropactivate"});"dragend"===b.type&amp;&amp;(c.deactivate={target:null,dropzone:null,relatedTarget:b.target,draggable:b.interactable,dragEvent:b,interaction:this,timeStamp:b.timeStamp,type:"dropdeactivate"});
"dragmove"===b.type&amp;&amp;this.dropTarget&amp;&amp;(c.move={target:this.dropElement,dropzone:this.dropTarget,relatedTarget:b.target,draggable:b.interactable,dragEvent:b,interaction:this,dragmove:b,timeStamp:b.timeStamp,type:"dropmove"},b.dropzone=this.dropTarget);return c},currentAction:function(){return this.dragging&amp;&amp;"drag"||this.resizing&amp;&amp;"resize"||this.gesturing&amp;&amp;"gesture"||null},interacting:function(){return this.dragging||this.resizing||this.gesturing},clearTargets:function(){this.dropTarget=this.dropElement=
this.prevDropTarget=this.prevDropElement=this.target=this.element=null},stop:function(a){if(this.interacting()){p.stop();this.matches=[];this.matchElements=[];var b=this.target;b.options.styleCursor&amp;&amp;(b._doc.documentElement.style.cursor="");a&amp;&amp;A(a.preventDefault)&amp;&amp;this.checkAndPreventDefault(a,b,this.element);this.dragging&amp;&amp;(this.activeDrops.dropzones=this.activeDrops.elements=this.activeDrops.rects=null)}this.clearTargets();this.pointerIsDown=this.snapStatus.locked=this.dragging=this.resizing=this.gesturing=
!1;this.prepared.name=this.prevEvent=null;for(a=this.inertiaStatus.resumeDx=this.inertiaStatus.resumeDy=0;a&lt;this.pointers.length;a++)-1===v(this.pointerIds,O(this.pointers[a]))&amp;&amp;this.pointers.splice(a,1)},inertiaFrame:function(){var a,b,c=this.inertiaStatus;a=this.target.options[this.prepared.name].inertia.resistance;b=(new Date).getTime()/1E3-c.t0;if(b&lt;c.te){b=1-(Math.exp(-a*b)-c.lambda_v0)/c.one_ve_v0;if(c.modifiedXe===c.xe&amp;&amp;c.modifiedYe===c.ye)c.sx=c.xe*b,c.sy=c.ye*b;else{var d=c.ye,e=c.modifiedYe;
a=Za(b,0,c.xe,c.modifiedXe);b=Za(b,0,d,e);c.sx=a;c.sy=b}this.pointerMove(c.startEvent,c.startEvent);c.i=T(this.boundInertiaFrame)}else c.ending=!0,c.sx=c.modifiedXe,c.sy=c.modifiedYe,this.pointerMove(c.startEvent,c.startEvent),this.pointerEnd(c.startEvent,c.startEvent),c.active=c.ending=!1},smoothEndFrame:function(){var a=this.inertiaStatus,b=(new Date).getTime()-a.t0,c=this.target.options[this.prepared.name].inertia.smoothEndDuration;if(b&lt;c){var d;d=b/c;a.sx=-a.xe*d*(d-2)+0;b/=c;a.sy=-a.ye*b*(b-
2)+0;this.pointerMove(a.startEvent,a.startEvent);a.i=T(this.boundSmoothEndFrame)}else a.ending=!0,a.sx=a.xe,a.sy=a.ye,this.pointerMove(a.startEvent,a.startEvent),this.pointerEnd(a.startEvent,a.startEvent),a.smoothEnd=a.active=a.ending=!1},addPointer:function(a){var b=O(a),c=this.mouse?0:v(this.pointerIds,b);-1===c&amp;&amp;(c=this.pointerIds.length);this.pointerIds[c]=b;this.pointers[c]=a;return c},removePointer:function(a){a=O(a);a=this.mouse?0:v(this.pointerIds,a);-1!==a&amp;&amp;(this.pointers.splice(a,1),this.pointerIds.splice(a,
1),this.downTargets.splice(a,1),this.downTimes.splice(a,1),this.holdTimers.splice(a,1))},recordPointer:function(a){var b=this.mouse?0:v(this.pointerIds,O(a));-1!==b&amp;&amp;(this.pointers[b]=a)},collectEventTargets:function(a,b,c,d){function e(a,b,e){e=ka?e.querySelectorAll(b):void 0;a._iEvents[d]&amp;&amp;t(k)&amp;&amp;va(a,k)&amp;&amp;!Z(a,k,c)&amp;&amp;aa(a,k,c)&amp;&amp;R(k,b,e)&amp;&amp;(f.push(a),g.push(k))}var h=this.mouse?0:v(this.pointerIds,O(a));if("tap"!==d||!this.pointerWasMoved&amp;&amp;this.downTargets[h]&amp;&amp;this.downTargets[h]===c){for(var f=[],
g=[],k=c;k;)l.isSet(k)&amp;&amp;l(k)._iEvents[d]&amp;&amp;(f.push(l(k)),g.push(k)),B.forEachSelector(e),k=L(k);(f.length||"tap"===d)&amp;&amp;this.firePointers(a,b,c,f,g,d)}},firePointers:function(a,b,c,d,e,h){var f=this.mouse?0:v(this.pointerIds,O(a)),g={},k,l;"doubletap"===h?g=a:(ra(g,b),b!==a&amp;&amp;ra(g,a),g.preventDefault=fb,g.stopPropagation=G.prototype.stopPropagation,g.stopImmediatePropagation=G.prototype.stopImmediatePropagation,g.interaction=this,g.timeStamp=(new Date).getTime(),g.originalEvent=b,g.originalPointer=a,
g.type=h,g.pointerId=O(a),g.pointerType=this.mouse?"mouse":oa?N(a.pointerType)?a.pointerType:[,,"touch","pen","mouse"][a.pointerType]:"touch");"tap"===h&amp;&amp;(g.dt=g.timeStamp-this.downTimes[f],k=g.timeStamp-this.tapTime,l=!!(this.prevTap&amp;&amp;"doubletap"!==this.prevTap.type&amp;&amp;this.prevTap.target===g.target&amp;&amp;500&gt;k),g["double"]=l,this.tapTime=g.timeStamp);for(a=0;a&lt;d.length&amp;&amp;!(g.currentTarget=e[a],g.interactable=d[a],d[a].fire(g),g.immediatePropagationStopped||g.propagationStopped&amp;&amp;e[a+1]!==g.currentTarget);a++);
l?(d={},x(d,g),d.dt=k,d.type="doubletap",this.collectEventTargets(d,b,c,"doubletap"),this.prevTap=d):"tap"===h&amp;&amp;(this.prevTap=g)},validateSelector:function(a,b,c,d){for(var e=0,h=c.length;e&lt;h;e++){var f=c[e],g=d[e],k=W(f.getAction(a,b,this,g),f);if(k&amp;&amp;ha(f,g,k))return this.target=f,this.element=g,k}},setSnapping:function(a,b){var c=this.target.options[this.prepared.name].snap,d=[],e,h,f;b=b||this.snapStatus;b.useStatusXY?h={x:b.x,y:b.y}:(e=na(this.target,this.element),h=x({},a),h.x-=e.x,h.y-=e.y);
b.realX=h.x;b.realY=h.y;h.x-=this.inertiaStatus.resumeDx;h.y-=this.inertiaStatus.resumeDy;for(var g=c.targets?c.targets.length:0,k=0;k&lt;this.snapOffsets.length;k++){var l=h.x-this.snapOffsets[k].x,m=h.y-this.snapOffsets[k].y;for(f=0;f&lt;g;f++)(e=A(c.targets[f])?c.targets[f](l,m,this):c.targets[f])&amp;&amp;d.push({x:K(e.x)?e.x+this.snapOffsets[k].x:l,y:K(e.y)?e.y+this.snapOffsets[k].y:m,range:K(e.range)?e.range:c.range})}var c=null,k=!1,n=0,p=0;f=m=l=0;for(g=d.length;f&lt;g;f++){e=d[f];var q=e.range,r=e.x-h.x,
t=e.y-h.y,w=fa(r,t),v=w&lt;=q;Infinity===q&amp;&amp;k&amp;&amp;Infinity!==p&amp;&amp;(v=!1);if(!c||(v?k&amp;&amp;Infinity!==q?w/q&lt;n/p:Infinity===q&amp;&amp;Infinity!==p||w&lt;n:!k&amp;&amp;w&lt;n))Infinity===q&amp;&amp;(v=!0),c=e,n=w,p=q,k=v,l=r,m=t,b.range=q}c?(d=b.snappedX!==c.x||b.snappedY!==c.y,b.snappedX=c.x,b.snappedY=c.y):(d=!0,b.snappedX=NaN,b.snappedY=NaN);b.dx=l;b.dy=m;b.changed=d||k&amp;&amp;!b.locked;b.locked=k;return b},setRestriction:function(a,b){var c=this.target,d=c&amp;&amp;c.options[this.prepared.name].restrict,e=d&amp;&amp;d.restriction;if(!e)return b;b=b||this.restrictStatus;
d=b.useStatusXY?d={x:b.x,y:b.y}:d=x({},a);b.snap&amp;&amp;b.snap.locked&amp;&amp;(d.x+=b.snap.dx||0,d.y+=b.snap.dy||0);d.x-=this.inertiaStatus.resumeDx;d.y-=this.inertiaStatus.resumeDy;b.dx=0;b.dy=0;b.restricted=!1;if(N(e)&amp;&amp;(e="parent"===e?L(this.element):"self"===e?c.getRect(this.element):Ka(this.element,e),!e))return b;A(e)&amp;&amp;(e=e(d.x,d.y,this.element));t(e)&amp;&amp;(e=ua(e));(c=e)?"x"in e&amp;&amp;"y"in e?(e=Math.max(Math.min(c.x+c.width-this.restrictOffset.right,d.x),c.x+this.restrictOffset.left),c=Math.max(Math.min(c.y+c.height-
this.restrictOffset.bottom,d.y),c.y+this.restrictOffset.top)):(e=Math.max(Math.min(c.right-this.restrictOffset.right,d.x),c.left+this.restrictOffset.left),c=Math.max(Math.min(c.bottom-this.restrictOffset.bottom,d.y),c.top+this.restrictOffset.top)):(e=d.x,c=d.y);b.dx=e-d.x;b.dy=c-d.y;b.changed=b.restrictedX!==e||b.restrictedY!==c;b.restricted=!(!b.dx&amp;&amp;!b.dy);b.restrictedX=e;b.restrictedY=c;return b},checkAndPreventDefault:function(a,b,c){if(b=b||this.target){b=b.options;var d=b.preventDefault;"auto"===
d&amp;&amp;c&amp;&amp;!/^(input|select|textarea)$/i.test(a.target.nodeName)?/down|start/i.test(a.type)&amp;&amp;"drag"===this.prepared.name&amp;&amp;"xy"!==b.drag.axis||b[this.prepared.name]&amp;&amp;b[this.prepared.name].manualStart&amp;&amp;!this.interacting()||a.preventDefault():"always"===d&amp;&amp;a.preventDefault()}},calcInertia:function(a){var b=this.target.options[this.prepared.name].inertia,c=b.resistance,d=-Math.log(b.endSpeed/a.v0)/c;a.x0=this.prevEvent.pageX;a.y0=this.prevEvent.pageY;a.t0=a.startEvent.timeStamp/1E3;a.sx=a.sy=0;a.modifiedXe=
a.xe=(a.vx0-d)/c;a.modifiedYe=a.ye=(a.vy0-d)/c;a.te=d;a.lambda_v0=c/a.v0;a.one_ve_v0=1-b.endSpeed/a.v0},autoScrollMove:function(a){var b;if(b=this.interacting()){b=this.prepared.name;var c=this.target.options;/^resize/.test(b)&amp;&amp;(b="resize");b=c[b].autoScroll&amp;&amp;c[b].autoScroll.enabled}if(b)if(this.inertiaStatus.active)p.x=p.y=0;else{var d,e=this.target.options[this.prepared.name].autoScroll,h=e.container||V(this.element);Ba(h)?(d=a.clientX&lt;p.margin,b=a.clientY&lt;p.margin,c=a.clientX&gt;h.innerWidth-p.margin,
a=a.clientY&gt;h.innerHeight-p.margin):(h=Fa(h),d=a.clientX&lt;h.left+p.margin,b=a.clientY&lt;h.top+p.margin,c=a.clientX&gt;h.right-p.margin,a=a.clientY&gt;h.bottom-p.margin);p.x=c?1:d?-1:0;p.y=a?1:b?-1:0;p.isScrolling||(p.margin=e.margin,p.speed=e.speed,p.start(this))}},_updateEventTargets:function(a,b){this._eventTarget=a;this._curEventTarget=b}};G.prototype={preventDefault:ma,stopImmediatePropagation:function(){this.immediatePropagationStopped=this.propagationStopped=!0},stopPropagation:function(){this.propagationStopped=
!0}};for(var m={},lb="dragStart dragMove resizeStart resizeMove gestureStart gestureMove pointerOver pointerOut pointerHover selectorDown pointerDown pointerMove pointerUp pointerCancel pointerEnd addPointer removePointer recordPointer autoScrollMove".split(" "),Ra=0,Sa=lb.length;Ra&lt;Sa;Ra++){var mb=lb[Ra];m[mb]=cb(mb)}B.indexOfElement=function(a,b){b=b||Q;for(var c=0;c&lt;this.length;c++){var d=this[c];if(d.selector===a&amp;&amp;d._context===b||!d.selector&amp;&amp;d._element===a)return c}return-1};B.get=function(a,
b){return this[this.indexOfElement(a,b&amp;&amp;b.context)]};B.forEachSelector=function(a){for(var b=0;b&lt;this.length;b++){var c=this[b];if(c.selector&amp;&amp;(c=a(c,c.selector,c._context,b,this),void 0!==c))return c}};C.prototype={setOnEvents:function(a,b){"drop"===a?(A(b.ondrop)&amp;&amp;(this.ondrop=b.ondrop),A(b.ondropactivate)&amp;&amp;(this.ondropactivate=b.ondropactivate),A(b.ondropdeactivate)&amp;&amp;(this.ondropdeactivate=b.ondropdeactivate),A(b.ondragenter)&amp;&amp;(this.ondragenter=b.ondragenter),A(b.ondragleave)&amp;&amp;(this.ondragleave=
b.ondragleave),A(b.ondropmove)&amp;&amp;(this.ondropmove=b.ondropmove)):(a="on"+a,A(b.onstart)&amp;&amp;(this[a+"start"]=b.onstart),A(b.onmove)&amp;&amp;(this[a+"move"]=b.onmove),A(b.onend)&amp;&amp;(this[a+"end"]=b.onend),A(b.oninertiastart)&amp;&amp;(this[a+"inertiastart"]=b.oninertiastart));return this},draggable:function(a){return z(a)?(this.options.drag.enabled=!1===a.enabled?!1:!0,this.setPerAction("drag",a),this.setOnEvents("drag",a),/^x$|^y$|^xy$/.test(a.axis)?this.options.drag.axis=a.axis:null===a.axis&amp;&amp;delete this.options.drag.axis,
this):H(a)?(this.options.drag.enabled=a,this):this.options.drag},setPerAction:function(a,b){for(var c in b)c in D[a]&amp;&amp;(z(b[c])?(this.options[a][c]=x(this.options[a][c]||{},b[c]),z(D.perAction[c])&amp;&amp;"enabled"in D.perAction[c]&amp;&amp;(this.options[a][c].enabled=!1===b[c].enabled?!1:!0)):H(b[c])&amp;&amp;z(D.perAction[c])?this.options[a][c].enabled=b[c]:void 0!==b[c]&amp;&amp;(this.options[a][c]=b[c]))},dropzone:function(a){return z(a)?(this.options.drop.enabled=!1===a.enabled?!1:!0,this.setOnEvents("drop",a),/^(pointer|center)$/.test(a.overlap)?
this.options.drop.overlap=a.overlap:K(a.overlap)&amp;&amp;(this.options.drop.overlap=Math.max(Math.min(1,a.overlap),0)),"accept"in a&amp;&amp;(this.options.drop.accept=a.accept),"checker"in a&amp;&amp;(this.options.drop.checker=a.checker),this):H(a)?(this.options.drop.enabled=a,this):this.options.drop},dropCheck:function(a,b,c,d,e,h){var f=!1;if(!(h=h||this.getRect(e)))return this.options.drop.checker?this.options.drop.checker(a,b,f,this,e,c,d):!1;var g=this.options.drop.overlap;if("pointer"===g){var k=Da(a),f=na(c,d);k.x+=
f.x;k.y+=f.y;f=k.x&gt;h.left&amp;&amp;k.x&lt;h.right;k=k.y&gt;h.top&amp;&amp;k.y&lt;h.bottom;f=f&amp;&amp;k}k=c.getRect(d);if("center"===g)var f=k.left+k.width/2,l=k.top+k.height/2,f=f&gt;=h.left&amp;&amp;f&lt;=h.right&amp;&amp;l&gt;=h.top&amp;&amp;l&lt;=h.bottom;K(g)&amp;&amp;(f=Math.max(0,Math.min(h.right,k.right)-Math.max(h.left,k.left))*Math.max(0,Math.min(h.bottom,k.bottom)-Math.max(h.top,k.top))/(k.width*k.height)&gt;=g);this.options.drop.checker&amp;&amp;(f=this.options.drop.checker(a,b,f,this,e,c,d));return f},dropChecker:function(a){return A(a)?(this.options.drop.checker=a,this):
null===a?(delete this.options.getRect,this):this.options.drop.checker},accept:function(a){return t(a)||ea(a)?(this.options.drop.accept=a,this):null===a?(delete this.options.drop.accept,this):this.options.drop.accept},resizable:function(a){return z(a)?(this.options.resize.enabled=!1===a.enabled?!1:!0,this.setPerAction("resize",a),this.setOnEvents("resize",a),/^x$|^y$|^xy$/.test(a.axis)?this.options.resize.axis=a.axis:null===a.axis&amp;&amp;(this.options.resize.axis=D.resize.axis),H(a.preserveAspectRatio)?
this.options.resize.preserveAspectRatio=a.preserveAspectRatio:H(a.square)&amp;&amp;(this.options.resize.square=a.square),this):H(a)?(this.options.resize.enabled=a,this):this.options.resize},squareResize:function(a){return H(a)?(this.options.resize.square=a,this):null===a?(delete this.options.resize.square,this):this.options.resize.square},gesturable:function(a){return z(a)?(this.options.gesture.enabled=!1===a.enabled?!1:!0,this.setPerAction("gesture",a),this.setOnEvents("gesture",a),this):H(a)?(this.options.gesture.enabled=
a,this):this.options.gesture},autoScroll:function(a){z(a)?a=x({actions:["drag","resize"]},a):H(a)&amp;&amp;(a={actions:["drag","resize"],enabled:a});return this.setOptions("autoScroll",a)},snap:function(a){a=this.setOptions("snap",a);return a===this?this:a.drag},setOptions:function(a,b){var c=b&amp;&amp;da(b.actions)?b.actions:["drag"],d;if(z(b)||H(b)){for(d=0;d&lt;c.length;d++){var e=/resize/.test(c[d])?"resize":c[d];z(this.options[e])&amp;&amp;(e=this.options[e][a],z(b)?(x(e,b),e.enabled=!1===b.enabled?!1:!0,"snap"===a&amp;&amp;
("grid"===e.mode?e.targets=[l.createSnapGrid(x({offset:e.gridOffset||{x:0,y:0}},e.grid||{}))]:"anchor"===e.mode?e.targets=e.anchors:"path"===e.mode&amp;&amp;(e.targets=e.paths),"elementOrigin"in b&amp;&amp;(e.relativePoints=[b.elementOrigin]))):H(b)&amp;&amp;(e.enabled=b))}return this}c={};e=["drag","resize","gesture"];for(d=0;d&lt;e.length;d++)a in D[e[d]]&amp;&amp;(c[e[d]]=this.options[e[d]][a]);return c},inertia:function(a){a=this.setOptions("inertia",a);return a===this?this:a.drag},getAction:function(a,b,c,d){var e=this.defaultActionChecker(a,
c,d);return this.options.actionChecker?this.options.actionChecker(a,b,e,this,d,c):e},defaultActionChecker:hb,actionChecker:function(a){return A(a)?(this.options.actionChecker=a,this):null===a?(delete this.options.actionChecker,this):this.options.actionChecker},getRect:function(a){a=a||this._element;this.selector&amp;&amp;!t(a)&amp;&amp;(a=this._context.querySelector(this.selector));return ua(a)},rectChecker:function(a){return A(a)?(this.getRect=a,this):null===a?(delete this.options.getRect,this):this.getRect},styleCursor:function(a){return H(a)?
(this.options.styleCursor=a,this):null===a?(delete this.options.styleCursor,this):this.options.styleCursor},preventDefault:function(a){return/^(always|never|auto)$/.test(a)?(this.options.preventDefault=a,this):H(a)?(this.options.preventDefault=a?"always":"never",this):this.options.preventDefault},origin:function(a){return ea(a)||z(a)?(this.options.origin=a,this):this.options.origin},deltaSource:function(a){return"page"===a||"client"===a?(this.options.deltaSource=a,this):this.options.deltaSource},
restrict:function(a){if(!z(a))return this.setOptions("restrict",a);for(var b=["drag","resize","gesture"],c,d=0;d&lt;b.length;d++){var e=b[d];e in a&amp;&amp;(c=x({actions:[e],restriction:a[e]},a),c=this.setOptions("restrict",c))}return c},context:function(){return this._context},_context:Q,ignoreFrom:function(a){return ea(a)||t(a)?(this.options.ignoreFrom=a,this):this.options.ignoreFrom},allowFrom:function(a){return ea(a)||t(a)?(this.options.allowFrom=a,this):this.options.allowFrom},element:function(){return this._element},
fire:function(a){if(!a||!a.type||-1===v(ca,a.type))return this;var b,c,d,e="on"+a.type;if(a.type in this._iEvents)for(b=this._iEvents[a.type],c=0,d=b.length;c&lt;d&amp;&amp;!a.immediatePropagationStopped;c++)b[c](a);if(A(this[e]))this[e](a);if(a.type in U&amp;&amp;(b=U[a.type]))for(c=0,d=b.length;c&lt;d&amp;&amp;!a.immediatePropagationStopped;c++)b[c](a);return this},on:function(a,b,c){var d;N(a)&amp;&amp;-1!==a.search(" ")&amp;&amp;(a=a.trim().split(/ +/));if(da(a)){for(d=0;d&lt;a.length;d++)this.on(a[d],b,c);return this}if(z(a)){for(d in a)this.on(d,
a[d],b);return this}"wheel"===a&amp;&amp;(a=kb);c=c?!0:!1;if(-1!==v(ca,a))a in this._iEvents?this._iEvents[a].push(b):this._iEvents[a]=[b];else if(this.selector){if(!P[a])for(P[a]={selectors:[],contexts:[],listeners:[]},d=0;d&lt;ja.length;d++)n.add(ja[d],a,qa),n.add(ja[d],a,Aa,!0);a=P[a];for(d=a.selectors.length-1;0&lt;=d&amp;&amp;(a.selectors[d]!==this.selector||a.contexts[d]!==this._context);d--);-1===d&amp;&amp;(d=a.selectors.length,a.selectors.push(this.selector),a.contexts.push(this._context),a.listeners.push([]));a.listeners[d].push([b,
c])}else n.add(this._element,a,b,c);return this},off:function(a,b,c){var d;N(a)&amp;&amp;-1!==a.search(" ")&amp;&amp;(a=a.trim().split(/ +/));if(da(a)){for(d=0;d&lt;a.length;d++)this.off(a[d],b,c);return this}if(z(a)){for(var e in a)this.off(e,a[e],b);return this}e=-1;c=c?!0:!1;"wheel"===a&amp;&amp;(a=kb);if(-1!==v(ca,a))(c=this._iEvents[a])&amp;&amp;-1!==(e=v(c,b))&amp;&amp;this._iEvents[a].splice(e,1);else if(this.selector){var h=P[a],f=!1;if(!h)return this;for(e=h.selectors.length-1;0&lt;=e;e--)if(h.selectors[e]===this.selector&amp;&amp;h.contexts[e]===
this._context){var g=h.listeners[e];for(d=g.length-1;0&lt;=d;d--){var k=g[d][1];if(g[d][0]===b&amp;&amp;k===c){g.splice(d,1);g.length||(h.selectors.splice(e,1),h.contexts.splice(e,1),h.listeners.splice(e,1),n.remove(this._context,a,qa),n.remove(this._context,a,Aa,!0),h.selectors.length||(P[a]=null));f=!0;break}}if(f)break}}else n.remove(this._element,a,b,c);return this},set:function(a){z(a)||(a={});this.options=x({},D.base);var b,c=["drag","drop","resize","gesture"],d=["draggable","dropzone","resizable","gesturable"],
e=x(x({},D.perAction),a[h]||{});for(b=0;b&lt;c.length;b++){var h=c[b];this.options[h]=x({},D[h]);this.setPerAction(h,e);this[d[b]](a[h])}c="accept actionChecker allowFrom deltaSource dropChecker ignoreFrom origin preventDefault rectChecker styleCursor".split(" ");b=0;for(Sa=c.length;b&lt;Sa;b++)if(d=c[b],this.options[d]=D.base[d],d in a)this[d](a[d]);return this},unset:function(){n.remove(this._element,"all");if(N(this.selector))for(var a in P)for(var b=P[a];0&lt;b.selectors.length;){b.selectors[0]===this.selector&amp;&amp;
b.contexts[0]===this._context&amp;&amp;(b.selectors.splice(0,1),b.contexts.splice(0,1),b.listeners.splice(0,1),b.selectors.length||(P[a]=null));n.remove(this._context,a,qa);n.remove(this._context,a,Aa,!0);break}else n.remove(this,"all"),this.options.styleCursor&amp;&amp;(this._element.style.cursor="");this.dropzone(!1);B.splice(v(B,this),1);return l}};C.prototype.snap=M(C.prototype.snap,"Interactable#snap is deprecated. See the new documentation for snapping at http://interactjs.io/docs/snapping");C.prototype.restrict=
M(C.prototype.restrict,"Interactable#restrict is deprecated. See the new documentation for resticting at http://interactjs.io/docs/restriction");C.prototype.inertia=M(C.prototype.inertia,"Interactable#inertia is deprecated. See the new documentation for inertia at http://interactjs.io/docs/inertia");C.prototype.autoScroll=M(C.prototype.autoScroll,"Interactable#autoScroll is deprecated. See the new documentation for autoScroll at http://interactjs.io/docs/#autoscroll");C.prototype.squareResize=M(C.prototype.squareResize,
"Interactable#squareResize is deprecated. See http://interactjs.io/docs/#resize-square");C.prototype.accept=M(C.prototype.accept,"Interactable#accept is deprecated. use Interactable#dropzone({ accept: target }) instead");C.prototype.dropChecker=M(C.prototype.dropChecker,"Interactable#dropChecker is deprecated. use Interactable#dropzone({ dropChecker: checkerFunction }) instead");C.prototype.context=M(C.prototype.context,"Interactable#context as a method is deprecated. It will soon be a DOM Node instead");
l.isSet=function(a,b){return-1!==B.indexOfElement(a,b&amp;&amp;b.context)};l.on=function(a,b,c){N(a)&amp;&amp;-1!==a.search(" ")&amp;&amp;(a=a.trim().split(/ +/));if(da(a)){for(var d=0;d&lt;a.length;d++)l.on(a[d],b,c);return l}if(z(a)){for(d in a)l.on(d,a[d],b);return l}-1!==v(ca,a)?U[a]?U[a].push(b):U[a]=[b]:n.add(Q,a,b,c);return l};l.off=function(a,b,c){N(a)&amp;&amp;-1!==a.search(" ")&amp;&amp;(a=a.trim().split(/ +/));if(da(a)){for(var d=0;d&lt;a.length;d++)l.off(a[d],b,c);return l}if(z(a)){for(d in a)l.off(d,a[d],b);return l}if(-1===v(ca,
a))n.remove(Q,a,b,c);else{var e;a in U&amp;&amp;-1!==(e=v(U[a],b))&amp;&amp;U[a].splice(e,1)}return l};l.enableDragging=M(function(a){return null!==a&amp;&amp;void 0!==a?(S.drag=a,l):S.drag},"interact.enableDragging is deprecated and will soon be removed.");l.enableResizing=M(function(a){return null!==a&amp;&amp;void 0!==a?(S.resize=a,l):S.resize},"interact.enableResizing is deprecated and will soon be removed.");l.enableGesturing=M(function(a){return null!==a&amp;&amp;void 0!==a?(S.gesture=a,l):S.gesture},"interact.enableGesturing is deprecated and will soon be removed.");
l.eventTypes=ca;l.debug=function(){var a=r[0]||new xa;return{interactions:r,target:a.target,dragging:a.dragging,resizing:a.resizing,gesturing:a.gesturing,prepared:a.prepared,matches:a.matches,matchElements:a.matchElements,prevCoords:a.prevCoords,startCoords:a.startCoords,pointerIds:a.pointerIds,pointers:a.pointers,addPointer:m.addPointer,removePointer:m.removePointer,recordPointer:m.recordPointer,snap:a.snapStatus,restrict:a.restrictStatus,inertia:a.inertiaStatus,downTime:a.downTimes[0],downEvent:a.downEvent,
downPointer:a.downPointer,prevEvent:a.prevEvent,Interactable:C,interactables:B,pointerIsDown:a.pointerIsDown,defaultOptions:D,defaultActionChecker:hb,actionCursors:za,dragMove:m.dragMove,resizeMove:m.resizeMove,gestureMove:m.gestureMove,pointerUp:m.pointerUp,pointerDown:m.pointerDown,pointerMove:m.pointerMove,pointerHover:m.pointerHover,eventTypes:ca,events:n,globalEvents:U,delegatedEvents:P,prefixedPropREs:Ca}};l.getPointerAverage=Ya;l.getTouchBBox=Ha;l.getTouchDistance=Ia;l.getTouchAngle=Ja;l.getElementRect=
ua;l.getElementClientRect=Fa;l.matchesSelector=R;l.closest=Ka;l.margin=M(function(a){return K(a)?(pa=a,l):pa},"interact.margin is deprecated. Use interact(target).resizable({ margin: number }); instead.");l.supportsTouch=function(){return ga};l.supportsPointerEvent=function(){return oa};l.stop=function(a){for(var b=r.length-1;0&lt;=b;b--)r[b].stop(a);return l};l.dynamicDrop=function(a){return H(a)?(Pa=a,l):Pa};l.pointerMoveTolerance=function(a){return K(a)?(Qa=a,this):Qa};l.maxInteractions=function(a){return K(a)?
(wa=a,this):wa};l.createSnapGrid=function(a){return function(b,c){var d=0,e=0;z(a.offset)&amp;&amp;(d=a.offset.x,e=a.offset.y);return{x:Math.round((b-d)/a.x)*a.x+d,y:Math.round((c-e)/a.y)*a.y+e,range:a.range}}};ib(Q);Oa in Element.prototype&amp;&amp;A(Element.prototype[Oa])||(ka=function(a,b,c){c=c||a.parentNode.querySelectorAll(b);b=0;for(var d=c.length;b&lt;d;b++)if(c[b]===a)return!0;return!1});(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c&lt;b.length&amp;&amp;!F.requestAnimationFrame;++c)T=F[b[c]+"RequestAnimationFrame"],
X=F[b[c]+"CancelAnimationFrame"]||F[b[c]+"CancelRequestAnimationFrame"];T||(T=function(b){var c=(new Date).getTime(),h=Math.max(0,16-(c-a)),f=setTimeout(function(){b(c+h)},h);a=c+h;return f});X||(X=function(a){clearTimeout(a)})})();"undefined"!==typeof exports?("undefined"!==typeof module&amp;&amp;module.exports&amp;&amp;(exports=module.exports=l),exports.interact=l):"function"===typeof define&amp;&amp;define.amd?define("interact",function(){return l}):F.interact=l}})("undefined"===typeof window?void 0:window);
//# sourceMappingURL=interact.min.js.map</contentText>
  </asset>
  <asset name="lib/jquery.datefix.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-30
 */
(function ($) {

    // JSON RegExp
    var rvalidchars = /^[\],:{}\s]*$/;
    var rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g;
    var dateISO = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:[.,]\d+)?[Z\-\+].*?$/i;
    var dateNet = /\/Date\((\d+)(?:-\d+)?\)\//i;

    // replacer RegExp
    var replaceISO = /"(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:[.,](\d+))?[Z\-].*?"/i;
    var replaceNet = /"\\\/Date\((\d+)(?:-\d+)?\)\\\/"/i;

    // determine JSON native support
    var nativeJSON = (window.JSON &amp;&amp; window.JSON.parse) ? true : false;
    var extendedJSON = nativeJSON &amp;&amp; window.JSON.parse('{"x":9}', function (k, v) { return "Y"; }) === "Y";

    var jsonDateConverter = function (key, value) {
        if (typeof (value) === "string") {
            if (dateISO.test(value)) {
                return new Date(value);
            }
            if (dateNet.test(value)) {
                return new Date(parseInt(dateNet.exec(value)[1], 10));
            }
        }
        return value;
    };

    $.extend({
        parseJSON: function (data, convertDates) {
            /// &lt;summary&gt;Takes a well-formed JSON string and returns the resulting JavaScript object.&lt;/summary&gt;
            /// &lt;param name="data" type="String"&gt;The JSON string to parse.&lt;/param&gt;
            /// &lt;param name="convertDates" optional="true" type="Boolean"&gt;Set to true when you want ISO/Asp.net dates to be auto-converted to dates.&lt;/param&gt;

            if (typeof data !== "string" || !data) {
                return null;
            }

            // Make sure leading/trailing whitespace is removed (IE can't handle it)
            data = $.trim(data);

            // Make sure the incoming data is actual JSON
            // Logic borrowed from http://json.org/json2.js
            if (rvalidchars.test(data
                .replace(rvalidescape, "@")
                .replace(rvalidtokens, "]")
                .replace(rvalidbraces, ""))) {
                // Try to use the native JSON parser
                if (extendedJSON || (nativeJSON)) {
                    return window.JSON.parse(data, jsonDateConverter);
                }
                else {
                    data = 
                        data.replace(replaceISO, "new Date(parseInt('$1',10),parseInt('$2',10)-1,parseInt('$3',10),parseInt('$4',10),parseInt('$5',10),parseInt('$6',10),(function(s){return parseInt(s,10)||0;})('$7'))")
                            .replace(replaceNet, "new Date($1)");
                    return (new Function("return " + data))();
                }
            } else {
                $.error("Invalid JSON: " + data);
            }
        }
    });
})(jQuery);
</contentText>
  </asset>
  <asset name="lib/jquery.datefix.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-30
 */
(function(n){var r=/^[\],:{}\s]*$/,u=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,f=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,e=/(?:^|:|,)(?:\s*\[)+/g,o=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:[.,]\d+)?[Z\-\+].*?$/i,t=/\/Date\((\d+)(?:-\d+)?\)\//i,s=/"(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:[.,](\d+))?[Z\-].*?"/i,h=/"\\\/Date\((\d+)(?:-\d+)?\)\\\/"/i,i=window.JSON&amp;&amp;window.JSON.parse?!0:!1,c=i&amp;&amp;window.JSON.parse('{"x":9}',function(){return"Y"})==="Y",l=function(n,i){if(typeof i=="string"){if(o.test(i))return new Date(i);if(t.test(i))return new Date(parseInt(t.exec(i)[1],10))}return i};n.extend({parseJSON:function(t){if(typeof t!="string"||!t)return null;if(t=n.trim(t),r.test(t.replace(u,"@").replace(f,"]").replace(e,"")))return c||i?window.JSON.parse(t,l):(t=t.replace(s,"new Date(parseInt('$1',10),parseInt('$2',10)-1,parseInt('$3',10),parseInt('$4',10),parseInt('$5',10),parseInt('$6',10),(function(s){return parseInt(s,10)||0;})('$7'))").replace(h,"new Date($1)"),new Function("return "+t)());n.error("Invalid JSON: "+t)}})})(jQuery);</contentText>
  </asset>
  <asset name="lib/jquery.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-20
 */
!function(a,b){"object"==typeof module&amp;&amp;"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.1",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0&gt;a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0&gt;a?b:0);return this.pushStack(c&gt;=0&amp;&amp;b&gt;c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&amp;&amp;(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&amp;&amp;(g=this,h--);i&gt;h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&amp;&amp;(j&amp;&amp;c&amp;&amp;(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&amp;&amp;m.isArray(a)?a:[]):f=a&amp;&amp;m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&amp;&amp;(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&amp;&amp;a==a.window},isNumeric:function(a){return!m.isArray(a)&amp;&amp;a-parseFloat(a)&gt;=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!j.call(a,"constructor")&amp;&amp;!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&amp;&amp;m.trim(b)&amp;&amp;(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f&gt;e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f&gt;e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&amp;&amp;(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0&gt;c?Math.max(0,d+c):c:0;d&gt;c;c++)if(c in b&amp;&amp;b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c&gt;d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g&gt;f;f++)d=!b(a[f],f),d!==h&amp;&amp;e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g&gt;f;f++)d=b(a[f],f,c),null!=d&amp;&amp;i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&amp;&amp;i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&amp;&amp;(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b=a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&amp;&amp;b?!0:"array"===c||0===b||"number"==typeof b&amp;&amp;b&gt;0&amp;&amp;b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&amp;&amp;(l=!0),0},C="undefined",D=1&lt;&lt;31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c&gt;b;b++)if(this[b]===a)return b;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",N="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=N.replace("w","w#"),P="\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=":("+N+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=new RegExp("^"+M+"*,"+M+"*"),T=new RegExp("^"+M+"*([&gt;+~]|"+M+")"+M+"*"),U=new RegExp("="+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=new RegExp(Q),W=new RegExp("^"+O+"$"),X={ID:new RegExp("^#("+N+")"),CLASS:new RegExp("^\\.("+N+")"),TAG:new RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+Q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+M+"*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0&gt;d?String.fromCharCode(d+65536):String.fromCharCode(d&gt;&gt;10|55296,1023&amp;d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&amp;&amp;m(b),b=b||n,d=d||[],!a||"string"!=typeof a)return d;if(1!==(k=b.nodeType)&amp;&amp;9!==k)return[];if(p&amp;&amp;!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&amp;&amp;(h=b.ownerDocument.getElementById(j))&amp;&amp;t(b,h)&amp;&amp;h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&amp;&amp;c.getElementsByClassName&amp;&amp;b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&amp;&amp;(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&amp;&amp;a,1===k&amp;&amp;"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&amp;"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&amp;&amp;ob(b.parentNode)||b,x=o.join(",")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+" ")&gt;d.cacheLength&amp;&amp;delete b[a.shift()],b[c+" "]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&amp;&amp;b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&amp;&amp;a,d=c&amp;&amp;1===a.nodeType&amp;&amp;1===b.nodeType&amp;&amp;(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&amp;&amp;b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&amp;&amp;b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&amp;&amp;(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&amp;&amp;typeof a.getElementsByTagName!==C&amp;&amp;a}c=fb.support={},f=fb.isXML=function(a){var b=a&amp;&amp;(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&amp;&amp;9===e.nodeType&amp;&amp;e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&amp;&amp;g!==g.top&amp;&amp;(g.addEventListener?g.addEventListener("unload",function(){m()},!1):g.attachEvent&amp;&amp;g.attachEvent("onunload",function(){m()})),c.attributes=ib(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&amp;&amp;ib(function(a){return a.innerHTML="&lt;div class='a'&gt;&lt;/div&gt;&lt;div class='a i'&gt;&lt;/div&gt;",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&amp;&amp;p){var c=b.getElementById(a);return c&amp;&amp;c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&amp;&amp;a.getAttributeNode("id");return c&amp;&amp;c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&amp;&amp;d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&amp;&amp;function(a,b){return typeof b.getElementsByClassName!==C&amp;&amp;p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&amp;&amp;(ib(function(a){a.innerHTML="&lt;select msallowclip=''&gt;&lt;option selected=''&gt;&lt;/option&gt;&lt;/select&gt;",a.querySelectorAll("[msallowclip^='']").length&amp;&amp;q.push("[*^$]="+M+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":checked").length||q.push(":checked")}),ib(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&amp;&amp;q.push("name"+M+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&amp;&amp;ib(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",Q)}),q=q.length&amp;&amp;new RegExp(q.join("|")),r=r.length&amp;&amp;new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&amp;&amp;b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&amp;&amp;16&amp;a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&amp;d||!c.sortDetached&amp;&amp;b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&amp;&amp;t(v,a)?-1:b===e||b.ownerDocument===v&amp;&amp;t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&amp;d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&amp;&amp;m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&amp;&amp;r.test(b)||q&amp;&amp;q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&amp;&amp;11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length&gt;0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&amp;&amp;m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&amp;&amp;m(a);var e=d.attrHandle[b.toLowerCase()],f=e&amp;&amp;E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&amp;&amp;f.specified?f.value:null},fb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&amp;&amp;a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&amp;&amp;(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{"&gt;":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&amp;&amp;(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&amp;&amp;fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&amp;&amp;a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&amp;&amp;V.test(c)&amp;&amp;(b=g(c,!0))&amp;&amp;(b=c.indexOf(")",c.length-b)-c.length)&amp;&amp;(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+M+")"+a+"("+M+"|$)"))&amp;&amp;y(a,function(a){return b.test("string"==typeof a.className&amp;&amp;a.className||typeof a.getAttribute!==C&amp;&amp;a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&amp;&amp;0===e.indexOf(c):"*="===b?c&amp;&amp;e.indexOf(c)&gt;-1:"$="===b?c&amp;&amp;e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)&gt;-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&amp;&amp;0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&amp;&amp;b.nodeName.toLowerCase(),s=!i&amp;&amp;!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&amp;&amp;!o&amp;&amp;"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&amp;&amp;s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&amp;&amp;j[1],m=j[0]===w&amp;&amp;j[2],l=n&amp;&amp;q.childNodes[n];while(l=++n&amp;&amp;l&amp;&amp;l[p]||(m=n=0)||o.pop())if(1===l.nodeType&amp;&amp;++m&amp;&amp;l===b){k[a]=[w,n,m];break}}else if(s&amp;&amp;(j=(b[u]||(b[u]={}))[a])&amp;&amp;j[0]===w)m=j[1];else while(l=++n&amp;&amp;l&amp;&amp;l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&amp;&amp;++m&amp;&amp;(s&amp;&amp;((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&amp;&amp;m/d&gt;=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length&gt;1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&amp;&amp;(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length&gt;0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)&gt;-1}}),lang:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&amp;&amp;1===b.nodeType);return!1}}),target:function(b){var c=a.location&amp;&amp;a.location.hash;return c&amp;&amp;c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&amp;&amp;(!n.hasFocus||n.hasFocus())&amp;&amp;!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&amp;&amp;!!a.checked||"option"===b&amp;&amp;!!a.selected},selected:function(a){return a.parentNode&amp;&amp;a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType&lt;6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&amp;&amp;"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&amp;&amp;"text"===a.type&amp;&amp;(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0&gt;c?c+b:c]}),even:nb(function(a,b){for(var c=0;b&gt;c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b&gt;c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0&gt;c?c+b:c;--d&gt;=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0&gt;c?c+b:c;++d&lt;b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&amp;&amp;(e&amp;&amp;(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&amp;&amp;(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&amp;&amp;!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d="";c&gt;b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&amp;&amp;"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&amp;&amp;a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&amp;&amp;h[0]===w&amp;&amp;h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length&gt;1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e&gt;d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i&gt;h;h++)(f=a[h])&amp;&amp;(!c||c(f,d,e))&amp;&amp;(g.push(f),j&amp;&amp;b.push(h));return g}function vb(a,b,c,d,e,f){return d&amp;&amp;!d[u]&amp;&amp;(d=vb(d)),e&amp;&amp;!e[u]&amp;&amp;(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&amp;&amp;b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&amp;&amp;c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&amp;&amp;(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&amp;&amp;j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&amp;&amp;(j=e?K.call(f,l):m[k])&gt;-1&amp;&amp;(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)&gt;-1},h,!0),m=[function(a,c,d){return!g&amp;&amp;(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f&gt;i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f&gt;e;e++)if(d.relative[a[e].type])break;return vb(i&gt;1&amp;&amp;sb(m),i&gt;1&amp;&amp;qb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e&gt;i&amp;&amp;wb(a.slice(i,e)),f&gt;e&amp;&amp;wb(a=a.slice(e)),f&gt;e&amp;&amp;qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length&gt;0,e=a.length&gt;0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&amp;&amp;[],s=[],t=j,u=f||e&amp;&amp;d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&amp;&amp;(j=g!==n&amp;&amp;g);q!==x&amp;&amp;null!=(l=u[q]);q++){if(e&amp;&amp;l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&amp;&amp;(w=v)}c&amp;&amp;((l=!o&amp;&amp;l)&amp;&amp;p--,f&amp;&amp;r.push(l))}if(p+=q,c&amp;&amp;q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p&gt;0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&amp;&amp;!f&amp;&amp;s.length&gt;0&amp;&amp;p+b.length&gt;1&amp;&amp;fb.uniqueSort(i)}return k&amp;&amp;(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&amp;&amp;a,o=!f&amp;&amp;g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length&gt;2&amp;&amp;"ID"===(k=j[0]).type&amp;&amp;c.getById&amp;&amp;9===b.nodeType&amp;&amp;p&amp;&amp;d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&amp;&amp;(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&amp;&amp;(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&amp;&amp;ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&amp;&amp;qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&amp;&amp;ob(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&amp;a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){return a.innerHTML="&lt;a href='#'&gt;&lt;/a&gt;","#"===a.firstChild.getAttribute("href")})||jb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&amp;&amp;ib(function(a){return a.innerHTML="&lt;input/&gt;",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute("disabled")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&amp;&amp;d.specified?d.value:null}),fb}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)&gt;=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&amp;&amp;(a=":not("+a+")"),1===b.length&amp;&amp;1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e&gt;b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e&gt;b;b++)m.find(a,d[b],c);return c=this.pushStack(e&gt;1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&amp;&amp;t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="&lt;"===a.charAt(0)&amp;&amp;"&gt;"===a.charAt(a.length-1)&amp;&amp;a.length&gt;=3?[null,a,null]:z.exec(a),!c||!c[1]&amp;&amp;b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&amp;&amp;b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&amp;&amp;m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&amp;&amp;d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&amp;&amp;(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&amp;&amp;9!==e.nodeType&amp;&amp;(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&amp;&amp;d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&amp;&amp;a!==b&amp;&amp;c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d&gt;b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e&gt;d;d++)for(c=this[d];c&amp;&amp;c!==b;c=c.parentNode)if(c.nodeType&lt;11&amp;&amp;(g?g.index(c)&gt;-1:1===c.nodeType&amp;&amp;m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length&gt;1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&amp;&amp;this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&amp;&amp;1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&amp;&amp;11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&amp;&amp;(d=c),d&amp;&amp;"string"==typeof d&amp;&amp;(e=m.filter(d,e)),this.length&gt;1&amp;&amp;(C[a]||(e=m.unique(e)),B.test(a)&amp;&amp;(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&amp;&amp;[],j=function(l){for(c=a.memory&amp;&amp;l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&amp;&amp;e&gt;f;f++)if(h[f].apply(l[0],l[1])===!1&amp;&amp;a.stopOnFalse){c=!1;break}b=!1,h&amp;&amp;(i?i.length&amp;&amp;j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&amp;&amp;k.has(c)||h.push(c):c&amp;&amp;c.length&amp;&amp;"string"!==d&amp;&amp;f(c)})}(arguments),b?e=h.length:c&amp;&amp;(g=d,j(c))}return this},remove:function(){return h&amp;&amp;m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))&gt;-1)h.splice(d,1),b&amp;&amp;(e&gt;=d&amp;&amp;e--,f&gt;=d&amp;&amp;f--)}),this},has:function(a){return a?m.inArray(a,h)&gt;-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&amp;&amp;!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&amp;&amp;a[b];e[f[1]](function(){var a=g&amp;&amp;g.apply(this,arguments);a&amp;&amp;m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&amp;&amp;g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&amp;&amp;a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&amp;&amp;m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length&gt;1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e&gt;1)for(i=new Array(e),j=new Array(e),k=new Array(e);e&gt;b;b++)c[b]&amp;&amp;m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&amp;&amp;--m.readyWait&gt;0||(H.resolveWith(y,[m]),m.fn.triggerHandler&amp;&amp;(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&amp;&amp;(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&amp;&amp;y.documentElement}catch(d){}c&amp;&amp;c.doScroll&amp;&amp;!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&amp;&amp;c.style&amp;&amp;(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&amp;&amp;(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&amp;&amp;(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&amp;&amp;9!==c?!1:!b||b!==!0&amp;&amp;a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&amp;&amp;1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&amp;&amp;"toJSON"!==b)return!1;return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&amp;&amp;h;
if(k&amp;&amp;j[k]&amp;&amp;(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&amp;&amp;(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&amp;&amp;(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&amp;&amp;(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&amp;&amp;(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&amp;&amp;(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&amp;&amp;!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&amp;&amp;f.attributes;if(void 0===a){if(this.length&amp;&amp;(e=m.data(f),1===f.nodeType&amp;&amp;!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&amp;&amp;(d=g[c].name,0===d.indexOf("data-")&amp;&amp;(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length&gt;1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&amp;&amp;(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&amp;&amp;(e=c.shift(),d--),e&amp;&amp;("fx"===b&amp;&amp;c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&amp;&amp;f&amp;&amp;f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&amp;&amp;(b=a,a="fx",c--),arguments.length&lt;c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&amp;&amp;"inprogress"!==c[0]&amp;&amp;m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&amp;&amp;(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&amp;&amp;c.empty&amp;&amp;(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&amp;&amp;(e=!0,m.isFunction(d)||(g=!0),j&amp;&amp;(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i&gt;h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href='/a'&gt;a&lt;/a&gt;&lt;input type='checkbox'/&gt;",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="&lt;:nav&gt;&lt;/:nav&gt;"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="&lt;textarea&gt;x&lt;/textarea&gt;",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="&lt;input type='radio' checked='checked' name='t'/&gt;",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&amp;&amp;(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function ab(){return!0}function bb(){return!1}function cb(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&amp;&amp;(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&amp;&amp;m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&amp;&amp;(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&amp;&amp;m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&amp;&amp;j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&amp;&amp;a.attachEvent("on"+o,k))),j.add&amp;&amp;(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&amp;&amp;m._data(a);if(r&amp;&amp;(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&amp;&amp;new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&amp;&amp;q!==g.origType||c&amp;&amp;c.guid!==g.guid||h&amp;&amp;!h.test(g.namespace)||d&amp;&amp;d!==g.selector&amp;&amp;("**"!==d||!g.selector)||(n.splice(f,1),g.selector&amp;&amp;n.delegateCount--,l.remove&amp;&amp;l.remove.call(a,g));i&amp;&amp;!n.length&amp;&amp;(l.teardown&amp;&amp;l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&amp;&amp;(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&amp;&amp;8!==d.nodeType&amp;&amp;!$.test(p+m.event.triggered)&amp;&amp;(p.indexOf(".")&gt;=0&amp;&amp;(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")&lt;0&amp;&amp;"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&amp;&amp;b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&amp;&amp;!k.noBubble&amp;&amp;!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&amp;&amp;o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&amp;&amp;!b.isPropagationStopped())b.type=n&gt;1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&amp;&amp;m._data(h,"handle"),f&amp;&amp;f.apply(h,c),f=g&amp;&amp;h[g],f&amp;&amp;f.apply&amp;&amp;m.acceptData(h)&amp;&amp;(b.result=f.apply(h,c),b.result===!1&amp;&amp;b.preventDefault());if(b.type=p,!e&amp;&amp;!b.isDefaultPrevented()&amp;&amp;(!k._default||k._default.apply(o.pop(),c)===!1)&amp;&amp;m.acceptData(d)&amp;&amp;g&amp;&amp;d[p]&amp;&amp;!m.isWindow(d)){l=d[g],l&amp;&amp;(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&amp;&amp;(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&amp;&amp;!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&amp;&amp;!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&amp;&amp;(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&amp;&amp;(a.result=c)===!1&amp;&amp;(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&amp;&amp;k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&amp;&amp;i.nodeType&amp;&amp;(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&amp;&amp;(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h&gt;f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&amp;&amp;(e[c]=d.needsContext?m(c,this).index(i)&gt;=0:m.find(c,this,null,[i]).length),e[c]&amp;&amp;e.push(d);e.length&amp;&amp;g.push({elem:i,handlers:e})}return h&lt;b.length&amp;&amp;g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&amp;&amp;(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&amp;&amp;(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&amp;&amp;null!=b.clientX&amp;&amp;(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&amp;&amp;e.scrollLeft||c&amp;&amp;c.scrollLeft||0)-(e&amp;&amp;e.clientLeft||c&amp;&amp;c.clientLeft||0),a.pageY=b.clientY+(e&amp;&amp;e.scrollTop||c&amp;&amp;c.scrollTop||0)-(e&amp;&amp;e.clientTop||c&amp;&amp;c.clientTop||0)),!a.relatedTarget&amp;&amp;g&amp;&amp;(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&amp;f?1:2&amp;f?3:4&amp;f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==cb()&amp;&amp;this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===cb()&amp;&amp;this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&amp;&amp;"checkbox"===this.type&amp;&amp;this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&amp;&amp;a.originalEvent&amp;&amp;(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&amp;&amp;c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&amp;&amp;a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&amp;&amp;(typeof a[d]===K&amp;&amp;(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&amp;&amp;a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&amp;&amp;a.returnValue===!1?ab:bb):this.type=a,b&amp;&amp;m.extend(this,b),this.timeStamp=a&amp;&amp;a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:bb,isPropagationStopped:bb,isImmediatePropagationStopped:bb,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ab,a&amp;&amp;(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ab,a&amp;&amp;(a.stopPropagation&amp;&amp;a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ab,a&amp;&amp;a.stopImmediatePropagation&amp;&amp;a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&amp;&amp;!m.contains(d,e))&amp;&amp;(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&amp;&amp;!m._data(c,"submitBubbles")&amp;&amp;(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&amp;&amp;(delete a._submit_bubble,this.parentNode&amp;&amp;!a.isTrigger&amp;&amp;m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&amp;&amp;(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&amp;&amp;(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&amp;&amp;!a.isTrigger&amp;&amp;(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&amp;&amp;!m._data(b,"changeBubbles")&amp;&amp;(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&amp;&amp;"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&amp;&amp;(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&amp;&amp;null==d?(d=b,c=b=void 0):null==d&amp;&amp;("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=bb;else if(!d)return this;return 1===e&amp;&amp;(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&amp;&amp;a.preventDefault&amp;&amp;a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&amp;&amp;(c=b,b=void 0),c===!1&amp;&amp;(c=bb),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function db(a){var b=eb.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var eb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fb=/ jQuery\d+="(?:null|\d+)"/g,gb=new RegExp("&lt;(?:"+eb+")[\\s/&gt;]","i"),hb=/^\s+/,ib=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,jb=/&lt;([\w:]+)/,kb=/&lt;tbody/i,lb=/&lt;|&amp;#?\w+;/,mb=/&lt;(?:script|style|link)/i,nb=/checked\s*(?:[^=]|=\s*.checked.)/i,ob=/^$|\/(?:java|ecma)script/i,pb=/^true\/(.*)/,qb=/^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g,rb={option:[1,"&lt;select multiple='multiple'&gt;","&lt;/select&gt;"],legend:[1,"&lt;fieldset&gt;","&lt;/fieldset&gt;"],area:[1,"&lt;map&gt;","&lt;/map&gt;"],param:[1,"&lt;object&gt;","&lt;/object&gt;"],thead:[1,"&lt;table&gt;","&lt;/table&gt;"],tr:[2,"&lt;table&gt;&lt;tbody&gt;","&lt;/tbody&gt;&lt;/table&gt;"],col:[2,"&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;","&lt;/colgroup&gt;&lt;/table&gt;"],td:[3,"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;","&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"],_default:k.htmlSerialize?[0,"",""]:[1,"X&lt;div&gt;","&lt;/div&gt;"]},sb=db(y),tb=sb.appendChild(y.createElement("div"));rb.optgroup=rb.option,rb.tbody=rb.tfoot=rb.colgroup=rb.caption=rb.thead,rb.th=rb.td;function ub(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ub(d,b));return void 0===b||b&amp;&amp;m.nodeName(a,b)?m.merge([a],f):f}function vb(a){W.test(a.type)&amp;&amp;(a.defaultChecked=a.checked)}function wb(a,b){return m.nodeName(a,"table")&amp;&amp;m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xb(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function yb(a){var b=pb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function zb(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Ab(a,b){if(1===b.nodeType&amp;&amp;m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e&gt;d;d++)m.event.add(b,c,h[c][d])}g.data&amp;&amp;(g.data=m.extend({},g.data))}}function Bb(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&amp;&amp;b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&amp;&amp;b.text!==a.text?(xb(b).text=a.text,yb(b)):"object"===c?(b.parentNode&amp;&amp;(b.outerHTML=a.outerHTML),k.html5Clone&amp;&amp;a.innerHTML&amp;&amp;!m.trim(b.innerHTML)&amp;&amp;(b.innerHTML=a.innerHTML)):"input"===c&amp;&amp;W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&amp;&amp;(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&amp;&amp;(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!gb.test("&lt;"+a.nodeName+"&gt;")?f=a.cloneNode(!0):(tb.innerHTML=a.outerHTML,tb.removeChild(f=tb.firstChild)),!(k.noCloneEvent&amp;&amp;k.noCloneChecked||1!==a.nodeType&amp;&amp;11!==a.nodeType||m.isXMLDoc(a)))for(d=ub(f),h=ub(a),g=0;null!=(e=h[g]);++g)d[g]&amp;&amp;Bb(e,d[g]);if(b)if(c)for(h=h||ub(a),d=d||ub(f),g=0;null!=(e=h[g]);g++)Ab(e,d[g]);else Ab(a,f);return d=ub(f,"script"),d.length&gt;0&amp;&amp;zb(d,!i&amp;&amp;ub(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=db(b),p=[],q=0;n&gt;q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(lb.test(f)){h=h||o.appendChild(b.createElement("div")),i=(jb.exec(f)||["",""])[1].toLowerCase(),l=rb[i]||rb._default,h.innerHTML=l[1]+f.replace(ib,"&lt;$1&gt;&lt;/$2&gt;")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&amp;&amp;hb.test(f)&amp;&amp;p.push(b.createTextNode(hb.exec(f)[0])),!k.tbody){f="table"!==i||kb.test(f)?"&lt;table&gt;"!==l[1]||kb.test(f)?0:h:h.firstChild,e=f&amp;&amp;f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&amp;&amp;!j.childNodes.length&amp;&amp;f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&amp;&amp;o.removeChild(h),k.appendChecked||m.grep(ub(p,"input"),vb),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&amp;&amp;(g=m.contains(f.ownerDocument,f),h=ub(o.appendChild(f),"script"),g&amp;&amp;zb(h),c)){e=0;while(f=h[e++])ob.test(f.type||"")&amp;&amp;c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&amp;&amp;(f=d[i],g=f&amp;&amp;j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&amp;&amp;(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&amp;&amp;this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&amp;&amp;this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&amp;&amp;this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ub(c)),c.parentNode&amp;&amp;(b&amp;&amp;m.contains(c.ownerDocument,c)&amp;&amp;zb(ub(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&amp;&amp;m.cleanData(ub(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&amp;&amp;m.nodeName(a,"select")&amp;&amp;(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fb,""):void 0;if(!("string"!=typeof a||mb.test(a)||!k.htmlSerialize&amp;&amp;gb.test(a)||!k.leadingWhitespace&amp;&amp;hb.test(a)||rb[(jb.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ib,"&lt;$1&gt;&lt;/$2&gt;");try{for(;d&gt;c;c++)b=this[c]||{},1===b.nodeType&amp;&amp;(m.cleanData(ub(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&amp;&amp;this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ub(this)),a&amp;&amp;a.replaceChild(b,this)}),a&amp;&amp;(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l&gt;1&amp;&amp;"string"==typeof p&amp;&amp;!k.checkClone&amp;&amp;nb.test(p))return this.each(function(c){var d=n.eq(c);q&amp;&amp;(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&amp;&amp;(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&amp;&amp;(i=c),c)){for(g=m.map(ub(i,"script"),xb),f=g.length;l&gt;j;j++)d=i,j!==o&amp;&amp;(d=m.clone(d,!0,!0),f&amp;&amp;m.merge(g,ub(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,yb),j=0;f&gt;j;j++)d=g[j],ob.test(d.type||"")&amp;&amp;!m._data(d,"globalEval")&amp;&amp;m.contains(h,d)&amp;&amp;(d.src?m._evalUrl&amp;&amp;m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qb,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h&gt;=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Cb,Db={};function Eb(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&amp;&amp;(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fb(a){var b=y,c=Db[a];return c||(c=Eb(a,b),"none"!==c&amp;&amp;c||(Cb=(Cb||m("&lt;iframe frameborder='0' width='0' height='0'/&gt;")).appendTo(b.documentElement),b=(Cb[0].contentWindow||Cb[0].contentDocument).document,b.write(),b.close(),c=Eb(a,b),Cb.detach()),Db[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&amp;&amp;c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&amp;&amp;(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Gb=/^margin/,Hb=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ib,Jb,Kb=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ib=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&amp;&amp;(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Hb.test(g)&amp;&amp;Gb.test(b)&amp;&amp;(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&amp;&amp;(Ib=function(a){return a.currentStyle},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c[b]:void 0,null==g&amp;&amp;h&amp;&amp;h[b]&amp;&amp;(g=h[b]),Hb.test(g)&amp;&amp;!Kb.test(b)&amp;&amp;(d=h.left,e=a.runtimeStyle,f=e&amp;&amp;e.left,f&amp;&amp;(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&amp;&amp;(e.left=f)),void 0===g?g:g+""||"auto"});function Lb(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href='/a'&gt;a&lt;/a&gt;&lt;input type='checkbox'/&gt;",d=b.getElementsByTagName("a")[0],c=d&amp;&amp;d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&amp;&amp;i(),g},boxSizingReliable:function(){return null==f&amp;&amp;i(),f},pixelPosition:function(){return null==e&amp;&amp;i(),e},reliableMarginRight:function(){return null==h&amp;&amp;i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&amp;&amp;c.style&amp;&amp;(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&amp;&amp;(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight)),b.innerHTML="&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&amp;&amp;(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Mb=/alpha\([^)]*\)/i,Nb=/opacity\s*=\s*([^)]*)/,Ob=/^(none|table(?!-c[ea]).+)/,Pb=new RegExp("^("+S+")(.*)$","i"),Qb=new RegExp("^([+-])=("+S+")","i"),Rb={position:"absolute",visibility:"hidden",display:"block"},Sb={letterSpacing:"0",fontWeight:"400"},Tb=["Webkit","O","Moz","ms"];function Ub(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Tb.length;while(e--)if(b=Tb[e]+c,b in a)return b;return d}function Vb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h&gt;g;g++)d=a[g],d.style&amp;&amp;(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&amp;&amp;U(d)&amp;&amp;(f[g]=m._data(d,"olddisplay",Fb(d.nodeName)))):(e=U(d),(c&amp;&amp;"none"!==c||!e)&amp;&amp;m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h&gt;g;g++)d=a[g],d.style&amp;&amp;(b&amp;&amp;"none"!==d.style.display&amp;&amp;""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wb(a,b,c){var d=Pb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4&gt;f;f+=2)"margin"===c&amp;&amp;(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&amp;&amp;(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&amp;&amp;(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&amp;&amp;(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Yb(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ib(a),g=k.boxSizing&amp;&amp;"border-box"===m.css(a,"boxSizing",!1,f);if(0&gt;=e||null==e){if(e=Jb(a,b,f),(0&gt;e||null==e)&amp;&amp;(e=a.style[b]),Hb.test(e))return e;d=g&amp;&amp;(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xb(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Jb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&amp;&amp;3!==a.nodeType&amp;&amp;8!==a.nodeType&amp;&amp;a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ub(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&amp;&amp;"get"in g&amp;&amp;void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&amp;&amp;(e=Qb.exec(c))&amp;&amp;(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&amp;&amp;c===c&amp;&amp;("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&amp;&amp;"set"in g&amp;&amp;void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ub(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&amp;&amp;"get"in g&amp;&amp;(f=g.get(a,!0,c)),void 0===f&amp;&amp;(f=Jb(a,b,d)),"normal"===f&amp;&amp;b in Sb&amp;&amp;(f=Sb[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Ob.test(m.css(a,"display"))&amp;&amp;0===a.offsetWidth?m.swap(a,Rb,function(){return Yb(a,b,d)}):Yb(a,b,d):void 0},set:function(a,c,d){var e=d&amp;&amp;Ib(a);return Wb(a,c,d?Xb(a,b,d,k.boxSizing&amp;&amp;"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Nb.test((b&amp;&amp;a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&amp;&amp;d.filter||c.filter||"";c.zoom=1,(b&gt;=1||""===b)&amp;&amp;""===m.trim(f.replace(Mb,""))&amp;&amp;c.removeAttribute&amp;&amp;(c.removeAttribute("filter"),""===b||d&amp;&amp;!d.filter)||(c.filter=Mb.test(f)?f.replace(Mb,e):f+" "+e)}}),m.cssHooks.marginRight=Lb(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Jb,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4&gt;d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Gb.test(a)||(m.cssHooks[a+b].set=Wb)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ib(a),e=b.length;e&gt;g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length&gt;1)},show:function(){return Vb(this,!0)},hide:function(){return Vb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Zb(a,b,c,d,e){return new Zb.prototype.init(a,b,c,d,e)}m.Tween=Zb,Zb.prototype={constructor:Zb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")
},cur:function(){var a=Zb.propHooks[this.prop];return a&amp;&amp;a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var b,c=Zb.propHooks[this.prop];return this.pos=b=this.options.duration?m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),c&amp;&amp;c.set?c.set(this):Zb.propHooks._default.set(this),this}},Zb.prototype.init.prototype=Zb.prototype,Zb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&amp;&amp;null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&amp;&amp;"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&amp;&amp;(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Zb.propHooks.scrollTop=Zb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&amp;&amp;a.elem.parentNode&amp;&amp;(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Zb.prototype.init,m.fx.step={};var $b,_b,ac=/^(?:toggle|show|hide)$/,bc=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cc=/queueHooks$/,dc=[ic],ec={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bc.exec(b),f=e&amp;&amp;e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&amp;&amp;+d)&amp;&amp;bc.exec(m.css(c.elem,a)),h=1,i=20;if(g&amp;&amp;g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&amp;&amp;1!==h&amp;&amp;--i)}return e&amp;&amp;(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fc(){return setTimeout(function(){$b=void 0}),$b=m.now()}function gc(a,b){var c,d={height:a},e=0;for(b=b?1:0;4&gt;e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&amp;&amp;(d.opacity=d.width=a),d}function hc(a,b,c){for(var d,e=(ec[b]||[]).concat(ec["*"]),f=0,g=e.length;g&gt;f;f++)if(d=e[f].call(c,b,a))return d}function ic(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&amp;&amp;U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&amp;&amp;(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&amp;&amp;("height"in b||"width"in b)&amp;&amp;(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fb(a.nodeName):j,"inline"===l&amp;&amp;"none"===m.css(a,"float")&amp;&amp;(k.inlineBlockNeedsLayout&amp;&amp;"inline"!==Fb(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&amp;&amp;(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ac.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&amp;&amp;r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fb(a.nodeName):j)&amp;&amp;(p.display=j);else{r?"hidden"in r&amp;&amp;(q=r.hidden):r=m._data(a,"fxshow",{}),f&amp;&amp;(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hc(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&amp;&amp;(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jc(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&amp;&amp;(e=f[1],f=a[c]=f[0]),c!==d&amp;&amp;(a[d]=f,delete a[c]),g=m.cssHooks[d],g&amp;&amp;"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kc(a,b,c){var d,e,f=0,g=dc.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$b||fc(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i&gt;g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1&gt;f&amp;&amp;i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$b||fc(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d&gt;c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jc(k,j.opts.specialEasing);g&gt;f;f++)if(d=dc[f].call(j,a,k,j.opts))return d;return m.map(k,hc,j),m.isFunction(j.opts.start)&amp;&amp;j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kc,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e&gt;d;d++)c=a[d],ec[c]=ec[c]||[],ec[c].unshift(b)},prefilter:function(a,b){b?dc.unshift(a):dc.push(a)}}),m.speed=function(a,b,c){var d=a&amp;&amp;"object"==typeof a?m.extend({},a):{complete:c||!c&amp;&amp;b||m.isFunction(a)&amp;&amp;a,duration:a,easing:c&amp;&amp;b||b&amp;&amp;!m.isFunction(b)&amp;&amp;b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&amp;&amp;(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&amp;&amp;d.old.call(this),d.queue&amp;&amp;m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kc(this,m.extend({},a),f);(e||m._data(this,"finish"))&amp;&amp;b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&amp;&amp;(c=b,b=a,a=void 0),b&amp;&amp;a!==!1&amp;&amp;this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&amp;&amp;a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&amp;&amp;g[e].stop&amp;&amp;d(g[e]);else for(e in g)g[e]&amp;&amp;g[e].stop&amp;&amp;cc.test(e)&amp;&amp;d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&amp;&amp;f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&amp;&amp;m.dequeue(this,a)})},finish:function(a){return a!==!1&amp;&amp;(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&amp;&amp;e.stop&amp;&amp;e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&amp;&amp;f[b].queue===a&amp;&amp;(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g&gt;b;b++)d[b]&amp;&amp;d[b].finish&amp;&amp;d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gc(b,!0),a,d,e)}}),m.each({slideDown:gc("show"),slideUp:gc("hide"),slideToggle:gc("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($b=m.now();c&lt;b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$b=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_b||(_b=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_b),_b=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href='/a'&gt;a&lt;/a&gt;&lt;input type='checkbox'/&gt;",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lc=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&amp;&amp;(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&amp;&amp;(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&amp;&amp;"set"in b&amp;&amp;void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&amp;&amp;"get"in b&amp;&amp;void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lc,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0&gt;e,g=f?null:[],h=f?e+1:d.length,i=0&gt;e?h:f?e:0;h&gt;i;i++)if(c=d[i],!(!c.selected&amp;&amp;i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&amp;&amp;m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)&gt;=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)&gt;=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mc,nc,oc=m.expr.attrHandle,pc=/^(?:checked|selected)$/i,qc=k.getSetAttribute,rc=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length&gt;1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&amp;&amp;3!==f&amp;&amp;8!==f&amp;&amp;2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&amp;&amp;m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nc:mc)),void 0===c?d&amp;&amp;"get"in d&amp;&amp;null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&amp;&amp;"set"in d&amp;&amp;void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&amp;&amp;b.match(E);if(f&amp;&amp;1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rc&amp;&amp;qc||!pc.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qc?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&amp;&amp;"radio"===b&amp;&amp;m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&amp;&amp;(a.value=c),b}}}}}),nc={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rc&amp;&amp;qc||!pc.test(c)?a.setAttribute(!qc&amp;&amp;m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=oc[b]||m.find.attr;oc[b]=rc&amp;&amp;qc||!pc.test(b)?function(a,b,d){var e,f;return d||(f=oc[b],oc[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,oc[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rc&amp;&amp;qc||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mc&amp;&amp;mc.set(a,b,c)}}),qc||(mc={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},oc.id=oc.name=oc.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&amp;&amp;""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&amp;&amp;c.specified?c.value:void 0},set:mc.set},m.attrHooks.contenteditable={set:function(a,b,c){mc.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sc=/^(?:input|select|textarea|button|object)$/i,tc=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length&gt;1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&amp;&amp;3!==g&amp;&amp;8!==g&amp;&amp;2!==g)return f=1!==g||!m.isXMLDoc(a),f&amp;&amp;(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&amp;&amp;"set"in e&amp;&amp;void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&amp;&amp;"get"in e&amp;&amp;null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sc.test(a.nodeName)||tc.test(a.nodeName)&amp;&amp;a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&amp;&amp;(b.selectedIndex,b.parentNode&amp;&amp;b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var uc=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&amp;&amp;a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i&gt;h;h++)if(c=this[h],d=1===c.nodeType&amp;&amp;(c.className?(" "+c.className+" ").replace(uc," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")&lt;0&amp;&amp;(d+=e+" ");g=m.trim(d),c.className!==g&amp;&amp;(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&amp;&amp;a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i&gt;h;h++)if(c=this[h],d=1===c.nodeType&amp;&amp;(c.className?(" "+c.className+" ").replace(uc," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")&gt;=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&amp;&amp;(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&amp;&amp;"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&amp;&amp;(this.className&amp;&amp;m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d&gt;c;c++)if(1===this[c].nodeType&amp;&amp;(" "+this[c].className+" ").replace(uc," ").indexOf(b)&gt;=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length&gt;0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vc=m.now(),wc=/\?/,xc=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&amp;&amp;a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&amp;&amp;!m.trim(e.replace(xc,function(a,b,e,f){return c&amp;&amp;b&amp;&amp;(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&amp;&amp;c.documentElement&amp;&amp;!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yc,zc,Ac=/#.*$/,Bc=/([?&amp;])_=[^&amp;]*/,Cc=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Dc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ec=/^(?:GET|HEAD)$/,Fc=/^\/\//,Gc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hc={},Ic={},Jc="*/".concat("*");try{zc=location.href}catch(Kc){zc=y.createElement("a"),zc.href="",zc=zc.href}yc=Gc.exec(zc.toLowerCase())||[];function Lc(a){return function(b,c){"string"!=typeof b&amp;&amp;(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mc(a,b,c,d){var e={},f=a===Ic;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&amp;&amp;g("*")}function Nc(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&amp;&amp;((e[d]?a:c||(c={}))[d]=b[d]);return c&amp;&amp;m.extend(!0,a,c),a}function Oc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&amp;&amp;(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&amp;&amp;h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&amp;&amp;i.unshift(f),c[f]):void 0}function Pc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&amp;&amp;(c[a.responseFields[f]]=b),!i&amp;&amp;d&amp;&amp;a.dataFilter&amp;&amp;(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&amp;&amp;i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&amp;&amp;(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&amp;&amp;(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&amp;&amp;a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zc,type:"GET",isLocal:Dc.test(yc[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nc(Nc(a,m.ajaxSettings),b):Nc(m.ajaxSettings,a)},ajaxPrefilter:Lc(Hc),ajaxTransport:Lc(Ic),ajax:function(a,b){"object"==typeof a&amp;&amp;(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&amp;&amp;(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cc.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2&gt;t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&amp;&amp;i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zc)+"").replace(Ac,"").replace(Fc,yc[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&amp;&amp;(c=Gc.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yc[1]&amp;&amp;c[2]===yc[2]&amp;&amp;(c[3]||("http:"===c[1]?"80":"443"))===(yc[3]||("http:"===yc[1]?"80":"443")))),k.data&amp;&amp;k.processData&amp;&amp;"string"!=typeof k.data&amp;&amp;(k.data=m.param(k.data,k.traditional)),Mc(Hc,k,b,v),2===t)return v;h=k.global,h&amp;&amp;0===m.active++&amp;&amp;m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Ec.test(k.type),e=k.url,k.hasContent||(k.data&amp;&amp;(e=k.url+=(wc.test(e)?"&amp;":"?")+k.data,delete k.data),k.cache===!1&amp;&amp;(k.url=Bc.test(e)?e.replace(Bc,"$1_="+vc++):e+(wc.test(e)?"&amp;":"?")+"_="+vc++)),k.ifModified&amp;&amp;(m.lastModified[e]&amp;&amp;v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&amp;&amp;v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&amp;&amp;k.hasContent&amp;&amp;k.contentType!==!1||b.contentType)&amp;&amp;v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&amp;&amp;k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jc+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&amp;&amp;(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mc(Ic,k,b,v)){v.readyState=1,h&amp;&amp;n.trigger("ajaxSend",[v,k]),k.async&amp;&amp;k.timeout&gt;0&amp;&amp;(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2&gt;t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&amp;&amp;(t=2,g&amp;&amp;clearTimeout(g),i=void 0,f=d||"",v.readyState=a&gt;0?4:0,j=a&gt;=200&amp;&amp;300&gt;a||304===a,c&amp;&amp;(u=Oc(k,v,c)),u=Pc(k,u,v,j),j?(k.ifModified&amp;&amp;(w=v.getResponseHeader("Last-Modified"),w&amp;&amp;(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&amp;&amp;(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&amp;&amp;(x="error",0&gt;a&amp;&amp;(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&amp;&amp;n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&amp;&amp;(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&amp;&amp;(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&amp;&amp;b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&amp;&amp;1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth&lt;=0&amp;&amp;a.offsetHeight&lt;=0||!k.reliableHiddenOffsets()&amp;&amp;"none"===(a.style&amp;&amp;a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qc=/%20/g,Rc=/\[\]$/,Sc=/\r?\n/g,Tc=/^(?:submit|button|image|reset|file)$/i,Uc=/^(?:input|select|textarea|keygen)/i;function Vc(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rc.test(a)?d(a,e):Vc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vc(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&amp;&amp;(b=m.ajaxSettings&amp;&amp;m.ajaxSettings.traditional),m.isArray(a)||a.jquery&amp;&amp;!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vc(c,a[c],b,e);return d.join("&amp;").replace(Qc,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&amp;&amp;!m(this).is(":disabled")&amp;&amp;Uc.test(this.nodeName)&amp;&amp;!Tc.test(a)&amp;&amp;(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sc,"\r\n")}}):{name:b.name,value:c.replace(Sc,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&amp;&amp;/^(get|post|head|put|delete|options)$/i.test(this.type)&amp;&amp;Zc()||$c()}:Zc;var Wc=0,Xc={},Yc=m.ajaxSettings.xhr();a.ActiveXObject&amp;&amp;m(a).on("unload",function(){for(var a in Xc)Xc[a](void 0,!0)}),k.cors=!!Yc&amp;&amp;"withCredentials"in Yc,Yc=k.ajax=!!Yc,Yc&amp;&amp;m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&amp;&amp;f.overrideMimeType&amp;&amp;f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&amp;&amp;f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&amp;&amp;a.data||null),b=function(c,e){var h,i,j;if(b&amp;&amp;(e||4===f.readyState))if(delete Xc[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&amp;&amp;f.abort();else{j={},h=f.status,"string"==typeof f.responseText&amp;&amp;(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&amp;&amp;(h=204):h=j.text?200:404}j&amp;&amp;d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xc[g]=b:b()},abort:function(){b&amp;&amp;b(void 0,!0)}}}});function Zc(){try{return new a.XMLHttpRequest}catch(b){}}function $c(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&amp;&amp;(a.cache=!1),a.crossDomain&amp;&amp;(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&amp;&amp;(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&amp;&amp;(b.onload=b.onreadystatechange=null,b.parentNode&amp;&amp;b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&amp;&amp;b.onload(void 0,!0)}}}});var _c=[],ad=/(=)\?(?=&amp;|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_c.pop()||m.expando+"_"+vc++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&amp;&amp;(ad.test(b.url)?"url":"string"==typeof b.data&amp;&amp;!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&amp;&amp;ad.test(b.data)&amp;&amp;"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ad,"$1"+e):b.jsonp!==!1&amp;&amp;(b.url+=(wc.test(b.url)?"&amp;":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&amp;&amp;(b.jsonpCallback=c.jsonpCallback,_c.push(e)),g&amp;&amp;m.isFunction(f)&amp;&amp;f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&amp;&amp;(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&amp;&amp;[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&amp;&amp;e.length&amp;&amp;m(e).remove(),m.merge([],d.childNodes))};var bd=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&amp;&amp;bd)return bd.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h&gt;=0&amp;&amp;(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&amp;&amp;"object"==typeof b&amp;&amp;(f="POST"),g.length&gt;0&amp;&amp;m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("&lt;div&gt;").append(m.parseHTML(a)).find(d):a)}).complete(c&amp;&amp;function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cd=a.document.documentElement;function dd(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&amp;&amp;(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&amp;&amp;m.inArray("auto",[f,i])&gt;-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&amp;&amp;(b=b.call(a,c,h)),null!=b.top&amp;&amp;(n.top=b.top-h.top+g),null!=b.left&amp;&amp;(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&amp;&amp;e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&amp;&amp;(d=e.getBoundingClientRect()),c=dd(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cd;while(a&amp;&amp;!m.nodeName(a,"html")&amp;&amp;"static"===m.css(a,"position"))a=a.offsetParent;return a||cd})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dd(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=Lb(k.pixelPosition,function(a,c){return c?(c=Jb(a,b),Hb.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&amp;&amp;(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&amp;&amp;define.amd&amp;&amp;define("jquery",[],function(){return m});var ed=a.jQuery,fd=a.$;return m.noConflict=function(b){return a.$===m&amp;&amp;(a.$=fd),b&amp;&amp;a.jQuery===m&amp;&amp;(a.jQuery=ed),m},typeof b===K&amp;&amp;(a.jQuery=a.$=m),m});
</contentText>
  </asset>
  <asset name="lib/moment.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-9-26
 */
!function(a,b){"object"==typeof exports&amp;&amp;"undefined"!=typeof module?module.exports=b():"function"==typeof define&amp;&amp;define.amd?define(b):a.moment=b()}(this,function(){"use strict";function a(){return md.apply(null,arguments)}
// This is done to register the method called with moment()
// without creating circular dependencies.
function b(a){md=a}function c(a){return a instanceof Array||"[object Array]"===Object.prototype.toString.call(a)}function d(a){return"[object Object]"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)
// even if its not own property I'd still call it non-empty
return!1;return!0}function f(a){return a instanceof Date||"[object Date]"===Object.prototype.toString.call(a)}function g(a,b){var c,d=[];for(c=0;c&lt;a.length;++c)d.push(b(a[c],c));return d}function h(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function i(a,b){for(var c in b)h(b,c)&amp;&amp;(a[c]=b[c]);return h(b,"toString")&amp;&amp;(a.toString=b.toString),h(b,"valueOf")&amp;&amp;(a.valueOf=b.valueOf),a}function j(a,b,c,d){return qb(a,b,c,d,!0).utc()}function k(){
// We need to deep clone this object.
return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(a){return null==a._pf&amp;&amp;(a._pf=k()),a._pf}function m(a){if(null==a._isValid){var b=l(a),c=nd.call(b.parsedDateParts,function(a){return null!=a});a._isValid=!isNaN(a._d.getTime())&amp;&amp;b.overflow&lt;0&amp;&amp;!b.empty&amp;&amp;!b.invalidMonth&amp;&amp;!b.invalidWeekday&amp;&amp;!b.nullInput&amp;&amp;!b.invalidFormat&amp;&amp;!b.userInvalidated&amp;&amp;(!b.meridiem||b.meridiem&amp;&amp;c),a._strict&amp;&amp;(a._isValid=a._isValid&amp;&amp;0===b.charsLeftOver&amp;&amp;0===b.unusedTokens.length&amp;&amp;void 0===b.bigHour)}return a._isValid}function n(a){var b=j(NaN);return null!=a?i(l(b),a):l(b).userInvalidated=!0,b}function o(a){return void 0===a}function p(a,b){var c,d,e;if(o(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),o(b._i)||(a._i=b._i),o(b._f)||(a._f=b._f),o(b._l)||(a._l=b._l),o(b._strict)||(a._strict=b._strict),o(b._tzm)||(a._tzm=b._tzm),o(b._isUTC)||(a._isUTC=b._isUTC),o(b._offset)||(a._offset=b._offset),o(b._pf)||(a._pf=l(b)),o(b._locale)||(a._locale=b._locale),od.length&gt;0)for(c in od)d=od[c],e=b[d],o(e)||(a[d]=e);return a}
// Moment prototype object
function q(b){p(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),pd===!1&amp;&amp;(pd=!0,a.updateOffset(this),pd=!1)}function r(a){return a instanceof q||null!=a&amp;&amp;null!=a._isAMomentObject}function s(a){return 0&gt;a?Math.ceil(a)||0:Math.floor(a)}function t(a){var b=+a,c=0;return 0!==b&amp;&amp;isFinite(b)&amp;&amp;(c=s(b)),c}
// compare two arrays, return the number of differences
function u(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e&gt;d;d++)(c&amp;&amp;a[d]!==b[d]||!c&amp;&amp;t(a[d])!==t(b[d]))&amp;&amp;g++;return g+f}function v(b){a.suppressDeprecationWarnings===!1&amp;&amp;"undefined"!=typeof console&amp;&amp;console.warn&amp;&amp;console.warn("Deprecation warning: "+b)}function w(b,c){var d=!0;return i(function(){return null!=a.deprecationHandler&amp;&amp;a.deprecationHandler(null,b),d&amp;&amp;(v(b+"\nArguments: "+Array.prototype.slice.call(arguments).join(", ")+"\n"+(new Error).stack),d=!1),c.apply(this,arguments)},c)}function x(b,c){null!=a.deprecationHandler&amp;&amp;a.deprecationHandler(b,c),qd[b]||(v(c),qd[b]=!0)}function y(a){return a instanceof Function||"[object Function]"===Object.prototype.toString.call(a)}function z(a){var b,c;for(c in a)b=a[c],y(b)?this[c]=b:this["_"+c]=b;this._config=a,
// Lenient ordinal parsing accepts just a number in addition to
// number + (possibly) stuff coming from _ordinalParseLenient.
this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)}function A(a,b){var c,e=i({},a);for(c in b)h(b,c)&amp;&amp;(d(a[c])&amp;&amp;d(b[c])?(e[c]={},i(e[c],a[c]),i(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)h(a,c)&amp;&amp;!h(b,c)&amp;&amp;d(a[c])&amp;&amp;(
// make sure changes to properties don't modify parent config
e[c]=i({},e[c]));return e}function B(a){null!=a&amp;&amp;this.set(a)}function C(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return y(d)?d.call(b,c):d}function D(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function E(){return this._invalidDate}function F(a){return this._ordinal.replace("%d",a)}function G(a,b,c,d){var e=this._relativeTime[c];return y(e)?e(a,b,c,d):e.replace(/%d/i,a)}function H(a,b){var c=this._relativeTime[a&gt;0?"future":"past"];return y(c)?c(b):c.replace(/%s/i,b)}function I(a,b){var c=a.toLowerCase();zd[c]=zd[c+"s"]=zd[b]=a}function J(a){return"string"==typeof a?zd[a]||zd[a.toLowerCase()]:void 0}function K(a){var b,c,d={};for(c in a)h(a,c)&amp;&amp;(b=J(c),b&amp;&amp;(d[b]=a[c]));return d}function L(a,b){Ad[a]=b}function M(a){var b=[];for(var c in a)b.push({unit:c,priority:Ad[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function N(b,c){return function(d){return null!=d?(P(this,b,d),a.updateOffset(this,c),this):O(this,b)}}function O(a,b){return a.isValid()?a._d["get"+(a._isUTC?"UTC":"")+b]():NaN}function P(a,b,c){a.isValid()&amp;&amp;a._d["set"+(a._isUTC?"UTC":"")+b](c)}
// MOMENTS
function Q(a){return a=J(a),y(this[a])?this[a]():this}function R(a,b){if("object"==typeof a){a=K(a);for(var c=M(a),d=0;d&lt;c.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=J(a),y(this[a]))return this[a](b);return this}function S(a,b,c){var d=""+Math.abs(a),e=b-d.length,f=a&gt;=0;return(f?c?"+":"":"-")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}
// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function T(a,b,c,d){var e=d;"string"==typeof d&amp;&amp;(e=function(){return this[d]()}),a&amp;&amp;(Ed[a]=e),b&amp;&amp;(Ed[b[0]]=function(){return S(e.apply(this,arguments),b[1],b[2])}),c&amp;&amp;(Ed[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function U(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function V(a){var b,c,d=a.match(Bd);for(b=0,c=d.length;c&gt;b;b++)Ed[d[b]]?d[b]=Ed[d[b]]:d[b]=U(d[b]);return function(b){var e,f="";for(e=0;c&gt;e;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}
// format date using native date object
function W(a,b){return a.isValid()?(b=X(b,a.localeData()),Dd[b]=Dd[b]||V(b),Dd[b](a)):a.localeData().invalidDate()}function X(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Cd.lastIndex=0;d&gt;=0&amp;&amp;Cd.test(a);)a=a.replace(Cd,c),Cd.lastIndex=0,d-=1;return a}function Y(a,b,c){Wd[a]=y(b)?b:function(a,d){return a&amp;&amp;c?c:b}}function Z(a,b){return h(Wd,a)?Wd[a](b._strict,b._locale):new RegExp($(a))}
// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function $(a){return _(a.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function _(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&amp;")}function aa(a,b){var c,d=b;for("string"==typeof a&amp;&amp;(a=[a]),"number"==typeof b&amp;&amp;(d=function(a,c){c[b]=t(a)}),c=0;c&lt;a.length;c++)Xd[a[c]]=d}function ba(a,b){aa(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function ca(a,b,c){null!=b&amp;&amp;h(Xd,a)&amp;&amp;Xd[a](b,c._a,c,a)}function da(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function ea(a,b){return c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||fe).test(b)?"format":"standalone"][a.month()]}function fa(a,b){return c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[fe.test(b)?"format":"standalone"][a.month()]}function ga(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(
// this is not used
this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;12&gt;d;++d)f=j([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,"").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,"").toLocaleLowerCase();return c?"MMM"===b?(e=sd.call(this._shortMonthsParse,g),-1!==e?e:null):(e=sd.call(this._longMonthsParse,g),-1!==e?e:null):"MMM"===b?(e=sd.call(this._shortMonthsParse,g),-1!==e?e:(e=sd.call(this._longMonthsParse,g),-1!==e?e:null)):(e=sd.call(this._longMonthsParse,g),-1!==e?e:(e=sd.call(this._shortMonthsParse,g),-1!==e?e:null))}function ha(a,b,c){var d,e,f;if(this._monthsParseExact)return ga.call(this,a,b,c);
// TODO: add sorting
// Sorting makes sure if one month (or abbr) is a prefix of another
// see sorting in computeMonthsParse
for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12&gt;d;d++){
// test the regex
if(e=j([2e3,d]),c&amp;&amp;!this._longMonthsParse[d]&amp;&amp;(this._longMonthsParse[d]=new RegExp("^"+this.months(e,"").replace(".","")+"$","i"),this._shortMonthsParse[d]=new RegExp("^"+this.monthsShort(e,"").replace(".","")+"$","i")),c||this._monthsParse[d]||(f="^"+this.months(e,"")+"|^"+this.monthsShort(e,""),this._monthsParse[d]=new RegExp(f.replace(".",""),"i")),c&amp;&amp;"MMMM"===b&amp;&amp;this._longMonthsParse[d].test(a))return d;if(c&amp;&amp;"MMM"===b&amp;&amp;this._shortMonthsParse[d].test(a))return d;if(!c&amp;&amp;this._monthsParse[d].test(a))return d}}
// MOMENTS
function ia(a,b){var c;if(!a.isValid())
// No op
return a;if("string"==typeof b)if(/^\d+$/.test(b))b=t(b);else
// TODO: Another silent failure?
if(b=a.localeData().monthsParse(b),"number"!=typeof b)return a;return c=Math.min(a.date(),da(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a}function ja(b){return null!=b?(ia(this,b),a.updateOffset(this,!0),this):O(this,"Month")}function ka(){return da(this.year(),this.month())}function la(a){return this._monthsParseExact?(h(this,"_monthsRegex")||na.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(h(this,"_monthsShortRegex")||(this._monthsShortRegex=ie),this._monthsShortStrictRegex&amp;&amp;a?this._monthsShortStrictRegex:this._monthsShortRegex)}function ma(a){return this._monthsParseExact?(h(this,"_monthsRegex")||na.call(this),a?this._monthsStrictRegex:this._monthsRegex):(h(this,"_monthsRegex")||(this._monthsRegex=je),this._monthsStrictRegex&amp;&amp;a?this._monthsStrictRegex:this._monthsRegex)}function na(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;12&gt;b;b++)c=j([2e3,b]),d.push(this.monthsShort(c,"")),e.push(this.months(c,"")),f.push(this.months(c,"")),f.push(this.monthsShort(c,""));for(
// Sorting makes sure if one month (or abbr) is a prefix of another it
// will match the longer piece.
d.sort(a),e.sort(a),f.sort(a),b=0;12&gt;b;b++)d[b]=_(d[b]),e[b]=_(e[b]);for(b=0;24&gt;b;b++)f[b]=_(f[b]);this._monthsRegex=new RegExp("^("+f.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+e.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+d.join("|")+")","i")}
// HELPERS
function oa(a){return pa(a)?366:365}function pa(a){return a%4===0&amp;&amp;a%100!==0||a%400===0}function qa(){return pa(this.year())}function ra(a,b,c,d,e,f,g){
//can't just apply() to create a date:
//http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
var h=new Date(a,b,c,d,e,f,g);
//the date constructor remaps years 0-99 to 1900-1999
return 100&gt;a&amp;&amp;a&gt;=0&amp;&amp;isFinite(h.getFullYear())&amp;&amp;h.setFullYear(a),h}function sa(a){var b=new Date(Date.UTC.apply(null,arguments));
//the Date.UTC function remaps years 0-99 to 1900-1999
return 100&gt;a&amp;&amp;a&gt;=0&amp;&amp;isFinite(b.getUTCFullYear())&amp;&amp;b.setUTCFullYear(a),b}
// start-of-first-week - start-of-year
function ta(a,b,c){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
d=7+b-c,
// first-week day local weekday -- which local weekday is fwd
e=(7+sa(a,0,d).getUTCDay()-b)%7;return-e+d-1}
//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function ua(a,b,c,d,e){var f,g,h=(7+c-d)%7,i=ta(a,d,e),j=1+7*(b-1)+h+i;return 0&gt;=j?(f=a-1,g=oa(f)+j):j&gt;oa(a)?(f=a+1,g=j-oa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function va(a,b,c){var d,e,f=ta(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return 1&gt;g?(e=a.year()-1,d=g+wa(e,b,c)):g&gt;wa(a.year(),b,c)?(d=g-wa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function wa(a,b,c){var d=ta(a,b,c),e=ta(a+1,b,c);return(oa(a)-d+e)/7}
// HELPERS
// LOCALES
function xa(a){return va(a,this._week.dow,this._week.doy).week}function ya(){return this._week.dow}function za(){return this._week.doy}
// MOMENTS
function Aa(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),"d")}function Ba(a){var b=va(this,1,4).week;return null==a?b:this.add(7*(a-b),"d")}
// HELPERS
function Ca(a,b){return"string"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),"number"==typeof a?a:null):parseInt(a,10)}function Da(a,b){return"string"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Ea(a,b){return c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?"format":"standalone"][a.day()]}function Fa(a){return this._weekdaysShort[a.day()]}function Ga(a){return this._weekdaysMin[a.day()]}function Ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;7&gt;d;++d)f=j([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,"").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,"").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,"").toLocaleLowerCase();return c?"dddd"===b?(e=sd.call(this._weekdaysParse,g),-1!==e?e:null):"ddd"===b?(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:null):(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null):"dddd"===b?(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null))):"ddd"===b?(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:null))):(e=sd.call(this._minWeekdaysParse,g),-1!==e?e:(e=sd.call(this._weekdaysParse,g),-1!==e?e:(e=sd.call(this._shortWeekdaysParse,g),-1!==e?e:null)))}function Ia(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ha.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;7&gt;d;d++){
// test the regex
if(e=j([2e3,1]).day(d),c&amp;&amp;!this._fullWeekdaysParse[d]&amp;&amp;(this._fullWeekdaysParse[d]=new RegExp("^"+this.weekdays(e,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[d]=new RegExp("^"+this.weekdaysShort(e,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[d]=new RegExp("^"+this.weekdaysMin(e,"").replace(".",".?")+"$","i")),this._weekdaysParse[d]||(f="^"+this.weekdays(e,"")+"|^"+this.weekdaysShort(e,"")+"|^"+this.weekdaysMin(e,""),this._weekdaysParse[d]=new RegExp(f.replace(".",""),"i")),c&amp;&amp;"dddd"===b&amp;&amp;this._fullWeekdaysParse[d].test(a))return d;if(c&amp;&amp;"ddd"===b&amp;&amp;this._shortWeekdaysParse[d].test(a))return d;if(c&amp;&amp;"dd"===b&amp;&amp;this._minWeekdaysParse[d].test(a))return d;if(!c&amp;&amp;this._weekdaysParse[d].test(a))return d}}
// MOMENTS
function Ja(a){if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Ca(a,this.localeData()),this.add(a-b,"d")):b}function Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,"d")}function La(a){if(!this.isValid())return null!=a?this:NaN;
// behaves the same as moment#day except
// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
// as a setter, sunday should belong to the previous week.
if(null!=a){var b=Da(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Ma(a){return this._weekdaysParseExact?(h(this,"_weekdaysRegex")||Pa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(h(this,"_weekdaysRegex")||(this._weekdaysRegex=pe),this._weekdaysStrictRegex&amp;&amp;a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Na(a){return this._weekdaysParseExact?(h(this,"_weekdaysRegex")||Pa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(h(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=qe),this._weekdaysShortStrictRegex&amp;&amp;a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Oa(a){return this._weekdaysParseExact?(h(this,"_weekdaysRegex")||Pa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(h(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=re),this._weekdaysMinStrictRegex&amp;&amp;a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Pa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],k=[];for(b=0;7&gt;b;b++)c=j([2e3,1]).day(b),d=this.weekdaysMin(c,""),e=this.weekdaysShort(c,""),f=this.weekdays(c,""),g.push(d),h.push(e),i.push(f),k.push(d),k.push(e),k.push(f);for(
// Sorting makes sure if one weekday (or abbr) is a prefix of another it
// will match the longer piece.
g.sort(a),h.sort(a),i.sort(a),k.sort(a),b=0;7&gt;b;b++)h[b]=_(h[b]),i[b]=_(i[b]),k[b]=_(k[b]);this._weekdaysRegex=new RegExp("^("+k.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+i.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+h.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+g.join("|")+")","i")}
// FORMATTING
function Qa(){return this.hours()%12||12}function Ra(){return this.hours()||24}function Sa(a,b){T(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}
// PARSING
function Ta(a,b){return b._meridiemParse}
// LOCALES
function Ua(a){
// IE8 Quirks Mode &amp; IE7 Standards Mode do not allow accessing strings like arrays
// Using charAt should be more compatible.
return"p"===(a+"").toLowerCase().charAt(0)}function Va(a,b,c){return a&gt;11?c?"pm":"PM":c?"am":"AM"}function Wa(a){return a?a.toLowerCase().replace("_","-"):a}
// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function Xa(a){for(var b,c,d,e,f=0;f&lt;a.length;){for(e=Wa(a[f]).split("-"),b=e.length,c=Wa(a[f+1]),c=c?c.split("-"):null;b&gt;0;){if(d=Ya(e.slice(0,b).join("-")))return d;if(c&amp;&amp;c.length&gt;=b&amp;&amp;u(e,c,!0)&gt;=b-1)
//the next array item is better than a shallower substring of this one
break;b--}f++}return null}function Ya(a){var b=null;
// TODO: Find a better way to register and load all the locales in Node
if(!we[a]&amp;&amp;"undefined"!=typeof module&amp;&amp;module&amp;&amp;module.exports)try{b=se._abbr,require("./locale/"+a),
// because defineLocale currently also sets the global locale, we
// want to undo that for lazy loaded locales
Za(b)}catch(c){}return we[a]}
// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function Za(a,b){var c;
// moment.duration._locale = moment._locale = data;
return a&amp;&amp;(c=o(b)?ab(a):$a(a,b),c&amp;&amp;(se=c)),se._abbr}function $a(a,b){if(null!==b){var c=ve;
// treat as if there is no base config
// backwards compat for now: also set the locale
return b.abbr=a,null!=we[a]?(x("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),c=we[a]._config):null!=b.parentLocale&amp;&amp;(null!=we[b.parentLocale]?c=we[b.parentLocale]._config:x("parentLocaleUndefined","specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/")),we[a]=new B(A(c,b)),Za(a),we[a]}
// useful for testing
return delete we[a],null}function _a(a,b){if(null!=b){var c,d=ve;
// MERGE
null!=we[a]&amp;&amp;(d=we[a]._config),b=A(d,b),c=new B(b),c.parentLocale=we[a],we[a]=c,
// backwards compat for now: also set the locale
Za(a)}else
// pass null for config to unupdate, useful for tests
null!=we[a]&amp;&amp;(null!=we[a].parentLocale?we[a]=we[a].parentLocale:null!=we[a]&amp;&amp;delete we[a]);return we[a]}
// returns locale data
function ab(a){var b;if(a&amp;&amp;a._locale&amp;&amp;a._locale._abbr&amp;&amp;(a=a._locale._abbr),!a)return se;if(!c(a)){if(b=Ya(a))return b;a=[a]}return Xa(a)}function bb(){return rd(we)}function cb(a){var b,c=a._a;return c&amp;&amp;-2===l(a).overflow&amp;&amp;(b=c[Zd]&lt;0||c[Zd]&gt;11?Zd:c[$d]&lt;1||c[$d]&gt;da(c[Yd],c[Zd])?$d:c[_d]&lt;0||c[_d]&gt;24||24===c[_d]&amp;&amp;(0!==c[ae]||0!==c[be]||0!==c[ce])?_d:c[ae]&lt;0||c[ae]&gt;59?ae:c[be]&lt;0||c[be]&gt;59?be:c[ce]&lt;0||c[ce]&gt;999?ce:-1,l(a)._overflowDayOfYear&amp;&amp;(Yd&gt;b||b&gt;$d)&amp;&amp;(b=$d),l(a)._overflowWeeks&amp;&amp;-1===b&amp;&amp;(b=de),l(a)._overflowWeekday&amp;&amp;-1===b&amp;&amp;(b=ee),l(a).overflow=b),a}
// date from iso format
function db(a){var b,c,d,e,f,g,h=a._i,i=xe.exec(h)||ye.exec(h);if(i){for(l(a).iso=!0,b=0,c=Ae.length;c&gt;b;b++)if(Ae[b][1].exec(i[1])){e=Ae[b][0],d=Ae[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=Be.length;c&gt;b;b++)if(Be[b][1].exec(i[3])){
// match[2] should be 'T' or space
f=(i[2]||" ")+Be[b][0];break}if(null==f)return void(a._isValid=!1)}if(!d&amp;&amp;null!=f)return void(a._isValid=!1);if(i[4]){if(!ze.exec(i[4]))return void(a._isValid=!1);g="Z"}a._f=e+(f||"")+(g||""),jb(a)}else a._isValid=!1}
// date from iso format or fallback
function eb(b){var c=Ce.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(db(b),void(b._isValid===!1&amp;&amp;(delete b._isValid,a.createFromInputFallback(b))))}
// Pick the first defined of two or three arguments.
function fb(a,b,c){return null!=a?a:null!=b?b:c}function gb(b){
// hooks is actually the exported moment object
var c=new Date(a.now());return b._useUTC?[c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()]:[c.getFullYear(),c.getMonth(),c.getDate()]}
// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function hb(a){var b,c,d,e,f=[];if(!a._d){
// Default to current date.
// * if no year, month, day of month are given, default to today
// * if day of month is given, default month and year
// * if month is given, default only year
// * if year is given, don't default anything
for(d=gb(a),a._w&amp;&amp;null==a._a[$d]&amp;&amp;null==a._a[Zd]&amp;&amp;ib(a),a._dayOfYear&amp;&amp;(e=fb(a._a[Yd],d[Yd]),a._dayOfYear&gt;oa(e)&amp;&amp;(l(a)._overflowDayOfYear=!0),c=sa(e,0,a._dayOfYear),a._a[Zd]=c.getUTCMonth(),a._a[$d]=c.getUTCDate()),b=0;3&gt;b&amp;&amp;null==a._a[b];++b)a._a[b]=f[b]=d[b];
// Zero out whatever was not defaulted, including time
for(;7&gt;b;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];
// Check for 24:00:00.000
24===a._a[_d]&amp;&amp;0===a._a[ae]&amp;&amp;0===a._a[be]&amp;&amp;0===a._a[ce]&amp;&amp;(a._nextDay=!0,a._a[_d]=0),a._d=(a._useUTC?sa:ra).apply(null,f),
// Apply timezone offset from input. The actual utcOffset can be changed
// with parseZone.
null!=a._tzm&amp;&amp;a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&amp;&amp;(a._a[_d]=24)}}function ib(a){var b,c,d,e,f,g,h,i;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=fb(b.GG,a._a[Yd],va(rb(),1,4).year),d=fb(b.W,1),e=fb(b.E,1),(1&gt;e||e&gt;7)&amp;&amp;(i=!0)):(f=a._locale._week.dow,g=a._locale._week.doy,c=fb(b.gg,a._a[Yd],va(rb(),f,g).year),d=fb(b.w,1),null!=b.d?(e=b.d,(0&gt;e||e&gt;6)&amp;&amp;(i=!0)):null!=b.e?(e=b.e+f,(b.e&lt;0||b.e&gt;6)&amp;&amp;(i=!0)):e=f),1&gt;d||d&gt;wa(c,f,g)?l(a)._overflowWeeks=!0:null!=i?l(a)._overflowWeekday=!0:(h=ua(c,d,e,f,g),a._a[Yd]=h.year,a._dayOfYear=h.dayOfYear)}
// date from string and format string
function jb(b){
// TODO: Move this to another part of the creation flow to prevent circular deps
if(b._f===a.ISO_8601)return void db(b);b._a=[],l(b).empty=!0;
// This array is used to make a Date, either with `new Date` or `Date.UTC`
var c,d,e,f,g,h=""+b._i,i=h.length,j=0;for(e=X(b._f,b._locale).match(Bd)||[],c=0;c&lt;e.length;c++)f=e[c],d=(h.match(Z(f,b))||[])[0],d&amp;&amp;(g=h.substr(0,h.indexOf(d)),g.length&gt;0&amp;&amp;l(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),Ed[f]?(d?l(b).empty=!1:l(b).unusedTokens.push(f),ca(f,d,b)):b._strict&amp;&amp;!d&amp;&amp;l(b).unusedTokens.push(f);
// add remaining unparsed input length to the string
l(b).charsLeftOver=i-j,h.length&gt;0&amp;&amp;l(b).unusedInput.push(h),
// clear _12h flag if hour is &lt;= 12
b._a[_d]&lt;=12&amp;&amp;l(b).bigHour===!0&amp;&amp;b._a[_d]&gt;0&amp;&amp;(l(b).bigHour=void 0),l(b).parsedDateParts=b._a.slice(0),l(b).meridiem=b._meridiem,
// handle meridiem
b._a[_d]=kb(b._locale,b._a[_d],b._meridiem),hb(b),cb(b)}function kb(a,b,c){var d;
// Fallback
return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&amp;&amp;12&gt;b&amp;&amp;(b+=12),d||12!==b||(b=0),b):b}
// date from string and array of format strings
function lb(a){var b,c,d,e,f;if(0===a._f.length)return l(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e&lt;a._f.length;e++)f=0,b=p({},a),null!=a._useUTC&amp;&amp;(b._useUTC=a._useUTC),b._f=a._f[e],jb(b),m(b)&amp;&amp;(f+=l(b).charsLeftOver,f+=10*l(b).unusedTokens.length,l(b).score=f,(null==d||d&gt;f)&amp;&amp;(d=f,c=b));i(a,c||b)}function mb(a){if(!a._d){var b=K(a._i);a._a=g([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a&amp;&amp;parseInt(a,10)}),hb(a)}}function nb(a){var b=new q(cb(ob(a)));
// Adding is smart enough around DST
return b._nextDay&amp;&amp;(b.add(1,"d"),b._nextDay=void 0),b}function ob(a){var b=a._i,d=a._f;return a._locale=a._locale||ab(a._l),null===b||void 0===d&amp;&amp;""===b?n({nullInput:!0}):("string"==typeof b&amp;&amp;(a._i=b=a._locale.preparse(b)),r(b)?new q(cb(b)):(c(d)?lb(a):f(b)?a._d=b:d?jb(a):pb(a),m(a)||(a._d=null),a))}function pb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):f(d)?b._d=new Date(d.valueOf()):"string"==typeof d?eb(b):c(d)?(b._a=g(d.slice(0),function(a){return parseInt(a,10)}),hb(b)):"object"==typeof d?mb(b):"number"==typeof d?
// from milliseconds
b._d=new Date(d):a.createFromInputFallback(b)}function qb(a,b,f,g,h){var i={};
// object construction must be done this way.
// https://github.com/moment/moment/issues/1423
return"boolean"==typeof f&amp;&amp;(g=f,f=void 0),(d(a)&amp;&amp;e(a)||c(a)&amp;&amp;0===a.length)&amp;&amp;(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,nb(i)}function rb(a,b,c,d){return qb(a,b,c,d,!1)}
// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function sb(a,b){var d,e;if(1===b.length&amp;&amp;c(b[0])&amp;&amp;(b=b[0]),!b.length)return rb();for(d=b[0],e=1;e&lt;b.length;++e)b[e].isValid()&amp;&amp;!b[e][a](d)||(d=b[e]);return d}
// TODO: Use [].sort instead?
function tb(){var a=[].slice.call(arguments,0);return sb("isBefore",a)}function ub(){var a=[].slice.call(arguments,0);return sb("isAfter",a)}function vb(a){var b=K(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;
// representation for dateAddRemove
this._milliseconds=+k+1e3*j+// 1000
6e4*i+// 1000 * 60
1e3*h*60*60,//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
// Because of dateAddRemove treats 24 hours as different from a
// day when working around DST, we need to store them separately
this._days=+g+7*f,
// It is impossible translate months into days without knowing
// which months you are are talking about, so we have to store
// it separately.
this._months=+e+3*d+12*c,this._data={},this._locale=ab(),this._bubble()}function wb(a){return a instanceof vb}
// FORMATTING
function xb(a,b){T(a,0,0,function(){var a=this.utcOffset(),c="+";return 0&gt;a&amp;&amp;(a=-a,c="-"),c+S(~~(a/60),2)+b+S(~~a%60,2)})}function yb(a,b){var c=(b||"").match(a)||[],d=c[c.length-1]||[],e=(d+"").match(Ge)||["-",0,0],f=+(60*e[1])+t(e[2]);return"+"===e[0]?f:-f}
// Return a moment from input, that is local/utc/zone equivalent to model.
function zb(b,c){var d,e;
// Use low-level api, because this fn is low-level api.
return c._isUTC?(d=c.clone(),e=(r(b)||f(b)?b.valueOf():rb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):rb(b).local()}function Ab(a){
// On Firefox.24 Date#getTimezoneOffset returns a floating point.
// https://github.com/moment/moment/pull/1871
return 15*-Math.round(a._d.getTimezoneOffset()/15)}
// MOMENTS
// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]--&gt;
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function Bb(b,c){var d,e=this._offset||0;return this.isValid()?null!=b?("string"==typeof b?b=yb(Td,b):Math.abs(b)&lt;16&amp;&amp;(b=60*b),!this._isUTC&amp;&amp;c&amp;&amp;(d=Ab(this)),this._offset=b,this._isUTC=!0,null!=d&amp;&amp;this.add(d,"m"),e!==b&amp;&amp;(!c||this._changeInProgress?Sb(this,Mb(b-e,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ab(this):null!=b?this:NaN}function Cb(a,b){return null!=a?("string"!=typeof a&amp;&amp;(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Db(a){return this.utcOffset(0,a)}function Eb(a){return this._isUTC&amp;&amp;(this.utcOffset(0,a),this._isUTC=!1,a&amp;&amp;this.subtract(Ab(this),"m")),this}function Fb(){return this._tzm?this.utcOffset(this._tzm):"string"==typeof this._i&amp;&amp;this.utcOffset(yb(Sd,this._i)),this}function Gb(a){return this.isValid()?(a=a?rb(a).utcOffset():0,(this.utcOffset()-a)%60===0):!1}function Hb(){return this.utcOffset()&gt;this.clone().month(0).utcOffset()||this.utcOffset()&gt;this.clone().month(5).utcOffset()}function Ib(){if(!o(this._isDSTShifted))return this._isDSTShifted;var a={};if(p(a,this),a=ob(a),a._a){var b=a._isUTC?j(a._a):rb(a._a);this._isDSTShifted=this.isValid()&amp;&amp;u(a._a,b.toArray())&gt;0}else this._isDSTShifted=!1;return this._isDSTShifted}function Jb(){return this.isValid()?!this._isUTC:!1}function Kb(){return this.isValid()?this._isUTC:!1}function Lb(){return this.isValid()?this._isUTC&amp;&amp;0===this._offset:!1}function Mb(a,b){var c,d,e,f=a,
// matching against regexp is expensive, do it on demand
g=null;// checks for null or undefined
return wb(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=He.exec(a))?(c="-"===g[1]?-1:1,f={y:0,d:t(g[$d])*c,h:t(g[_d])*c,m:t(g[ae])*c,s:t(g[be])*c,ms:t(g[ce])*c}):(g=Ie.exec(a))?(c="-"===g[1]?-1:1,f={y:Nb(g[2],c),M:Nb(g[3],c),w:Nb(g[4],c),d:Nb(g[5],c),h:Nb(g[6],c),m:Nb(g[7],c),s:Nb(g[8],c)}):null==f?f={}:"object"==typeof f&amp;&amp;("from"in f||"to"in f)&amp;&amp;(e=Pb(rb(f.from),rb(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new vb(f),wb(a)&amp;&amp;h(a,"_locale")&amp;&amp;(d._locale=a._locale),d}function Nb(a,b){
// We'd normally use ~~inp for this, but unfortunately it also
// converts floats to ints.
// inp may be undefined, so careful calling replace on it.
var c=a&amp;&amp;parseFloat(a.replace(",","."));
// apply sign while we're at it
return(isNaN(c)?0:c)*b}function Ob(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,"M").isAfter(b)&amp;&amp;--c.months,c.milliseconds=+b-+a.clone().add(c.months,"M"),c}function Pb(a,b){var c;return a.isValid()&amp;&amp;b.isValid()?(b=zb(b,a),a.isBefore(b)?c=Ob(a,b):(c=Ob(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}function Qb(a){return 0&gt;a?-1*Math.round(-1*a):Math.round(a)}
// TODO: remove 'name' arg after deprecation is removed
function Rb(a,b){return function(c,d){var e,f;
//invert the arguments, but complain about it
return null===d||isNaN(+d)||(x(b,"moment()."+b+"(period, number) is deprecated. Please use moment()."+b+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),f=c,c=d,d=f),c="string"==typeof c?+c:c,e=Mb(c,d),Sb(this,e,a),this}}function Sb(b,c,d,e){var f=c._milliseconds,g=Qb(c._days),h=Qb(c._months);b.isValid()&amp;&amp;(e=null==e?!0:e,f&amp;&amp;b._d.setTime(b._d.valueOf()+f*d),g&amp;&amp;P(b,"Date",O(b,"Date")+g*d),h&amp;&amp;ia(b,O(b,"Month")+h*d),e&amp;&amp;a.updateOffset(b,g||h))}function Tb(a,b){var c=a.diff(b,"days",!0);return-6&gt;c?"sameElse":-1&gt;c?"lastWeek":0&gt;c?"lastDay":1&gt;c?"sameDay":2&gt;c?"nextDay":7&gt;c?"nextWeek":"sameElse"}function Ub(b,c){
// We want to compare the start of today, vs this.
// Getting start-of-today depends on whether we're local/utc/offset or not.
var d=b||rb(),e=zb(d,this).startOf("day"),f=a.calendarFormat(this,e)||"sameElse",g=c&amp;&amp;(y(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,rb(d)))}function Vb(){return new q(this)}function Wb(a,b){var c=r(a)?a:rb(a);return this.isValid()&amp;&amp;c.isValid()?(b=J(o(b)?"millisecond":b),"millisecond"===b?this.valueOf()&gt;c.valueOf():c.valueOf()&lt;this.clone().startOf(b).valueOf()):!1}function Xb(a,b){var c=r(a)?a:rb(a);return this.isValid()&amp;&amp;c.isValid()?(b=J(o(b)?"millisecond":b),"millisecond"===b?this.valueOf()&lt;c.valueOf():this.clone().endOf(b).valueOf()&lt;c.valueOf()):!1}function Yb(a,b,c,d){return d=d||"()",("("===d[0]?this.isAfter(a,c):!this.isBefore(a,c))&amp;&amp;(")"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function Zb(a,b){var c,d=r(a)?a:rb(a);return this.isValid()&amp;&amp;d.isValid()?(b=J(b||"millisecond"),"millisecond"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()&lt;=c&amp;&amp;c&lt;=this.clone().endOf(b).valueOf())):!1}function $b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function _b(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function ac(a,b,c){var d,e,f,g;// 1000
// 1000 * 60
// 1000 * 60 * 60
// 1000 * 60 * 60 * 24, negate dst
// 1000 * 60 * 60 * 24 * 7, negate dst
return this.isValid()?(d=zb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=J(b),"year"===b||"month"===b||"quarter"===b?(g=bc(this,d),"quarter"===b?g/=3:"year"===b&amp;&amp;(g/=12)):(f=this-d,g="second"===b?f/1e3:"minute"===b?f/6e4:"hour"===b?f/36e5:"day"===b?(f-e)/864e5:"week"===b?(f-e)/6048e5:f),c?g:s(g)):NaN):NaN}function bc(a,b){
// difference in months
var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),
// b is in (anchor - 1 month, anchor + 1 month)
f=a.clone().add(e,"months");
//check for negative zero, return zero if negative zero
// linear across the month
// linear across the month
return 0&gt;b-f?(c=a.clone().add(e-1,"months"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,"months"),d=(b-f)/(c-f)),-(e+d)||0}function cc(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function dc(){var a=this.clone().utc();return 0&lt;a.year()&amp;&amp;a.year()&lt;=9999?y(Date.prototype.toISOString)?this.toDate().toISOString():W(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):W(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function ec(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=W(this,b);return this.localeData().postformat(c)}function fc(a,b){return this.isValid()&amp;&amp;(r(a)&amp;&amp;a.isValid()||rb(a).isValid())?Mb({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function gc(a){return this.from(rb(),a)}function hc(a,b){return this.isValid()&amp;&amp;(r(a)&amp;&amp;a.isValid()||rb(a).isValid())?Mb({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.to(rb(),a)}
// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function jc(a){var b;return void 0===a?this._locale._abbr:(b=ab(a),null!=b&amp;&amp;(this._locale=b),this)}function kc(){return this._locale}function lc(a){
// the following switch intentionally omits break keywords
// to utilize falling through the cases.
switch(a=J(a)){case"year":this.month(0);/* falls through */
case"quarter":case"month":this.date(1);/* falls through */
case"week":case"isoWeek":case"day":case"date":this.hours(0);/* falls through */
case"hour":this.minutes(0);/* falls through */
case"minute":this.seconds(0);/* falls through */
case"second":this.milliseconds(0)}
// weeks are a special case
// quarters are also special
return"week"===a&amp;&amp;this.weekday(0),"isoWeek"===a&amp;&amp;this.isoWeekday(1),"quarter"===a&amp;&amp;this.month(3*Math.floor(this.month()/3)),this}function mc(a){
// 'date' is an alias for 'day', so it should be considered as such.
return a=J(a),void 0===a||"millisecond"===a?this:("date"===a&amp;&amp;(a="day"),this.startOf(a).add(1,"isoWeek"===a?"week":a).subtract(1,"ms"))}function nc(){return this._d.valueOf()-6e4*(this._offset||0)}function oc(){return Math.floor(this.valueOf()/1e3)}function pc(){return new Date(this.valueOf())}function qc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function rc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function sc(){
// new Date(NaN).toJSON() === null
return this.isValid()?this.toISOString():null}function tc(){return m(this)}function uc(){return i({},l(this))}function vc(){return l(this).overflow}function wc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function xc(a,b){T(0,[a,a.length],0,b)}
// MOMENTS
function yc(a){return Cc.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function zc(a){return Cc.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Ac(){return wa(this.year(),1,4)}function Bc(){var a=this.localeData()._week;return wa(this.year(),a.dow,a.doy)}function Cc(a,b,c,d,e){var f;return null==a?va(this,d,e).year:(f=wa(a,d,e),b&gt;f&amp;&amp;(b=f),Dc.call(this,a,b,c,d,e))}function Dc(a,b,c,d,e){var f=ua(a,b,c,d,e),g=sa(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}
// MOMENTS
function Ec(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}
// HELPERS
// MOMENTS
function Fc(a){var b=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==a?b:this.add(a-b,"d")}function Gc(a,b){b[ce]=t(1e3*("0."+a))}
// MOMENTS
function Hc(){return this._isUTC?"UTC":""}function Ic(){return this._isUTC?"Coordinated Universal Time":""}function Jc(a){return rb(1e3*a)}function Kc(){return rb.apply(null,arguments).parseZone()}function Lc(a){return a}function Mc(a,b,c,d){var e=ab(),f=j().set(d,b);return e[c](f,a)}function Nc(a,b,c){if("number"==typeof a&amp;&amp;(b=a,a=void 0),a=a||"",null!=b)return Mc(a,b,c,"month");var d,e=[];for(d=0;12&gt;d;d++)e[d]=Mc(a,d,c,"month");return e}
// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function Oc(a,b,c,d){"boolean"==typeof a?("number"==typeof b&amp;&amp;(c=b,b=void 0),b=b||""):(b=a,c=b,a=!1,"number"==typeof b&amp;&amp;(c=b,b=void 0),b=b||"");var e=ab(),f=a?e._week.dow:0;if(null!=c)return Mc(b,(c+f)%7,d,"day");var g,h=[];for(g=0;7&gt;g;g++)h[g]=Mc(b,(g+f)%7,d,"day");return h}function Pc(a,b){return Nc(a,b,"months")}function Qc(a,b){return Nc(a,b,"monthsShort")}function Rc(a,b,c){return Oc(a,b,c,"weekdays")}function Sc(a,b,c){return Oc(a,b,c,"weekdaysShort")}function Tc(a,b,c){return Oc(a,b,c,"weekdaysMin")}function Uc(){var a=this._data;return this._milliseconds=Ue(this._milliseconds),this._days=Ue(this._days),this._months=Ue(this._months),a.milliseconds=Ue(a.milliseconds),a.seconds=Ue(a.seconds),a.minutes=Ue(a.minutes),a.hours=Ue(a.hours),a.months=Ue(a.months),a.years=Ue(a.years),this}function Vc(a,b,c,d){var e=Mb(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}
// supports only 2.0-style add(1, 's') or add(duration)
function Wc(a,b){return Vc(this,a,b,1)}
// supports only 2.0-style subtract(1, 's') or subtract(duration)
function Xc(a,b){return Vc(this,a,b,-1)}function Yc(a){return 0&gt;a?Math.floor(a):Math.ceil(a)}function Zc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;
// if we have a mix of positive and negative values, bubble down first
// check: https://github.com/moment/moment/issues/2166
// The following code bubbles up values, see the tests for
// examples of what that means.
// convert days to months
// 12 months -&gt; 1 year
return f&gt;=0&amp;&amp;g&gt;=0&amp;&amp;h&gt;=0||0&gt;=f&amp;&amp;0&gt;=g&amp;&amp;0&gt;=h||(f+=864e5*Yc(_c(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=s(f/1e3),i.seconds=a%60,b=s(a/60),i.minutes=b%60,c=s(b/60),i.hours=c%24,g+=s(c/24),e=s($c(g)),h+=e,g-=Yc(_c(e)),d=s(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function $c(a){
// 400 years have 146097 days (taking into account leap year rules)
// 400 years have 12 months === 4800
return 4800*a/146097}function _c(a){
// the reverse of daysToMonths
return 146097*a/4800}function ad(a){var b,c,d=this._milliseconds;if(a=J(a),"month"===a||"year"===a)return b=this._days+d/864e5,c=this._months+$c(b),"month"===a?c:c/12;switch(b=this._days+Math.round(_c(this._months)),a){case"week":return b/7+d/6048e5;case"day":return b+d/864e5;case"hour":return 24*b+d/36e5;case"minute":return 1440*b+d/6e4;case"second":return 86400*b+d/1e3;
// Math.floor prevents floating point math errors here
case"millisecond":return Math.floor(864e5*b)+d;default:throw new Error("Unknown unit "+a)}}
// TODO: Use this.as('ms')?
function bd(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*t(this._months/12)}function cd(a){return function(){return this.as(a)}}function dd(a){return a=J(a),this[a+"s"]()}function ed(a){return function(){return this._data[a]}}function fd(){return s(this.days()/7)}
// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function gd(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function hd(a,b,c){var d=Mb(a).abs(),e=jf(d.as("s")),f=jf(d.as("m")),g=jf(d.as("h")),h=jf(d.as("d")),i=jf(d.as("M")),j=jf(d.as("y")),k=e&lt;kf.s&amp;&amp;["s",e]||1&gt;=f&amp;&amp;["m"]||f&lt;kf.m&amp;&amp;["mm",f]||1&gt;=g&amp;&amp;["h"]||g&lt;kf.h&amp;&amp;["hh",g]||1&gt;=h&amp;&amp;["d"]||h&lt;kf.d&amp;&amp;["dd",h]||1&gt;=i&amp;&amp;["M"]||i&lt;kf.M&amp;&amp;["MM",i]||1&gt;=j&amp;&amp;["y"]||["yy",j];return k[2]=b,k[3]=+a&gt;0,k[4]=c,gd.apply(null,k)}
// This function allows you to set the rounding function for relative time strings
function id(a){return void 0===a?jf:"function"==typeof a?(jf=a,!0):!1}
// This function allows you to set a threshold for relative time strings
function jd(a,b){return void 0===kf[a]?!1:void 0===b?kf[a]:(kf[a]=b,!0)}function kd(a){var b=this.localeData(),c=hd(this,!a,b);return a&amp;&amp;(c=b.pastFuture(+this,c)),b.postformat(c)}function ld(){
// for ISO strings we do not use the normal bubbling rules:
//  * milliseconds bubble up until they become hours
//  * days do not bubble at all
//  * months bubble up until they become years
// This is because there is no context-free conversion between hours and days
// (think of clock changes)
// and also not between days and months (28-31 days per month)
var a,b,c,d=lf(this._milliseconds)/1e3,e=lf(this._days),f=lf(this._months);a=s(d/60),b=s(a/60),d%=60,a%=60,c=s(f/12),f%=12;
// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0&gt;m?"-":"")+"P"+(g?g+"Y":"")+(h?h+"M":"")+(i?i+"D":"")+(j||k||l?"T":"")+(j?j+"H":"")+(k?k+"M":"")+(l?l+"S":""):"P0D"}var md,nd;nd=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length&gt;&gt;&gt;0,d=0;c&gt;d;d++)if(d in b&amp;&amp;a.call(this,b[d],d,b))return!0;return!1};
// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var od=a.momentProperties=[],pd=!1,qd={};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var rd;rd=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)h(a,b)&amp;&amp;c.push(b);return c};var sd,td={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},ud={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},vd="Invalid date",wd="%d",xd=/\d{1,2}/,yd={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},zd={},Ad={},Bd=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Cd=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Dd={},Ed={},Fd=/\d/,Gd=/\d\d/,Hd=/\d{3}/,Id=/\d{4}/,Jd=/[+-]?\d{6}/,Kd=/\d\d?/,Ld=/\d\d\d\d?/,Md=/\d\d\d\d\d\d?/,Nd=/\d{1,3}/,Od=/\d{1,4}/,Pd=/[+-]?\d{1,6}/,Qd=/\d+/,Rd=/[+-]?\d+/,Sd=/Z|[+-]\d\d:?\d\d/gi,Td=/Z|[+-]\d\d(?::?\d\d)?/gi,Ud=/[+-]?\d+(\.\d{1,3})?/,Vd=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Wd={},Xd={},Yd=0,Zd=1,$d=2,_d=3,ae=4,be=5,ce=6,de=7,ee=8;sd=Array.prototype.indexOf?Array.prototype.indexOf:function(a){
// I know
var b;for(b=0;b&lt;this.length;++b)if(this[b]===a)return b;return-1},T("M",["MM",2],"Mo",function(){return this.month()+1}),T("MMM",0,0,function(a){return this.localeData().monthsShort(this,a)}),T("MMMM",0,0,function(a){return this.localeData().months(this,a)}),I("month","M"),L("month",8),Y("M",Kd),Y("MM",Kd,Gd),Y("MMM",function(a,b){return b.monthsShortRegex(a)}),Y("MMMM",function(a,b){return b.monthsRegex(a)}),aa(["M","MM"],function(a,b){b[Zd]=t(a)-1}),aa(["MMM","MMMM"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[Zd]=e:l(c).invalidMonth=a});
// LOCALES
var fe=/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/,ge="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),he="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),ie=Vd,je=Vd;
// FORMATTING
T("Y",0,0,function(){var a=this.year();return 9999&gt;=a?""+a:"+"+a}),T(0,["YY",2],0,function(){return this.year()%100}),T(0,["YYYY",4],0,"year"),T(0,["YYYYY",5],0,"year"),T(0,["YYYYYY",6,!0],0,"year"),
// ALIASES
I("year","y"),
// PRIORITIES
L("year",1),
// PARSING
Y("Y",Rd),Y("YY",Kd,Gd),Y("YYYY",Od,Id),Y("YYYYY",Pd,Jd),Y("YYYYYY",Pd,Jd),aa(["YYYYY","YYYYYY"],Yd),aa("YYYY",function(b,c){c[Yd]=2===b.length?a.parseTwoDigitYear(b):t(b)}),aa("YY",function(b,c){c[Yd]=a.parseTwoDigitYear(b)}),aa("Y",function(a,b){b[Yd]=parseInt(a,10)}),
// HOOKS
a.parseTwoDigitYear=function(a){return t(a)+(t(a)&gt;68?1900:2e3)};
// MOMENTS
var ke=N("FullYear",!0);
// FORMATTING
T("w",["ww",2],"wo","week"),T("W",["WW",2],"Wo","isoWeek"),
// ALIASES
I("week","w"),I("isoWeek","W"),
// PRIORITIES
L("week",5),L("isoWeek",5),
// PARSING
Y("w",Kd),Y("ww",Kd,Gd),Y("W",Kd),Y("WW",Kd,Gd),ba(["w","ww","W","WW"],function(a,b,c,d){b[d.substr(0,1)]=t(a)});var le={dow:0,// Sunday is the first day of the week.
doy:6};
// FORMATTING
T("d",0,"do","day"),T("dd",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),T("ddd",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),T("dddd",0,0,function(a){return this.localeData().weekdays(this,a)}),T("e",0,0,"weekday"),T("E",0,0,"isoWeekday"),
// ALIASES
I("day","d"),I("weekday","e"),I("isoWeekday","E"),
// PRIORITY
L("day",11),L("weekday",11),L("isoWeekday",11),
// PARSING
Y("d",Kd),Y("e",Kd),Y("E",Kd),Y("dd",function(a,b){return b.weekdaysMinRegex(a)}),Y("ddd",function(a,b){return b.weekdaysShortRegex(a)}),Y("dddd",function(a,b){return b.weekdaysRegex(a)}),ba(["dd","ddd","dddd"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);
// if we didn't get a weekday name, mark the date as invalid
null!=e?b.d=e:l(c).invalidWeekday=a}),ba(["d","e","E"],function(a,b,c,d){b[d]=t(a)});
// LOCALES
var me="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),ne="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),oe="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),pe=Vd,qe=Vd,re=Vd;T("H",["HH",2],0,"hour"),T("h",["hh",2],0,Qa),T("k",["kk",2],0,Ra),T("hmm",0,0,function(){return""+Qa.apply(this)+S(this.minutes(),2)}),T("hmmss",0,0,function(){return""+Qa.apply(this)+S(this.minutes(),2)+S(this.seconds(),2)}),T("Hmm",0,0,function(){return""+this.hours()+S(this.minutes(),2)}),T("Hmmss",0,0,function(){return""+this.hours()+S(this.minutes(),2)+S(this.seconds(),2)}),Sa("a",!0),Sa("A",!1),
// ALIASES
I("hour","h"),
// PRIORITY
L("hour",13),Y("a",Ta),Y("A",Ta),Y("H",Kd),Y("h",Kd),Y("HH",Kd,Gd),Y("hh",Kd,Gd),Y("hmm",Ld),Y("hmmss",Md),Y("Hmm",Ld),Y("Hmmss",Md),aa(["H","HH"],_d),aa(["a","A"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),aa(["h","hh"],function(a,b,c){b[_d]=t(a),l(c).bigHour=!0}),aa("hmm",function(a,b,c){var d=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d)),l(c).bigHour=!0}),aa("hmmss",function(a,b,c){var d=a.length-4,e=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d,2)),b[be]=t(a.substr(e)),l(c).bigHour=!0}),aa("Hmm",function(a,b,c){var d=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d))}),aa("Hmmss",function(a,b,c){var d=a.length-4,e=a.length-2;b[_d]=t(a.substr(0,d)),b[ae]=t(a.substr(d,2)),b[be]=t(a.substr(e))});var se,te=/[ap]\.?m?\.?/i,ue=N("Hours",!0),ve={calendar:td,longDateFormat:ud,invalidDate:vd,ordinal:wd,ordinalParse:xd,relativeTime:yd,months:ge,monthsShort:he,week:le,weekdays:me,weekdaysMin:oe,weekdaysShort:ne,meridiemParse:te},we={},xe=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,ye=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,ze=/Z|[+-]\d\d(?::?\d\d)?/,Ae=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],
// YYYYMM is NOT allowed by the standard
["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],Be=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Ce=/^\/?Date\((\-?\d+)/i;a.createFromInputFallback=w("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(a){a._d=new Date(a._i+(a._useUTC?" UTC":""))}),
// constant that refers to the ISO standard
a.ISO_8601=function(){};var De=w("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var a=rb.apply(null,arguments);return this.isValid()&amp;&amp;a.isValid()?this&gt;a?this:a:n()}),Ee=w("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var a=rb.apply(null,arguments);return this.isValid()&amp;&amp;a.isValid()?a&gt;this?this:a:n()}),Fe=function(){return Date.now?Date.now():+new Date};xb("Z",":"),xb("ZZ",""),
// PARSING
Y("Z",Td),Y("ZZ",Td),aa(["Z","ZZ"],function(a,b,c){c._useUTC=!0,c._tzm=yb(Td,a)});
// HELPERS
// timezone chunker
// '+10:00' &gt; ['10',  '00']
// '-1530'  &gt; ['-15', '30']
var Ge=/([\+\-]|\d\d)/gi;
// HOOKS
// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
a.updateOffset=function(){};
// ASP.NET json date format regex
var He=/^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?\d*)?$/,Ie=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Mb.fn=vb.prototype;var Je=Rb(1,"add"),Ke=Rb(-1,"subtract");a.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",a.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Le=w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(a){return void 0===a?this.localeData():this.locale(a)});
// FORMATTING
T(0,["gg",2],0,function(){return this.weekYear()%100}),T(0,["GG",2],0,function(){return this.isoWeekYear()%100}),xc("gggg","weekYear"),xc("ggggg","weekYear"),xc("GGGG","isoWeekYear"),xc("GGGGG","isoWeekYear"),
// ALIASES
I("weekYear","gg"),I("isoWeekYear","GG"),
// PRIORITY
L("weekYear",1),L("isoWeekYear",1),
// PARSING
Y("G",Rd),Y("g",Rd),Y("GG",Kd,Gd),Y("gg",Kd,Gd),Y("GGGG",Od,Id),Y("gggg",Od,Id),Y("GGGGG",Pd,Jd),Y("ggggg",Pd,Jd),ba(["gggg","ggggg","GGGG","GGGGG"],function(a,b,c,d){b[d.substr(0,2)]=t(a)}),ba(["gg","GG"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),
// FORMATTING
T("Q",0,"Qo","quarter"),
// ALIASES
I("quarter","Q"),
// PRIORITY
L("quarter",7),
// PARSING
Y("Q",Fd),aa("Q",function(a,b){b[Zd]=3*(t(a)-1)}),
// FORMATTING
T("D",["DD",2],"Do","date"),
// ALIASES
I("date","D"),
// PRIOROITY
L("date",9),
// PARSING
Y("D",Kd),Y("DD",Kd,Gd),Y("Do",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),aa(["D","DD"],$d),aa("Do",function(a,b){b[$d]=t(a.match(Kd)[0],10)});
// MOMENTS
var Me=N("Date",!0);
// FORMATTING
T("DDD",["DDDD",3],"DDDo","dayOfYear"),
// ALIASES
I("dayOfYear","DDD"),
// PRIORITY
L("dayOfYear",4),
// PARSING
Y("DDD",Nd),Y("DDDD",Hd),aa(["DDD","DDDD"],function(a,b,c){c._dayOfYear=t(a)}),
// FORMATTING
T("m",["mm",2],0,"minute"),
// ALIASES
I("minute","m"),
// PRIORITY
L("minute",14),
// PARSING
Y("m",Kd),Y("mm",Kd,Gd),aa(["m","mm"],ae);
// MOMENTS
var Ne=N("Minutes",!1);
// FORMATTING
T("s",["ss",2],0,"second"),
// ALIASES
I("second","s"),
// PRIORITY
L("second",15),
// PARSING
Y("s",Kd),Y("ss",Kd,Gd),aa(["s","ss"],be);
// MOMENTS
var Oe=N("Seconds",!1);
// FORMATTING
T("S",0,0,function(){return~~(this.millisecond()/100)}),T(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),T(0,["SSS",3],0,"millisecond"),T(0,["SSSS",4],0,function(){return 10*this.millisecond()}),T(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),T(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),T(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),T(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),T(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),
// ALIASES
I("millisecond","ms"),
// PRIORITY
L("millisecond",16),
// PARSING
Y("S",Nd,Fd),Y("SS",Nd,Gd),Y("SSS",Nd,Hd);var Pe;for(Pe="SSSS";Pe.length&lt;=9;Pe+="S")Y(Pe,Qd);for(Pe="S";Pe.length&lt;=9;Pe+="S")aa(Pe,Gc);
// MOMENTS
var Qe=N("Milliseconds",!1);
// FORMATTING
T("z",0,0,"zoneAbbr"),T("zz",0,0,"zoneName");var Re=q.prototype;Re.add=Je,Re.calendar=Ub,Re.clone=Vb,Re.diff=ac,Re.endOf=mc,Re.format=ec,Re.from=fc,Re.fromNow=gc,Re.to=hc,Re.toNow=ic,Re.get=Q,Re.invalidAt=vc,Re.isAfter=Wb,Re.isBefore=Xb,Re.isBetween=Yb,Re.isSame=Zb,Re.isSameOrAfter=$b,Re.isSameOrBefore=_b,Re.isValid=tc,Re.lang=Le,Re.locale=jc,Re.localeData=kc,Re.max=Ee,Re.min=De,Re.parsingFlags=uc,Re.set=R,Re.startOf=lc,Re.subtract=Ke,Re.toArray=qc,Re.toObject=rc,Re.toDate=pc,Re.toISOString=dc,Re.toJSON=sc,Re.toString=cc,Re.unix=oc,Re.valueOf=nc,Re.creationData=wc,
// Year
Re.year=ke,Re.isLeapYear=qa,
// Week Year
Re.weekYear=yc,Re.isoWeekYear=zc,
// Quarter
Re.quarter=Re.quarters=Ec,
// Month
Re.month=ja,Re.daysInMonth=ka,
// Week
Re.week=Re.weeks=Aa,Re.isoWeek=Re.isoWeeks=Ba,Re.weeksInYear=Bc,Re.isoWeeksInYear=Ac,
// Day
Re.date=Me,Re.day=Re.days=Ja,Re.weekday=Ka,Re.isoWeekday=La,Re.dayOfYear=Fc,
// Hour
Re.hour=Re.hours=ue,
// Minute
Re.minute=Re.minutes=Ne,
// Second
Re.second=Re.seconds=Oe,
// Millisecond
Re.millisecond=Re.milliseconds=Qe,
// Offset
Re.utcOffset=Bb,Re.utc=Db,Re.local=Eb,Re.parseZone=Fb,Re.hasAlignedHourOffset=Gb,Re.isDST=Hb,Re.isLocal=Jb,Re.isUtcOffset=Kb,Re.isUtc=Lb,Re.isUTC=Lb,
// Timezone
Re.zoneAbbr=Hc,Re.zoneName=Ic,
// Deprecations
Re.dates=w("dates accessor is deprecated. Use date instead.",Me),Re.months=w("months accessor is deprecated. Use month instead",ja),Re.years=w("years accessor is deprecated. Use year instead",ke),Re.zone=w("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",Cb),Re.isDSTShifted=w("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",Ib);var Se=Re,Te=B.prototype;Te.calendar=C,Te.longDateFormat=D,Te.invalidDate=E,Te.ordinal=F,Te.preparse=Lc,Te.postformat=Lc,Te.relativeTime=G,Te.pastFuture=H,Te.set=z,
// Month
Te.months=ea,Te.monthsShort=fa,Te.monthsParse=ha,Te.monthsRegex=ma,Te.monthsShortRegex=la,
// Week
Te.week=xa,Te.firstDayOfYear=za,Te.firstDayOfWeek=ya,
// Day of Week
Te.weekdays=Ea,Te.weekdaysMin=Ga,Te.weekdaysShort=Fa,Te.weekdaysParse=Ia,Te.weekdaysRegex=Ma,Te.weekdaysShortRegex=Na,Te.weekdaysMinRegex=Oa,
// Hours
Te.isPM=Ua,Te.meridiem=Va,Za("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===t(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),
// Side effect imports
a.lang=w("moment.lang is deprecated. Use moment.locale instead.",Za),a.langData=w("moment.langData is deprecated. Use moment.localeData instead.",ab);var Ue=Math.abs,Ve=cd("ms"),We=cd("s"),Xe=cd("m"),Ye=cd("h"),Ze=cd("d"),$e=cd("w"),_e=cd("M"),af=cd("y"),bf=ed("milliseconds"),cf=ed("seconds"),df=ed("minutes"),ef=ed("hours"),ff=ed("days"),gf=ed("months"),hf=ed("years"),jf=Math.round,kf={s:45,// seconds to minute
m:45,// minutes to hour
h:22,// hours to day
d:26,// days to month
M:11},lf=Math.abs,mf=vb.prototype;mf.abs=Uc,mf.add=Wc,mf.subtract=Xc,mf.as=ad,mf.asMilliseconds=Ve,mf.asSeconds=We,mf.asMinutes=Xe,mf.asHours=Ye,mf.asDays=Ze,mf.asWeeks=$e,mf.asMonths=_e,mf.asYears=af,mf.valueOf=bd,mf._bubble=Zc,mf.get=dd,mf.milliseconds=bf,mf.seconds=cf,mf.minutes=df,mf.hours=ef,mf.days=ff,mf.weeks=fd,mf.months=gf,mf.years=hf,mf.humanize=kd,mf.toISOString=ld,mf.toString=ld,mf.toJSON=ld,mf.locale=jc,mf.localeData=kc,
// Deprecations
mf.toIsoString=w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",ld),mf.lang=Le,
// Side effect imports
// FORMATTING
T("X",0,0,"unix"),T("x",0,0,"valueOf"),
// PARSING
Y("x",Rd),Y("X",Ud),aa("X",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),aa("x",function(a,b,c){c._d=new Date(t(a))}),
// Side effect imports
a.version="2.14.1",b(rb),a.fn=Se,a.min=tb,a.max=ub,a.now=Fe,a.utc=j,a.unix=Jc,a.months=Pc,a.isDate=f,a.locale=Za,a.invalid=n,a.duration=Mb,a.isMoment=r,a.weekdays=Rc,a.parseZone=Kc,a.localeData=ab,a.isDuration=wb,a.monthsShort=Qc,a.weekdaysMin=Tc,a.defineLocale=$a,a.updateLocale=_a,a.locales=bb,a.weekdaysShort=Sc,a.normalizeUnits=J,a.relativeTimeRounding=id,a.relativeTimeThreshold=jd,a.calendarFormat=Tb,a.prototype=Se;var nf=a;return nf});</contentText>
  </asset>
  <asset name="lib/select2-extended-ajax.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-10-11
 */
$.fn.select2.amd.define('select2/data/extended-ajax', ['./ajax', '../utils', 'jquery'], function (AjaxAdapter, Utils, $) {

    function ExtendedAjaxAdapter($element, options) {
        //we need explicitly process minimumInputLength value 
        //to decide should we use AjaxAdapter or return defaultResults,
        //so it is impossible to use MinimumLength decorator here
        this.minimumInputLength = options.get('minimumInputLength');
        this.defaultResults = options.get('defaultResults');

        ExtendedAjaxAdapter.__super__.constructor.call(this, $element, options);
    }

    Utils.Extend(ExtendedAjaxAdapter, AjaxAdapter);

    //override original query function to support default results
    var originQuery = AjaxAdapter.prototype.query;

    ExtendedAjaxAdapter.prototype.query = function (params, callback) {

        var defaultResults = (typeof this.defaultResults == 'function') ? this.defaultResults.call(this) : this.defaultResults;
        if (this._request === undefined &amp;&amp; defaultResults &amp;&amp; defaultResults.length &amp;&amp; (!params.term || params.term.length &lt; this.minimumInputLength)) {
            var processedResults = this.processResults(defaultResults, params.term);
            callback(processedResults);
        }
        else {
            originQuery.call(this, params, callback);
        }
    };

    return ExtendedAjaxAdapter;
});</contentText>
  </asset>
  <asset name="lib/select2.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-8-17
 */
(function (factory) {
    if (typeof define === 'function' &amp;&amp; define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS
        factory(require('jquery'));
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function (jQuery) {
    // This is needed so we can catch the AMD loader configuration and use it
    // The inner file should be wrapped (by `banner.start.js`) in a function that
    // returns the AMD loader references.
    var S2 =
  (function () {
      // Restore the Select2 AMD loader so it can be used
      // Needed mostly in the language files, where the loader is not inserted
      if (jQuery &amp;&amp; jQuery.fn &amp;&amp; jQuery.fn.select2 &amp;&amp; jQuery.fn.select2.amd) {
          var S2 = jQuery.fn.select2.amd;
      }
      var S2; (function () {
          if (!S2 || !S2.requirejs) {
              if (!S2) { S2 = {}; } else { require = S2; }
              /**
               * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
               * Available via the MIT or new BSD license.
               * see: http://github.com/jrburke/almond for details
               */
              //Going sloppy to avoid 'use strict' string cost, but strict practices should
              //be followed.
              /*jslint sloppy: true */
              /*global setTimeout: false */

              var requirejs, require, define;
              (function (undef) {
                  var main, req, makeMap, handlers,
                      defined = {},
                      waiting = {},
                      config = {},
                      defining = {},
                      hasOwn = Object.prototype.hasOwnProperty,
                      aps = [].slice,
                      jsSuffixRegExp = /\.js$/;

                  function hasProp(obj, prop) {
                      return hasOwn.call(obj, prop);
                  }

                  /**
                   * Given a relative module name, like ./something, normalize it to
                   * a real name that can be mapped to a path.
                   * @param {String} name the relative name
                   * @param {String} baseName a real name that the name arg is relative
                   * to.
                   * @returns {String} normalized name
                   */
                  function normalize(name, baseName) {
                      var nameParts, nameSegment, mapValue, foundMap, lastIndex,
                          foundI, foundStarMap, starI, i, j, part,
                          baseParts = baseName &amp;&amp; baseName.split("/"),
                          map = config.map,
                          starMap = (map &amp;&amp; map['*']) || {};

                      //Adjust any relative paths.
                      if (name &amp;&amp; name.charAt(0) === ".") {
                          //If have a base name, try to normalize against it,
                          //otherwise, assume it is a top-level require that will
                          //be relative to baseUrl in the end.
                          if (baseName) {
                              name = name.split('/');
                              lastIndex = name.length - 1;

                              // Node .js allowance:
                              if (config.nodeIdCompat &amp;&amp; jsSuffixRegExp.test(name[lastIndex])) {
                                  name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                              }

                              //Lop off the last part of baseParts, so that . matches the
                              //"directory" and not name of the baseName's module. For instance,
                              //baseName of "one/two/three", maps to "one/two/three.js", but we
                              //want the directory, "one/two" for this normalization.
                              name = baseParts.slice(0, baseParts.length - 1).concat(name);

                              //start trimDots
                              for (i = 0; i &lt; name.length; i += 1) {
                                  part = name[i];
                                  if (part === ".") {
                                      name.splice(i, 1);
                                      i -= 1;
                                  } else if (part === "..") {
                                      if (i === 1 &amp;&amp; (name[2] === '..' || name[0] === '..')) {
                                          //End of the line. Keep at least one non-dot
                                          //path segment at the front so it can be mapped
                                          //correctly to disk. Otherwise, there is likely
                                          //no path mapping for a path starting with '..'.
                                          //This can still fail, but catches the most reasonable
                                          //uses of ..
                                          break;
                                      } else if (i &gt; 0) {
                                          name.splice(i - 1, 2);
                                          i -= 2;
                                      }
                                  }
                              }
                              //end trimDots

                              name = name.join("/");
                          } else if (name.indexOf('./') === 0) {
                              // No baseName, so this is ID is resolved relative
                              // to baseUrl, pull off the leading dot.
                              name = name.substring(2);
                          }
                      }

                      //Apply map config if available.
                      if ((baseParts || starMap) &amp;&amp; map) {
                          nameParts = name.split('/');

                          for (i = nameParts.length; i &gt; 0; i -= 1) {
                              nameSegment = nameParts.slice(0, i).join("/");

                              if (baseParts) {
                                  //Find the longest baseName segment match in the config.
                                  //So, do joins on the biggest to smallest lengths of baseParts.
                                  for (j = baseParts.length; j &gt; 0; j -= 1) {
                                      mapValue = map[baseParts.slice(0, j).join('/')];

                                      //baseName segment has  config, find if it has one for
                                      //this name.
                                      if (mapValue) {
                                          mapValue = mapValue[nameSegment];
                                          if (mapValue) {
                                              //Match, update name to the new value.
                                              foundMap = mapValue;
                                              foundI = i;
                                              break;
                                          }
                                      }
                                  }
                              }

                              if (foundMap) {
                                  break;
                              }

                              //Check for a star map match, but just hold on to it,
                              //if there is a shorter segment match later in a matching
                              //config, then favor over this star map.
                              if (!foundStarMap &amp;&amp; starMap &amp;&amp; starMap[nameSegment]) {
                                  foundStarMap = starMap[nameSegment];
                                  starI = i;
                              }
                          }

                          if (!foundMap &amp;&amp; foundStarMap) {
                              foundMap = foundStarMap;
                              foundI = starI;
                          }

                          if (foundMap) {
                              nameParts.splice(0, foundI, foundMap);
                              name = nameParts.join('/');
                          }
                      }

                      return name;
                  }

                  function makeRequire(relName, forceSync) {
                      return function () {
                          //A version of a require function that passes a moduleName
                          //value for items that may need to
                          //look up paths relative to the moduleName
                          var args = aps.call(arguments, 0);

                          //If first arg is not require('string'), and there is only
                          //one arg, it is the array form without a callback. Insert
                          //a null so that the following concat is correct.
                          if (typeof args[0] !== 'string' &amp;&amp; args.length === 1) {
                              args.push(null);
                          }
                          return req.apply(undef, args.concat([relName, forceSync]));
                      };
                  }

                  function makeNormalize(relName) {
                      return function (name) {
                          return normalize(name, relName);
                      };
                  }

                  function makeLoad(depName) {
                      return function (value) {
                          defined[depName] = value;
                      };
                  }

                  function callDep(name) {
                      if (hasProp(waiting, name)) {
                          var args = waiting[name];
                          delete waiting[name];
                          defining[name] = true;
                          main.apply(undef, args);
                      }

                      if (!hasProp(defined, name) &amp;&amp; !hasProp(defining, name)) {
                          throw new Error('No ' + name);
                      }
                      return defined[name];
                  }

                  //Turns a plugin!resource to [plugin, resource]
                  //with the plugin being undefined if the name
                  //did not have a plugin prefix.
                  function splitPrefix(name) {
                      var prefix,
                          index = name ? name.indexOf('!') : -1;
                      if (index &gt; -1) {
                          prefix = name.substring(0, index);
                          name = name.substring(index + 1, name.length);
                      }
                      return [prefix, name];
                  }

                  /**
                   * Makes a name map, normalizing the name, and using a plugin
                   * for normalization if necessary. Grabs a ref to plugin
                   * too, as an optimization.
                   */
                  makeMap = function (name, relName) {
                      var plugin,
                          parts = splitPrefix(name),
                          prefix = parts[0];

                      name = parts[1];

                      if (prefix) {
                          prefix = normalize(prefix, relName);
                          plugin = callDep(prefix);
                      }

                      //Normalize according
                      if (prefix) {
                          if (plugin &amp;&amp; plugin.normalize) {
                              name = plugin.normalize(name, makeNormalize(relName));
                          } else {
                              name = normalize(name, relName);
                          }
                      } else {
                          name = normalize(name, relName);
                          parts = splitPrefix(name);
                          prefix = parts[0];
                          name = parts[1];
                          if (prefix) {
                              plugin = callDep(prefix);
                          }
                      }

                      //Using ridiculous property names for space reasons
                      return {
                          f: prefix ? prefix + '!' + name : name, //fullName
                          n: name,
                          pr: prefix,
                          p: plugin
                      };
                  };

                  function makeConfig(name) {
                      return function () {
                          return (config &amp;&amp; config.config &amp;&amp; config.config[name]) || {};
                      };
                  }

                  handlers = {
                      require: function (name) {
                          return makeRequire(name);
                      },
                      exports: function (name) {
                          var e = defined[name];
                          if (typeof e !== 'undefined') {
                              return e;
                          } else {
                              return (defined[name] = {});
                          }
                      },
                      module: function (name) {
                          return {
                              id: name,
                              uri: '',
                              exports: defined[name],
                              config: makeConfig(name)
                          };
                      }
                  };

                  main = function (name, deps, callback, relName) {
                      var cjsModule, depName, ret, map, i,
                          args = [],
                          callbackType = typeof callback,
                          usingExports;

                      //Use name if no relName
                      relName = relName || name;

                      //Call the callback to define the module, if necessary.
                      if (callbackType === 'undefined' || callbackType === 'function') {
                          //Pull out the defined dependencies and pass the ordered
                          //values to the callback.
                          //Default to [require, exports, module] if no deps
                          deps = !deps.length &amp;&amp; callback.length ? ['require', 'exports', 'module'] : deps;
                          for (i = 0; i &lt; deps.length; i += 1) {
                              map = makeMap(deps[i], relName);
                              depName = map.f;

                              //Fast path CommonJS standard dependencies.
                              if (depName === "require") {
                                  args[i] = handlers.require(name);
                              } else if (depName === "exports") {
                                  //CommonJS module spec 1.1
                                  args[i] = handlers.exports(name);
                                  usingExports = true;
                              } else if (depName === "module") {
                                  //CommonJS module spec 1.1
                                  cjsModule = args[i] = handlers.module(name);
                              } else if (hasProp(defined, depName) ||
                                         hasProp(waiting, depName) ||
                                         hasProp(defining, depName)) {
                                  args[i] = callDep(depName);
                              } else if (map.p) {
                                  map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                                  args[i] = defined[depName];
                              } else {
                                  throw new Error(name + ' missing ' + depName);
                              }
                          }

                          ret = callback ? callback.apply(defined[name], args) : undefined;

                          if (name) {
                              //If setting exports via "module" is in play,
                              //favor that over return value and exports. After that,
                              //favor a non-undefined return value over exports use.
                              if (cjsModule &amp;&amp; cjsModule.exports !== undef &amp;&amp;
                                      cjsModule.exports !== defined[name]) {
                                  defined[name] = cjsModule.exports;
                              } else if (ret !== undef || !usingExports) {
                                  //Use the return value from the function.
                                  defined[name] = ret;
                              }
                          }
                      } else if (name) {
                          //May just be an object definition for the module. Only
                          //worry about defining if have a module name.
                          defined[name] = callback;
                      }
                  };

                  requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
                      if (typeof deps === "string") {
                          if (handlers[deps]) {
                              //callback in this case is really relName
                              return handlers[deps](callback);
                          }
                          //Just return the module wanted. In this scenario, the
                          //deps arg is the module name, and second arg (if passed)
                          //is just the relName.
                          //Normalize module name, if it contains . or ..
                          return callDep(makeMap(deps, callback).f);
                      } else if (!deps.splice) {
                          //deps is a config object, not an array.
                          config = deps;
                          if (config.deps) {
                              req(config.deps, config.callback);
                          }
                          if (!callback) {
                              return;
                          }

                          if (callback.splice) {
                              //callback is an array, which means it is a dependency list.
                              //Adjust args if there are dependencies
                              deps = callback;
                              callback = relName;
                              relName = null;
                          } else {
                              deps = undef;
                          }
                      }

                      //Support require(['a'])
                      callback = callback || function () { };

                      //If relName is a function, it is an errback handler,
                      //so remove it.
                      if (typeof relName === 'function') {
                          relName = forceSync;
                          forceSync = alt;
                      }

                      //Simulate async callback;
                      if (forceSync) {
                          main(undef, deps, callback, relName);
                      } else {
                          //Using a non-zero value because of concern for what old browsers
                          //do, and latest browsers "upgrade" to 4 if lower value is used:
                          //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
                          //If want a value immediately, use require('id') instead -- something
                          //that works in almond on the global level, but not guaranteed and
                          //unlikely to work in other AMD implementations.
                          setTimeout(function () {
                              main(undef, deps, callback, relName);
                          }, 4);
                      }

                      return req;
                  };

                  /**
                   * Just drops the config on the floor, but returns req in case
                   * the config return value is used.
                   */
                  req.config = function (cfg) {
                      return req(cfg);
                  };

                  /**
                   * Expose module registry for debugging and tooling
                   */
                  requirejs._defined = defined;

                  define = function (name, deps, callback) {
                      if (typeof name !== 'string') {
                          throw new Error('See almond README: incorrect module build, no module name');
                      }

                      //This module may not have dependencies
                      if (!deps.splice) {
                          //deps is not an array, so probably means
                          //an object literal or factory function for
                          //the value. Adjust args.
                          callback = deps;
                          deps = [];
                      }

                      if (!hasProp(defined, name) &amp;&amp; !hasProp(waiting, name)) {
                          waiting[name] = [name, deps, callback];
                      }
                  };

                  define.amd = {
                      jQuery: true
                  };
              }());

              S2.requirejs = requirejs; S2.require = require; S2.define = define;
          }
      }());
      S2.define("almond", function () { });

      /* global jQuery:false, $:false */
      S2.define('jquery', [], function () {
          var _$ = jQuery || $;

          if (_$ == null &amp;&amp; console &amp;&amp; console.error) {
              console.error(
                'Select2: An instance of jQuery or a jQuery-compatible library was not ' +
                'found. Make sure that you are including jQuery before Select2 on your ' +
                'web page.'
              );
          }

          return _$;
      });

      S2.define('select2/utils', [
        'jquery'
      ], function ($) {
          var Utils = {};

          Utils.Extend = function (ChildClass, SuperClass) {
              var __hasProp = {}.hasOwnProperty;

              function BaseConstructor() {
                  this.constructor = ChildClass;
              }

              for (var key in SuperClass) {
                  if (__hasProp.call(SuperClass, key)) {
                      ChildClass[key] = SuperClass[key];
                  }
              }

              BaseConstructor.prototype = SuperClass.prototype;
              ChildClass.prototype = new BaseConstructor();
              ChildClass.__super__ = SuperClass.prototype;

              return ChildClass;
          };

          function getMethods(theClass) {
              var proto = theClass.prototype;

              var methods = [];

              for (var methodName in proto) {
                  var m = proto[methodName];

                  if (typeof m !== 'function') {
                      continue;
                  }

                  if (methodName === 'constructor') {
                      continue;
                  }

                  methods.push(methodName);
              }

              return methods;
          }

          Utils.Decorate = function (SuperClass, DecoratorClass) {
              var decoratedMethods = getMethods(DecoratorClass);
              var superMethods = getMethods(SuperClass);

              function DecoratedClass() {
                  var unshift = Array.prototype.unshift;

                  var argCount = DecoratorClass.prototype.constructor.length;

                  var calledConstructor = SuperClass.prototype.constructor;

                  if (argCount &gt; 0) {
                      unshift.call(arguments, SuperClass.prototype.constructor);

                      calledConstructor = DecoratorClass.prototype.constructor;
                  }

                  calledConstructor.apply(this, arguments);
              }

              DecoratorClass.displayName = SuperClass.displayName;

              function ctr() {
                  this.constructor = DecoratedClass;
              }

              DecoratedClass.prototype = new ctr();

              for (var m = 0; m &lt; superMethods.length; m++) {
                  var superMethod = superMethods[m];

                  DecoratedClass.prototype[superMethod] =
                    SuperClass.prototype[superMethod];
              }

              var calledMethod = function (methodName) {
                  // Stub out the original method if it's not decorating an actual method
                  var originalMethod = function () { };

                  if (methodName in DecoratedClass.prototype) {
                      originalMethod = DecoratedClass.prototype[methodName];
                  }

                  var decoratedMethod = DecoratorClass.prototype[methodName];

                  return function () {
                      var unshift = Array.prototype.unshift;

                      unshift.call(arguments, originalMethod);

                      return decoratedMethod.apply(this, arguments);
                  };
              };

              for (var d = 0; d &lt; decoratedMethods.length; d++) {
                  var decoratedMethod = decoratedMethods[d];

                  DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
              }

              return DecoratedClass;
          };

          var Observable = function () {
              this.listeners = {};
          };

          Observable.prototype.on = function (event, callback) {
              this.listeners = this.listeners || {};

              if (event in this.listeners) {
                  this.listeners[event].push(callback);
              } else {
                  this.listeners[event] = [callback];
              }
          };

          Observable.prototype.trigger = function (event) {
              var slice = Array.prototype.slice;
              var params = slice.call(arguments, 1);

              this.listeners = this.listeners || {};

              // Params should always come in as an array
              if (params == null) {
                  params = [];
              }

              // If there are no arguments to the event, use a temporary object
              if (params.length === 0) {
                  params.push({});
              }

              // Set the `_type` of the first object to the event
              params[0]._type = event;

              if (event in this.listeners) {
                  this.invoke(this.listeners[event], slice.call(arguments, 1));
              }

              if ('*' in this.listeners) {
                  this.invoke(this.listeners['*'], arguments);
              }
          };

          Observable.prototype.invoke = function (listeners, params) {
              for (var i = 0, len = listeners.length; i &lt; len; i++) {
                  listeners[i].apply(this, params);
              }
          };

          Utils.Observable = Observable;

          Utils.generateChars = function (length) {
              var chars = '';

              for (var i = 0; i &lt; length; i++) {
                  var randomChar = Math.floor(Math.random() * 36);
                  chars += randomChar.toString(36);
              }

              return chars;
          };

          Utils.bind = function (func, context) {
              return function () {
                  func.apply(context, arguments);
              };
          };

          Utils._convertData = function (data) {
              for (var originalKey in data) {
                  var keys = originalKey.split('-');

                  var dataLevel = data;

                  if (keys.length === 1) {
                      continue;
                  }

                  for (var k = 0; k &lt; keys.length; k++) {
                      var key = keys[k];

                      // Lowercase the first letter
                      // By default, dash-separated becomes camelCase
                      key = key.substring(0, 1).toLowerCase() + key.substring(1);

                      if (!(key in dataLevel)) {
                          dataLevel[key] = {};
                      }

                      if (k == keys.length - 1) {
                          dataLevel[key] = data[originalKey];
                      }

                      dataLevel = dataLevel[key];
                  }

                  delete data[originalKey];
              }

              return data;
          };

          Utils.hasScroll = function (index, el) {
              // Adapted from the function created by @ShadowScripter
              // and adapted by @BillBarry on the Stack Exchange Code Review website.
              // The original code can be found at
              // http://codereview.stackexchange.com/q/13338
              // and was designed to be used with the Sizzle selector engine.

              var $el = $(el);
              var overflowX = el.style.overflowX;
              var overflowY = el.style.overflowY;

              //Check both x and y declarations
              if (overflowX === overflowY &amp;&amp;
                  (overflowY === 'hidden' || overflowY === 'visible')) {
                  return false;
              }

              if (overflowX === 'scroll' || overflowY === 'scroll') {
                  return true;
              }

              return ($el.innerHeight() &lt; el.scrollHeight ||
                $el.innerWidth() &lt; el.scrollWidth);
          };

          Utils.escapeMarkup = function (markup) {
              var replaceMap = {
                  '\\': '&amp;#92;',
                  '&amp;': '&amp;amp;',
                  '&lt;': '&amp;lt;',
                  '&gt;': '&amp;gt;',
                  '"': '&amp;quot;',
                  '\'': '&amp;#39;',
                  '/': '&amp;#47;'
              };

              // Do not try to escape the markup if it's not a string
              if (typeof markup !== 'string') {
                  return markup;
              }

              return String(markup).replace(/[&amp;&lt;&gt;"'\/\\]/g, function (match) {
                  return replaceMap[match];
              });
          };

          // Append an array of jQuery nodes to a given element.
          Utils.appendMany = function ($element, $nodes) {
              // jQuery 1.7.x does not support $.fn.append() with an array
              // Fall back to a jQuery object collection using $.fn.add()
              if ($.fn.jquery.substr(0, 3) === '1.7') {
                  var $jqNodes = $();

                  $.map($nodes, function (node) {
                      $jqNodes = $jqNodes.add(node);
                  });

                  $nodes = $jqNodes;
              }

              $element.append($nodes);
          };

          return Utils;
      });

      S2.define('select2/results', [
        'jquery',
        './utils'
      ], function ($, Utils) {
          function Results($element, options, dataAdapter) {
              this.$element = $element;
              this.data = dataAdapter;
              this.options = options;

              Results.__super__.constructor.call(this);
          }

          Utils.Extend(Results, Utils.Observable);

          Results.prototype.render = function () {
              var $results = $(
                '&lt;ul class="select2-results__options" role="tree"&gt;&lt;/ul&gt;'
              );

              if (this.options.get('multiple')) {
                  $results.attr('aria-multiselectable', 'true');
              }

              this.$results = $results;

              return $results;
          };

          Results.prototype.clear = function () {
              this.$results.empty();
          };

          Results.prototype.displayMessage = function (params) {
              var escapeMarkup = this.options.get('escapeMarkup');

              this.clear();
              this.hideLoading();

              var $message = $(
                '&lt;li role="treeitem" aria-live="assertive"' +
                ' class="select2-results__option"&gt;&lt;/li&gt;'
              );

              var message = this.options.get('translations').get(params.message);

              $message.append(
                escapeMarkup(
                  message(params.args)
                )
              );

              $message[0].className += ' select2-results__message';

              this.$results.append($message);
          };

          Results.prototype.hideMessages = function () {
              this.$results.find('.select2-results__message').remove();
          };

          Results.prototype.append = function (data) {
              this.hideLoading();

              var $options = [];

              if (data.results == null || data.results.length === 0) {
                  if (this.$results.children().length === 0) {
                      this.trigger('results:message', {
                          message: 'noResults'
                      });
                  }

                  return;
              }

              data.results = this.sort(data.results);

              for (var d = 0; d &lt; data.results.length; d++) {
                  var item = data.results[d];

                  var $option = this.option(item);

                  $options.push($option);
              }

              this.$results.append($options);
          };

          Results.prototype.position = function ($results, $dropdown) {
              var $resultsContainer = $dropdown.find('.select2-results');
              $resultsContainer.append($results);
          };

          Results.prototype.sort = function (data) {
              var sorter = this.options.get('sorter');

              return sorter(data);
          };

          Results.prototype.highlightFirstItem = function () {
              var $options = this.$results
                .find('.select2-results__option[aria-selected]');

              var $selected = $options.filter('[aria-selected=true]');

              // Check if there are any selected options
              if ($selected.length &gt; 0) {
                  // If there are selected options, highlight the first
                  $selected.first().trigger('mouseenter');
              } else {
                  // If there are no selected options, highlight the first option
                  // in the dropdown
                  $options.first().trigger('mouseenter');
              }

              this.ensureHighlightVisible();
          };

          Results.prototype.setClasses = function () {
              var self = this;

              this.data.current(function (selected) {
                  var selectedIds = $.map(selected, function (s) {
                      return s.id.toString();
                  });

                  var $options = self.$results
                    .find('.select2-results__option[aria-selected]');

                  $options.each(function () {
                      var $option = $(this);

                      var item = $.data(this, 'data');

                      // id needs to be converted to a string when comparing
                      var id = '' + item.id;

                      if ((item.element != null &amp;&amp; item.element.selected) ||
                          (item.element == null &amp;&amp; $.inArray(id, selectedIds) &gt; -1)) {
                          $option.attr('aria-selected', 'true');
                      } else {
                          $option.attr('aria-selected', 'false');
                      }
                  });

              });
          };

          Results.prototype.showLoading = function (params) {
              this.hideLoading();

              var loadingMore = this.options.get('translations').get('searching');

              var loading = {
                  disabled: true,
                  loading: true,
                  text: loadingMore(params)
              };
              var $loading = this.option(loading);
              $loading.className += ' loading-results';

              this.$results.prepend($loading);
          };

          Results.prototype.hideLoading = function () {
              this.$results.find('.loading-results').remove();
          };

          Results.prototype.option = function (data) {
              var option = document.createElement('li');
              option.className = 'select2-results__option';

              var attrs = {
                  'role': 'treeitem',
                  'aria-selected': 'false'
              };

              if (data.disabled) {
                  delete attrs['aria-selected'];
                  attrs['aria-disabled'] = 'true';
              }

              if (data.id == null) {
                  delete attrs['aria-selected'];
              }

              if (data._resultId != null) {
                  option.id = data._resultId;
              }

              if (data.title) {
                  option.title = data.title;
              }

              if (data.children) {
                  attrs.role = 'group';
                  attrs['aria-label'] = data.text;
                  delete attrs['aria-selected'];
              }

              for (var attr in attrs) {
                  var val = attrs[attr];

                  option.setAttribute(attr, val);
              }

              if (data.children) {
                  var $option = $(option);

                  var label = document.createElement('strong');
                  label.className = 'select2-results__group';

                  var $label = $(label);
                  this.template(data, label);

                  var $children = [];

                  for (var c = 0; c &lt; data.children.length; c++) {
                      var child = data.children[c];

                      var $child = this.option(child);

                      $children.push($child);
                  }

                  var $childrenContainer = $('&lt;ul&gt;&lt;/ul&gt;', {
                      'class': 'select2-results__options select2-results__options--nested'
                  });

                  $childrenContainer.append($children);

                  $option.append(label);
                  $option.append($childrenContainer);
              } else {
                  this.template(data, option);
              }

              $.data(option, 'data', data);

              return option;
          };

          Results.prototype.bind = function (container, $container) {
              var self = this;

              var id = container.id + '-results';

              this.$results.attr('id', id);

              container.on('results:all', function (params) {
                  self.clear();
                  self.append(params.data);

                  if (container.isOpen()) {
                      self.setClasses();
                      self.highlightFirstItem();
                  }
              });

              container.on('results:append', function (params) {
                  self.append(params.data);

                  if (container.isOpen()) {
                      self.setClasses();
                  }
              });

              container.on('query', function (params) {
                  self.hideMessages();
                  self.showLoading(params);
              });

              container.on('select', function () {
                  if (!container.isOpen()) {
                      return;
                  }

                  self.setClasses();
                  self.highlightFirstItem();
              });

              container.on('unselect', function () {
                  if (!container.isOpen()) {
                      return;
                  }

                  self.setClasses();
                  self.highlightFirstItem();
              });

              container.on('open', function () {
                  // When the dropdown is open, aria-expended="true"
                  self.$results.attr('aria-expanded', 'true');
                  self.$results.attr('aria-hidden', 'false');

                  self.setClasses();
                  self.ensureHighlightVisible();
              });

              container.on('close', function () {
                  // When the dropdown is closed, aria-expended="false"
                  self.$results.attr('aria-expanded', 'false');
                  self.$results.attr('aria-hidden', 'true');
                  self.$results.removeAttr('aria-activedescendant');
              });

              container.on('results:toggle', function () {
                  var $highlighted = self.getHighlightedResults();

                  if ($highlighted.length === 0) {
                      return;
                  }

                  $highlighted.trigger('mouseup');
              });

              container.on('results:select', function () {
                  var $highlighted = self.getHighlightedResults();

                  if ($highlighted.length === 0) {
                      return;
                  }

                  var data = $highlighted.data('data');

                  if ($highlighted.attr('aria-selected') == 'true') {
                      self.trigger('close', {});
                  } else {
                      self.trigger('select', {
                          data: data
                      });
                  }
              });

              container.on('results:previous', function () {
                  var $highlighted = self.getHighlightedResults();

                  var $options = self.$results.find('[aria-selected]');

                  var currentIndex = $options.index($highlighted);

                  // If we are already at te top, don't move further
                  if (currentIndex === 0) {
                      return;
                  }

                  var nextIndex = currentIndex - 1;

                  // If none are highlighted, highlight the first
                  if ($highlighted.length === 0) {
                      nextIndex = 0;
                  }

                  var $next = $options.eq(nextIndex);

                  $next.trigger('mouseenter');

                  var currentOffset = self.$results.offset().top;
                  var nextTop = $next.offset().top;
                  var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);

                  if (nextIndex === 0) {
                      self.$results.scrollTop(0);
                  } else if (nextTop - currentOffset &lt; 0) {
                      self.$results.scrollTop(nextOffset);
                  }
              });

              container.on('results:next', function () {
                  var $highlighted = self.getHighlightedResults();

                  var $options = self.$results.find('[aria-selected]');

                  var currentIndex = $options.index($highlighted);

                  var nextIndex = currentIndex + 1;

                  // If we are at the last option, stay there
                  if (nextIndex &gt;= $options.length) {
                      return;
                  }

                  var $next = $options.eq(nextIndex);

                  $next.trigger('mouseenter');

                  var currentOffset = self.$results.offset().top +
                    self.$results.outerHeight(false);
                  var nextBottom = $next.offset().top + $next.outerHeight(false);
                  var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;

                  if (nextIndex === 0) {
                      self.$results.scrollTop(0);
                  } else if (nextBottom &gt; currentOffset) {
                      self.$results.scrollTop(nextOffset);
                  }
              });

              container.on('results:focus', function (params) {
                  params.element.addClass('select2-results__option--highlighted');
              });

              container.on('results:message', function (params) {
                  self.displayMessage(params);
              });

              if ($.fn.mousewheel) {
                  this.$results.on('mousewheel', function (e) {
                      var top = self.$results.scrollTop();

                      var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;

                      var isAtTop = e.deltaY &gt; 0 &amp;&amp; top - e.deltaY &lt;= 0;
                      var isAtBottom = e.deltaY &lt; 0 &amp;&amp; bottom &lt;= self.$results.height();

                      if (isAtTop) {
                          self.$results.scrollTop(0);

                          e.preventDefault();
                          e.stopPropagation();
                      } else if (isAtBottom) {
                          self.$results.scrollTop(
                            self.$results.get(0).scrollHeight - self.$results.height()
                          );

                          e.preventDefault();
                          e.stopPropagation();
                      }
                  });
              }

              this.$results.on('mouseup', '.select2-results__option[aria-selected]',
                function (evt) {
                    var $this = $(this);

                    var data = $this.data('data');

                    if ($this.attr('aria-selected') === 'true') {
                        if (self.options.get('multiple')) {
                            self.trigger('unselect', {
                                originalEvent: evt,
                                data: data
                            });
                        } else {
                            self.trigger('close', {});
                        }

                        return;
                    }

                    self.trigger('select', {
                        originalEvent: evt,
                        data: data
                    });
                });

              this.$results.on('mouseenter', '.select2-results__option[aria-selected]',
                function (evt) {
                    var data = $(this).data('data');

                    self.getHighlightedResults()
                        .removeClass('select2-results__option--highlighted');

                    self.trigger('results:focus', {
                        data: data,
                        element: $(this)
                    });
                });
          };

          Results.prototype.getHighlightedResults = function () {
              var $highlighted = this.$results
              .find('.select2-results__option--highlighted');

              return $highlighted;
          };

          Results.prototype.destroy = function () {
              this.$results.remove();
          };

          Results.prototype.ensureHighlightVisible = function () {
              var $highlighted = this.getHighlightedResults();

              if ($highlighted.length === 0) {
                  return;
              }

              var $options = this.$results.find('[aria-selected]');

              var currentIndex = $options.index($highlighted);

              var currentOffset = this.$results.offset().top;
              var nextTop = $highlighted.offset().top;
              var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);

              var offsetDelta = nextTop - currentOffset;
              nextOffset -= $highlighted.outerHeight(false) * 2;

              if (currentIndex &lt;= 2) {
                  this.$results.scrollTop(0);
              } else if (offsetDelta &gt; this.$results.outerHeight() || offsetDelta &lt; 0) {
                  this.$results.scrollTop(nextOffset);
              }
          };

          Results.prototype.template = function (result, container) {
              var template = this.options.get('templateResult');
              var escapeMarkup = this.options.get('escapeMarkup');

              var content = template(result, container);

              if (content == null) {
                  container.style.display = 'none';
              } else if (typeof content === 'string') {
                  container.innerHTML = escapeMarkup(content);
              } else {
                  $(container).append(content);
              }
          };

          return Results;
      });

      S2.define('select2/keys', [

      ], function () {
          var KEYS = {
              BACKSPACE: 8,
              TAB: 9,
              ENTER: 13,
              SHIFT: 16,
              CTRL: 17,
              ALT: 18,
              ESC: 27,
              SPACE: 32,
              PAGE_UP: 33,
              PAGE_DOWN: 34,
              END: 35,
              HOME: 36,
              LEFT: 37,
              UP: 38,
              RIGHT: 39,
              DOWN: 40,
              DELETE: 46
          };

          return KEYS;
      });

      S2.define('select2/selection/base', [
        'jquery',
        '../utils',
        '../keys'
      ], function ($, Utils, KEYS) {
          function BaseSelection($element, options) {
              this.$element = $element;
              this.options = options;

              BaseSelection.__super__.constructor.call(this);
          }

          Utils.Extend(BaseSelection, Utils.Observable);

          BaseSelection.prototype.render = function () {
              var $selection = $(
                '&lt;span class="select2-selection" role="combobox" ' +
                ' aria-haspopup="true" aria-expanded="false"&gt;' +
                '&lt;/span&gt;'
              );

              this._tabindex = 0;

              if (this.$element.data('old-tabindex') != null) {
                  this._tabindex = this.$element.data('old-tabindex');
              } else if (this.$element.attr('tabindex') != null) {
                  this._tabindex = this.$element.attr('tabindex');
              }

              $selection.attr('title', this.$element.attr('title'));
              $selection.attr('tabindex', this._tabindex);

              this.$selection = $selection;

              return $selection;
          };

          BaseSelection.prototype.bind = function (container, $container) {
              var self = this;

              var id = container.id + '-container';
              var resultsId = container.id + '-results';

              this.container = container;

              this.$selection.on('focus', function (evt) {
                  self.trigger('focus', evt);
              });

              this.$selection.on('blur', function (evt) {
                  self._handleBlur(evt);
              });

              this.$selection.on('keydown', function (evt) {
                  self.trigger('keypress', evt);

                  if (evt.which === KEYS.SPACE) {
                      evt.preventDefault();
                  }
              });

              container.on('results:focus', function (params) {
                  self.$selection.attr('aria-activedescendant', params.data._resultId);
              });

              container.on('selection:update', function (params) {
                  self.update(params.data);
              });

              container.on('open', function () {
                  // When the dropdown is open, aria-expanded="true"
                  self.$selection.attr('aria-expanded', 'true');
                  self.$selection.attr('aria-owns', resultsId);

                  self._attachCloseHandler(container);
              });

              container.on('close', function () {
                  // When the dropdown is closed, aria-expanded="false"
                  self.$selection.attr('aria-expanded', 'false');
                  self.$selection.removeAttr('aria-activedescendant');
                  self.$selection.removeAttr('aria-owns');

                  self.$selection.focus();

                  self._detachCloseHandler(container);
              });

              container.on('enable', function () {
                  self.$selection.attr('tabindex', self._tabindex);
              });

              container.on('disable', function () {
                  self.$selection.attr('tabindex', '-1');
              });
          };

          BaseSelection.prototype._handleBlur = function (evt) {
              var self = this;

              // This needs to be delayed as the active element is the body when the tab
              // key is pressed, possibly along with others.
              window.setTimeout(function () {
                  // Don't trigger `blur` if the focus is still in the selection
                  if (
                    (document.activeElement == self.$selection[0]) ||
                    ($.contains(self.$selection[0], document.activeElement))
                  ) {
                      return;
                  }

                  self.trigger('blur', evt);
              }, 1);
          };

          BaseSelection.prototype._attachCloseHandler = function (container) {
              var self = this;

              $(document.body).on('mousedown.select2.' + container.id, function (e) {
                  var $target = $(e.target);

                  var $select = $target.closest('.select2');

                  var $all = $('.select2.select2-container--open');

                  $all.each(function () {
                      var $this = $(this);

                      if (this == $select[0]) {
                          return;
                      }

                      var $element = $this.data('element');

                      $element.select2('close');
                  });
              });
          };

          BaseSelection.prototype._detachCloseHandler = function (container) {
              $(document.body).off('mousedown.select2.' + container.id);
          };

          BaseSelection.prototype.position = function ($selection, $container) {
              var $selectionContainer = $container.find('.selection');
              $selectionContainer.append($selection);
          };

          BaseSelection.prototype.destroy = function () {
              this._detachCloseHandler(this.container);
          };

          BaseSelection.prototype.update = function (data) {
              throw new Error('The `update` method must be defined in child classes.');
          };

          return BaseSelection;
      });

      S2.define('select2/selection/single', [
        'jquery',
        './base',
        '../utils',
        '../keys'
      ], function ($, BaseSelection, Utils, KEYS) {
          function SingleSelection() {
              SingleSelection.__super__.constructor.apply(this, arguments);
          }

          Utils.Extend(SingleSelection, BaseSelection);

          SingleSelection.prototype.render = function () {
              var $selection = SingleSelection.__super__.render.call(this);

              $selection.addClass('select2-selection--single');

              $selection.html(
                '&lt;span class="select2-selection__rendered"&gt;&lt;/span&gt;' +
                '&lt;span class="select2-selection__arrow" role="presentation"&gt;' +
                  '&lt;b role="presentation"&gt;&lt;/b&gt;' +
                '&lt;/span&gt;'
              );

              return $selection;
          };

          SingleSelection.prototype.bind = function (container, $container) {
              var self = this;

              SingleSelection.__super__.bind.apply(this, arguments);

              var id = container.id + '-container';

              this.$selection.find('.select2-selection__rendered').attr('id', id);
              this.$selection.attr('aria-labelledby', id);

              this.$selection.on('mousedown', function (evt) {
                  // Only respond to left clicks
                  if (evt.which !== 1) {
                      return;
                  }

                  self.trigger('toggle', {
                      originalEvent: evt
                  });
              });

              this.$selection.on('focus', function (evt) {
                  // User focuses on the container
              });

              this.$selection.on('blur', function (evt) {
                  // User exits the container
              });

              container.on('focus', function (evt) {
                  if (!container.isOpen()) {
                      self.$selection.focus();
                  }
              });

              container.on('selection:update', function (params) {
                  self.update(params.data);
              });
          };

          SingleSelection.prototype.clear = function () {
              this.$selection.find('.select2-selection__rendered').empty();
          };

          SingleSelection.prototype.display = function (data, container) {
              var template = this.options.get('templateSelection');
              var escapeMarkup = this.options.get('escapeMarkup');

              return escapeMarkup(template(data, container));
          };

          SingleSelection.prototype.selectionContainer = function () {
              return $('&lt;span&gt;&lt;/span&gt;');
          };

          SingleSelection.prototype.update = function (data) {
              if (data.length === 0) {
                  this.clear();
                  return;
              }

              var selection = data[0];

              var $rendered = this.$selection.find('.select2-selection__rendered');
              var formatted = this.display(selection, $rendered);

              $rendered.empty().append(formatted);
              $rendered.prop('title', selection.title || selection.text);
          };

          return SingleSelection;
      });

      S2.define('select2/selection/multiple', [
        'jquery',
        './base',
        '../utils'
      ], function ($, BaseSelection, Utils) {
          function MultipleSelection($element, options) {
              MultipleSelection.__super__.constructor.apply(this, arguments);
          }

          Utils.Extend(MultipleSelection, BaseSelection);

          MultipleSelection.prototype.render = function () {
              var $selection = MultipleSelection.__super__.render.call(this);

              $selection.addClass('select2-selection--multiple');

              $selection.html(
                '&lt;ul class="select2-selection__rendered"&gt;&lt;/ul&gt;'
              );

              return $selection;
          };

          MultipleSelection.prototype.bind = function (container, $container) {
              var self = this;

              MultipleSelection.__super__.bind.apply(this, arguments);

              this.$selection.on('click', function (evt) {
                  self.trigger('toggle', {
                      originalEvent: evt
                  });
              });

              this.$selection.on(
                'click',
                '.select2-selection__choice__remove',
                function (evt) {
                    // Ignore the event if it is disabled
                    if (self.options.get('disabled')) {
                        return;
                    }

                    var $remove = $(this);
                    var $selection = $remove.parent();

                    var data = $selection.data('data');

                    self.trigger('unselect', {
                        originalEvent: evt,
                        data: data
                    });
                }
              );
          };

          MultipleSelection.prototype.clear = function () {
              this.$selection.find('.select2-selection__rendered').empty();
          };

          MultipleSelection.prototype.display = function (data, container) {
              var template = this.options.get('templateSelection');
              var escapeMarkup = this.options.get('escapeMarkup');

              return escapeMarkup(template(data, container));
          };

          MultipleSelection.prototype.selectionContainer = function () {
              var $container = $(
                '&lt;li class="select2-selection__choice"&gt;' +
                  '&lt;span class="select2-selection__choice__remove" role="presentation"&gt;' +
                    '&amp;times;' +
                  '&lt;/span&gt;' +
                '&lt;/li&gt;'
              );

              return $container;
          };

          MultipleSelection.prototype.update = function (data) {
              this.clear();

              if (data.length === 0) {
                  return;
              }

              var $selections = [];

              for (var d = 0; d &lt; data.length; d++) {
                  var selection = data[d];

                  var $selection = this.selectionContainer();
                  var formatted = this.display(selection, $selection);

                  $selection.append(formatted);
                  $selection.prop('title', selection.title || selection.text);

                  $selection.data('data', selection);

                  $selections.push($selection);
              }

              var $rendered = this.$selection.find('.select2-selection__rendered');

              Utils.appendMany($rendered, $selections);
          };

          return MultipleSelection;
      });

      S2.define('select2/selection/placeholder', [
        '../utils'
      ], function (Utils) {
          function Placeholder(decorated, $element, options) {
              this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

              decorated.call(this, $element, options);
          }

          Placeholder.prototype.normalizePlaceholder = function (_, placeholder) {
              if (typeof placeholder === 'string') {
                  placeholder = {
                      id: '',
                      text: placeholder
                  };
              }

              return placeholder;
          };

          Placeholder.prototype.createPlaceholder = function (decorated, placeholder) {
              var $placeholder = this.selectionContainer();

              $placeholder.html(this.display(placeholder));
              $placeholder.addClass('select2-selection__placeholder')
                          .removeClass('select2-selection__choice');

              return $placeholder;
          };

          Placeholder.prototype.update = function (decorated, data) {
              var singlePlaceholder = (
                data.length == 1 &amp;&amp; data[0].id != this.placeholder.id
              );
              var multipleSelections = data.length &gt; 1;

              if (multipleSelections || singlePlaceholder) {
                  return decorated.call(this, data);
              }

              this.clear();

              var $placeholder = this.createPlaceholder(this.placeholder);

              this.$selection.find('.select2-selection__rendered').append($placeholder);
          };

          return Placeholder;
      });

      S2.define('select2/selection/allowClear', [
        'jquery',
        '../keys'
      ], function ($, KEYS) {
          function AllowClear() { }

          AllowClear.prototype.bind = function (decorated, container, $container) {
              var self = this;

              decorated.call(this, container, $container);

              if (this.placeholder == null) {
                  if (this.options.get('debug') &amp;&amp; window.console &amp;&amp; console.error) {
                      console.error(
                        'Select2: The `allowClear` option should be used in combination ' +
                        'with the `placeholder` option.'
                      );
                  }
              }

              this.$selection.on('mousedown', '.select2-selection__clear',
                function (evt) {
                    self._handleClear(evt);
                });

              container.on('keypress', function (evt) {
                  self._handleKeyboardClear(evt, container);
              });
          };

          AllowClear.prototype._handleClear = function (_, evt) {
              // Ignore the event if it is disabled
              if (this.options.get('disabled')) {
                  return;
              }

              var $clear = this.$selection.find('.select2-selection__clear');

              // Ignore the event if nothing has been selected
              if ($clear.length === 0) {
                  return;
              }

              evt.stopPropagation();

              var data = $clear.data('data');

              for (var d = 0; d &lt; data.length; d++) {
                  var unselectData = {
                      data: data[d]
                  };

                  // Trigger the `unselect` event, so people can prevent it from being
                  // cleared.
                  this.trigger('unselect', unselectData);

                  // If the event was prevented, don't clear it out.
                  if (unselectData.prevented) {
                      return;
                  }
              }

              this.$element.val(this.placeholder.id).trigger('change');

              this.trigger('toggle', {});
          };

          AllowClear.prototype._handleKeyboardClear = function (_, evt, container) {
              if (container.isOpen()) {
                  return;
              }

              if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
                  this._handleClear(evt);
              }
          };

          AllowClear.prototype.update = function (decorated, data) {
              decorated.call(this, data);

              if (this.$selection.find('.select2-selection__placeholder').length &gt; 0 ||
                  data.length === 0) {
                  return;
              }

              var $remove = $(
                '&lt;span class="select2-selection__clear"&gt;' +
                  '&amp;times;' +
                '&lt;/span&gt;'
              );
              $remove.data('data', data);

              this.$selection.find('.select2-selection__rendered').prepend($remove);
          };

          return AllowClear;
      });

      S2.define('select2/selection/search', [
        'jquery',
        '../utils',
        '../keys'
      ], function ($, Utils, KEYS) {
          function Search(decorated, $element, options) {
              decorated.call(this, $element, options);
          }

          Search.prototype.render = function (decorated) {
              var $search = $(
                '&lt;li class="select2-search select2-search--inline"&gt;' +
                  '&lt;input class="select2-search__field" type="search" tabindex="-1"' +
                  ' autocomplete="off" autocorrect="off" autocapitalize="off"' +
                  ' spellcheck="false" role="textbox" aria-autocomplete="list" /&gt;' +
                '&lt;/li&gt;'
              );

              this.$searchContainer = $search;
              this.$search = $search.find('input');

              var $rendered = decorated.call(this);

              this._transferTabIndex();

              return $rendered;
          };

          Search.prototype.bind = function (decorated, container, $container) {
              var self = this;

              decorated.call(this, container, $container);

              container.on('open', function () {
                  self.$search.trigger('focus');
              });

              container.on('close', function () {
                  self.$search.val('');
                  self.$search.removeAttr('aria-activedescendant');
                  self.$search.trigger('focus');
              });

              container.on('enable', function () {
                  self.$search.prop('disabled', false);

                  self._transferTabIndex();
              });

              container.on('disable', function () {
                  self.$search.prop('disabled', true);
              });

              container.on('focus', function (evt) {
                  self.$search.trigger('focus');
              });

              container.on('results:focus', function (params) {
                  self.$search.attr('aria-activedescendant', params.id);
              });

              this.$selection.on('focusin', '.select2-search--inline', function (evt) {
                  self.trigger('focus', evt);
              });

              this.$selection.on('focusout', '.select2-search--inline', function (evt) {
                  self._handleBlur(evt);
              });

              this.$selection.on('keydown', '.select2-search--inline', function (evt) {
                  evt.stopPropagation();

                  self.trigger('keypress', evt);

                  self._keyUpPrevented = evt.isDefaultPrevented();

                  var key = evt.which;

                  if (key === KEYS.BACKSPACE &amp;&amp; self.$search.val() === '') {
                      var $previousChoice = self.$searchContainer
                        .prev('.select2-selection__choice');

                      if ($previousChoice.length &gt; 0) {
                          var item = $previousChoice.data('data');

                          self.searchRemoveChoice(item);

                          evt.preventDefault();
                      }
                  }
              });

              // Try to detect the IE version should the `documentMode` property that
              // is stored on the document. This is only implemented in IE and is
              // slightly cleaner than doing a user agent check.
              // This property is not available in Edge, but Edge also doesn't have
              // this bug.
              var msie = document.documentMode;
              var disableInputEvents = msie &amp;&amp; msie &lt;= 11;

              // Workaround for browsers which do not support the `input` event
              // This will prevent double-triggering of events for browsers which support
              // both the `keyup` and `input` events.
              this.$selection.on(
                'input.searchcheck',
                '.select2-search--inline',
                function (evt) {
                    // IE will trigger the `input` event when a placeholder is used on a
                    // search box. To get around this issue, we are forced to ignore all
                    // `input` events in IE and keep using `keyup`.
                    if (disableInputEvents) {
                        self.$selection.off('input.search input.searchcheck');
                        return;
                    }

                    // Unbind the duplicated `keyup` event
                    self.$selection.off('keyup.search');
                }
              );

              this.$selection.on(
                'keyup.search input.search',
                '.select2-search--inline',
                function (evt) {
                    // IE will trigger the `input` event when a placeholder is used on a
                    // search box. To get around this issue, we are forced to ignore all
                    // `input` events in IE and keep using `keyup`.
                    if (disableInputEvents &amp;&amp; evt.type === 'input') {
                        self.$selection.off('input.search input.searchcheck');
                        return;
                    }

                    var key = evt.which;

                    // We can freely ignore events from modifier keys
                    if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {
                        return;
                    }

                    // Tabbing will be handled during the `keydown` phase
                    if (key == KEYS.TAB) {
                        return;
                    }

                    self.handleSearch(evt);
                }
              );
          };

          /**
           * This method will transfer the tabindex attribute from the rendered
           * selection to the search box. This allows for the search box to be used as
           * the primary focus instead of the selection container.
           *
           * @private
           */
          Search.prototype._transferTabIndex = function (decorated) {
              this.$search.attr('tabindex', this.$selection.attr('tabindex'));
              this.$selection.attr('tabindex', '-1');
          };

          Search.prototype.createPlaceholder = function (decorated, placeholder) {
              this.$search.attr('placeholder', placeholder.text);
          };

          Search.prototype.update = function (decorated, data) {
              var searchHadFocus = this.$search[0] == document.activeElement;

              this.$search.attr('placeholder', '');

              decorated.call(this, data);

              this.$selection.find('.select2-selection__rendered')
                             .append(this.$searchContainer);

              this.resizeSearch();
              if (searchHadFocus) {
                  this.$search.focus();
              }
          };

          Search.prototype.handleSearch = function () {
              this.resizeSearch();

              if (!this._keyUpPrevented) {
                  var input = this.$search.val();

                  this.trigger('query', {
                      term: input
                  });
              }

              this._keyUpPrevented = false;
          };

          Search.prototype.searchRemoveChoice = function (decorated, item) {
              this.trigger('unselect', {
                  data: item
              });

              this.$search.val(item.text);
              this.handleSearch();
          };

          Search.prototype.resizeSearch = function () {
              this.$search.css('width', '25px');

              var width = '';

              if (this.$search.attr('placeholder') !== '') {
                  width = this.$selection.find('.select2-selection__rendered').innerWidth();
              } else {
                  var minimumWidth = this.$search.val().length + 1;

                  width = (minimumWidth * 0.75) + 'em';
              }

              this.$search.css('width', width);
          };

          return Search;
      });

      S2.define('select2/selection/eventRelay', [
        'jquery'
      ], function ($) {
          function EventRelay() { }

          EventRelay.prototype.bind = function (decorated, container, $container) {
              var self = this;
              var relayEvents = [
                'open', 'opening',
                'close', 'closing',
                'select', 'selecting',
                'unselect', 'unselecting'
              ];

              var preventableEvents = ['opening', 'closing', 'selecting', 'unselecting'];

              decorated.call(this, container, $container);

              container.on('*', function (name, params) {
                  // Ignore events that should not be relayed
                  if ($.inArray(name, relayEvents) === -1) {
                      return;
                  }

                  // The parameters should always be an object
                  params = params || {};

                  // Generate the jQuery event for the Select2 event
                  var evt = $.Event('select2:' + name, {
                      params: params
                  });

                  self.$element.trigger(evt);

                  // Only handle preventable events if it was one
                  if ($.inArray(name, preventableEvents) === -1) {
                      return;
                  }

                  params.prevented = evt.isDefaultPrevented();
              });
          };

          return EventRelay;
      });

      S2.define('select2/translation', [
        'jquery',
        'require'
      ], function ($, require) {
          function Translation(dict) {
              this.dict = dict || {};
          }

          Translation.prototype.all = function () {
              return this.dict;
          };

          Translation.prototype.get = function (key) {
              return this.dict[key];
          };

          Translation.prototype.extend = function (translation) {
              this.dict = $.extend({}, translation.all(), this.dict);
          };

          // Static functions

          Translation._cache = {};

          Translation.loadPath = function (path) {
              if (!(path in Translation._cache)) {
                  var translations = require(path);

                  Translation._cache[path] = translations;
              }

              return new Translation(Translation._cache[path]);
          };

          return Translation;
      });

      S2.define('select2/diacritics', [

      ], function () {
          var diacritics = {
              '\u24B6': 'A',
              '\uFF21': 'A',
              '\u00C0': 'A',
              '\u00C1': 'A',
              '\u00C2': 'A',
              '\u1EA6': 'A',
              '\u1EA4': 'A',
              '\u1EAA': 'A',
              '\u1EA8': 'A',
              '\u00C3': 'A',
              '\u0100': 'A',
              '\u0102': 'A',
              '\u1EB0': 'A',
              '\u1EAE': 'A',
              '\u1EB4': 'A',
              '\u1EB2': 'A',
              '\u0226': 'A',
              '\u01E0': 'A',
              '\u00C4': 'A',
              '\u01DE': 'A',
              '\u1EA2': 'A',
              '\u00C5': 'A',
              '\u01FA': 'A',
              '\u01CD': 'A',
              '\u0200': 'A',
              '\u0202': 'A',
              '\u1EA0': 'A',
              '\u1EAC': 'A',
              '\u1EB6': 'A',
              '\u1E00': 'A',
              '\u0104': 'A',
              '\u023A': 'A',
              '\u2C6F': 'A',
              '\uA732': 'AA',
              '\u00C6': 'AE',
              '\u01FC': 'AE',
              '\u01E2': 'AE',
              '\uA734': 'AO',
              '\uA736': 'AU',
              '\uA738': 'AV',
              '\uA73A': 'AV',
              '\uA73C': 'AY',
              '\u24B7': 'B',
              '\uFF22': 'B',
              '\u1E02': 'B',
              '\u1E04': 'B',
              '\u1E06': 'B',
              '\u0243': 'B',
              '\u0182': 'B',
              '\u0181': 'B',
              '\u24B8': 'C',
              '\uFF23': 'C',
              '\u0106': 'C',
              '\u0108': 'C',
              '\u010A': 'C',
              '\u010C': 'C',
              '\u00C7': 'C',
              '\u1E08': 'C',
              '\u0187': 'C',
              '\u023B': 'C',
              '\uA73E': 'C',
              '\u24B9': 'D',
              '\uFF24': 'D',
              '\u1E0A': 'D',
              '\u010E': 'D',
              '\u1E0C': 'D',
              '\u1E10': 'D',
              '\u1E12': 'D',
              '\u1E0E': 'D',
              '\u0110': 'D',
              '\u018B': 'D',
              '\u018A': 'D',
              '\u0189': 'D',
              '\uA779': 'D',
              '\u01F1': 'DZ',
              '\u01C4': 'DZ',
              '\u01F2': 'Dz',
              '\u01C5': 'Dz',
              '\u24BA': 'E',
              '\uFF25': 'E',
              '\u00C8': 'E',
              '\u00C9': 'E',
              '\u00CA': 'E',
              '\u1EC0': 'E',
              '\u1EBE': 'E',
              '\u1EC4': 'E',
              '\u1EC2': 'E',
              '\u1EBC': 'E',
              '\u0112': 'E',
              '\u1E14': 'E',
              '\u1E16': 'E',
              '\u0114': 'E',
              '\u0116': 'E',
              '\u00CB': 'E',
              '\u1EBA': 'E',
              '\u011A': 'E',
              '\u0204': 'E',
              '\u0206': 'E',
              '\u1EB8': 'E',
              '\u1EC6': 'E',
              '\u0228': 'E',
              '\u1E1C': 'E',
              '\u0118': 'E',
              '\u1E18': 'E',
              '\u1E1A': 'E',
              '\u0190': 'E',
              '\u018E': 'E',
              '\u24BB': 'F',
              '\uFF26': 'F',
              '\u1E1E': 'F',
              '\u0191': 'F',
              '\uA77B': 'F',
              '\u24BC': 'G',
              '\uFF27': 'G',
              '\u01F4': 'G',
              '\u011C': 'G',
              '\u1E20': 'G',
              '\u011E': 'G',
              '\u0120': 'G',
              '\u01E6': 'G',
              '\u0122': 'G',
              '\u01E4': 'G',
              '\u0193': 'G',
              '\uA7A0': 'G',
              '\uA77D': 'G',
              '\uA77E': 'G',
              '\u24BD': 'H',
              '\uFF28': 'H',
              '\u0124': 'H',
              '\u1E22': 'H',
              '\u1E26': 'H',
              '\u021E': 'H',
              '\u1E24': 'H',
              '\u1E28': 'H',
              '\u1E2A': 'H',
              '\u0126': 'H',
              '\u2C67': 'H',
              '\u2C75': 'H',
              '\uA78D': 'H',
              '\u24BE': 'I',
              '\uFF29': 'I',
              '\u00CC': 'I',
              '\u00CD': 'I',
              '\u00CE': 'I',
              '\u0128': 'I',
              '\u012A': 'I',
              '\u012C': 'I',
              '\u0130': 'I',
              '\u00CF': 'I',
              '\u1E2E': 'I',
              '\u1EC8': 'I',
              '\u01CF': 'I',
              '\u0208': 'I',
              '\u020A': 'I',
              '\u1ECA': 'I',
              '\u012E': 'I',
              '\u1E2C': 'I',
              '\u0197': 'I',
              '\u24BF': 'J',
              '\uFF2A': 'J',
              '\u0134': 'J',
              '\u0248': 'J',
              '\u24C0': 'K',
              '\uFF2B': 'K',
              '\u1E30': 'K',
              '\u01E8': 'K',
              '\u1E32': 'K',
              '\u0136': 'K',
              '\u1E34': 'K',
              '\u0198': 'K',
              '\u2C69': 'K',
              '\uA740': 'K',
              '\uA742': 'K',
              '\uA744': 'K',
              '\uA7A2': 'K',
              '\u24C1': 'L',
              '\uFF2C': 'L',
              '\u013F': 'L',
              '\u0139': 'L',
              '\u013D': 'L',
              '\u1E36': 'L',
              '\u1E38': 'L',
              '\u013B': 'L',
              '\u1E3C': 'L',
              '\u1E3A': 'L',
              '\u0141': 'L',
              '\u023D': 'L',
              '\u2C62': 'L',
              '\u2C60': 'L',
              '\uA748': 'L',
              '\uA746': 'L',
              '\uA780': 'L',
              '\u01C7': 'LJ',
              '\u01C8': 'Lj',
              '\u24C2': 'M',
              '\uFF2D': 'M',
              '\u1E3E': 'M',
              '\u1E40': 'M',
              '\u1E42': 'M',
              '\u2C6E': 'M',
              '\u019C': 'M',
              '\u24C3': 'N',
              '\uFF2E': 'N',
              '\u01F8': 'N',
              '\u0143': 'N',
              '\u00D1': 'N',
              '\u1E44': 'N',
              '\u0147': 'N',
              '\u1E46': 'N',
              '\u0145': 'N',
              '\u1E4A': 'N',
              '\u1E48': 'N',
              '\u0220': 'N',
              '\u019D': 'N',
              '\uA790': 'N',
              '\uA7A4': 'N',
              '\u01CA': 'NJ',
              '\u01CB': 'Nj',
              '\u24C4': 'O',
              '\uFF2F': 'O',
              '\u00D2': 'O',
              '\u00D3': 'O',
              '\u00D4': 'O',
              '\u1ED2': 'O',
              '\u1ED0': 'O',
              '\u1ED6': 'O',
              '\u1ED4': 'O',
              '\u00D5': 'O',
              '\u1E4C': 'O',
              '\u022C': 'O',
              '\u1E4E': 'O',
              '\u014C': 'O',
              '\u1E50': 'O',
              '\u1E52': 'O',
              '\u014E': 'O',
              '\u022E': 'O',
              '\u0230': 'O',
              '\u00D6': 'O',
              '\u022A': 'O',
              '\u1ECE': 'O',
              '\u0150': 'O',
              '\u01D1': 'O',
              '\u020C': 'O',
              '\u020E': 'O',
              '\u01A0': 'O',
              '\u1EDC': 'O',
              '\u1EDA': 'O',
              '\u1EE0': 'O',
              '\u1EDE': 'O',
              '\u1EE2': 'O',
              '\u1ECC': 'O',
              '\u1ED8': 'O',
              '\u01EA': 'O',
              '\u01EC': 'O',
              '\u00D8': 'O',
              '\u01FE': 'O',
              '\u0186': 'O',
              '\u019F': 'O',
              '\uA74A': 'O',
              '\uA74C': 'O',
              '\u01A2': 'OI',
              '\uA74E': 'OO',
              '\u0222': 'OU',
              '\u24C5': 'P',
              '\uFF30': 'P',
              '\u1E54': 'P',
              '\u1E56': 'P',
              '\u01A4': 'P',
              '\u2C63': 'P',
              '\uA750': 'P',
              '\uA752': 'P',
              '\uA754': 'P',
              '\u24C6': 'Q',
              '\uFF31': 'Q',
              '\uA756': 'Q',
              '\uA758': 'Q',
              '\u024A': 'Q',
              '\u24C7': 'R',
              '\uFF32': 'R',
              '\u0154': 'R',
              '\u1E58': 'R',
              '\u0158': 'R',
              '\u0210': 'R',
              '\u0212': 'R',
              '\u1E5A': 'R',
              '\u1E5C': 'R',
              '\u0156': 'R',
              '\u1E5E': 'R',
              '\u024C': 'R',
              '\u2C64': 'R',
              '\uA75A': 'R',
              '\uA7A6': 'R',
              '\uA782': 'R',
              '\u24C8': 'S',
              '\uFF33': 'S',
              '\u1E9E': 'S',
              '\u015A': 'S',
              '\u1E64': 'S',
              '\u015C': 'S',
              '\u1E60': 'S',
              '\u0160': 'S',
              '\u1E66': 'S',
              '\u1E62': 'S',
              '\u1E68': 'S',
              '\u0218': 'S',
              '\u015E': 'S',
              '\u2C7E': 'S',
              '\uA7A8': 'S',
              '\uA784': 'S',
              '\u24C9': 'T',
              '\uFF34': 'T',
              '\u1E6A': 'T',
              '\u0164': 'T',
              '\u1E6C': 'T',
              '\u021A': 'T',
              '\u0162': 'T',
              '\u1E70': 'T',
              '\u1E6E': 'T',
              '\u0166': 'T',
              '\u01AC': 'T',
              '\u01AE': 'T',
              '\u023E': 'T',
              '\uA786': 'T',
              '\uA728': 'TZ',
              '\u24CA': 'U',
              '\uFF35': 'U',
              '\u00D9': 'U',
              '\u00DA': 'U',
              '\u00DB': 'U',
              '\u0168': 'U',
              '\u1E78': 'U',
              '\u016A': 'U',
              '\u1E7A': 'U',
              '\u016C': 'U',
              '\u00DC': 'U',
              '\u01DB': 'U',
              '\u01D7': 'U',
              '\u01D5': 'U',
              '\u01D9': 'U',
              '\u1EE6': 'U',
              '\u016E': 'U',
              '\u0170': 'U',
              '\u01D3': 'U',
              '\u0214': 'U',
              '\u0216': 'U',
              '\u01AF': 'U',
              '\u1EEA': 'U',
              '\u1EE8': 'U',
              '\u1EEE': 'U',
              '\u1EEC': 'U',
              '\u1EF0': 'U',
              '\u1EE4': 'U',
              '\u1E72': 'U',
              '\u0172': 'U',
              '\u1E76': 'U',
              '\u1E74': 'U',
              '\u0244': 'U',
              '\u24CB': 'V',
              '\uFF36': 'V',
              '\u1E7C': 'V',
              '\u1E7E': 'V',
              '\u01B2': 'V',
              '\uA75E': 'V',
              '\u0245': 'V',
              '\uA760': 'VY',
              '\u24CC': 'W',
              '\uFF37': 'W',
              '\u1E80': 'W',
              '\u1E82': 'W',
              '\u0174': 'W',
              '\u1E86': 'W',
              '\u1E84': 'W',
              '\u1E88': 'W',
              '\u2C72': 'W',
              '\u24CD': 'X',
              '\uFF38': 'X',
              '\u1E8A': 'X',
              '\u1E8C': 'X',
              '\u24CE': 'Y',
              '\uFF39': 'Y',
              '\u1EF2': 'Y',
              '\u00DD': 'Y',
              '\u0176': 'Y',
              '\u1EF8': 'Y',
              '\u0232': 'Y',
              '\u1E8E': 'Y',
              '\u0178': 'Y',
              '\u1EF6': 'Y',
              '\u1EF4': 'Y',
              '\u01B3': 'Y',
              '\u024E': 'Y',
              '\u1EFE': 'Y',
              '\u24CF': 'Z',
              '\uFF3A': 'Z',
              '\u0179': 'Z',
              '\u1E90': 'Z',
              '\u017B': 'Z',
              '\u017D': 'Z',
              '\u1E92': 'Z',
              '\u1E94': 'Z',
              '\u01B5': 'Z',
              '\u0224': 'Z',
              '\u2C7F': 'Z',
              '\u2C6B': 'Z',
              '\uA762': 'Z',
              '\u24D0': 'a',
              '\uFF41': 'a',
              '\u1E9A': 'a',
              '\u00E0': 'a',
              '\u00E1': 'a',
              '\u00E2': 'a',
              '\u1EA7': 'a',
              '\u1EA5': 'a',
              '\u1EAB': 'a',
              '\u1EA9': 'a',
              '\u00E3': 'a',
              '\u0101': 'a',
              '\u0103': 'a',
              '\u1EB1': 'a',
              '\u1EAF': 'a',
              '\u1EB5': 'a',
              '\u1EB3': 'a',
              '\u0227': 'a',
              '\u01E1': 'a',
              '\u00E4': 'a',
              '\u01DF': 'a',
              '\u1EA3': 'a',
              '\u00E5': 'a',
              '\u01FB': 'a',
              '\u01CE': 'a',
              '\u0201': 'a',
              '\u0203': 'a',
              '\u1EA1': 'a',
              '\u1EAD': 'a',
              '\u1EB7': 'a',
              '\u1E01': 'a',
              '\u0105': 'a',
              '\u2C65': 'a',
              '\u0250': 'a',
              '\uA733': 'aa',
              '\u00E6': 'ae',
              '\u01FD': 'ae',
              '\u01E3': 'ae',
              '\uA735': 'ao',
              '\uA737': 'au',
              '\uA739': 'av',
              '\uA73B': 'av',
              '\uA73D': 'ay',
              '\u24D1': 'b',
              '\uFF42': 'b',
              '\u1E03': 'b',
              '\u1E05': 'b',
              '\u1E07': 'b',
              '\u0180': 'b',
              '\u0183': 'b',
              '\u0253': 'b',
              '\u24D2': 'c',
              '\uFF43': 'c',
              '\u0107': 'c',
              '\u0109': 'c',
              '\u010B': 'c',
              '\u010D': 'c',
              '\u00E7': 'c',
              '\u1E09': 'c',
              '\u0188': 'c',
              '\u023C': 'c',
              '\uA73F': 'c',
              '\u2184': 'c',
              '\u24D3': 'd',
              '\uFF44': 'd',
              '\u1E0B': 'd',
              '\u010F': 'd',
              '\u1E0D': 'd',
              '\u1E11': 'd',
              '\u1E13': 'd',
              '\u1E0F': 'd',
              '\u0111': 'd',
              '\u018C': 'd',
              '\u0256': 'd',
              '\u0257': 'd',
              '\uA77A': 'd',
              '\u01F3': 'dz',
              '\u01C6': 'dz',
              '\u24D4': 'e',
              '\uFF45': 'e',
              '\u00E8': 'e',
              '\u00E9': 'e',
              '\u00EA': 'e',
              '\u1EC1': 'e',
              '\u1EBF': 'e',
              '\u1EC5': 'e',
              '\u1EC3': 'e',
              '\u1EBD': 'e',
              '\u0113': 'e',
              '\u1E15': 'e',
              '\u1E17': 'e',
              '\u0115': 'e',
              '\u0117': 'e',
              '\u00EB': 'e',
              '\u1EBB': 'e',
              '\u011B': 'e',
              '\u0205': 'e',
              '\u0207': 'e',
              '\u1EB9': 'e',
              '\u1EC7': 'e',
              '\u0229': 'e',
              '\u1E1D': 'e',
              '\u0119': 'e',
              '\u1E19': 'e',
              '\u1E1B': 'e',
              '\u0247': 'e',
              '\u025B': 'e',
              '\u01DD': 'e',
              '\u24D5': 'f',
              '\uFF46': 'f',
              '\u1E1F': 'f',
              '\u0192': 'f',
              '\uA77C': 'f',
              '\u24D6': 'g',
              '\uFF47': 'g',
              '\u01F5': 'g',
              '\u011D': 'g',
              '\u1E21': 'g',
              '\u011F': 'g',
              '\u0121': 'g',
              '\u01E7': 'g',
              '\u0123': 'g',
              '\u01E5': 'g',
              '\u0260': 'g',
              '\uA7A1': 'g',
              '\u1D79': 'g',
              '\uA77F': 'g',
              '\u24D7': 'h',
              '\uFF48': 'h',
              '\u0125': 'h',
              '\u1E23': 'h',
              '\u1E27': 'h',
              '\u021F': 'h',
              '\u1E25': 'h',
              '\u1E29': 'h',
              '\u1E2B': 'h',
              '\u1E96': 'h',
              '\u0127': 'h',
              '\u2C68': 'h',
              '\u2C76': 'h',
              '\u0265': 'h',
              '\u0195': 'hv',
              '\u24D8': 'i',
              '\uFF49': 'i',
              '\u00EC': 'i',
              '\u00ED': 'i',
              '\u00EE': 'i',
              '\u0129': 'i',
              '\u012B': 'i',
              '\u012D': 'i',
              '\u00EF': 'i',
              '\u1E2F': 'i',
              '\u1EC9': 'i',
              '\u01D0': 'i',
              '\u0209': 'i',
              '\u020B': 'i',
              '\u1ECB': 'i',
              '\u012F': 'i',
              '\u1E2D': 'i',
              '\u0268': 'i',
              '\u0131': 'i',
              '\u24D9': 'j',
              '\uFF4A': 'j',
              '\u0135': 'j',
              '\u01F0': 'j',
              '\u0249': 'j',
              '\u24DA': 'k',
              '\uFF4B': 'k',
              '\u1E31': 'k',
              '\u01E9': 'k',
              '\u1E33': 'k',
              '\u0137': 'k',
              '\u1E35': 'k',
              '\u0199': 'k',
              '\u2C6A': 'k',
              '\uA741': 'k',
              '\uA743': 'k',
              '\uA745': 'k',
              '\uA7A3': 'k',
              '\u24DB': 'l',
              '\uFF4C': 'l',
              '\u0140': 'l',
              '\u013A': 'l',
              '\u013E': 'l',
              '\u1E37': 'l',
              '\u1E39': 'l',
              '\u013C': 'l',
              '\u1E3D': 'l',
              '\u1E3B': 'l',
              '\u017F': 'l',
              '\u0142': 'l',
              '\u019A': 'l',
              '\u026B': 'l',
              '\u2C61': 'l',
              '\uA749': 'l',
              '\uA781': 'l',
              '\uA747': 'l',
              '\u01C9': 'lj',
              '\u24DC': 'm',
              '\uFF4D': 'm',
              '\u1E3F': 'm',
              '\u1E41': 'm',
              '\u1E43': 'm',
              '\u0271': 'm',
              '\u026F': 'm',
              '\u24DD': 'n',
              '\uFF4E': 'n',
              '\u01F9': 'n',
              '\u0144': 'n',
              '\u00F1': 'n',
              '\u1E45': 'n',
              '\u0148': 'n',
              '\u1E47': 'n',
              '\u0146': 'n',
              '\u1E4B': 'n',
              '\u1E49': 'n',
              '\u019E': 'n',
              '\u0272': 'n',
              '\u0149': 'n',
              '\uA791': 'n',
              '\uA7A5': 'n',
              '\u01CC': 'nj',
              '\u24DE': 'o',
              '\uFF4F': 'o',
              '\u00F2': 'o',
              '\u00F3': 'o',
              '\u00F4': 'o',
              '\u1ED3': 'o',
              '\u1ED1': 'o',
              '\u1ED7': 'o',
              '\u1ED5': 'o',
              '\u00F5': 'o',
              '\u1E4D': 'o',
              '\u022D': 'o',
              '\u1E4F': 'o',
              '\u014D': 'o',
              '\u1E51': 'o',
              '\u1E53': 'o',
              '\u014F': 'o',
              '\u022F': 'o',
              '\u0231': 'o',
              '\u00F6': 'o',
              '\u022B': 'o',
              '\u1ECF': 'o',
              '\u0151': 'o',
              '\u01D2': 'o',
              '\u020D': 'o',
              '\u020F': 'o',
              '\u01A1': 'o',
              '\u1EDD': 'o',
              '\u1EDB': 'o',
              '\u1EE1': 'o',
              '\u1EDF': 'o',
              '\u1EE3': 'o',
              '\u1ECD': 'o',
              '\u1ED9': 'o',
              '\u01EB': 'o',
              '\u01ED': 'o',
              '\u00F8': 'o',
              '\u01FF': 'o',
              '\u0254': 'o',
              '\uA74B': 'o',
              '\uA74D': 'o',
              '\u0275': 'o',
              '\u01A3': 'oi',
              '\u0223': 'ou',
              '\uA74F': 'oo',
              '\u24DF': 'p',
              '\uFF50': 'p',
              '\u1E55': 'p',
              '\u1E57': 'p',
              '\u01A5': 'p',
              '\u1D7D': 'p',
              '\uA751': 'p',
              '\uA753': 'p',
              '\uA755': 'p',
              '\u24E0': 'q',
              '\uFF51': 'q',
              '\u024B': 'q',
              '\uA757': 'q',
              '\uA759': 'q',
              '\u24E1': 'r',
              '\uFF52': 'r',
              '\u0155': 'r',
              '\u1E59': 'r',
              '\u0159': 'r',
              '\u0211': 'r',
              '\u0213': 'r',
              '\u1E5B': 'r',
              '\u1E5D': 'r',
              '\u0157': 'r',
              '\u1E5F': 'r',
              '\u024D': 'r',
              '\u027D': 'r',
              '\uA75B': 'r',
              '\uA7A7': 'r',
              '\uA783': 'r',
              '\u24E2': 's',
              '\uFF53': 's',
              '\u00DF': 's',
              '\u015B': 's',
              '\u1E65': 's',
              '\u015D': 's',
              '\u1E61': 's',
              '\u0161': 's',
              '\u1E67': 's',
              '\u1E63': 's',
              '\u1E69': 's',
              '\u0219': 's',
              '\u015F': 's',
              '\u023F': 's',
              '\uA7A9': 's',
              '\uA785': 's',
              '\u1E9B': 's',
              '\u24E3': 't',
              '\uFF54': 't',
              '\u1E6B': 't',
              '\u1E97': 't',
              '\u0165': 't',
              '\u1E6D': 't',
              '\u021B': 't',
              '\u0163': 't',
              '\u1E71': 't',
              '\u1E6F': 't',
              '\u0167': 't',
              '\u01AD': 't',
              '\u0288': 't',
              '\u2C66': 't',
              '\uA787': 't',
              '\uA729': 'tz',
              '\u24E4': 'u',
              '\uFF55': 'u',
              '\u00F9': 'u',
              '\u00FA': 'u',
              '\u00FB': 'u',
              '\u0169': 'u',
              '\u1E79': 'u',
              '\u016B': 'u',
              '\u1E7B': 'u',
              '\u016D': 'u',
              '\u00FC': 'u',
              '\u01DC': 'u',
              '\u01D8': 'u',
              '\u01D6': 'u',
              '\u01DA': 'u',
              '\u1EE7': 'u',
              '\u016F': 'u',
              '\u0171': 'u',
              '\u01D4': 'u',
              '\u0215': 'u',
              '\u0217': 'u',
              '\u01B0': 'u',
              '\u1EEB': 'u',
              '\u1EE9': 'u',
              '\u1EEF': 'u',
              '\u1EED': 'u',
              '\u1EF1': 'u',
              '\u1EE5': 'u',
              '\u1E73': 'u',
              '\u0173': 'u',
              '\u1E77': 'u',
              '\u1E75': 'u',
              '\u0289': 'u',
              '\u24E5': 'v',
              '\uFF56': 'v',
              '\u1E7D': 'v',
              '\u1E7F': 'v',
              '\u028B': 'v',
              '\uA75F': 'v',
              '\u028C': 'v',
              '\uA761': 'vy',
              '\u24E6': 'w',
              '\uFF57': 'w',
              '\u1E81': 'w',
              '\u1E83': 'w',
              '\u0175': 'w',
              '\u1E87': 'w',
              '\u1E85': 'w',
              '\u1E98': 'w',
              '\u1E89': 'w',
              '\u2C73': 'w',
              '\u24E7': 'x',
              '\uFF58': 'x',
              '\u1E8B': 'x',
              '\u1E8D': 'x',
              '\u24E8': 'y',
              '\uFF59': 'y',
              '\u1EF3': 'y',
              '\u00FD': 'y',
              '\u0177': 'y',
              '\u1EF9': 'y',
              '\u0233': 'y',
              '\u1E8F': 'y',
              '\u00FF': 'y',
              '\u1EF7': 'y',
              '\u1E99': 'y',
              '\u1EF5': 'y',
              '\u01B4': 'y',
              '\u024F': 'y',
              '\u1EFF': 'y',
              '\u24E9': 'z',
              '\uFF5A': 'z',
              '\u017A': 'z',
              '\u1E91': 'z',
              '\u017C': 'z',
              '\u017E': 'z',
              '\u1E93': 'z',
              '\u1E95': 'z',
              '\u01B6': 'z',
              '\u0225': 'z',
              '\u0240': 'z',
              '\u2C6C': 'z',
              '\uA763': 'z',
              '\u0386': '\u0391',
              '\u0388': '\u0395',
              '\u0389': '\u0397',
              '\u038A': '\u0399',
              '\u03AA': '\u0399',
              '\u038C': '\u039F',
              '\u038E': '\u03A5',
              '\u03AB': '\u03A5',
              '\u038F': '\u03A9',
              '\u03AC': '\u03B1',
              '\u03AD': '\u03B5',
              '\u03AE': '\u03B7',
              '\u03AF': '\u03B9',
              '\u03CA': '\u03B9',
              '\u0390': '\u03B9',
              '\u03CC': '\u03BF',
              '\u03CD': '\u03C5',
              '\u03CB': '\u03C5',
              '\u03B0': '\u03C5',
              '\u03C9': '\u03C9',
              '\u03C2': '\u03C3'
          };

          return diacritics;
      });

      S2.define('select2/data/base', [
        '../utils'
      ], function (Utils) {
          function BaseAdapter($element, options) {
              BaseAdapter.__super__.constructor.call(this);
          }

          Utils.Extend(BaseAdapter, Utils.Observable);

          BaseAdapter.prototype.current = function (callback) {
              throw new Error('The `current` method must be defined in child classes.');
          };

          BaseAdapter.prototype.query = function (params, callback) {
              throw new Error('The `query` method must be defined in child classes.');
          };

          BaseAdapter.prototype.bind = function (container, $container) {
              // Can be implemented in subclasses
          };

          BaseAdapter.prototype.destroy = function () {
              // Can be implemented in subclasses
          };

          BaseAdapter.prototype.generateResultId = function (container, data) {
              var id = container.id + '-result-';

              id += Utils.generateChars(4);

              if (data.id != null) {
                  id += '-' + data.id.toString();
              } else {
                  id += '-' + Utils.generateChars(4);
              }
              return id;
          };

          return BaseAdapter;
      });

      S2.define('select2/data/select', [
        './base',
        '../utils',
        'jquery'
      ], function (BaseAdapter, Utils, $) {
          function SelectAdapter($element, options) {
              this.$element = $element;
              this.options = options;

              SelectAdapter.__super__.constructor.call(this);
          }

          Utils.Extend(SelectAdapter, BaseAdapter);

          SelectAdapter.prototype.current = function (callback) {
              var data = [];
              var self = this;

              this.$element.find(':selected').each(function () {
                  var $option = $(this);

                  var option = self.item($option);

                  data.push(option);
              });

              callback(data);
          };

          SelectAdapter.prototype.select = function (data) {
              var self = this;

              data.selected = true;

              // If data.element is a DOM node, use it instead
              if ($(data.element).is('option')) {
                  data.element.selected = true;

                  this.$element.trigger('change');

                  return;
              }

              if (this.$element.prop('multiple')) {
                  this.current(function (currentData) {
                      var val = [];

                      data = [data];
                      data.push.apply(data, currentData);

                      for (var d = 0; d &lt; data.length; d++) {
                          var id = data[d].id;

                          if ($.inArray(id, val) === -1) {
                              val.push(id);
                          }
                      }

                      self.$element.val(val);
                      self.$element.trigger('change');
                  });
              } else {
                  var val = data.id;

                  this.$element.val(val);
                  this.$element.trigger('change');
              }
          };

          SelectAdapter.prototype.unselect = function (data) {
              var self = this;

              if (!this.$element.prop('multiple')) {
                  return;
              }

              data.selected = false;

              if ($(data.element).is('option')) {
                  data.element.selected = false;

                  this.$element.trigger('change');

                  return;
              }

              this.current(function (currentData) {
                  var val = [];

                  for (var d = 0; d &lt; currentData.length; d++) {
                      var id = currentData[d].id;

                      if (id !== data.id &amp;&amp; $.inArray(id, val) === -1) {
                          val.push(id);
                      }
                  }

                  self.$element.val(val);

                  self.$element.trigger('change');
              });
          };

          SelectAdapter.prototype.bind = function (container, $container) {
              var self = this;

              this.container = container;

              container.on('select', function (params) {
                  self.select(params.data);
              });

              container.on('unselect', function (params) {
                  self.unselect(params.data);
              });
          };

          SelectAdapter.prototype.destroy = function () {
              // Remove anything added to child elements
              this.$element.find('*').each(function () {
                  // Remove any custom data set by Select2
                  $.removeData(this, 'data');
              });
          };

          SelectAdapter.prototype.query = function (params, callback) {
              var data = [];
              var self = this;

              var $options = this.$element.children();

              $options.each(function () {
                  var $option = $(this);

                  if (!$option.is('option') &amp;&amp; !$option.is('optgroup')) {
                      return;
                  }

                  var option = self.item($option);

                  var matches = self.matches(params, option);

                  if (matches !== null) {
                      data.push(matches);
                  }
              });

              callback({
                  results: data
              });
          };

          SelectAdapter.prototype.addOptions = function ($options) {
              Utils.appendMany(this.$element, $options);
          };

          SelectAdapter.prototype.option = function (data) {
              var option;

              if (data.children) {
                  option = document.createElement('optgroup');
                  option.label = data.text;
              } else {
                  option = document.createElement('option');

                  if (option.textContent !== undefined) {
                      option.textContent = data.text;
                  } else {
                      option.innerText = data.text;
                  }
              }

              if (data.id) {
                  option.value = data.id;
              }

              if (data.disabled) {
                  option.disabled = true;
              }

              if (data.selected) {
                  option.selected = true;
              }

              if (data.title) {
                  option.title = data.title;
              }

              var $option = $(option);

              var normalizedData = this._normalizeItem(data);
              normalizedData.element = option;

              // Override the option's data with the combined data
              $.data(option, 'data', normalizedData);

              return $option;
          };

          SelectAdapter.prototype.item = function ($option) {
              var data = {};

              data = $.data($option[0], 'data');

              if (data != null) {
                  return data;
              }

              if ($option.is('option')) {
                  data = {
                      id: $option.val(),
                      text: $option.text(),
                      disabled: $option.prop('disabled'),
                      selected: $option.prop('selected'),
                      title: $option.prop('title')
                  };
              } else if ($option.is('optgroup')) {
                  data = {
                      text: $option.prop('label'),
                      children: [],
                      title: $option.prop('title')
                  };

                  var $children = $option.children('option');
                  var children = [];

                  for (var c = 0; c &lt; $children.length; c++) {
                      var $child = $($children[c]);

                      var child = this.item($child);

                      children.push(child);
                  }

                  data.children = children;
              }

              data = this._normalizeItem(data);
              data.element = $option[0];

              $.data($option[0], 'data', data);

              return data;
          };

          SelectAdapter.prototype._normalizeItem = function (item) {
              if (!$.isPlainObject(item)) {
                  item = {
                      id: item,
                      text: item
                  };
              }

              item = $.extend({}, {
                  text: ''
              }, item);

              var defaults = {
                  selected: false,
                  disabled: false
              };

              if (item.id != null) {
                  item.id = item.id.toString();
              }

              if (item.text != null) {
                  item.text = item.text.toString();
              }

              if (item._resultId == null &amp;&amp; item.id &amp;&amp; this.container != null) {
                  item._resultId = this.generateResultId(this.container, item);
              }

              return $.extend({}, defaults, item);
          };

          SelectAdapter.prototype.matches = function (params, data) {
              var matcher = this.options.get('matcher');

              return matcher(params, data);
          };

          return SelectAdapter;
      });

      S2.define('select2/data/array', [
        './select',
        '../utils',
        'jquery'
      ], function (SelectAdapter, Utils, $) {
          function ArrayAdapter($element, options) {
              var data = options.get('data') || [];

              ArrayAdapter.__super__.constructor.call(this, $element, options);

              this.addOptions(this.convertToOptions(data));
          }

          Utils.Extend(ArrayAdapter, SelectAdapter);

          ArrayAdapter.prototype.select = function (data) {
              var $option = this.$element.find('option').filter(function (i, elm) {
                  return elm.value == data.id.toString();
              });

              if ($option.length === 0) {
                  $option = this.option(data);

                  this.addOptions($option);
              }

              ArrayAdapter.__super__.select.call(this, data);
          };

          ArrayAdapter.prototype.convertToOptions = function (data) {
              var self = this;

              var $existing = this.$element.find('option');
              var existingIds = $existing.map(function () {
                  return self.item($(this)).id;
              }).get();

              var $options = [];

              // Filter out all items except for the one passed in the argument
              function onlyItem(item) {
                  return function () {
                      return $(this).val() == item.id;
                  };
              }

              for (var d = 0; d &lt; data.length; d++) {
                  var item = this._normalizeItem(data[d]);

                  // Skip items which were pre-loaded, only merge the data
                  if ($.inArray(item.id, existingIds) &gt;= 0) {
                      var $existingOption = $existing.filter(onlyItem(item));

                      var existingData = this.item($existingOption);
                      var newData = $.extend(true, {}, item, existingData);

                      var $newOption = this.option(newData);

                      $existingOption.replaceWith($newOption);

                      continue;
                  }

                  var $option = this.option(item);

                  if (item.children) {
                      var $children = this.convertToOptions(item.children);

                      Utils.appendMany($option, $children);
                  }

                  $options.push($option);
              }

              return $options;
          };

          return ArrayAdapter;
      });

      S2.define('select2/data/ajax', [
        './array',
        '../utils',
        'jquery'
      ], function (ArrayAdapter, Utils, $) {
          function AjaxAdapter($element, options) {
              this.ajaxOptions = this._applyDefaults(options.get('ajax'));

              if (this.ajaxOptions.processResults != null) {
                  this.processResults = this.ajaxOptions.processResults;
              }

              AjaxAdapter.__super__.constructor.call(this, $element, options);
          }

          Utils.Extend(AjaxAdapter, ArrayAdapter);

          AjaxAdapter.prototype._applyDefaults = function (options) {
              var defaults = {
                  data: function (params) {
                      return $.extend({}, params, {
                          q: params.term
                      });
                  },
                  transport: function (params, success, failure) {
                      var $request = $.ajax(params);

                      $request.then(success);
                      $request.fail(failure);

                      return $request;
                  }
              };

              return $.extend({}, defaults, options, true);
          };

          AjaxAdapter.prototype.processResults = function (results) {
              return results;
          };

          AjaxAdapter.prototype.query = function (params, callback) {
              var matches = [];
              var self = this;

              if (this._request != null) {
                  // JSONP requests cannot always be aborted
                  if ($.isFunction(this._request.abort)) {
                      this._request.abort();
                  }

                  this._request = null;
              }

              var options = $.extend({
                  type: 'GET'
              }, this.ajaxOptions);

              if (typeof options.url === 'function') {
                  options.url = options.url.call(this.$element, params);
              }

              if (typeof options.data === 'function') {
                  options.data = options.data.call(this.$element, params);
              }

              function request() {
                  var $request = options.transport(options, function (data) {
                      var results = self.processResults(data, params);

                      if (self.options.get('debug') &amp;&amp; window.console &amp;&amp; console.error) {
                          // Check to make sure that the response included a `results` key.
                          if (!results || !results.results || !$.isArray(results.results)) {
                              console.error(
                                'Select2: The AJAX results did not return an array in the ' +
                                '`results` key of the response.'
                              );
                          }
                      }

                      callback(results);
                  }, function () {
                      // Attempt to detect if a request was aborted
                      // Only works if the transport exposes a status property
                      if ($request.status &amp;&amp; $request.status === '0') {
                          return;
                      }

                      self.trigger('results:message', {
                          message: 'errorLoading'
                      });
                  });

                  self._request = $request;
              }

              if (this.ajaxOptions.delay &amp;&amp; params.term != null) {
                  if (this._queryTimeout) {
                      window.clearTimeout(this._queryTimeout);
                  }

                  this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
              } else {
                  request();
              }
          };

          return AjaxAdapter;
      });

      S2.define('select2/data/tags', [
        'jquery'
      ], function ($) {
          function Tags(decorated, $element, options) {
              var tags = options.get('tags');

              var createTag = options.get('createTag');

              if (createTag !== undefined) {
                  this.createTag = createTag;
              }

              var insertTag = options.get('insertTag');

              if (insertTag !== undefined) {
                  this.insertTag = insertTag;
              }

              decorated.call(this, $element, options);

              if ($.isArray(tags)) {
                  for (var t = 0; t &lt; tags.length; t++) {
                      var tag = tags[t];
                      var item = this._normalizeItem(tag);

                      var $option = this.option(item);

                      this.$element.append($option);
                  }
              }
          }

          Tags.prototype.query = function (decorated, params, callback) {
              var self = this;

              this._removeOldTags();

              if (params.term == null || params.page != null) {
                  decorated.call(this, params, callback);
                  return;
              }

              function wrapper(obj, child) {
                  var data = obj.results;

                  for (var i = 0; i &lt; data.length; i++) {
                      var option = data[i];

                      var checkChildren = (
                        option.children != null &amp;&amp;
                        !wrapper({
                            results: option.children
                        }, true)
                      );

                      var checkText = option.text === params.term;

                      if (checkText || checkChildren) {
                          if (child) {
                              return false;
                          }

                          obj.data = data;
                          callback(obj);

                          return;
                      }
                  }

                  if (child) {
                      return true;
                  }

                  var tag = self.createTag(params);

                  if (tag != null) {
                      var $option = self.option(tag);
                      $option.attr('data-select2-tag', true);

                      self.addOptions([$option]);

                      self.insertTag(data, tag);
                  }

                  obj.results = data;

                  callback(obj);
              }

              decorated.call(this, params, wrapper);
          };

          Tags.prototype.createTag = function (decorated, params) {
              var term = $.trim(params.term);

              if (term === '') {
                  return null;
              }

              return {
                  id: term,
                  text: term
              };
          };

          Tags.prototype.insertTag = function (_, data, tag) {
              data.unshift(tag);
          };

          Tags.prototype._removeOldTags = function (_) {
              var tag = this._lastTag;

              var $options = this.$element.find('option[data-select2-tag]');

              $options.each(function () {
                  if (this.selected) {
                      return;
                  }

                  $(this).remove();
              });
          };

          return Tags;
      });

      S2.define('select2/data/tokenizer', [
        'jquery'
      ], function ($) {
          function Tokenizer(decorated, $element, options) {
              var tokenizer = options.get('tokenizer');

              if (tokenizer !== undefined) {
                  this.tokenizer = tokenizer;
              }

              decorated.call(this, $element, options);
          }

          Tokenizer.prototype.bind = function (decorated, container, $container) {
              decorated.call(this, container, $container);

              this.$search = container.dropdown.$search || container.selection.$search ||
                $container.find('.select2-search__field');
          };

          Tokenizer.prototype.query = function (decorated, params, callback) {
              var self = this;

              function createAndSelect(data) {
                  // Normalize the data object so we can use it for checks
                  var item = self._normalizeItem(data);

                  // Check if the data object already exists as a tag
                  // Select it if it doesn't
                  var $existingOptions = self.$element.find('option').filter(function () {
                      return $(this).val() === item.id;
                  });

                  // If an existing option wasn't found for it, create the option
                  if (!$existingOptions.length) {
                      var $option = self.option(item);
                      $option.attr('data-select2-tag', true);

                      self._removeOldTags();
                      self.addOptions([$option]);
                  }

                  // Select the item, now that we know there is an option for it
                  select(item);
              }

              function select(data) {
                  self.trigger('select', {
                      data: data
                  });
              }

              params.term = params.term || '';

              var tokenData = this.tokenizer(params, this.options, createAndSelect);

              if (tokenData.term !== params.term) {
                  // Replace the search term if we have the search box
                  if (this.$search.length) {
                      this.$search.val(tokenData.term);
                      this.$search.focus();
                  }

                  params.term = tokenData.term;
              }

              decorated.call(this, params, callback);
          };

          Tokenizer.prototype.tokenizer = function (_, params, options, callback) {
              var separators = options.get('tokenSeparators') || [];
              var term = params.term;
              var i = 0;

              var createTag = this.createTag || function (params) {
                  return {
                      id: params.term,
                      text: params.term
                  };
              };

              while (i &lt; term.length) {
                  var termChar = term[i];

                  if ($.inArray(termChar, separators) === -1) {
                      i++;

                      continue;
                  }

                  var part = term.substr(0, i);
                  var partParams = $.extend({}, params, {
                      term: part
                  });

                  var data = createTag(partParams);

                  if (data == null) {
                      i++;
                      continue;
                  }

                  callback(data);

                  // Reset the term to not include the tokenized portion
                  term = term.substr(i + 1) || '';
                  i = 0;
              }

              return {
                  term: term
              };
          };

          return Tokenizer;
      });

      S2.define('select2/data/minimumInputLength', [

      ], function () {
          function MinimumInputLength(decorated, $e, options) {
              this.minimumInputLength = options.get('minimumInputLength');

              decorated.call(this, $e, options);
          }

          MinimumInputLength.prototype.query = function (decorated, params, callback) {
              params.term = params.term || '';

              if (params.term.length &lt; this.minimumInputLength) {
                  this.trigger('results:message', {
                      message: 'inputTooShort',
                      args: {
                          minimum: this.minimumInputLength,
                          input: params.term,
                          params: params
                      }
                  });

                  return;
              }

              decorated.call(this, params, callback);
          };

          return MinimumInputLength;
      });

      S2.define('select2/data/maximumInputLength', [

      ], function () {
          function MaximumInputLength(decorated, $e, options) {
              this.maximumInputLength = options.get('maximumInputLength');

              decorated.call(this, $e, options);
          }

          MaximumInputLength.prototype.query = function (decorated, params, callback) {
              params.term = params.term || '';

              if (this.maximumInputLength &gt; 0 &amp;&amp;
                  params.term.length &gt; this.maximumInputLength) {
                  this.trigger('results:message', {
                      message: 'inputTooLong',
                      args: {
                          maximum: this.maximumInputLength,
                          input: params.term,
                          params: params
                      }
                  });

                  return;
              }

              decorated.call(this, params, callback);
          };

          return MaximumInputLength;
      });

      S2.define('select2/data/maximumSelectionLength', [

      ], function () {
          function MaximumSelectionLength(decorated, $e, options) {
              this.maximumSelectionLength = options.get('maximumSelectionLength');

              decorated.call(this, $e, options);
          }

          MaximumSelectionLength.prototype.query =
            function (decorated, params, callback) {
                var self = this;

                this.current(function (currentData) {
                    var count = currentData != null ? currentData.length : 0;
                    if (self.maximumSelectionLength &gt; 0 &amp;&amp;
                      count &gt;= self.maximumSelectionLength) {
                        self.trigger('results:message', {
                            message: 'maximumSelected',
                            args: {
                                maximum: self.maximumSelectionLength
                            }
                        });
                        return;
                    }
                    decorated.call(self, params, callback);
                });
            };

          return MaximumSelectionLength;
      });

      S2.define('select2/dropdown', [
        'jquery',
        './utils'
      ], function ($, Utils) {
          function Dropdown($element, options) {
              this.$element = $element;
              this.options = options;

              Dropdown.__super__.constructor.call(this);
          }

          Utils.Extend(Dropdown, Utils.Observable);

          Dropdown.prototype.render = function () {
              var $dropdown = $(
                '&lt;span class="select2-dropdown"&gt;' +
                  '&lt;span class="select2-results"&gt;&lt;/span&gt;' +
                '&lt;/span&gt;'
              );

              $dropdown.attr('dir', this.options.get('dir'));

              this.$dropdown = $dropdown;

              return $dropdown;
          };

          Dropdown.prototype.bind = function () {
              // Should be implemented in subclasses
          };

          Dropdown.prototype.position = function ($dropdown, $container) {
              // Should be implmented in subclasses
          };

          Dropdown.prototype.destroy = function () {
              // Remove the dropdown from the DOM
              this.$dropdown.remove();
          };

          return Dropdown;
      });

      S2.define('select2/dropdown/search', [
        'jquery',
        '../utils'
      ], function ($, Utils) {
          function Search() { }

          Search.prototype.render = function (decorated) {
              var $rendered = decorated.call(this);

              var $search = $(
                '&lt;span class="select2-search select2-search--dropdown"&gt;' +
                  '&lt;input class="select2-search__field" type="search" tabindex="-1"' +
                  ' autocomplete="off" autocorrect="off" autocapitalize="off"' +
                  ' spellcheck="false" role="textbox" /&gt;' +
                '&lt;/span&gt;'
              );

              this.$searchContainer = $search;
              this.$search = $search.find('input');

              $rendered.prepend($search);

              return $rendered;
          };

          Search.prototype.bind = function (decorated, container, $container) {
              var self = this;

              decorated.call(this, container, $container);

              this.$search.on('keydown', function (evt) {
                  self.trigger('keypress', evt);

                  self._keyUpPrevented = evt.isDefaultPrevented();
              });

              // Workaround for browsers which do not support the `input` event
              // This will prevent double-triggering of events for browsers which support
              // both the `keyup` and `input` events.
              this.$search.on('input', function (evt) {
                  // Unbind the duplicated `keyup` event
                  $(this).off('keyup');
              });

              this.$search.on('keyup input', function (evt) {
                  self.handleSearch(evt);
              });

              container.on('open', function () {
                  self.$search.attr('tabindex', 0);

                  self.$search.focus();

                  window.setTimeout(function () {
                      self.$search.focus();
                  }, 0);
              });

              container.on('close', function () {
                  self.$search.attr('tabindex', -1);

                  self.$search.val('');
              });

              container.on('focus', function () {
                  if (container.isOpen()) {
                      self.$search.focus();
                  }
              });

              container.on('results:all', function (params) {
                  if (params.query.term == null || params.query.term === '') {
                      var showSearch = self.showSearch(params);

                      if (showSearch) {
                          self.$searchContainer.removeClass('select2-search--hide');
                      } else {
                          self.$searchContainer.addClass('select2-search--hide');
                      }
                  }
              });
          };

          Search.prototype.handleSearch = function (evt) {
              if (!this._keyUpPrevented) {
                  var input = this.$search.val();

                  this.trigger('query', {
                      term: input
                  });
              }

              this._keyUpPrevented = false;
          };

          Search.prototype.showSearch = function (_, params) {
              return true;
          };

          return Search;
      });

      S2.define('select2/dropdown/hidePlaceholder', [

      ], function () {
          function HidePlaceholder(decorated, $element, options, dataAdapter) {
              this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

              decorated.call(this, $element, options, dataAdapter);
          }

          HidePlaceholder.prototype.append = function (decorated, data) {
              data.results = this.removePlaceholder(data.results);

              decorated.call(this, data);
          };

          HidePlaceholder.prototype.normalizePlaceholder = function (_, placeholder) {
              if (typeof placeholder === 'string') {
                  placeholder = {
                      id: '',
                      text: placeholder
                  };
              }

              return placeholder;
          };

          HidePlaceholder.prototype.removePlaceholder = function (_, data) {
              var modifiedData = data.slice(0);

              for (var d = data.length - 1; d &gt;= 0; d--) {
                  var item = data[d];

                  if (this.placeholder.id === item.id) {
                      modifiedData.splice(d, 1);
                  }
              }

              return modifiedData;
          };

          return HidePlaceholder;
      });

      S2.define('select2/dropdown/infiniteScroll', [
        'jquery'
      ], function ($) {
          function InfiniteScroll(decorated, $element, options, dataAdapter) {
              this.lastParams = {};

              decorated.call(this, $element, options, dataAdapter);

              this.$loadingMore = this.createLoadingMore();
              this.loading = false;
          }

          InfiniteScroll.prototype.append = function (decorated, data) {
              this.$loadingMore.remove();
              this.loading = false;

              decorated.call(this, data);

              if (this.showLoadingMore(data)) {
                  this.$results.append(this.$loadingMore);
              }
          };

          InfiniteScroll.prototype.bind = function (decorated, container, $container) {
              var self = this;

              decorated.call(this, container, $container);

              container.on('query', function (params) {
                  self.lastParams = params;
                  self.loading = true;
              });

              container.on('query:append', function (params) {
                  self.lastParams = params;
                  self.loading = true;
              });

              this.$results.on('scroll', function () {
                  var isLoadMoreVisible = $.contains(
                    document.documentElement,
                    self.$loadingMore[0]
                  );

                  if (self.loading || !isLoadMoreVisible) {
                      return;
                  }

                  var currentOffset = self.$results.offset().top +
                    self.$results.outerHeight(false);
                  var loadingMoreOffset = self.$loadingMore.offset().top +
                    self.$loadingMore.outerHeight(false);

                  if (currentOffset + 50 &gt;= loadingMoreOffset) {
                      self.loadMore();
                  }
              });
          };

          InfiniteScroll.prototype.loadMore = function () {
              this.loading = true;

              var params = $.extend({}, { page: 1 }, this.lastParams);

              params.page++;

              this.trigger('query:append', params);
          };

          InfiniteScroll.prototype.showLoadingMore = function (_, data) {
              return data.pagination &amp;&amp; data.pagination.more;
          };

          InfiniteScroll.prototype.createLoadingMore = function () {
              var $option = $(
                '&lt;li ' +
                'class="select2-results__option select2-results__option--load-more"' +
                'role="treeitem" aria-disabled="true"&gt;&lt;/li&gt;'
              );

              var message = this.options.get('translations').get('loadingMore');

              $option.html(message(this.lastParams));

              return $option;
          };

          return InfiniteScroll;
      });

      S2.define('select2/dropdown/attachBody', [
        'jquery',
        '../utils'
      ], function ($, Utils) {
          function AttachBody(decorated, $element, options) {
              this.$dropdownParent = options.get('dropdownParent') || $(document.body);

              decorated.call(this, $element, options);
          }

          AttachBody.prototype.bind = function (decorated, container, $container) {
              var self = this;

              var setupResultsEvents = false;

              decorated.call(this, container, $container);

              container.on('open', function () {
                  self._showDropdown();
                  self._attachPositioningHandler(container);

                  if (!setupResultsEvents) {
                      setupResultsEvents = true;

                      container.on('results:all', function () {
                          self._positionDropdown();
                          self._resizeDropdown();
                      });

                      container.on('results:append', function () {
                          self._positionDropdown();
                          self._resizeDropdown();
                      });
                  }
              });

              container.on('close', function () {
                  self._hideDropdown();
                  self._detachPositioningHandler(container);
              });

              this.$dropdownContainer.on('mousedown', function (evt) {
                  evt.stopPropagation();
              });
          };

          AttachBody.prototype.destroy = function (decorated) {
              decorated.call(this);

              this.$dropdownContainer.remove();
          };

          AttachBody.prototype.position = function (decorated, $dropdown, $container) {
              // Clone all of the container classes
              $dropdown.attr('class', $container.attr('class'));

              $dropdown.removeClass('select2');
              $dropdown.addClass('select2-container--open');

              $dropdown.css({
                  position: 'absolute',
                  top: -999999
              });

              this.$container = $container;
          };

          AttachBody.prototype.render = function (decorated) {
              var $container = $('&lt;span&gt;&lt;/span&gt;');

              var $dropdown = decorated.call(this);
              $container.append($dropdown);

              this.$dropdownContainer = $container;

              return $container;
          };

          AttachBody.prototype._hideDropdown = function (decorated) {
              this.$dropdownContainer.detach();
          };

          AttachBody.prototype._attachPositioningHandler =
              function (decorated, container) {
                  var self = this;

                  var scrollEvent = 'scroll.select2.' + container.id;
                  var resizeEvent = 'resize.select2.' + container.id;
                  var orientationEvent = 'orientationchange.select2.' + container.id;

                  var $watchers = this.$container.parents().filter(Utils.hasScroll);
                  $watchers.each(function () {
                      $(this).data('select2-scroll-position', {
                          x: $(this).scrollLeft(),
                          y: $(this).scrollTop()
                      });
                  });

                  $watchers.on(scrollEvent, function (ev) {
                      var position = $(this).data('select2-scroll-position');
                      $(this).scrollTop(position.y);
                  });

                  $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent,
                    function (e) {
                        self._positionDropdown();
                        self._resizeDropdown();
                    });
              };

          AttachBody.prototype._detachPositioningHandler =
              function (decorated, container) {
                  var scrollEvent = 'scroll.select2.' + container.id;
                  var resizeEvent = 'resize.select2.' + container.id;
                  var orientationEvent = 'orientationchange.select2.' + container.id;

                  var $watchers = this.$container.parents().filter(Utils.hasScroll);
                  $watchers.off(scrollEvent);

                  $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
              };

          AttachBody.prototype._positionDropdown = function () {
              var $window = $(window);

              var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');
              var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');

              var newDirection = null;

              var offset = this.$container.offset();

              offset.bottom = offset.top + this.$container.outerHeight(false);

              var container = {
                  height: this.$container.outerHeight(false)
              };

              container.top = offset.top;
              container.bottom = offset.top + container.height;

              var dropdown = {
                  height: this.$dropdown.outerHeight(false)
              };

              var viewport = {
                  top: $window.scrollTop(),
                  bottom: $window.scrollTop() + $window.height()
              };

              var enoughRoomAbove = viewport.top &lt; (offset.top - dropdown.height);
              var enoughRoomBelow = viewport.bottom &gt; (offset.bottom + dropdown.height);

              var css = {
                  left: offset.left,
                  top: container.bottom
              };

              // Determine what the parent element is to use for calciulating the offset
              var $offsetParent = this.$dropdownParent;

              // For statically positoned elements, we need to get the element
              // that is determining the offset
              if ($offsetParent.css('position') === 'static') {
                  $offsetParent = $offsetParent.offsetParent();
              }

              var parentOffset = $offsetParent.offset();

              css.top -= parentOffset.top;
              css.left -= parentOffset.left;

              if (!isCurrentlyAbove &amp;&amp; !isCurrentlyBelow) {
                  newDirection = 'below';
              }

              if (!enoughRoomBelow &amp;&amp; enoughRoomAbove &amp;&amp; !isCurrentlyAbove) {
                  newDirection = 'above';
              } else if (!enoughRoomAbove &amp;&amp; enoughRoomBelow &amp;&amp; isCurrentlyAbove) {
                  newDirection = 'below';
              }

              if (newDirection == 'above' ||
                (isCurrentlyAbove &amp;&amp; newDirection !== 'below')) {
                  css.top = container.top - parentOffset.top - dropdown.height;
              }

              if (newDirection != null) {
                  this.$dropdown
                    .removeClass('select2-dropdown--below select2-dropdown--above')
                    .addClass('select2-dropdown--' + newDirection);
                  this.$container
                    .removeClass('select2-container--below select2-container--above')
                    .addClass('select2-container--' + newDirection);
              }

              this.$dropdownContainer.css(css);
          };

          AttachBody.prototype._resizeDropdown = function () {
              var css = {
                  width: this.$container.outerWidth(false) + 'px'
              };

              if (this.options.get('dropdownAutoWidth')) {
                  css.minWidth = css.width;
                  css.position = 'relative';
                  css.width = 'auto';
              }

              this.$dropdown.css(css);
          };

          AttachBody.prototype._showDropdown = function (decorated) {
              this.$dropdownContainer.appendTo(this.$dropdownParent);

              this._positionDropdown();
              this._resizeDropdown();
          };

          return AttachBody;
      });

      S2.define('select2/dropdown/minimumResultsForSearch', [

      ], function () {
          function countResults(data) {
              var count = 0;

              for (var d = 0; d &lt; data.length; d++) {
                  var item = data[d];

                  if (item.children) {
                      count += countResults(item.children);
                  } else {
                      count++;
                  }
              }

              return count;
          }

          function MinimumResultsForSearch(decorated, $element, options, dataAdapter) {
              this.minimumResultsForSearch = options.get('minimumResultsForSearch');

              if (this.minimumResultsForSearch &lt; 0) {
                  this.minimumResultsForSearch = Infinity;
              }

              decorated.call(this, $element, options, dataAdapter);
          }

          MinimumResultsForSearch.prototype.showSearch = function (decorated, params) {
              if (countResults(params.data.results) &lt; this.minimumResultsForSearch) {
                  return false;
              }

              return decorated.call(this, params);
          };

          return MinimumResultsForSearch;
      });

      S2.define('select2/dropdown/selectOnClose', [

      ], function () {
          function SelectOnClose() { }

          SelectOnClose.prototype.bind = function (decorated, container, $container) {
              var self = this;

              decorated.call(this, container, $container);

              container.on('close', function (params) {
                  self._handleSelectOnClose(params);
              });
          };

          SelectOnClose.prototype._handleSelectOnClose = function (_, params) {
              if (params &amp;&amp; params.originalSelect2Event != null) {
                  var event = params.originalSelect2Event;

                  // Don't select an item if the close event was triggered from a select or
                  // unselect event
                  if (event._type === 'select' || event._type === 'unselect') {
                      return;
                  }
              }

              var $highlightedResults = this.getHighlightedResults();

              // Only select highlighted results
              if ($highlightedResults.length &lt; 1) {
                  return;
              }

              var data = $highlightedResults.data('data');

              // Don't re-select already selected resulte
              if (
                (data.element != null &amp;&amp; data.element.selected) ||
                (data.element == null &amp;&amp; data.selected)
              ) {
                  return;
              }

              this.trigger('select', {
                  data: data
              });
          };

          return SelectOnClose;
      });

      S2.define('select2/dropdown/closeOnSelect', [

      ], function () {
          function CloseOnSelect() { }

          CloseOnSelect.prototype.bind = function (decorated, container, $container) {
              var self = this;

              decorated.call(this, container, $container);

              container.on('select', function (evt) {
                  self._selectTriggered(evt);
              });

              container.on('unselect', function (evt) {
                  self._selectTriggered(evt);
              });
          };

          CloseOnSelect.prototype._selectTriggered = function (_, evt) {
              var originalEvent = evt.originalEvent;

              // Don't close if the control key is being held
              if (originalEvent &amp;&amp; originalEvent.ctrlKey) {
                  return;
              }

              this.trigger('close', {
                  originalEvent: originalEvent,
                  originalSelect2Event: evt
              });
          };

          return CloseOnSelect;
      });

      S2.define('select2/i18n/en', [], function () {
          // English
          return {
              errorLoading: function () {
                  return 'The results could not be loaded.';
              },
              inputTooLong: function (args) {
                  var overChars = args.input.length - args.maximum;

                  var message = 'Please delete ' + overChars + ' character';

                  if (overChars != 1) {
                      message += 's';
                  }

                  return message;
              },
              inputTooShort: function (args) {
                  var remainingChars = args.minimum - args.input.length;

                  var message = 'Please enter ' + remainingChars + ' or more characters';

                  return message;
              },
              loadingMore: function () {
                  return 'Loading more results…';
              },
              maximumSelected: function (args) {
                  var message = 'You can only select ' + args.maximum + ' item';

                  if (args.maximum != 1) {
                      message += 's';
                  }

                  return message;
              },
              noResults: function () {
                  return 'No results found';
              },
              searching: function () {
                  return 'Searching…';
              }
          };
      });

      S2.define('select2/defaults', [
        'jquery',
        'require',

        './results',

        './selection/single',
        './selection/multiple',
        './selection/placeholder',
        './selection/allowClear',
        './selection/search',
        './selection/eventRelay',

        './utils',
        './translation',
        './diacritics',

        './data/select',
        './data/array',
        './data/ajax',
        './data/tags',
        './data/tokenizer',
        './data/minimumInputLength',
        './data/maximumInputLength',
        './data/maximumSelectionLength',

        './dropdown',
        './dropdown/search',
        './dropdown/hidePlaceholder',
        './dropdown/infiniteScroll',
        './dropdown/attachBody',
        './dropdown/minimumResultsForSearch',
        './dropdown/selectOnClose',
        './dropdown/closeOnSelect',

        './i18n/en'
      ], function ($, require,

                   ResultsList,

                   SingleSelection, MultipleSelection, Placeholder, AllowClear,
                   SelectionSearch, EventRelay,

                   Utils, Translation, DIACRITICS,

                   SelectData, ArrayData, AjaxData, Tags, Tokenizer,
                   MinimumInputLength, MaximumInputLength, MaximumSelectionLength,

                   Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll,
                   AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect,

                   EnglishTranslation) {
          function Defaults() {
              this.reset();
          }

          Defaults.prototype.apply = function (options) {
              options = $.extend(true, {}, this.defaults, options);

              if (options.dataAdapter == null) {
                  if (options.ajax != null) {
                      options.dataAdapter = AjaxData;
                  } else if (options.data != null) {
                      options.dataAdapter = ArrayData;
                  } else {
                      options.dataAdapter = SelectData;
                  }

                  if (options.minimumInputLength &gt; 0) {
                      options.dataAdapter = Utils.Decorate(
                        options.dataAdapter,
                        MinimumInputLength
                      );
                  }

                  if (options.maximumInputLength &gt; 0) {
                      options.dataAdapter = Utils.Decorate(
                        options.dataAdapter,
                        MaximumInputLength
                      );
                  }

                  if (options.maximumSelectionLength &gt; 0) {
                      options.dataAdapter = Utils.Decorate(
                        options.dataAdapter,
                        MaximumSelectionLength
                      );
                  }

                  if (options.tags) {
                      options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
                  }

                  if (options.tokenSeparators != null || options.tokenizer != null) {
                      options.dataAdapter = Utils.Decorate(
                        options.dataAdapter,
                        Tokenizer
                      );
                  }

                  if (options.query != null) {
                      var Query = require(options.amdBase + 'compat/query');

                      options.dataAdapter = Utils.Decorate(
                        options.dataAdapter,
                        Query
                      );
                  }

                  if (options.initSelection != null) {
                      var InitSelection = require(options.amdBase + 'compat/initSelection');

                      options.dataAdapter = Utils.Decorate(
                        options.dataAdapter,
                        InitSelection
                      );
                  }
              }

              if (options.resultsAdapter == null) {
                  options.resultsAdapter = ResultsList;

                  if (options.ajax != null) {
                      options.resultsAdapter = Utils.Decorate(
                        options.resultsAdapter,
                        InfiniteScroll
                      );
                  }

                  if (options.placeholder != null) {
                      options.resultsAdapter = Utils.Decorate(
                        options.resultsAdapter,
                        HidePlaceholder
                      );
                  }

                  if (options.selectOnClose) {
                      options.resultsAdapter = Utils.Decorate(
                        options.resultsAdapter,
                        SelectOnClose
                      );
                  }
              }

              if (options.dropdownAdapter == null) {
                  if (options.multiple) {
                      options.dropdownAdapter = Dropdown;
                  } else {
                      var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);

                      options.dropdownAdapter = SearchableDropdown;
                  }

                  if (options.minimumResultsForSearch !== 0) {
                      options.dropdownAdapter = Utils.Decorate(
                        options.dropdownAdapter,
                        MinimumResultsForSearch
                      );
                  }

                  if (options.closeOnSelect) {
                      options.dropdownAdapter = Utils.Decorate(
                        options.dropdownAdapter,
                        CloseOnSelect
                      );
                  }

                  if (
                    options.dropdownCssClass != null ||
                    options.dropdownCss != null ||
                    options.adaptDropdownCssClass != null
                  ) {
                      var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');

                      options.dropdownAdapter = Utils.Decorate(
                        options.dropdownAdapter,
                        DropdownCSS
                      );
                  }

                  options.dropdownAdapter = Utils.Decorate(
                    options.dropdownAdapter,
                    AttachBody
                  );
              }

              if (options.selectionAdapter == null) {
                  if (options.multiple) {
                      options.selectionAdapter = MultipleSelection;
                  } else {
                      options.selectionAdapter = SingleSelection;
                  }

                  // Add the placeholder mixin if a placeholder was specified
                  if (options.placeholder != null) {
                      options.selectionAdapter = Utils.Decorate(
                        options.selectionAdapter,
                        Placeholder
                      );
                  }

                  if (options.allowClear) {
                      options.selectionAdapter = Utils.Decorate(
                        options.selectionAdapter,
                        AllowClear
                      );
                  }

                  if (options.multiple) {
                      options.selectionAdapter = Utils.Decorate(
                        options.selectionAdapter,
                        SelectionSearch
                      );
                  }

                  if (
                    options.containerCssClass != null ||
                    options.containerCss != null ||
                    options.adaptContainerCssClass != null
                  ) {
                      var ContainerCSS = require(options.amdBase + 'compat/containerCss');

                      options.selectionAdapter = Utils.Decorate(
                        options.selectionAdapter,
                        ContainerCSS
                      );
                  }

                  options.selectionAdapter = Utils.Decorate(
                    options.selectionAdapter,
                    EventRelay
                  );
              }

              if (typeof options.language === 'string') {
                  // Check if the language is specified with a region
                  if (options.language.indexOf('-') &gt; 0) {
                      // Extract the region information if it is included
                      var languageParts = options.language.split('-');
                      var baseLanguage = languageParts[0];

                      options.language = [options.language, baseLanguage];
                  } else {
                      options.language = [options.language];
                  }
              }

              if ($.isArray(options.language)) {
                  var languages = new Translation();
                  options.language.push('en');

                  var languageNames = options.language;

                  for (var l = 0; l &lt; languageNames.length; l++) {
                      var name = languageNames[l];
                      var language = {};

                      try {
                          // Try to load it with the original name
                          language = Translation.loadPath(name);
                      } catch (e) {
                          try {
                              // If we couldn't load it, check if it wasn't the full path
                              name = this.defaults.amdLanguageBase + name;
                              language = Translation.loadPath(name);
                          } catch (ex) {
                              // The translation could not be loaded at all. Sometimes this is
                              // because of a configuration problem, other times this can be
                              // because of how Select2 helps load all possible translation files.
                              if (options.debug &amp;&amp; window.console &amp;&amp; console.warn) {
                                  console.warn(
                                    'Select2: The language file for "' + name + '" could not be ' +
                                    'automatically loaded. A fallback will be used instead.'
                                  );
                              }

                              continue;
                          }
                      }

                      languages.extend(language);
                  }

                  options.translations = languages;
              } else {
                  var baseTranslation = Translation.loadPath(
                    this.defaults.amdLanguageBase + 'en'
                  );
                  var customTranslation = new Translation(options.language);

                  customTranslation.extend(baseTranslation);

                  options.translations = customTranslation;
              }

              return options;
          };

          Defaults.prototype.reset = function () {
              function stripDiacritics(text) {
                  // Used 'uni range + named function' from http://jsperf.com/diacritics/18
                  function match(a) {
                      return DIACRITICS[a] || a;
                  }

                  return text.replace(/[^\u0000-\u007E]/g, match);
              }

              function matcher(params, data) {
                  // Always return the object if there is nothing to compare
                  if ($.trim(params.term) === '') {
                      return data;
                  }

                  // Do a recursive check for options with children
                  if (data.children &amp;&amp; data.children.length &gt; 0) {
                      // Clone the data object if there are children
                      // This is required as we modify the object to remove any non-matches
                      var match = $.extend(true, {}, data);

                      // Check each child of the option
                      for (var c = data.children.length - 1; c &gt;= 0; c--) {
                          var child = data.children[c];

                          var matches = matcher(params, child);

                          // If there wasn't a match, remove the object in the array
                          if (matches == null) {
                              match.children.splice(c, 1);
                          }
                      }

                      // If any children matched, return the new object
                      if (match.children.length &gt; 0) {
                          return match;
                      }

                      // If there were no matching children, check just the plain object
                      return matcher(params, match);
                  }

                  var original = stripDiacritics(data.text).toUpperCase();
                  var term = stripDiacritics(params.term).toUpperCase();

                  // Check if the text contains the term
                  if (original.indexOf(term) &gt; -1) {
                      return data;
                  }

                  // If it doesn't contain the term, don't return anything
                  return null;
              }

              this.defaults = {
                  amdBase: './',
                  amdLanguageBase: './i18n/',
                  closeOnSelect: true,
                  debug: false,
                  dropdownAutoWidth: false,
                  escapeMarkup: Utils.escapeMarkup,
                  language: EnglishTranslation,
                  matcher: matcher,
                  minimumInputLength: 0,
                  maximumInputLength: 0,
                  maximumSelectionLength: 0,
                  minimumResultsForSearch: 0,
                  selectOnClose: false,
                  sorter: function (data) {
                      return data;
                  },
                  templateResult: function (result) {
                      return result.text;
                  },
                  templateSelection: function (selection) {
                      return selection.text;
                  },
                  theme: 'default',
                  width: 'resolve'
              };
          };

          Defaults.prototype.set = function (key, value) {
              var camelKey = $.camelCase(key);

              var data = {};
              data[camelKey] = value;

              var convertedData = Utils._convertData(data);

              $.extend(this.defaults, convertedData);
          };

          var defaults = new Defaults();

          return defaults;
      });

      S2.define('select2/options', [
        'require',
        'jquery',
        './defaults',
        './utils'
      ], function (require, $, Defaults, Utils) {
          function Options(options, $element) {
              this.options = options;

              if ($element != null) {
                  this.fromElement($element);
              }

              this.options = Defaults.apply(this.options);

              if ($element &amp;&amp; $element.is('input')) {
                  var InputCompat = require(this.get('amdBase') + 'compat/inputData');

                  this.options.dataAdapter = Utils.Decorate(
                    this.options.dataAdapter,
                    InputCompat
                  );
              }
          }

          Options.prototype.fromElement = function ($e) {
              var excludedData = ['select2'];

              if (this.options.multiple == null) {
                  this.options.multiple = $e.prop('multiple');
              }

              if (this.options.disabled == null) {
                  this.options.disabled = $e.prop('disabled');
              }

              if (this.options.language == null) {
                  if ($e.prop('lang')) {
                      this.options.language = $e.prop('lang').toLowerCase();
                  } else if ($e.closest('[lang]').prop('lang')) {
                      this.options.language = $e.closest('[lang]').prop('lang');
                  }
              }

              if (this.options.dir == null) {
                  if ($e.prop('dir')) {
                      this.options.dir = $e.prop('dir');
                  } else if ($e.closest('[dir]').prop('dir')) {
                      this.options.dir = $e.closest('[dir]').prop('dir');
                  } else {
                      this.options.dir = 'ltr';
                  }
              }

              $e.prop('disabled', this.options.disabled);
              $e.prop('multiple', this.options.multiple);

              if ($e.data('select2Tags')) {
                  if (this.options.debug &amp;&amp; window.console &amp;&amp; console.warn) {
                      console.warn(
                        'Select2: The `data-select2-tags` attribute has been changed to ' +
                        'use the `data-data` and `data-tags="true"` attributes and will be ' +
                        'removed in future versions of Select2.'
                      );
                  }

                  $e.data('data', $e.data('select2Tags'));
                  $e.data('tags', true);
              }

              if ($e.data('ajaxUrl')) {
                  if (this.options.debug &amp;&amp; window.console &amp;&amp; console.warn) {
                      console.warn(
                        'Select2: The `data-ajax-url` attribute has been changed to ' +
                        '`data-ajax--url` and support for the old attribute will be removed' +
                        ' in future versions of Select2.'
                      );
                  }

                  $e.attr('ajax--url', $e.data('ajaxUrl'));
                  $e.data('ajax--url', $e.data('ajaxUrl'));
              }

              var dataset = {};

              // Prefer the element's `dataset` attribute if it exists
              // jQuery 1.x does not correctly handle data attributes with multiple dashes
              if ($.fn.jquery &amp;&amp; $.fn.jquery.substr(0, 2) == '1.' &amp;&amp; $e[0].dataset) {
                  dataset = $.extend(true, {}, $e[0].dataset, $e.data());
              } else {
                  dataset = $e.data();
              }

              var data = $.extend(true, {}, dataset);

              data = Utils._convertData(data);

              for (var key in data) {
                  if ($.inArray(key, excludedData) &gt; -1) {
                      continue;
                  }

                  if ($.isPlainObject(this.options[key])) {
                      $.extend(this.options[key], data[key]);
                  } else {
                      this.options[key] = data[key];
                  }
              }

              return this;
          };

          Options.prototype.get = function (key) {
              return this.options[key];
          };

          Options.prototype.set = function (key, val) {
              this.options[key] = val;
          };

          return Options;
      });

      S2.define('select2/core', [
        'jquery',
        './options',
        './utils',
        './keys'
      ], function ($, Options, Utils, KEYS) {
          var Select2 = function ($element, options) {
              if ($element.data('select2') != null) {
                  $element.data('select2').destroy();
              }

              this.$element = $element;

              this.id = this._generateId($element);

              options = options || {};

              this.options = new Options(options, $element);

              Select2.__super__.constructor.call(this);

              // Set up the tabindex

              var tabindex = $element.attr('tabindex') || 0;
              $element.data('old-tabindex', tabindex);
              $element.attr('tabindex', '-1');

              // Set up containers and adapters

              var DataAdapter = this.options.get('dataAdapter');
              this.dataAdapter = new DataAdapter($element, this.options);

              var $container = this.render();

              this._placeContainer($container);

              var SelectionAdapter = this.options.get('selectionAdapter');
              this.selection = new SelectionAdapter($element, this.options);
              this.$selection = this.selection.render();

              this.selection.position(this.$selection, $container);

              var DropdownAdapter = this.options.get('dropdownAdapter');
              this.dropdown = new DropdownAdapter($element, this.options);
              this.$dropdown = this.dropdown.render();

              this.dropdown.position(this.$dropdown, $container);

              var ResultsAdapter = this.options.get('resultsAdapter');
              this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
              this.$results = this.results.render();

              this.results.position(this.$results, this.$dropdown);

              // Bind events

              var self = this;

              // Bind the container to all of the adapters
              this._bindAdapters();

              // Register any DOM event handlers
              this._registerDomEvents();

              // Register any internal event handlers
              this._registerDataEvents();
              this._registerSelectionEvents();
              this._registerDropdownEvents();
              this._registerResultsEvents();
              this._registerEvents();

              // Set the initial state
              this.dataAdapter.current(function (initialData) {
                  self.trigger('selection:update', {
                      data: initialData
                  });
              });

              // Hide the original select
              $element.addClass('select2-hidden-accessible');
              $element.attr('aria-hidden', 'true');

              // Synchronize any monitored attributes
              this._syncAttributes();

              $element.data('select2', this);
          };

          Utils.Extend(Select2, Utils.Observable);

          Select2.prototype._generateId = function ($element) {
              var id = '';

              if ($element.attr('id') != null) {
                  id = $element.attr('id');
              } else if ($element.attr('name') != null) {
                  id = $element.attr('name') + '-' + Utils.generateChars(2);
              } else {
                  id = Utils.generateChars(4);
              }

              id = id.replace(/(:|\.|\[|\]|,)/g, '');
              id = 'select2-' + id;

              return id;
          };

          Select2.prototype._placeContainer = function ($container) {
              $container.insertAfter(this.$element);

              var width = this._resolveWidth(this.$element, this.options.get('width'));

              if (width != null) {
                  $container.css('width', width);
              }
          };

          Select2.prototype._resolveWidth = function ($element, method) {
              var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;

              if (method == 'resolve') {
                  var styleWidth = this._resolveWidth($element, 'style');

                  if (styleWidth != null) {
                      return styleWidth;
                  }

                  return this._resolveWidth($element, 'element');
              }

              if (method == 'element') {
                  var elementWidth = $element.outerWidth(false);

                  if (elementWidth &lt;= 0) {
                      return 'auto';
                  }

                  return elementWidth + 'px';
              }

              if (method == 'style') {
                  var style = $element.attr('style');

                  if (typeof (style) !== 'string') {
                      return null;
                  }

                  var attrs = style.split(';');

                  for (var i = 0, l = attrs.length; i &lt; l; i = i + 1) {
                      var attr = attrs[i].replace(/\s/g, '');
                      var matches = attr.match(WIDTH);

                      if (matches !== null &amp;&amp; matches.length &gt;= 1) {
                          return matches[1];
                      }
                  }

                  return null;
              }

              return method;
          };

          Select2.prototype._bindAdapters = function () {
              this.dataAdapter.bind(this, this.$container);
              this.selection.bind(this, this.$container);

              this.dropdown.bind(this, this.$container);
              this.results.bind(this, this.$container);
          };

          Select2.prototype._registerDomEvents = function () {
              var self = this;

              this.$element.on('change.select2', function () {
                  self.dataAdapter.current(function (data) {
                      self.trigger('selection:update', {
                          data: data
                      });
                  });
              });

              this.$element.on('focus.select2', function (evt) {
                  self.trigger('focus', evt);
              });

              this._syncA = Utils.bind(this._syncAttributes, this);
              this._syncS = Utils.bind(this._syncSubtree, this);

              if (this.$element[0].attachEvent) {
                  this.$element[0].attachEvent('onpropertychange', this._syncA);
              }

              var observer = window.MutationObserver ||
                window.WebKitMutationObserver ||
                window.MozMutationObserver
              ;

              if (observer != null) {
                  this._observer = new observer(function (mutations) {
                      $.each(mutations, self._syncA);
                      $.each(mutations, self._syncS);
                  });
                  this._observer.observe(this.$element[0], {
                      attributes: true,
                      childList: true,
                      subtree: false
                  });
              } else if (this.$element[0].addEventListener) {
                  this.$element[0].addEventListener(
                    'DOMAttrModified',
                    self._syncA,
                    false
                  );
                  this.$element[0].addEventListener(
                    'DOMNodeInserted',
                    self._syncS,
                    false
                  );
                  this.$element[0].addEventListener(
                    'DOMNodeRemoved',
                    self._syncS,
                    false
                  );
              }
          };

          Select2.prototype._registerDataEvents = function () {
              var self = this;

              this.dataAdapter.on('*', function (name, params) {
                  self.trigger(name, params);
              });
          };

          Select2.prototype._registerSelectionEvents = function () {
              var self = this;
              var nonRelayEvents = ['toggle', 'focus'];

              this.selection.on('toggle', function () {
                  self.toggleDropdown();
              });

              this.selection.on('focus', function (params) {
                  self.focus(params);
              });

              this.selection.on('*', function (name, params) {
                  if ($.inArray(name, nonRelayEvents) !== -1) {
                      return;
                  }

                  self.trigger(name, params);
              });
          };

          Select2.prototype._registerDropdownEvents = function () {
              var self = this;

              this.dropdown.on('*', function (name, params) {
                  self.trigger(name, params);
              });
          };

          Select2.prototype._registerResultsEvents = function () {
              var self = this;

              this.results.on('*', function (name, params) {
                  self.trigger(name, params);
              });
          };

          Select2.prototype._registerEvents = function () {
              var self = this;

              this.on('open', function () {
                  self.$container.addClass('select2-container--open');
              });

              this.on('close', function () {
                  self.$container.removeClass('select2-container--open');
              });

              this.on('enable', function () {
                  self.$container.removeClass('select2-container--disabled');
              });

              this.on('disable', function () {
                  self.$container.addClass('select2-container--disabled');
              });

              this.on('blur', function () {
                  self.$container.removeClass('select2-container--focus');
              });

              this.on('query', function (params) {
                  if (!self.isOpen()) {
                      self.trigger('open', {});
                  }

                  this.dataAdapter.query(params, function (data) {
                      self.trigger('results:all', {
                          data: data,
                          query: params
                      });
                  });
              });

              this.on('query:append', function (params) {
                  this.dataAdapter.query(params, function (data) {
                      self.trigger('results:append', {
                          data: data,
                          query: params
                      });
                  });
              });

              this.on('keypress', function (evt) {
                  var key = evt.which;

                  if (self.isOpen()) {
                      if (key === KEYS.ESC || key === KEYS.TAB ||
                          (key === KEYS.UP &amp;&amp; evt.altKey)) {
                          self.close();

                          evt.preventDefault();
                      } else if (key === KEYS.ENTER) {
                          self.trigger('results:select', {});

                          evt.preventDefault();
                      } else if ((key === KEYS.SPACE &amp;&amp; evt.ctrlKey)) {
                          self.trigger('results:toggle', {});

                          evt.preventDefault();
                      } else if (key === KEYS.UP) {
                          self.trigger('results:previous', {});

                          evt.preventDefault();
                      } else if (key === KEYS.DOWN) {
                          self.trigger('results:next', {});

                          evt.preventDefault();
                      }
                  } else {
                      if (key === KEYS.ENTER || key === KEYS.SPACE ||
                          (key === KEYS.DOWN &amp;&amp; evt.altKey)) {
                          self.open();

                          evt.preventDefault();
                      }
                  }
              });
          };

          Select2.prototype._syncAttributes = function () {
              this.options.set('disabled', this.$element.prop('disabled'));

              if (this.options.get('disabled')) {
                  if (this.isOpen()) {
                      this.close();
                  }

                  this.trigger('disable', {});
              } else {
                  this.trigger('enable', {});
              }
          };

          Select2.prototype._syncSubtree = function (evt, mutations) {
              var changed = false;
              var self = this;

              // Ignore any mutation events raised for elements that aren't options or
              // optgroups. This handles the case when the select element is destroyed
              if (
                evt &amp;&amp; evt.target &amp;&amp; (
                  evt.target.nodeName !== 'OPTION' &amp;&amp; evt.target.nodeName !== 'OPTGROUP'
                )
              ) {
                  return;
              }

              if (!mutations) {
                  // If mutation events aren't supported, then we can only assume that the
                  // change affected the selections
                  changed = true;
              } else if (mutations.addedNodes &amp;&amp; mutations.addedNodes.length &gt; 0) {
                  for (var n = 0; n &lt; mutations.addedNodes.length; n++) {
                      var node = mutations.addedNodes[n];

                      if (node.selected) {
                          changed = true;
                      }
                  }
              } else if (mutations.removedNodes &amp;&amp; mutations.removedNodes.length &gt; 0) {
                  changed = true;
              }

              // Only re-pull the data if we think there is a change
              if (changed) {
                  this.dataAdapter.current(function (currentData) {
                      self.trigger('selection:update', {
                          data: currentData
                      });
                  });
              }
          };

          /**
           * Override the trigger method to automatically trigger pre-events when
           * there are events that can be prevented.
           */
          Select2.prototype.trigger = function (name, args) {
              var actualTrigger = Select2.__super__.trigger;
              var preTriggerMap = {
                  'open': 'opening',
                  'close': 'closing',
                  'select': 'selecting',
                  'unselect': 'unselecting'
              };

              if (args === undefined) {
                  args = {};
              }

              if (name in preTriggerMap) {
                  var preTriggerName = preTriggerMap[name];
                  var preTriggerArgs = {
                      prevented: false,
                      name: name,
                      args: args
                  };

                  actualTrigger.call(this, preTriggerName, preTriggerArgs);

                  if (preTriggerArgs.prevented) {
                      args.prevented = true;

                      return;
                  }
              }

              actualTrigger.call(this, name, args);
          };

          Select2.prototype.toggleDropdown = function () {
              if (this.options.get('disabled')) {
                  return;
              }

              if (this.isOpen()) {
                  this.close();
              } else {
                  this.open();
              }
          };

          Select2.prototype.open = function () {
              if (this.isOpen()) {
                  return;
              }

              this.trigger('query', {});
          };

          Select2.prototype.close = function () {
              if (!this.isOpen()) {
                  return;
              }

              this.trigger('close', {});
          };

          Select2.prototype.isOpen = function () {
              return this.$container.hasClass('select2-container--open');
          };

          Select2.prototype.hasFocus = function () {
              return this.$container.hasClass('select2-container--focus');
          };

          Select2.prototype.focus = function (data) {
              // No need to re-trigger focus events if we are already focused
              if (this.hasFocus()) {
                  return;
              }

              this.$container.addClass('select2-container--focus');
              this.trigger('focus', {});
          };

          Select2.prototype.enable = function (args) {
              if (this.options.get('debug') &amp;&amp; window.console &amp;&amp; console.warn) {
                  console.warn(
                    'Select2: The `select2("enable")` method has been deprecated and will' +
                    ' be removed in later Select2 versions. Use $element.prop("disabled")' +
                    ' instead.'
                  );
              }

              if (args == null || args.length === 0) {
                  args = [true];
              }

              var disabled = !args[0];

              this.$element.prop('disabled', disabled);
          };

          Select2.prototype.data = function () {
              if (this.options.get('debug') &amp;&amp;
                  arguments.length &gt; 0 &amp;&amp; window.console &amp;&amp; console.warn) {
                  console.warn(
                    'Select2: Data can no longer be set using `select2("data")`. You ' +
                    'should consider setting the value instead using `$element.val()`.'
                  );
              }

              var data = [];

              this.dataAdapter.current(function (currentData) {
                  data = currentData;
              });

              return data;
          };

          Select2.prototype.val = function (args) {
              if (this.options.get('debug') &amp;&amp; window.console &amp;&amp; console.warn) {
                  console.warn(
                    'Select2: The `select2("val")` method has been deprecated and will be' +
                    ' removed in later Select2 versions. Use $element.val() instead.'
                  );
              }

              if (args == null || args.length === 0) {
                  return this.$element.val();
              }

              var newVal = args[0];

              if ($.isArray(newVal)) {
                  newVal = $.map(newVal, function (obj) {
                      return obj.toString();
                  });
              }

              this.$element.val(newVal).trigger('change');
          };

          Select2.prototype.destroy = function () {
              this.$container.remove();

              if (this.$element[0].detachEvent) {
                  this.$element[0].detachEvent('onpropertychange', this._syncA);
              }

              if (this._observer != null) {
                  this._observer.disconnect();
                  this._observer = null;
              } else if (this.$element[0].removeEventListener) {
                  this.$element[0]
                    .removeEventListener('DOMAttrModified', this._syncA, false);
                  this.$element[0]
                    .removeEventListener('DOMNodeInserted', this._syncS, false);
                  this.$element[0]
                    .removeEventListener('DOMNodeRemoved', this._syncS, false);
              }

              this._syncA = null;
              this._syncS = null;

              this.$element.off('.select2');
              this.$element.attr('tabindex', this.$element.data('old-tabindex'));

              this.$element.removeClass('select2-hidden-accessible');
              this.$element.attr('aria-hidden', 'false');
              this.$element.removeData('select2');

              this.dataAdapter.destroy();
              this.selection.destroy();
              this.dropdown.destroy();
              this.results.destroy();

              this.dataAdapter = null;
              this.selection = null;
              this.dropdown = null;
              this.results = null;
          };

          Select2.prototype.render = function () {
              var $container = $(
                '&lt;span class="select2 select2-container"&gt;' +
                  '&lt;span class="selection"&gt;&lt;/span&gt;' +
                  '&lt;span class="dropdown-wrapper" aria-hidden="true"&gt;&lt;/span&gt;' +
                '&lt;/span&gt;'
              );

              $container.attr('dir', this.options.get('dir'));

              this.$container = $container;

              this.$container.addClass('select2-container--' + this.options.get('theme'));

              $container.data('element', this.$element);

              return $container;
          };

          return Select2;
      });

      S2.define('select2/compat/utils', [
        'jquery'
      ], function ($) {
          function syncCssClasses($dest, $src, adapter) {
              var classes, replacements = [], adapted;

              classes = $.trim($dest.attr('class'));

              if (classes) {
                  classes = '' + classes; // for IE which returns object

                  $(classes.split(/\s+/)).each(function () {
                      // Save all Select2 classes
                      if (this.indexOf('select2-') === 0) {
                          replacements.push(this);
                      }
                  });
              }

              classes = $.trim($src.attr('class'));

              if (classes) {
                  classes = '' + classes; // for IE which returns object

                  $(classes.split(/\s+/)).each(function () {
                      // Only adapt non-Select2 classes
                      if (this.indexOf('select2-') !== 0) {
                          adapted = adapter(this);

                          if (adapted != null) {
                              replacements.push(adapted);
                          }
                      }
                  });
              }

              $dest.attr('class', replacements.join(' '));
          }

          return {
              syncCssClasses: syncCssClasses
          };
      });

      S2.define('select2/compat/containerCss', [
        'jquery',
        './utils'
      ], function ($, CompatUtils) {
          // No-op CSS adapter that discards all classes by default
          function _containerAdapter(clazz) {
              return null;
          }

          function ContainerCSS() { }

          ContainerCSS.prototype.render = function (decorated) {
              var $container = decorated.call(this);

              var containerCssClass = this.options.get('containerCssClass') || '';

              if ($.isFunction(containerCssClass)) {
                  containerCssClass = containerCssClass(this.$element);
              }

              var containerCssAdapter = this.options.get('adaptContainerCssClass');
              containerCssAdapter = containerCssAdapter || _containerAdapter;

              if (containerCssClass.indexOf(':all:') !== -1) {
                  containerCssClass = containerCssClass.replace(':all:', '');

                  var _cssAdapter = containerCssAdapter;

                  containerCssAdapter = function (clazz) {
                      var adapted = _cssAdapter(clazz);

                      if (adapted != null) {
                          // Append the old one along with the adapted one
                          return adapted + ' ' + clazz;
                      }

                      return clazz;
                  };
              }

              var containerCss = this.options.get('containerCss') || {};

              if ($.isFunction(containerCss)) {
                  containerCss = containerCss(this.$element);
              }

              CompatUtils.syncCssClasses($container, this.$element, containerCssAdapter);

              $container.css(containerCss);
              $container.addClass(containerCssClass);

              return $container;
          };

          return ContainerCSS;
      });

      S2.define('select2/compat/dropdownCss', [
        'jquery',
        './utils'
      ], function ($, CompatUtils) {
          // No-op CSS adapter that discards all classes by default
          function _dropdownAdapter(clazz) {
              return null;
          }

          function DropdownCSS() { }

          DropdownCSS.prototype.render = function (decorated) {
              var $dropdown = decorated.call(this);

              var dropdownCssClass = this.options.get('dropdownCssClass') || '';

              if ($.isFunction(dropdownCssClass)) {
                  dropdownCssClass = dropdownCssClass(this.$element);
              }

              var dropdownCssAdapter = this.options.get('adaptDropdownCssClass');
              dropdownCssAdapter = dropdownCssAdapter || _dropdownAdapter;

              if (dropdownCssClass.indexOf(':all:') !== -1) {
                  dropdownCssClass = dropdownCssClass.replace(':all:', '');

                  var _cssAdapter = dropdownCssAdapter;

                  dropdownCssAdapter = function (clazz) {
                      var adapted = _cssAdapter(clazz);

                      if (adapted != null) {
                          // Append the old one along with the adapted one
                          return adapted + ' ' + clazz;
                      }

                      return clazz;
                  };
              }

              var dropdownCss = this.options.get('dropdownCss') || {};

              if ($.isFunction(dropdownCss)) {
                  dropdownCss = dropdownCss(this.$element);
              }

              CompatUtils.syncCssClasses($dropdown, this.$element, dropdownCssAdapter);

              $dropdown.css(dropdownCss);
              $dropdown.addClass(dropdownCssClass);

              return $dropdown;
          };

          return DropdownCSS;
      });

      S2.define('select2/compat/initSelection', [
        'jquery'
      ], function ($) {
          function InitSelection(decorated, $element, options) {
              if (options.get('debug') &amp;&amp; window.console &amp;&amp; console.warn) {
                  console.warn(
                    'Select2: The `initSelection` option has been deprecated in favor' +
                    ' of a custom data adapter that overrides the `current` method. ' +
                    'This method is now called multiple times instead of a single ' +
                    'time when the instance is initialized. Support will be removed ' +
                    'for the `initSelection` option in future versions of Select2'
                  );
              }

              this.initSelection = options.get('initSelection');
              this._isInitialized = false;

              decorated.call(this, $element, options);
          }

          InitSelection.prototype.current = function (decorated, callback) {
              var self = this;

              if (this._isInitialized) {
                  decorated.call(this, callback);

                  return;
              }

              this.initSelection.call(null, this.$element, function (data) {
                  self._isInitialized = true;

                  if (!$.isArray(data)) {
                      data = [data];
                  }

                  callback(data);
              });
          };

          return InitSelection;
      });

      S2.define('select2/compat/inputData', [
        'jquery'
      ], function ($) {
          function InputData(decorated, $element, options) {
              this._currentData = [];
              this._valueSeparator = options.get('valueSeparator') || ',';

              if ($element.prop('type') === 'hidden') {
                  if (options.get('debug') &amp;&amp; console &amp;&amp; console.warn) {
                      console.warn(
                        'Select2: Using a hidden input with Select2 is no longer ' +
                        'supported and may stop working in the future. It is recommended ' +
                        'to use a `&lt;select&gt;` element instead.'
                      );
                  }
              }

              decorated.call(this, $element, options);
          }

          InputData.prototype.current = function (_, callback) {
              function getSelected(data, selectedIds) {
                  var selected = [];

                  if (data.selected || $.inArray(data.id, selectedIds) !== -1) {
                      data.selected = true;
                      selected.push(data);
                  } else {
                      data.selected = false;
                  }

                  if (data.children) {
                      selected.push.apply(selected, getSelected(data.children, selectedIds));
                  }

                  return selected;
              }

              var selected = [];

              for (var d = 0; d &lt; this._currentData.length; d++) {
                  var data = this._currentData[d];

                  selected.push.apply(
                    selected,
                    getSelected(
                      data,
                      this.$element.val().split(
                        this._valueSeparator
                      )
                    )
                  );
              }

              callback(selected);
          };

          InputData.prototype.select = function (_, data) {
              if (!this.options.get('multiple')) {
                  this.current(function (allData) {
                      $.map(allData, function (data) {
                          data.selected = false;
                      });
                  });

                  this.$element.val(data.id);
                  this.$element.trigger('change');
              } else {
                  var value = this.$element.val();
                  value += this._valueSeparator + data.id;

                  this.$element.val(value);
                  this.$element.trigger('change');
              }
          };

          InputData.prototype.unselect = function (_, data) {
              var self = this;

              data.selected = false;

              this.current(function (allData) {
                  var values = [];

                  for (var d = 0; d &lt; allData.length; d++) {
                      var item = allData[d];

                      if (data.id == item.id) {
                          continue;
                      }

                      values.push(item.id);
                  }

                  self.$element.val(values.join(self._valueSeparator));
                  self.$element.trigger('change');
              });
          };

          InputData.prototype.query = function (_, params, callback) {
              var results = [];

              for (var d = 0; d &lt; this._currentData.length; d++) {
                  var data = this._currentData[d];

                  var matches = this.matches(params, data);

                  if (matches !== null) {
                      results.push(matches);
                  }
              }

              callback({
                  results: results
              });
          };

          InputData.prototype.addOptions = function (_, $options) {
              var options = $.map($options, function ($option) {
                  return $.data($option[0], 'data');
              });

              this._currentData.push.apply(this._currentData, options);
          };

          return InputData;
      });

      S2.define('select2/compat/matcher', [
        'jquery'
      ], function ($) {
          function oldMatcher(matcher) {
              function wrappedMatcher(params, data) {
                  var match = $.extend(true, {}, data);

                  if (params.term == null || $.trim(params.term) === '') {
                      return match;
                  }

                  if (data.children) {
                      for (var c = data.children.length - 1; c &gt;= 0; c--) {
                          var child = data.children[c];

                          // Check if the child object matches
                          // The old matcher returned a boolean true or false
                          var doesMatch = matcher(params.term, child.text, child);

                          // If the child didn't match, pop it off
                          if (!doesMatch) {
                              match.children.splice(c, 1);
                          }
                      }

                      if (match.children.length &gt; 0) {
                          return match;
                      }
                  }

                  if (matcher(params.term, data.text, data)) {
                      return match;
                  }

                  return null;
              }

              return wrappedMatcher;
          }

          return oldMatcher;
      });

      S2.define('select2/compat/query', [

      ], function () {
          function Query(decorated, $element, options) {
              if (options.get('debug') &amp;&amp; window.console &amp;&amp; console.warn) {
                  console.warn(
                    'Select2: The `query` option has been deprecated in favor of a ' +
                    'custom data adapter that overrides the `query` method. Support ' +
                    'will be removed for the `query` option in future versions of ' +
                    'Select2.'
                  );
              }

              decorated.call(this, $element, options);
          }

          Query.prototype.query = function (_, params, callback) {
              params.callback = callback;

              var query = this.options.get('query');

              query.call(null, params);
          };

          return Query;
      });

      S2.define('select2/dropdown/attachContainer', [

      ], function () {
          function AttachContainer(decorated, $element, options) {
              decorated.call(this, $element, options);
          }

          AttachContainer.prototype.position =
            function (decorated, $dropdown, $container) {
                var $dropdownContainer = $container.find('.dropdown-wrapper');
                $dropdownContainer.append($dropdown);

                $dropdown.addClass('select2-dropdown--below');
                $container.addClass('select2-container--below');
            };

          return AttachContainer;
      });

      S2.define('select2/dropdown/stopPropagation', [

      ], function () {
          function StopPropagation() { }

          StopPropagation.prototype.bind = function (decorated, container, $container) {
              decorated.call(this, container, $container);

              var stoppedEvents = [
              'blur',
              'change',
              'click',
              'dblclick',
              'focus',
              'focusin',
              'focusout',
              'input',
              'keydown',
              'keyup',
              'keypress',
              'mousedown',
              'mouseenter',
              'mouseleave',
              'mousemove',
              'mouseover',
              'mouseup',
              'search',
              'touchend',
              'touchstart'
              ];

              this.$dropdown.on(stoppedEvents.join(' '), function (evt) {
                  evt.stopPropagation();
              });
          };

          return StopPropagation;
      });

      S2.define('select2/selection/stopPropagation', [

      ], function () {
          function StopPropagation() { }

          StopPropagation.prototype.bind = function (decorated, container, $container) {
              decorated.call(this, container, $container);

              var stoppedEvents = [
                'blur',
                'change',
                'click',
                'dblclick',
                'focus',
                'focusin',
                'focusout',
                'input',
                'keydown',
                'keyup',
                'keypress',
                'mousedown',
                'mouseenter',
                'mouseleave',
                'mousemove',
                'mouseover',
                'mouseup',
                'search',
                'touchend',
                'touchstart'
              ];

              this.$selection.on(stoppedEvents.join(' '), function (evt) {
                  evt.stopPropagation();
              });
          };

          return StopPropagation;
      });

      /*!
       * jQuery Mousewheel 3.1.13
       *
       * Copyright jQuery Foundation and other contributors
       * Released under the MIT license
       * http://jquery.org/license
       */

      (function (factory) {
          if (typeof S2.define === 'function' &amp;&amp; S2.define.amd) {
              // AMD. Register as an anonymous module.
              S2.define('jquery-mousewheel', ['jquery'], factory);
          } else if (typeof exports === 'object') {
              // Node/CommonJS style for Browserify
              module.exports = factory;
          } else {
              // Browser globals
              factory(jQuery);
          }
      }(function ($) {

          var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
              toBind = ('onwheel' in document || document.documentMode &gt;= 9) ?
                          ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
              slice = Array.prototype.slice,
              nullLowestDeltaTimeout, lowestDelta;

          if ($.event.fixHooks) {
              for (var i = toFix.length; i;) {
                  $.event.fixHooks[toFix[--i]] = $.event.mouseHooks;
              }
          }

          var special = $.event.special.mousewheel = {
              version: '3.1.12',

              setup: function () {
                  if (this.addEventListener) {
                      for (var i = toBind.length; i;) {
                          this.addEventListener(toBind[--i], handler, false);
                      }
                  } else {
                      this.onmousewheel = handler;
                  }
                  // Store the line height and page height for this particular element
                  $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
                  $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
              },

              teardown: function () {
                  if (this.removeEventListener) {
                      for (var i = toBind.length; i;) {
                          this.removeEventListener(toBind[--i], handler, false);
                      }
                  } else {
                      this.onmousewheel = null;
                  }
                  // Clean up the data we added to the element
                  $.removeData(this, 'mousewheel-line-height');
                  $.removeData(this, 'mousewheel-page-height');
              },

              getLineHeight: function (elem) {
                  var $elem = $(elem),
                      $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
                  if (!$parent.length) {
                      $parent = $('body');
                  }
                  return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
              },

              getPageHeight: function (elem) {
                  return $(elem).height();
              },

              settings: {
                  adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
                  normalizeOffset: true  // calls getBoundingClientRect for each event
              }
          };

          $.fn.extend({
              mousewheel: function (fn) {
                  return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
              },

              unmousewheel: function (fn) {
                  return this.unbind('mousewheel', fn);
              }
          });


          function handler(event) {
              var orgEvent = event || window.event,
                  args = slice.call(arguments, 1),
                  delta = 0,
                  deltaX = 0,
                  deltaY = 0,
                  absDelta = 0,
                  offsetX = 0,
                  offsetY = 0;
              event = $.event.fix(orgEvent);
              event.type = 'mousewheel';

              // Old school scrollwheel delta
              if ('detail' in orgEvent) { deltaY = orgEvent.detail * -1; }
              if ('wheelDelta' in orgEvent) { deltaY = orgEvent.wheelDelta; }
              if ('wheelDeltaY' in orgEvent) { deltaY = orgEvent.wheelDeltaY; }
              if ('wheelDeltaX' in orgEvent) { deltaX = orgEvent.wheelDeltaX * -1; }

              // Firefox &lt; 17 horizontal scrolling related to DOMMouseScroll event
              if ('axis' in orgEvent &amp;&amp; orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {
                  deltaX = deltaY * -1;
                  deltaY = 0;
              }

              // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
              delta = deltaY === 0 ? deltaX : deltaY;

              // New school wheel delta (wheel event)
              if ('deltaY' in orgEvent) {
                  deltaY = orgEvent.deltaY * -1;
                  delta = deltaY;
              }
              if ('deltaX' in orgEvent) {
                  deltaX = orgEvent.deltaX;
                  if (deltaY === 0) { delta = deltaX * -1; }
              }

              // No change actually happened, no reason to go any further
              if (deltaY === 0 &amp;&amp; deltaX === 0) { return; }

              // Need to convert lines and pages to pixels if we aren't already in pixels
              // There are three delta modes:
              //   * deltaMode 0 is by pixels, nothing to do
              //   * deltaMode 1 is by lines
              //   * deltaMode 2 is by pages
              if (orgEvent.deltaMode === 1) {
                  var lineHeight = $.data(this, 'mousewheel-line-height');
                  delta *= lineHeight;
                  deltaY *= lineHeight;
                  deltaX *= lineHeight;
              } else if (orgEvent.deltaMode === 2) {
                  var pageHeight = $.data(this, 'mousewheel-page-height');
                  delta *= pageHeight;
                  deltaY *= pageHeight;
                  deltaX *= pageHeight;
              }

              // Store lowest absolute delta to normalize the delta values
              absDelta = Math.max(Math.abs(deltaY), Math.abs(deltaX));

              if (!lowestDelta || absDelta &lt; lowestDelta) {
                  lowestDelta = absDelta;

                  // Adjust older deltas if necessary
                  if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
                      lowestDelta /= 40;
                  }
              }

              // Adjust older deltas if necessary
              if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
                  // Divide all the things by 40!
                  delta /= 40;
                  deltaX /= 40;
                  deltaY /= 40;
              }

              // Get a whole, normalized value for the deltas
              delta = Math[delta &gt;= 1 ? 'floor' : 'ceil'](delta / lowestDelta);
              deltaX = Math[deltaX &gt;= 1 ? 'floor' : 'ceil'](deltaX / lowestDelta);
              deltaY = Math[deltaY &gt;= 1 ? 'floor' : 'ceil'](deltaY / lowestDelta);

              // Normalise offsetX and offsetY properties
              if (special.settings.normalizeOffset &amp;&amp; this.getBoundingClientRect) {
                  var boundingRect = this.getBoundingClientRect();
                  offsetX = event.clientX - boundingRect.left;
                  offsetY = event.clientY - boundingRect.top;
              }

              // Add information to the event object
              event.deltaX = deltaX;
              event.deltaY = deltaY;
              event.deltaFactor = lowestDelta;
              event.offsetX = offsetX;
              event.offsetY = offsetY;
              // Go ahead and set deltaMode to 0 since we converted to pixels
              // Although this is a little odd since we overwrite the deltaX/Y
              // properties with normalized deltas.
              event.deltaMode = 0;

              // Add event and delta to the front of the arguments
              args.unshift(event, delta, deltaX, deltaY);

              // Clearout lowestDelta after sometime to better
              // handle multiple device types that give different
              // a different lowestDelta
              // Ex: trackpad = 3 and mouse wheel = 120
              if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
              nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

              return ($.event.dispatch || $.event.handle).apply(this, args);
          }

          function nullLowestDelta() {
              lowestDelta = null;
          }

          function shouldAdjustOldDeltas(orgEvent, absDelta) {
              // If this is an older event and the delta is divisable by 120,
              // then we are assuming that the browser is treating this as an
              // older mouse wheel event and that we should divide the deltas
              // by 40 to try and get a more usable deltaFactor.
              // Side note, this actually impacts the reported scroll distance
              // in older browsers and can cause scrolling to be slower than native.
              // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
              return special.settings.adjustOldDeltas &amp;&amp; orgEvent.type === 'mousewheel' &amp;&amp; absDelta % 120 === 0;
          }

      }));

      S2.define('jquery.select2', [
        'jquery',
        'jquery-mousewheel',

        './select2/core',
        './select2/defaults'
      ], function ($, _, Select2, Defaults) {
          if ($.fn.select2 == null) {
              // All methods that should return the element
              var thisMethods = ['open', 'close', 'destroy'];

              $.fn.select2 = function (options) {
                  options = options || {};

                  if (typeof options === 'object') {
                      this.each(function () {
                          var instanceOptions = $.extend(true, {}, options);

                          var instance = new Select2($(this), instanceOptions);
                      });

                      return this;
                  } else if (typeof options === 'string') {
                      var ret;
                      var args = Array.prototype.slice.call(arguments, 1);

                      this.each(function () {
                          var instance = $(this).data('select2');

                          if (instance == null &amp;&amp; window.console &amp;&amp; console.error) {
                              console.error(
                                'The select2(\'' + options + '\') method was called on an ' +
                                'element that is not using Select2.'
                              );
                          }

                          ret = instance[options].apply(instance, args);
                      });

                      // Check if we should be returning `this`
                      if ($.inArray(options, thisMethods) &gt; -1) {
                          return this;
                      }

                      return ret;
                  } else {
                      throw new Error('Invalid arguments for Select2: ' + options);
                  }
              };
          }

          if ($.fn.select2.defaults == null) {
              $.fn.select2.defaults = Defaults;
          }

          return Select2;
      });

      // Return the AMD loader configuration so it can be used outside of this file
      return {
          define: S2.define,
          require: S2.require
      };
  }());

    // Autoload the jQuery bindings
    // We know that all of the modules exist above this, so we're safe
    var select2 = S2.require('jquery.select2');

    // Hold the AMD module references on the jQuery function that was just loaded
    // This allows Select2 to use the internal loader outside of this file, such
    // as in the language files.
    jQuery.fn.select2.amd = S2;

    // Return the Select2 instance for anyone who is importing it.
    return select2;
}));
</contentText>
  </asset>
  <asset name="lib/select2.min.js" mimeType="text/javascript">
    <contentText>/*
 * Copyright 2015-2016 Mohawk College of Applied Arts and Technology
 * 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you 
 * may not use this file except in compliance with the License. You may 
 * obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations under 
 * the License.
 * 
 * User: justi
 * Date: 2016-7-17
 */
(function(n){typeof define=="function"&amp;&amp;define.amd?define(["jquery"],n):typeof exports=="object"?n(require("jquery")):n(jQuery)})(function(n){var t=function(){var t;n&amp;&amp;n.fn&amp;&amp;n.fn.select2&amp;&amp;n.fn.select2.amd&amp;&amp;(t=n.fn.select2.amd),function(){if(!t||!t.requirejs){t?i=t:t={};
/**
               * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
               * Available via the MIT or new BSD license.
               * see: http://github.com/jrburke/almond for details
               */
var n,i,r;(function(t){function e(n,t){return k.call(n,t)}function l(n,t){var o,s,r,u,h,y,c,b,i,l,w,e=t&amp;&amp;t.split("/"),a=f.map,v=a&amp;&amp;a["*"]||{};if(n&amp;&amp;n.charAt(0)===".")if(t){for(n=n.split("/"),h=n.length-1,f.nodeIdCompat&amp;&amp;p.test(n[h])&amp;&amp;(n[h]=n[h].replace(p,"")),n=e.slice(0,e.length-1).concat(n),i=0;i&lt;n.length;i+=1)if(w=n[i],w===".")n.splice(i,1),i-=1;else if(w==="..")if(i===1&amp;&amp;(n[2]===".."||n[0]===".."))break;else i&gt;0&amp;&amp;(n.splice(i-1,2),i-=2);n=n.join("/")}else n.indexOf("./")===0&amp;&amp;(n=n.substring(2));if((e||v)&amp;&amp;a){for(o=n.split("/"),i=o.length;i&gt;0;i-=1){if(s=o.slice(0,i).join("/"),e)for(l=e.length;l&gt;0;l-=1)if(r=a[e.slice(0,l).join("/")],r&amp;&amp;(r=r[s],r)){u=r;y=i;break}if(u)break;!c&amp;&amp;v&amp;&amp;v[s]&amp;&amp;(c=v[s],b=i)}!u&amp;&amp;c&amp;&amp;(u=c,y=b);u&amp;&amp;(o.splice(0,y,u),n=o.join("/"))}return n}function w(n,i){return function(){var r=d.call(arguments,0);return typeof r[0]!="string"&amp;&amp;r.length===1&amp;&amp;r.push(null),o.apply(t,r.concat([n,i]))}}function g(n){return function(t){return l(t,n)}}function nt(n){return function(t){u[n]=t}}function a(n){if(e(h,n)){var i=h[n];delete h[n];y[n]=!0;c.apply(t,i)}if(!e(u,n)&amp;&amp;!e(y,n))throw new Error("No "+n);return u[n]}function b(n){var i,t=n?n.indexOf("!"):-1;return t&gt;-1&amp;&amp;(i=n.substring(0,t),n=n.substring(t+1,n.length)),[i,n]}function tt(n){return function(){return f&amp;&amp;f.config&amp;&amp;f.config[n]||{}}}var c,o,v,s,u={},h={},f={},y={},k=Object.prototype.hasOwnProperty,d=[].slice,p=/\.js$/;v=function(n,t){var r,u=b(n),i=u[0];return n=u[1],i&amp;&amp;(i=l(i,t),r=a(i)),i?n=r&amp;&amp;r.normalize?r.normalize(n,g(t)):l(n,t):(n=l(n,t),u=b(n),i=u[0],n=u[1],i&amp;&amp;(r=a(i))),{f:i?i+"!"+n:n,n:n,pr:i,p:r}};s={require:function(n){return w(n)},exports:function(n){var t=u[n];return typeof t!="undefined"?t:u[n]={}},module:function(n){return{id:n,uri:"",exports:u[n],config:tt(n)}}};c=function(n,i,r,f){var p,o,k,b,c,l=[],d=typeof r,g;if(f=f||n,d==="undefined"||d==="function"){for(i=!i.length&amp;&amp;r.length?["require","exports","module"]:i,c=0;c&lt;i.length;c+=1)if(b=v(i[c],f),o=b.f,o==="require")l[c]=s.require(n);else if(o==="exports")l[c]=s.exports(n),g=!0;else if(o==="module")p=l[c]=s.module(n);else if(e(u,o)||e(h,o)||e(y,o))l[c]=a(o);else if(b.p)b.p.load(b.n,w(f,!0),nt(o),{}),l[c]=u[o];else throw new Error(n+" missing "+o);k=r?r.apply(u[n],l):undefined;n&amp;&amp;(p&amp;&amp;p.exports!==t&amp;&amp;p.exports!==u[n]?u[n]=p.exports:k===t&amp;&amp;g||(u[n]=k))}else n&amp;&amp;(u[n]=r)};n=i=o=function(n,i,r,u,e){if(typeof n=="string")return s[n]?s[n](i):a(v(n,i).f);if(!n.splice){if(f=n,f.deps&amp;&amp;o(f.deps,f.callback),!i)return;i.splice?(n=i,i=r,r=null):n=t}return i=i||function(){},typeof r=="function"&amp;&amp;(r=u,u=e),u?c(t,n,i,r):setTimeout(function(){c(t,n,i,r)},4),o};o.config=function(n){return o(n)};n._defined=u;r=function(n,t,i){if(typeof n!="string")throw new Error("See almond README: incorrect module build, no module name");t.splice||(i=t,t=[]);e(u,n)||e(h,n)||(h[n]=[n,t,i])};r.amd={jQuery:!0}})();t.requirejs=n;t.require=i;t.define=r}}();t.define("almond",function(){});t.define("jquery",[],function(){var t=n||$;return t==null&amp;&amp;console&amp;&amp;console.error&amp;&amp;console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."),t});t.define("select2/utils",["jquery"],function(n){function r(n){var i=n.prototype,r=[],t,u;for(t in i)(u=i[t],typeof u=="function")&amp;&amp;t!=="constructor"&amp;&amp;r.push(t);return r}var t={},i;return t.Extend=function(n,t){function r(){this.constructor=n}var u={}.hasOwnProperty;for(var i in t)u.call(t,i)&amp;&amp;(n[i]=t[i]);return r.prototype=t.prototype,n.prototype=new r,n.__super__=t.prototype,n},t.Decorate=function(n,t){function i(){var r=Array.prototype.unshift,u=t.prototype.constructor.length,i=n.prototype.constructor;u&gt;0&amp;&amp;(r.call(arguments,n.prototype.constructor),i=t.prototype.constructor);i.apply(this,arguments)}function l(){this.constructor=i}var s=r(t),h=r(n),u,e,c,f,o;for(t.displayName=n.displayName,i.prototype=new l,u=0;u&lt;h.length;u++)e=h[u],i.prototype[e]=n.prototype[e];for(c=function(n){var r=function(){},u;return n in i.prototype&amp;&amp;(r=i.prototype[n]),u=t.prototype[n],function(){var n=Array.prototype.unshift;return n.call(arguments,r),u.apply(this,arguments)}},f=0;f&lt;s.length;f++)o=s[f],i.prototype[o]=c(o);return i},i=function(){this.listeners={}},i.prototype.on=function(n,t){this.listeners=this.listeners||{};n in this.listeners?this.listeners[n].push(t):this.listeners[n]=[t]},i.prototype.trigger=function(n){var i=Array.prototype.slice,t=i.call(arguments,1);this.listeners=this.listeners||{};t==null&amp;&amp;(t=[]);t.length===0&amp;&amp;t.push({});t[0]._type=n;n in this.listeners&amp;&amp;this.invoke(this.listeners[n],i.call(arguments,1));"*"in this.listeners&amp;&amp;this.invoke(this.listeners["*"],arguments)},i.prototype.invoke=function(n,t){for(var i=0,r=n.length;i&lt;r;i++)n[i].apply(this,t)},t.Observable=i,t.generateChars=function(n){for(var r,t="",i=0;i&lt;n;i++)r=Math.floor(Math.random()*36),t+=r.toString(36);return t},t.bind=function(n,t){return function(){n.apply(t,arguments)}},t._convertData=function(n){var f,r,i,u,t;for(f in n)if(r=f.split("-"),i=n,r.length!==1){for(u=0;u&lt;r.length;u++)t=r[u],t=t.substring(0,1).toLowerCase()+t.substring(1),t in i||(i[t]={}),u==r.length-1&amp;&amp;(i[t]=n[f]),i=i[t];delete n[f]}return n},t.hasScroll=function(t,i){var u=n(i),f=i.style.overflowX,r=i.style.overflowY;return f===r&amp;&amp;(r==="hidden"||r==="visible")?!1:f==="scroll"||r==="scroll"?!0:u.innerHeight()&lt;i.scrollHeight||u.innerWidth()&lt;i.scrollWidth},t.escapeMarkup=function(n){var t={"\\":"&amp;#92;","&amp;":"&amp;amp;","&lt;":"&amp;lt;","&gt;":"&amp;gt;",'"':"&amp;quot;","'":"&amp;#39;","/":"&amp;#47;"};return typeof n!="string"?n:String(n).replace(/[&amp;&lt;&gt;"'\/\\]/g,function(n){return t[n]})},t.appendMany=function(t,i){if(n.fn.jquery.substr(0,3)==="1.7"){var r=n();n.map(i,function(n){r=r.add(n)});i=r}t.append(i)},t});t.define("select2/results",["jquery","./utils"],function(n,t){function i(n,t,r){this.$element=n;this.data=r;this.options=t;i.__super__.constructor.call(this)}return t.Extend(i,t.Observable),i.prototype.render=function(){var t=n('&lt;ul class="select2-results__options" role="tree"&gt;&lt;\/ul&gt;');return this.options.get("multiple")&amp;&amp;t.attr("aria-multiselectable","true"),this.$results=t,t},i.prototype.clear=function(){this.$results.empty()},i.prototype.displayMessage=function(t){var u=this.options.get("escapeMarkup"),i,r;this.clear();this.hideLoading();i=n('&lt;li role="treeitem" aria-live="assertive" class="select2-results__option"&gt;&lt;\/li&gt;');r=this.options.get("translations").get(t.message);i.append(u(r(t.args)));i[0].className+=" select2-results__message";this.$results.append(i)},i.prototype.hideMessages=function(){this.$results.find(".select2-results__message").remove()},i.prototype.append=function(n){var i,t,r,u;if(this.hideLoading(),i=[],n.results==null||n.results.length===0){this.$results.children().length===0&amp;&amp;this.trigger("results:message",{message:"noResults"});return}for(n.results=this.sort(n.results),t=0;t&lt;n.results.length;t++)r=n.results[t],u=this.option(r),i.push(u);this.$results.append(i)},i.prototype.position=function(n,t){var i=t.find(".select2-results");i.append(n)},i.prototype.sort=function(n){var t=this.options.get("sorter");return t(n)},i.prototype.highlightFirstItem=function(){var n=this.$results.find(".select2-results__option[aria-selected]"),t=n.filter("[aria-selected=true]");t.length&gt;0?t.first().trigger("mouseenter"):n.first().trigger("mouseenter");this.ensureHighlightVisible()},i.prototype.setClasses=function(){var t=this;this.data.current(function(i){var r=n.map(i,function(n){return n.id.toString()}),u=t.$results.find(".select2-results__option[aria-selected]");u.each(function(){var i=n(this),t=n.data(this,"data"),u=""+t.id;t.element!=null&amp;&amp;t.element.selected||t.element==null&amp;&amp;n.inArray(u,r)&gt;-1?i.attr("aria-selected","true"):i.attr("aria-selected","false")})})},i.prototype.showLoading=function(n){this.hideLoading();var i=this.options.get("translations").get("searching"),r={disabled:!0,loading:!0,text:i(n)},t=this.option(r);t.className+=" loading-results";this.$results.prepend(t)},i.prototype.hideLoading=function(){this.$results.find(".loading-results").remove()},i.prototype.option=function(t){var r=document.createElement("li"),i,e,c,o,u,v,s,f,l,a,h;r.className="select2-results__option";i={role:"treeitem","aria-selected":"false"};t.disabled&amp;&amp;(delete i["aria-selected"],i["aria-disabled"]="true");t.id==null&amp;&amp;delete i["aria-selected"];t._resultId!=null&amp;&amp;(r.id=t._resultId);t.title&amp;&amp;(r.title=t.title);t.children&amp;&amp;(i.role="group",i["aria-label"]=t.text,delete i["aria-selected"]);for(e in i)c=i[e],r.setAttribute(e,c);if(t.children){for(o=n(r),u=document.createElement("strong"),u.className="select2-results__group",v=n(u),this.template(t,u),s=[],f=0;f&lt;t.children.length;f++)l=t.children[f],a=this.option(l),s.push(a);h=n("&lt;ul&gt;&lt;\/ul&gt;",{"class":"select2-results__options select2-results__options--nested"});h.append(s);o.append(u);o.append(h)}else this.template(t,r);return n.data(r,"data",t),r},i.prototype.bind=function(t){var i=this,r=t.id+"-results";this.$results.attr("id",r);t.on("results:all",function(n){i.clear();i.append(n.data);t.isOpen()&amp;&amp;(i.setClasses(),i.highlightFirstItem())});t.on("results:append",function(n){i.append(n.data);t.isOpen()&amp;&amp;i.setClasses()});t.on("query",function(n){i.hideMessages();i.showLoading(n)});t.on("select",function(){t.isOpen()&amp;&amp;(i.setClasses(),i.highlightFirstItem())});t.on("unselect",function(){t.isOpen()&amp;&amp;(i.setClasses(),i.highlightFirstItem())});t.on("open",function(){i.$results.attr("aria-expanded","true");i.$results.attr("aria-hidden","false");i.setClasses();i.ensureHighlightVisible()});t.on("close",function(){i.$results.attr("aria-expanded","false");i.$results.attr("aria-hidden","true");i.$results.removeAttr("aria-activedescendant")});t.on("results:toggle",function(){var n=i.getHighlightedResults();n.length!==0&amp;&amp;n.trigger("mouseup")});t.on("results:select",function(){var n=i.getHighlightedResults(),t;n.length!==0&amp;&amp;(t=n.data("data"),n.attr("aria-selected")=="true"?i.trigger("close",{}):i.trigger("select",{data:t}))});t.on("results:previous",function(){var r=i.getHighlightedResults(),u=i.$results.find("[aria-selected]"),f=u.index(r),n,t;if(f!==0){n=f-1;r.length===0&amp;&amp;(n=0);t=u.eq(n);t.trigger("mouseenter");var e=i.$results.offset().top,o=t.offset().top,s=i.$results.scrollTop()+(o-e);n===0?i.$results.scrollTop(0):o-e&lt;0&amp;&amp;i.$results.scrollTop(s)}});t.on("results:next",function(){var e=i.getHighlightedResults(),t=i.$results.find("[aria-selected]"),o=t.index(e),r=o+1,n;if(!(r&gt;=t.length)){n=t.eq(r);n.trigger("mouseenter");var u=i.$results.offset().top+i.$results.outerHeight(!1),f=n.offset().top+n.outerHeight(!1),s=i.$results.scrollTop()+f-u;r===0?i.$results.scrollTop(0):f&gt;u&amp;&amp;i.$results.scrollTop(s)}});t.on("results:focus",function(n){n.element.addClass("select2-results__option--highlighted")});t.on("results:message",function(n){i.displayMessage(n)});if(n.fn.mousewheel)this.$results.on("mousewheel",function(n){var t=i.$results.scrollTop(),r=i.$results.get(0).scrollHeight-t+n.deltaY,u=n.deltaY&gt;0&amp;&amp;t-n.deltaY&lt;=0,f=n.deltaY&lt;0&amp;&amp;r&lt;=i.$results.height();u?(i.$results.scrollTop(0),n.preventDefault(),n.stopPropagation()):f&amp;&amp;(i.$results.scrollTop(i.$results.get(0).scrollHeight-i.$results.height()),n.preventDefault(),n.stopPropagation())});this.$results.on("mouseup",".select2-results__option[aria-selected]",function(t){var r=n(this),u=r.data("data");if(r.attr("aria-selected")==="true"){i.options.get("multiple")?i.trigger("unselect",{originalEvent:t,data:u}):i.trigger("close",{});return}i.trigger("select",{originalEvent:t,data:u})});this.$results.on("mouseenter",".select2-results__option[aria-selected]",function(){var t=n(this).data("data");i.getHighlightedResults().removeClass("select2-results__option--highlighted");i.trigger("results:focus",{data:t,element:n(this)})})},i.prototype.getHighlightedResults=function(){return this.$results.find(".select2-results__option--highlighted")},i.prototype.destroy=function(){this.$results.remove()},i.prototype.ensureHighlightVisible=function(){var n=this.getHighlightedResults();if(n.length!==0){var f=this.$results.find("[aria-selected]"),e=f.index(n),t=this.$results.offset().top,i=n.offset().top,r=this.$results.scrollTop()+(i-t),u=i-t;r-=n.outerHeight(!1)*2;e&lt;=2?this.$results.scrollTop(0):(u&gt;this.$results.outerHeight()||u&lt;0)&amp;&amp;this.$results.scrollTop(r)}},i.prototype.template=function(t,i){var u=this.options.get("templateResult"),f=this.options.get("escapeMarkup"),r=u(t,i);r==null?i.style.display="none":typeof r=="string"?i.innerHTML=f(r):n(i).append(r)},i});t.define("select2/keys",[],function(){return{BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46}});t.define("select2/selection/base",["jquery","../utils","../keys"],function(n,t,i){function r(n,t){this.$element=n;this.options=t;r.__super__.constructor.call(this)}return t.Extend(r,t.Observable),r.prototype.render=function(){var t=n('&lt;span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"&gt;&lt;\/span&gt;');return this._tabindex=0,this.$element.data("old-tabindex")!=null?this._tabindex=this.$element.data("old-tabindex"):this.$element.attr("tabindex")!=null&amp;&amp;(this._tabindex=this.$element.attr("tabindex")),t.attr("title",this.$element.attr("title")),t.attr("tabindex",this._tabindex),this.$selection=t,t},r.prototype.bind=function(n){var t=this,u=n.id+"-container",r=n.id+"-results";this.container=n;this.$selection.on("focus",function(n){t.trigger("focus",n)});this.$selection.on("blur",function(n){t._handleBlur(n)});this.$selection.on("keydown",function(n){t.trigger("keypress",n);n.which===i.SPACE&amp;&amp;n.preventDefault()});n.on("results:focus",function(n){t.$selection.attr("aria-activedescendant",n.data._resultId)});n.on("selection:update",function(n){t.update(n.data)});n.on("open",function(){t.$selection.attr("aria-expanded","true");t.$selection.attr("aria-owns",r);t._attachCloseHandler(n)});n.on("close",function(){t.$selection.attr("aria-expanded","false");t.$selection.removeAttr("aria-activedescendant");t.$selection.removeAttr("aria-owns");t.$selection.focus();t._detachCloseHandler(n)});n.on("enable",function(){t.$selection.attr("tabindex",t._tabindex)});n.on("disable",function(){t.$selection.attr("tabindex","-1")})},r.prototype._handleBlur=function(t){var i=this;window.setTimeout(function(){document.activeElement==i.$selection[0]||n.contains(i.$selection[0],document.activeElement)||i.trigger("blur",t)},1)},r.prototype._attachCloseHandler=function(t){var i=this;n(document.body).on("mousedown.select2."+t.id,function(t){var i=n(t.target),r=i.closest(".select2"),u=n(".select2.select2-container--open");u.each(function(){var i=n(this),t;this!=r[0]&amp;&amp;(t=i.data("element"),t.select2("close"))})})},r.prototype._detachCloseHandler=function(t){n(document.body).off("mousedown.select2."+t.id)},r.prototype.position=function(n,t){var i=t.find(".selection");i.append(n)},r.prototype.destroy=function(){this._detachCloseHandler(this.container)},r.prototype.update=function(){throw new Error("The `update` method must be defined in child classes.");},r});t.define("select2/selection/single",["jquery","./base","../utils","../keys"],function(n,t,i){function r(){r.__super__.constructor.apply(this,arguments)}return i.Extend(r,t),r.prototype.render=function(){var n=r.__super__.render.call(this);return n.addClass("select2-selection--single"),n.html('&lt;span class="select2-selection__rendered"&gt;&lt;\/span&gt;&lt;span class="select2-selection__arrow" role="presentation"&gt;&lt;b role="presentation"&gt;&lt;\/b&gt;&lt;\/span&gt;'),n},r.prototype.bind=function(n){var t=this,i;r.__super__.bind.apply(this,arguments);i=n.id+"-container";this.$selection.find(".select2-selection__rendered").attr("id",i);this.$selection.attr("aria-labelledby",i);this.$selection.on("mousedown",function(n){n.which===1&amp;&amp;t.trigger("toggle",{originalEvent:n})});this.$selection.on("focus",function(){});this.$selection.on("blur",function(){});n.on("focus",function(){n.isOpen()||t.$selection.focus()});n.on("selection:update",function(n){t.update(n.data)})},r.prototype.clear=function(){this.$selection.find(".select2-selection__rendered").empty()},r.prototype.display=function(n,t){var i=this.options.get("templateSelection"),r=this.options.get("escapeMarkup");return r(i(n,t))},r.prototype.selectionContainer=function(){return n("&lt;span&gt;&lt;\/span&gt;")},r.prototype.update=function(n){if(n.length===0){this.clear();return}var t=n[0],i=this.$selection.find(".select2-selection__rendered"),r=this.display(t,i);i.empty().append(r);i.prop("title",t.title||t.text)},r});t.define("select2/selection/multiple",["jquery","./base","../utils"],function(n,t,i){function r(){r.__super__.constructor.apply(this,arguments)}return i.Extend(r,t),r.prototype.render=function(){var n=r.__super__.render.call(this);return n.addClass("select2-selection--multiple"),n.html('&lt;ul class="select2-selection__rendered"&gt;&lt;\/ul&gt;'),n},r.prototype.bind=function(){var t=this;r.__super__.bind.apply(this,arguments);this.$selection.on("click",function(n){t.trigger("toggle",{originalEvent:n})});this.$selection.on("click",".select2-selection__choice__remove",function(i){if(!t.options.get("disabled")){var r=n(this),u=r.parent(),f=u.data("data");t.trigger("unselect",{originalEvent:i,data:f})}})},r.prototype.clear=function(){this.$selection.find(".select2-selection__rendered").empty()},r.prototype.display=function(n,t){var i=this.options.get("templateSelection"),r=this.options.get("escapeMarkup");return r(i(n,t))},r.prototype.selectionContainer=function(){return n('&lt;li class="select2-selection__choice"&gt;&lt;span class="select2-selection__choice__remove" role="presentation"&gt;&amp;times;&lt;\/span&gt;&lt;\/li&gt;')},r.prototype.update=function(n){var f,r,e;if(this.clear(),n.length!==0){for(f=[],r=0;r&lt;n.length;r++){var u=n[r],t=this.selectionContainer(),o=this.display(u,t);t.append(o);t.prop("title",u.title||u.text);t.data("data",u);f.push(t)}e=this.$selection.find(".select2-selection__rendered");i.appendMany(e,f)}},r});t.define("select2/selection/placeholder",["../utils"],function(){function n(n,t,i){this.placeholder=this.normalizePlaceholder(i.get("placeholder"));n.call(this,t,i)}return n.prototype.normalizePlaceholder=function(n,t){return typeof t=="string"&amp;&amp;(t={id:"",text:t}),t},n.prototype.createPlaceholder=function(n,t){var i=this.selectionContainer();return i.html(this.display(t)),i.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"),i},n.prototype.update=function(n,t){var r=t.length==1&amp;&amp;t[0].id!=this.placeholder.id,u=t.length&gt;1,i;if(u||r)return n.call(this,t);this.clear();i=this.createPlaceholder(this.placeholder);this.$selection.find(".select2-selection__rendered").append(i)},n});t.define("select2/selection/allowClear",["jquery","../keys"],function(n,t){function i(){}return i.prototype.bind=function(n,t,i){var r=this;n.call(this,t,i);this.placeholder==null&amp;&amp;this.options.get("debug")&amp;&amp;window.console&amp;&amp;console.error&amp;&amp;console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option.");this.$selection.on("mousedown",".select2-selection__clear",function(n){r._handleClear(n)});t.on("keypress",function(n){r._handleKeyboardClear(n,t)})},i.prototype._handleClear=function(n,t){var r,u,i,f;if(!this.options.get("disabled")&amp;&amp;(r=this.$selection.find(".select2-selection__clear"),r.length!==0)){for(t.stopPropagation(),u=r.data("data"),i=0;i&lt;u.length;i++)if(f={data:u[i]},this.trigger("unselect",f),f.prevented)return;this.$element.val(this.placeholder.id).trigger("change");this.trigger("toggle",{})}},i.prototype._handleKeyboardClear=function(n,i,r){r.isOpen()||(i.which==t.DELETE||i.which==t.BACKSPACE)&amp;&amp;this._handleClear(i)},i.prototype.update=function(t,i){if(t.call(this,i),!(this.$selection.find(".select2-selection__placeholder").length&gt;0)&amp;&amp;i.length!==0){var r=n('&lt;span class="select2-selection__clear"&gt;&amp;times;&lt;\/span&gt;');r.data("data",i);this.$selection.find(".select2-selection__rendered").prepend(r)}},i});t.define("select2/selection/search",["jquery","../utils","../keys"],function(n,t,i){function r(n,t,i){n.call(this,t,i)}return r.prototype.render=function(t){var i=n('&lt;li class="select2-search select2-search--inline"&gt;&lt;input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" aria-autocomplete="list" /&gt;&lt;\/li&gt;'),r;return this.$searchContainer=i,this.$search=i.find("input"),r=t.call(this),this._transferTabIndex(),r},r.prototype.bind=function(n,t,r){var u=this,f,e;n.call(this,t,r);t.on("open",function(){u.$search.trigger("focus")});t.on("close",function(){u.$search.val("");u.$search.removeAttr("aria-activedescendant");u.$search.trigger("focus")});t.on("enable",function(){u.$search.prop("disabled",!1);u._transferTabIndex()});t.on("disable",function(){u.$search.prop("disabled",!0)});t.on("focus",function(){u.$search.trigger("focus")});t.on("results:focus",function(n){u.$search.attr("aria-activedescendant",n.id)});this.$selection.on("focusin",".select2-search--inline",function(n){u.trigger("focus",n)});this.$selection.on("focusout",".select2-search--inline",function(n){u._handleBlur(n)});this.$selection.on("keydown",".select2-search--inline",function(n){var r,t,f;n.stopPropagation();u.trigger("keypress",n);u._keyUpPrevented=n.isDefaultPrevented();r=n.which;r===i.BACKSPACE&amp;&amp;u.$search.val()===""&amp;&amp;(t=u.$searchContainer.prev(".select2-selection__choice"),t.length&gt;0&amp;&amp;(f=t.data("data"),u.searchRemoveChoice(f),n.preventDefault()))});f=document.documentMode;e=f&amp;&amp;f&lt;=11;this.$selection.on("input.searchcheck",".select2-search--inline",function(){if(e){u.$selection.off("input.search input.searchcheck");return}u.$selection.off("keyup.search")});this.$selection.on("keyup.search input.search",".select2-search--inline",function(n){if(e&amp;&amp;n.type==="input"){u.$selection.off("input.search input.searchcheck");return}var t=n.which;t!=i.SHIFT&amp;&amp;t!=i.CTRL&amp;&amp;t!=i.ALT&amp;&amp;t!=i.TAB&amp;&amp;u.handleSearch(n)})},r.prototype._transferTabIndex=function(){this.$search.attr("tabindex",this.$selection.attr("tabindex"));this.$selection.attr("tabindex","-1")},r.prototype.createPlaceholder=function(n,t){this.$search.attr("placeholder",t.text)},r.prototype.update=function(n,t){var i=this.$search[0]==document.activeElement;this.$search.attr("placeholder","");n.call(this,t);this.$selection.find(".select2-selection__rendered").append(this.$searchContainer);this.resizeSearch();i&amp;&amp;this.$search.focus()},r.prototype.handleSearch=function(){if(this.resizeSearch(),!this._keyUpPrevented){var n=this.$search.val();this.trigger("query",{term:n})}this._keyUpPrevented=!1},r.prototype.searchRemoveChoice=function(n,t){this.trigger("unselect",{data:t});this.$search.val(t.text);this.handleSearch()},r.prototype.resizeSearch=function(){var n,t;this.$search.css("width","25px");n="";this.$search.attr("placeholder")!==""?n=this.$selection.find(".select2-selection__rendered").innerWidth():(t=this.$search.val().length+1,n=t*.75+"em");this.$search.css("width",n)},r});t.define("select2/selection/eventRelay",["jquery"],function(n){function t(){}return t.prototype.bind=function(t,i,r){var u=this,f=["open","opening","close","closing","select","selecting","unselect","unselecting"],e=["opening","closing","selecting","unselecting"];t.call(this,i,r);i.on("*",function(t,i){if(n.inArray(t,f)!==-1){i=i||{};var r=n.Event("select2:"+t,{params:i});(u.$element.trigger(r),n.inArray(t,e)!==-1)&amp;&amp;(i.prevented=r.isDefaultPrevented())}})},t});t.define("select2/translation",["jquery","require"],function(n,t){function i(n){this.dict=n||{}}return i.prototype.all=function(){return this.dict},i.prototype.get=function(n){return this.dict[n]},i.prototype.extend=function(t){this.dict=n.extend({},t.all(),this.dict)},i._cache={},i.loadPath=function(n){if(!(n in i._cache)){var r=t(n);i._cache[n]=r}return new i(i._cache[n])},i});t.define("select2/diacritics",[],function(){return{"Ⓐ":"A","Ａ":"A","À":"A","Á":"A","Â":"A","Ầ":"A","Ấ":"A","Ẫ":"A","Ẩ":"A","Ã":"A","Ā":"A","Ă":"A","Ằ":"A","Ắ":"A","Ẵ":"A","Ẳ":"A","Ȧ":"A","Ǡ":"A","Ä":"A","Ǟ":"A","Ả":"A","Å":"A","Ǻ":"A","Ǎ":"A","Ȁ":"A","Ȃ":"A","Ạ":"A","Ậ":"A","Ặ":"A","Ḁ":"A","Ą":"A","Ⱥ":"A","Ɐ":"A","Ꜳ":"AA","Æ":"AE","Ǽ":"AE","Ǣ":"AE","Ꜵ":"AO","Ꜷ":"AU","Ꜹ":"AV","Ꜻ":"AV","Ꜽ":"AY","Ⓑ":"B","Ｂ":"B","Ḃ":"B","Ḅ":"B","Ḇ":"B","Ƀ":"B","Ƃ":"B","Ɓ":"B","Ⓒ":"C","Ｃ":"C","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","Ç":"C","Ḉ":"C","Ƈ":"C","Ȼ":"C","Ꜿ":"C","Ⓓ":"D","Ｄ":"D","Ḋ":"D","Ď":"D","Ḍ":"D","Ḑ":"D","Ḓ":"D","Ḏ":"D","Đ":"D","Ƌ":"D","Ɗ":"D","Ɖ":"D","Ꝺ":"D","Ǳ":"DZ","Ǆ":"DZ","ǲ":"Dz","ǅ":"Dz","Ⓔ":"E","Ｅ":"E","È":"E","É":"E","Ê":"E","Ề":"E","Ế":"E","Ễ":"E","Ể":"E","Ẽ":"E","Ē":"E","Ḕ":"E","Ḗ":"E","Ĕ":"E","Ė":"E","Ë":"E","Ẻ":"E","Ě":"E","Ȅ":"E","Ȇ":"E","Ẹ":"E","Ệ":"E","Ȩ":"E","Ḝ":"E","Ę":"E","Ḙ":"E","Ḛ":"E","Ɛ":"E","Ǝ":"E","Ⓕ":"F","Ｆ":"F","Ḟ":"F","Ƒ":"F","Ꝼ":"F","Ⓖ":"G","Ｇ":"G","Ǵ":"G","Ĝ":"G","Ḡ":"G","Ğ":"G","Ġ":"G","Ǧ":"G","Ģ":"G","Ǥ":"G","Ɠ":"G","Ꞡ":"G","Ᵹ":"G","Ꝿ":"G","Ⓗ":"H","Ｈ":"H","Ĥ":"H","Ḣ":"H","Ḧ":"H","Ȟ":"H","Ḥ":"H","Ḩ":"H","Ḫ":"H","Ħ":"H","Ⱨ":"H","Ⱶ":"H","Ɥ":"H","Ⓘ":"I","Ｉ":"I","Ì":"I","Í":"I","Î":"I","Ĩ":"I","Ī":"I","Ĭ":"I","İ":"I","Ï":"I","Ḯ":"I","Ỉ":"I","Ǐ":"I","Ȉ":"I","Ȋ":"I","Ị":"I","Į":"I","Ḭ":"I","Ɨ":"I","Ⓙ":"J","Ｊ":"J","Ĵ":"J","Ɉ":"J","Ⓚ":"K","Ｋ":"K","Ḱ":"K","Ǩ":"K","Ḳ":"K","Ķ":"K","Ḵ":"K","Ƙ":"K","Ⱪ":"K","Ꝁ":"K","Ꝃ":"K","Ꝅ":"K","Ꞣ":"K","Ⓛ":"L","Ｌ":"L","Ŀ":"L","Ĺ":"L","Ľ":"L","Ḷ":"L","Ḹ":"L","Ļ":"L","Ḽ":"L","Ḻ":"L","Ł":"L","Ƚ":"L","Ɫ":"L","Ⱡ":"L","Ꝉ":"L","Ꝇ":"L","Ꞁ":"L","Ǉ":"LJ","ǈ":"Lj","Ⓜ":"M","Ｍ":"M","Ḿ":"M","Ṁ":"M","Ṃ":"M","Ɱ":"M","Ɯ":"M","Ⓝ":"N","Ｎ":"N","Ǹ":"N","Ń":"N","Ñ":"N","Ṅ":"N","Ň":"N","Ṇ":"N","Ņ":"N","Ṋ":"N","Ṉ":"N","Ƞ":"N","Ɲ":"N","Ꞑ":"N","Ꞥ":"N","Ǌ":"NJ","ǋ":"Nj","Ⓞ":"O","Ｏ":"O","Ò":"O","Ó":"O","Ô":"O","Ồ":"O","Ố":"O","Ỗ":"O","Ổ":"O","Õ":"O","Ṍ":"O","Ȭ":"O","Ṏ":"O","Ō":"O","Ṑ":"O","Ṓ":"O","Ŏ":"O","Ȯ":"O","Ȱ":"O","Ö":"O","Ȫ":"O","Ỏ":"O","Ő":"O","Ǒ":"O","Ȍ":"O","Ȏ":"O","Ơ":"O","Ờ":"O","Ớ":"O","Ỡ":"O","Ở":"O","Ợ":"O","Ọ":"O","Ộ":"O","Ǫ":"O","Ǭ":"O","Ø":"O","Ǿ":"O","Ɔ":"O","Ɵ":"O","Ꝋ":"O","Ꝍ":"O","Ƣ":"OI","Ꝏ":"OO","Ȣ":"OU","Ⓟ":"P","Ｐ":"P","Ṕ":"P","Ṗ":"P","Ƥ":"P","Ᵽ":"P","Ꝑ":"P","Ꝓ":"P","Ꝕ":"P","Ⓠ":"Q","Ｑ":"Q","Ꝗ":"Q","Ꝙ":"Q","Ɋ":"Q","Ⓡ":"R","Ｒ":"R","Ŕ":"R","Ṙ":"R","Ř":"R","Ȑ":"R","Ȓ":"R","Ṛ":"R","Ṝ":"R","Ŗ":"R","Ṟ":"R","Ɍ":"R","Ɽ":"R","Ꝛ":"R","Ꞧ":"R","Ꞃ":"R","Ⓢ":"S","Ｓ":"S","ẞ":"S","Ś":"S","Ṥ":"S","Ŝ":"S","Ṡ":"S","Š":"S","Ṧ":"S","Ṣ":"S","Ṩ":"S","Ș":"S","Ş":"S","Ȿ":"S","Ꞩ":"S","Ꞅ":"S","Ⓣ":"T","Ｔ":"T","Ṫ":"T","Ť":"T","Ṭ":"T","Ț":"T","Ţ":"T","Ṱ":"T","Ṯ":"T","Ŧ":"T","Ƭ":"T","Ʈ":"T","Ⱦ":"T","Ꞇ":"T","Ꜩ":"TZ","Ⓤ":"U","Ｕ":"U","Ù":"U","Ú":"U","Û":"U","Ũ":"U","Ṹ":"U","Ū":"U","Ṻ":"U","Ŭ":"U","Ü":"U","Ǜ":"U","Ǘ":"U","Ǖ":"U","Ǚ":"U","Ủ":"U","Ů":"U","Ű":"U","Ǔ":"U","Ȕ":"U","Ȗ":"U","Ư":"U","Ừ":"U","Ứ":"U","Ữ":"U","Ử":"U","Ự":"U","Ụ":"U","Ṳ":"U","Ų":"U","Ṷ":"U","Ṵ":"U","Ʉ":"U","Ⓥ":"V","Ｖ":"V","Ṽ":"V","Ṿ":"V","Ʋ":"V","Ꝟ":"V","Ʌ":"V","Ꝡ":"VY","Ⓦ":"W","Ｗ":"W","Ẁ":"W","Ẃ":"W","Ŵ":"W","Ẇ":"W","Ẅ":"W","Ẉ":"W","Ⱳ":"W","Ⓧ":"X","Ｘ":"X","Ẋ":"X","Ẍ":"X","Ⓨ":"Y","Ｙ":"Y","Ỳ":"Y","Ý":"Y","Ŷ":"Y","Ỹ":"Y","Ȳ":"Y","Ẏ":"Y","Ÿ":"Y","Ỷ":"Y","Ỵ":"Y","Ƴ":"Y","Ɏ":"Y","Ỿ":"Y","Ⓩ":"Z","Ｚ":"Z","Ź":"Z","Ẑ":"Z","Ż":"Z","Ž":"Z","Ẓ":"Z","Ẕ":"Z","Ƶ":"Z","Ȥ":"Z","Ɀ":"Z","Ⱬ":"Z","Ꝣ":"Z","ⓐ":"a","ａ":"a","ẚ":"a","à":"a","á":"a","â":"a","ầ":"a","ấ":"a","ẫ":"a","ẩ":"a","ã":"a","ā":"a","ă":"a","ằ":"a","ắ":"a","ẵ":"a","ẳ":"a","ȧ":"a","ǡ":"a","ä":"a","ǟ":"a","ả":"a","å":"a","ǻ":"a","ǎ":"a","ȁ":"a","ȃ":"a","ạ":"a","ậ":"a","ặ":"a","ḁ":"a","ą":"a","ⱥ":"a","ɐ":"a","ꜳ":"aa","æ":"ae","ǽ":"ae","ǣ":"ae","ꜵ":"ao","ꜷ":"au","ꜹ":"av","ꜻ":"av","ꜽ":"ay","ⓑ":"b","ｂ":"b","ḃ":"b","ḅ":"b","ḇ":"b","ƀ":"b","ƃ":"b","ɓ":"b","ⓒ":"c","ｃ":"c","ć":"c","ĉ":"c","ċ":"c","č":"c","ç":"c","ḉ":"c","ƈ":"c","ȼ":"c","ꜿ":"c","ↄ":"c","ⓓ":"d","ｄ":"d","ḋ":"d","ď":"d","ḍ":"d","ḑ":"d","ḓ":"d","ḏ":"d","đ":"d","ƌ":"d","ɖ":"d","ɗ":"d","ꝺ":"d","ǳ":"dz","ǆ":"dz","ⓔ":"e","ｅ":"e","è":"e","é":"e","ê":"e","ề":"e","ế":"e","ễ":"e","ể":"e","ẽ":"e","ē":"e","ḕ":"e","ḗ":"e","ĕ":"e","ė":"e","ë":"e","ẻ":"e","ě":"e","ȅ":"e","ȇ":"e","ẹ":"e","ệ":"e","ȩ":"e","ḝ":"e","ę":"e","ḙ":"e","ḛ":"e","ɇ":"e","ɛ":"e","ǝ":"e","ⓕ":"f","ｆ":"f","ḟ":"f","ƒ":"f","ꝼ":"f","ⓖ":"g","ｇ":"g","ǵ":"g","ĝ":"g","ḡ":"g","ğ":"g","ġ":"g","ǧ":"g","ģ":"g","ǥ":"g","ɠ":"g","ꞡ":"g","ᵹ":"g","ꝿ":"g","ⓗ":"h","ｈ":"h","ĥ":"h","ḣ":"h","ḧ":"h","ȟ":"h","ḥ":"h","ḩ":"h","ḫ":"h","ẖ":"h","ħ":"h","ⱨ":"h","ⱶ":"h","ɥ":"h","ƕ":"hv","ⓘ":"i","ｉ":"i","ì":"i","í":"i","î":"i","ĩ":"i","ī":"i","ĭ":"i","ï":"i","ḯ":"i","ỉ":"i","ǐ":"i","ȉ":"i","ȋ":"i","ị":"i","į":"i","ḭ":"i","ɨ":"i","ı":"i","ⓙ":"j","ｊ":"j","ĵ":"j","ǰ":"j","ɉ":"j","ⓚ":"k","ｋ":"k","ḱ":"k","ǩ":"k","ḳ":"k","ķ":"k","ḵ":"k","ƙ":"k","ⱪ":"k","ꝁ":"k","ꝃ":"k","ꝅ":"k","ꞣ":"k","ⓛ":"l","ｌ":"l","ŀ":"l","ĺ":"l","ľ":"l","ḷ":"l","ḹ":"l","ļ":"l","ḽ":"l","ḻ":"l","ſ":"l","ł":"l","ƚ":"l","ɫ":"l","ⱡ":"l","ꝉ":"l","ꞁ":"l","ꝇ":"l","ǉ":"lj","ⓜ":"m","ｍ":"m","ḿ":"m","ṁ":"m","ṃ":"m","ɱ":"m","ɯ":"m","ⓝ":"n","ｎ":"n","ǹ":"n","ń":"n","ñ":"n","ṅ":"n","ň":"n","ṇ":"n","ņ":"n","ṋ":"n","ṉ":"n","ƞ":"n","ɲ":"n","ŉ":"n","ꞑ":"n","ꞥ":"n","ǌ":"nj","ⓞ":"o","ｏ":"o","ò":"o","ó":"o","ô":"o","ồ":"o","ố":"o","ỗ":"o","ổ":"o","õ":"o","ṍ":"o","ȭ":"o","ṏ":"o","ō":"o","ṑ":"o","ṓ":"o","ŏ":"o","ȯ":"o","ȱ":"o","ö":"o","ȫ":"o","ỏ":"o","ő":"o","ǒ":"o","ȍ":"o","ȏ":"o","ơ":"o","ờ":"o","ớ":"o","ỡ":"o","ở":"o","ợ":"o","ọ":"o","ộ":"o","ǫ":"o","ǭ":"o","ø":"o","ǿ":"o","ɔ":"o","ꝋ":"o","ꝍ":"o","ɵ":"o","ƣ":"oi","ȣ":"ou","ꝏ":"oo","ⓟ":"p","ｐ":"p","ṕ":"p","ṗ":"p","ƥ":"p","ᵽ":"p","ꝑ":"p","ꝓ":"p","ꝕ":"p","ⓠ":"q","ｑ":"q","ɋ":"q","ꝗ":"q","ꝙ":"q","ⓡ":"r","ｒ":"r","ŕ":"r","ṙ":"r","ř":"r","ȑ":"r","ȓ":"r","ṛ":"r","ṝ":"r","ŗ":"r","ṟ":"r","ɍ":"r","ɽ":"r","ꝛ":"r","ꞧ":"r","ꞃ":"r","ⓢ":"s","ｓ":"s","ß":"s","ś":"s","ṥ":"s","ŝ":"s","ṡ":"s","š":"s","ṧ":"s","ṣ":"s","ṩ":"s","ș":"s","ş":"s","ȿ":"s","ꞩ":"s","ꞅ":"s","ẛ":"s","ⓣ":"t","ｔ":"t","ṫ":"t","ẗ":"t","ť":"t","ṭ":"t","ț":"t","ţ":"t","ṱ":"t","ṯ":"t","ŧ":"t","ƭ":"t","ʈ":"t","ⱦ":"t","ꞇ":"t","ꜩ":"tz","ⓤ":"u","ｕ":"u","ù":"u","ú":"u","û":"u","ũ":"u","ṹ":"u","ū":"u","ṻ":"u","ŭ":"u","ü":"u","ǜ":"u","ǘ":"u","ǖ":"u","ǚ":"u","ủ":"u","ů":"u","ű":"u","ǔ":"u","ȕ":"u","ȗ":"u","ư":"u","ừ":"u","ứ":"u","ữ":"u","ử":"u","ự":"u","ụ":"u","ṳ":"u","ų":"u","ṷ":"u","ṵ":"u","ʉ":"u","ⓥ":"v","ｖ":"v","ṽ":"v","ṿ":"v","ʋ":"v","ꝟ":"v","ʌ":"v","ꝡ":"vy","ⓦ":"w","ｗ":"w","ẁ":"w","ẃ":"w","ŵ":"w","ẇ":"w","ẅ":"w","ẘ":"w","ẉ":"w","ⱳ":"w","ⓧ":"x","ｘ":"x","ẋ":"x","ẍ":"x","ⓨ":"y","ｙ":"y","ỳ":"y","ý":"y","ŷ":"y","ỹ":"y","ȳ":"y","ẏ":"y","ÿ":"y","ỷ":"y","ẙ":"y","ỵ":"y","ƴ":"y","ɏ":"y","ỿ":"y","ⓩ":"z","ｚ":"z","ź":"z","ẑ":"z","ż":"z","ž":"z","ẓ":"z","ẕ":"z","ƶ":"z","ȥ":"z","ɀ":"z","ⱬ":"z","ꝣ":"z","Ά":"Α","Έ":"Ε","Ή":"Η","Ί":"Ι","Ϊ":"Ι","Ό":"Ο","Ύ":"Υ","Ϋ":"Υ","Ώ":"Ω","ά":"α","έ":"ε","ή":"η","ί":"ι","ϊ":"ι","ΐ":"ι","ό":"ο","ύ":"υ","ϋ":"υ","ΰ":"υ","ω":"ω","ς":"σ"}});t.define("select2/data/base",["../utils"],function(n){function t(){t.__super__.constructor.call(this)}return n.Extend(t,n.Observable),t.prototype.current=function(){throw new Error("The `current` method must be defined in child classes.");},t.prototype.query=function(){throw new Error("The `query` method must be defined in child classes.");},t.prototype.bind=function(){},t.prototype.destroy=function(){},t.prototype.generateResultId=function(t,i){var r=t.id+"-result-";return r+=n.generateChars(4),r+(i.id!=null?"-"+i.id.toString():"-"+n.generateChars(4))},t});t.define("select2/data/select",["./base","../utils","jquery"],function(n,t,i){function r(n,t){this.$element=n;this.options=t;r.__super__.constructor.call(this)}return t.Extend(r,n),r.prototype.current=function(n){var t=[],r=this;this.$element.find(":selected").each(function(){var n=i(this),u=r.item(n);t.push(u)});n(t)},r.prototype.select=function(n){var t=this,r;if(n.selected=!0,i(n.element).is("option")){n.element.selected=!0;this.$element.trigger("change");return}this.$element.prop("multiple")?this.current(function(r){var f=[],u,e;for(n=[n],n.push.apply(n,r),u=0;u&lt;n.length;u++)e=n[u].id,i.inArray(e,f)===-1&amp;&amp;f.push(e);t.$element.val(f);t.$element.trigger("change")}):(r=n.id,this.$element.val(r),this.$element.trigger("change"))},r.prototype.unselect=function(n){var t=this;if(this.$element.prop("multiple")){if(n.selected=!1,i(n.element).is("option")){n.element.selected=!1;this.$element.trigger("change");return}this.current(function(r){for(var u,f=[],e=0;e&lt;r.length;e++)u=r[e].id,u!==n.id&amp;&amp;i.inArray(u,f)===-1&amp;&amp;f.push(u);t.$element.val(f);t.$element.trigger("change")})}},r.prototype.bind=function(n){var t=this;this.container=n;n.on("select",function(n){t.select(n.data)});n.on("unselect",function(n){t.unselect(n.data)})},r.prototype.destroy=function(){this.$element.find("*").each(function(){i.removeData(this,"data")})},r.prototype.query=function(n,t){var r=[],u=this,f=this.$element.children();f.each(function(){var t=i(this),e,f;(t.is("option")||t.is("optgroup"))&amp;&amp;(e=u.item(t),f=u.matches(n,e),f!==null&amp;&amp;r.push(f))});t({results:r})},r.prototype.addOptions=function(n){t.appendMany(this.$element,n)},r.prototype.option=function(n){var t,u,r;return n.children?(t=document.createElement("optgroup"),t.label=n.text):(t=document.createElement("option"),t.textContent!==undefined?t.textContent=n.text:t.innerText=n.text),n.id&amp;&amp;(t.value=n.id),n.disabled&amp;&amp;(t.disabled=!0),n.selected&amp;&amp;(t.selected=!0),n.title&amp;&amp;(t.title=n.title),u=i(t),r=this._normalizeItem(n),r.element=t,i.data(t,"data",r),u},r.prototype.item=function(n){var t={},u,f,r,e,o;if(t=i.data(n[0],"data"),t!=null)return t;if(n.is("option"))t={id:n.val(),text:n.text(),disabled:n.prop("disabled"),selected:n.prop("selected"),title:n.prop("title")};else if(n.is("optgroup")){for(t={text:n.prop("label"),children:[],title:n.prop("title")},u=n.children("option"),f=[],r=0;r&lt;u.length;r++)e=i(u[r]),o=this.item(e),f.push(o);t.children=f}return t=this._normalizeItem(t),t.element=n[0],i.data(n[0],"data",t),t},r.prototype._normalizeItem=function(n){i.isPlainObject(n)||(n={id:n,text:n});n=i.extend({},{text:""},n);return n.id!=null&amp;&amp;(n.id=n.id.toString()),n.text!=null&amp;&amp;(n.text=n.text.toString()),n._resultId==null&amp;&amp;n.id&amp;&amp;this.container!=null&amp;&amp;(n._resultId=this.generateResultId(this.container,n)),i.extend({},{selected:!1,disabled:!1},n)},r.prototype.matches=function(n,t){var i=this.options.get("matcher");return i(n,t)},r});t.define("select2/data/array",["./select","../utils","jquery"],function(n,t,i){function r(n,t){var i=t.get("data")||[];r.__super__.constructor.call(this,n,t);this.addOptions(this.convertToOptions(i))}return t.Extend(r,n),r.prototype.select=function(n){var t=this.$element.find("option").filter(function(t,i){return i.value==n.id.toString()});t.length===0&amp;&amp;(t=this.option(n),this.addOptions(t));r.__super__.select.call(this,n)},r.prototype.convertToOptions=function(n){function a(n){return function(){return i(this).val()==n.id}}for(var r,f,h,c=this,e=this.$element.find("option"),l=e.map(function(){return c.item(i(this)).id}).get(),o=[],u=0;u&lt;n.length;u++){if(r=this._normalizeItem(n[u]),i.inArray(r.id,l)&gt;=0){var s=e.filter(a(r)),v=this.item(s),y=i.extend(!0,{},r,v),p=this.option(y);s.replaceWith(p);continue}f=this.option(r);r.children&amp;&amp;(h=this.convertToOptions(r.children),t.appendMany(f,h));o.push(f)}return o},r});t.define("select2/data/ajax",["./array","../utils","jquery"],function(n,t,i){function r(n,t){this.ajaxOptions=this._applyDefaults(t.get("ajax"));this.ajaxOptions.processResults!=null&amp;&amp;(this.processResults=this.ajaxOptions.processResults);r.__super__.constructor.call(this,n,t)}return t.Extend(r,n),r.prototype._applyDefaults=function(n){var t={data:function(n){return i.extend({},n,{q:n.term})},transport:function(n,t,r){var u=i.ajax(n);return u.then(t),u.fail(r),u}};return i.extend({},t,n,!0)},r.prototype.processResults=function(n){return n},r.prototype.query=function(n,t){function f(){var f=r.transport(r,function(r){var f=u.processResults(r,n);u.options.get("debug")&amp;&amp;window.console&amp;&amp;console.error&amp;&amp;(f&amp;&amp;f.results&amp;&amp;i.isArray(f.results)||console.error("Select2: The AJAX results did not return an array in the `results` key of the response."));t(f)},function(){f.status&amp;&amp;f.status==="0"||u.trigger("results:message",{message:"errorLoading"})});u._request=f}var u=this,r;this._request!=null&amp;&amp;(i.isFunction(this._request.abort)&amp;&amp;this._request.abort(),this._request=null);r=i.extend({type:"GET"},this.ajaxOptions);typeof r.url=="function"&amp;&amp;(r.url=r.url.call(this.$element,n));typeof r.data=="function"&amp;&amp;(r.data=r.data.call(this.$element,n));this.ajaxOptions.delay&amp;&amp;n.term!=null?(this._queryTimeout&amp;&amp;window.clearTimeout(this._queryTimeout),this._queryTimeout=window.setTimeout(f,this.ajaxOptions.delay)):f()},r});t.define("select2/data/tags",["jquery"],function(n){function t(t,i,r){var f=r.get("tags"),o=r.get("createTag"),e,u;if(o!==undefined&amp;&amp;(this.createTag=o),e=r.get("insertTag"),e!==undefined&amp;&amp;(this.insertTag=e),t.call(this,i,r),n.isArray(f))for(u=0;u&lt;f.length;u++){var s=f[u],h=this._normalizeItem(s),c=this.option(h);this.$element.append(c)}}return t.prototype.query=function(n,t,i){function u(n,f){for(var o,c,e=n.results,s=0;s&lt;e.length;s++){var h=e[s],l=h.children!=null&amp;&amp;!u({results:h.children},!0),a=h.text===t.term;if(a||l){if(f)return!1;n.data=e;i(n);return}}if(f)return!0;o=r.createTag(t);o!=null&amp;&amp;(c=r.option(o),c.attr("data-select2-tag",!0),r.addOptions([c]),r.insertTag(e,o));n.results=e;i(n)}var r=this;if(this._removeOldTags(),t.term==null||t.page!=null){n.call(this,t,i);return}n.call(this,t,u)},t.prototype.createTag=function(t,i){var r=n.trim(i.term);return r===""?null:{id:r,text:r}},t.prototype.insertTag=function(n,t,i){t.unshift(i)},t.prototype._removeOldTags=function(){var i=this._lastTag,t=this.$element.find("option[data-select2-tag]");t.each(function(){this.selected||n(this).remove()})},t});t.define("select2/data/tokenizer",["jquery"],function(n){function t(n,t,i){var r=i.get("tokenizer");r!==undefined&amp;&amp;(this.tokenizer=r);n.call(this,t,i)}return t.prototype.bind=function(n,t,i){n.call(this,t,i);this.$search=t.dropdown.$search||t.selection.$search||i.find(".select2-search__field")},t.prototype.query=function(t,i,r){function e(t){var i=u._normalizeItem(t),f=u.$element.find("option").filter(function(){return n(this).val()===i.id}),r;f.length||(r=u.option(i),r.attr("data-select2-tag",!0),u._removeOldTags(),u.addOptions([r]));o(i)}function o(n){u.trigger("select",{data:n})}var u=this,f;i.term=i.term||"";f=this.tokenizer(i,this.options,e);f.term!==i.term&amp;&amp;(this.$search.length&amp;&amp;(this.$search.val(f.term),this.$search.focus()),i.term=f.term);t.call(this,i,r)},t.prototype.tokenizer=function(t,i,r,u){for(var h=r.get("tokenSeparators")||[],e=i.term,f=0,c=this.createTag||function(n){return{id:n.term,text:n.term}},o;f&lt;e.length;){if(o=e[f],n.inArray(o,h)===-1){f++;continue}var l=e.substr(0,f),a=n.extend({},i,{term:l}),s=c(a);if(s==null){f++;continue}u(s);e=e.substr(f+1)||"";f=0}return{term:e}},t});t.define("select2/data/minimumInputLength",[],function(){function n(n,t,i){this.minimumInputLength=i.get("minimumInputLength");n.call(this,t,i)}return n.prototype.query=function(n,t,i){if(t.term=t.term||"",t.term.length&lt;this.minimumInputLength){this.trigger("results:message",{message:"inputTooShort",args:{minimum:this.minimumInputLength,input:t.term,params:t}});return}n.call(this,t,i)},n});t.define("select2/data/maximumInputLength",[],function(){function n(n,t,i){this.maximumInputLength=i.get("maximumInputLength");n.call(this,t,i)}return n.prototype.query=function(n,t,i){if(t.term=t.term||"",this.maximumInputLength&gt;0&amp;&amp;t.term.length&gt;this.maximumInputLength){this.trigger("results:message",{message:"inputTooLong",args:{maximum:this.maximumInputLength,input:t.term,params:t}});return}n.call(this,t,i)},n});t.define("select2/data/maximumSelectionLength",[],function(){function n(n,t,i){this.maximumSelectionLength=i.get("maximumSelectionLength");n.call(this,t,i)}return n.prototype.query=function(n,t,i){var r=this;this.current(function(u){var f=u!=null?u.length:0;if(r.maximumSelectionLength&gt;0&amp;&amp;f&gt;=r.maximumSelectionLength){r.trigger("results:message",{message:"maximumSelected",args:{maximum:r.maximumSelectionLength}});return}n.call(r,t,i)})},n});t.define("select2/dropdown",["jquery","./utils"],function(n,t){function i(n,t){this.$element=n;this.options=t;i.__super__.constructor.call(this)}return t.Extend(i,t.Observable),i.prototype.render=function(){var t=n('&lt;span class="select2-dropdown"&gt;&lt;span class="select2-results"&gt;&lt;\/span&gt;&lt;\/span&gt;');return t.attr("dir",this.options.get("dir")),this.$dropdown=t,t},i.prototype.bind=function(){},i.prototype.position=function(){},i.prototype.destroy=function(){this.$dropdown.remove()},i});t.define("select2/dropdown/search",["jquery","../utils"],function(n){function t(){}return t.prototype.render=function(t){var r=t.call(this),i=n('&lt;span class="select2-search select2-search--dropdown"&gt;&lt;input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /&gt;&lt;\/span&gt;');return this.$searchContainer=i,this.$search=i.find("input"),r.prepend(i),r},t.prototype.bind=function(t,i,r){var u=this;t.call(this,i,r);this.$search.on("keydown",function(n){u.trigger("keypress",n);u._keyUpPrevented=n.isDefaultPrevented()});this.$search.on("input",function(){n(this).off("keyup")});this.$search.on("keyup input",function(n){u.handleSearch(n)});i.on("open",function(){u.$search.attr("tabindex",0);u.$search.focus();window.setTimeout(function(){u.$search.focus()},0)});i.on("close",function(){u.$search.attr("tabindex",-1);u.$search.val("")});i.on("focus",function(){i.isOpen()&amp;&amp;u.$search.focus()});i.on("results:all",function(n){if(n.query.term==null||n.query.term===""){var t=u.showSearch(n);t?u.$searchContainer.removeClass("select2-search--hide"):u.$searchContainer.addClass("select2-search--hide")}})},t.prototype.handleSearch=function(){if(!this._keyUpPrevented){var n=this.$search.val();this.trigger("query",{term:n})}this._keyUpPrevented=!1},t.prototype.showSearch=function(){return!0},t});t.define("select2/dropdown/hidePlaceholder",[],function(){function n(n,t,i,r){this.placeholder=this.normalizePlaceholder(i.get("placeholder"));n.call(this,t,i,r)}return n.prototype.append=function(n,t){t.results=this.removePlaceholder(t.results);n.call(this,t)},n.prototype.normalizePlaceholder=function(n,t){return typeof t=="string"&amp;&amp;(t={id:"",text:t}),t},n.prototype.removePlaceholder=function(n,t){for(var u,r=t.slice(0),i=t.length-1;i&gt;=0;i--)u=t[i],this.placeholder.id===u.id&amp;&amp;r.splice(i,1);return r},n});t.define("select2/dropdown/infiniteScroll",["jquery"],function(n){function t(n,t,i,r){this.lastParams={};n.call(this,t,i,r);this.$loadingMore=this.createLoadingMore();this.loading=!1}return t.prototype.append=function(n,t){this.$loadingMore.remove();this.loading=!1;n.call(this,t);this.showLoadingMore(t)&amp;&amp;this.$results.append(this.$loadingMore)},t.prototype.bind=function(t,i,r){var u=this;t.call(this,i,r);i.on("query",function(n){u.lastParams=n;u.loading=!0});i.on("query:append",function(n){u.lastParams=n;u.loading=!0});this.$results.on("scroll",function(){var r=n.contains(document.documentElement,u.$loadingMore[0]),t,i;!u.loading&amp;&amp;r&amp;&amp;(t=u.$results.offset().top+u.$results.outerHeight(!1),i=u.$loadingMore.offset().top+u.$loadingMore.outerHeight(!1),t+50&gt;=i&amp;&amp;u.loadMore())})},t.prototype.loadMore=function(){this.loading=!0;var t=n.extend({},{page:1},this.lastParams);t.page++;this.trigger("query:append",t)},t.prototype.showLoadingMore=function(n,t){return t.pagination&amp;&amp;t.pagination.more},t.prototype.createLoadingMore=function(){var t=n('&lt;li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"&gt;&lt;\/li&gt;'),i=this.options.get("translations").get("loadingMore");return t.html(i(this.lastParams)),t},t});t.define("select2/dropdown/attachBody",["jquery","../utils"],function(n,t){function i(t,i,r){this.$dropdownParent=r.get("dropdownParent")||n(document.body);t.call(this,i,r)}return i.prototype.bind=function(n,t,i){var r=this,u=!1;n.call(this,t,i);t.on("open",function(){if(r._showDropdown(),r._attachPositioningHandler(t),!u){u=!0;t.on("results:all",function(){r._positionDropdown();r._resizeDropdown()});t.on("results:append",function(){r._positionDropdown();r._resizeDropdown()})}});t.on("close",function(){r._hideDropdown();r._detachPositioningHandler(t)});this.$dropdownContainer.on("mousedown",function(n){n.stopPropagation()})},i.prototype.destroy=function(n){n.call(this);this.$dropdownContainer.remove()},i.prototype.position=function(n,t,i){t.attr("class",i.attr("class"));t.removeClass("select2");t.addClass("select2-container--open");t.css({position:"absolute",top:-999999});this.$container=i},i.prototype.render=function(t){var i=n("&lt;span&gt;&lt;\/span&gt;"),r=t.call(this);return i.append(r),this.$dropdownContainer=i,i},i.prototype._hideDropdown=function(){this.$dropdownContainer.detach()},i.prototype._attachPositioningHandler=function(i,r){var u=this,f="scroll.select2."+r.id,o="resize.select2."+r.id,s="orientationchange.select2."+r.id,e=this.$container.parents().filter(t.hasScroll);e.each(function(){n(this).data("select2-scroll-position",{x:n(this).scrollLeft(),y:n(this).scrollTop()})});e.on(f,function(){var t=n(this).data("select2-scroll-position");n(this).scrollTop(t.y)});n(window).on(f+" "+o+" "+s,function(){u._positionDropdown();u._resizeDropdown()})},i.prototype._detachPositioningHandler=function(i,r){var u="scroll.select2."+r.id,f="resize.select2."+r.id,e="orientationchange.select2."+r.id,o=this.$container.parents().filter(t.hasScroll);o.off(u);n(window).off(u+" "+f+" "+e)},i.prototype._positionDropdown=function(){var s=n(window),u=this.$dropdown.hasClass("select2-dropdown--above"),v=this.$dropdown.hasClass("select2-dropdown--below"),t=null,i=this.$container.offset(),r,o;i.bottom=i.top+this.$container.outerHeight(!1);r={height:this.$container.outerHeight(!1)};r.top=i.top;r.bottom=i.top+r.height;var h={height:this.$dropdown.outerHeight(!1)},c={top:s.scrollTop(),bottom:s.scrollTop()+s.height()},l=c.top&lt;i.top-h.height,a=c.bottom&gt;i.bottom+h.height,f={left:i.left,top:r.bottom},e=this.$dropdownParent;e.css("position")==="static"&amp;&amp;(e=e.offsetParent());o=e.offset();f.top-=o.top;f.left-=o.left;u||v||(t="below");a||!l||u?!l&amp;&amp;a&amp;&amp;u&amp;&amp;(t="below"):t="above";(t=="above"||u&amp;&amp;t!=="below")&amp;&amp;(f.top=r.top-o.top-h.height);t!=null&amp;&amp;(this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--"+t),this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--"+t));this.$dropdownContainer.css(f)},i.prototype._resizeDropdown=function(){var n={width:this.$container.outerWidth(!1)+"px"};this.options.get("dropdownAutoWidth")&amp;&amp;(n.minWidth=n.width,n.position="relative",n.width="auto");this.$dropdown.css(n)},i.prototype._showDropdown=function(){this.$dropdownContainer.appendTo(this.$dropdownParent);this._positionDropdown();this._resizeDropdown()},i});t.define("select2/dropdown/minimumResultsForSearch",[],function(){function n(t){for(var u,i=0,r=0;r&lt;t.length;r++)u=t[r],u.children?i+=n(u.children):i++;return i}function t(n,t,i,r){this.minimumResultsForSearch=i.get("minimumResultsForSearch");this.minimumResultsForSearch&lt;0&amp;&amp;(this.minimumResultsForSearch=Infinity);n.call(this,t,i,r)}return t.prototype.showSearch=function(t,i){return n(i.data.results)&lt;this.minimumResultsForSearch?!1:t.call(this,i)},t});t.define("select2/dropdown/selectOnClose",[],function(){function n(){}return n.prototype.bind=function(n,t,i){var r=this;n.call(this,t,i);t.on("close",function(n){r._handleSelectOnClose(n)})},n.prototype._handleSelectOnClose=function(n,t){var r,u,i;t&amp;&amp;t.originalSelect2Event!=null&amp;&amp;(r=t.originalSelect2Event,r._type==="select"||r._type==="unselect")||(u=this.getHighlightedResults(),u.length&lt;1)||(i=u.data("data"),i.element!=null&amp;&amp;i.element.selected||i.element==null&amp;&amp;i.selected)||this.trigger("select",{data:i})},n});t.define("select2/dropdown/closeOnSelect",[],function(){function n(){}return n.prototype.bind=function(n,t,i){var r=this;n.call(this,t,i);t.on("select",function(n){r._selectTriggered(n)});t.on("unselect",function(n){r._selectTriggered(n)})},n.prototype._selectTriggered=function(n,t){var i=t.originalEvent;i&amp;&amp;i.ctrlKey||this.trigger("close",{originalEvent:i,originalSelect2Event:t})},n});t.define("select2/i18n/en",[],function(){return{errorLoading:function(){return"The results could not be loaded."},inputTooLong:function(n){var t=n.input.length-n.maximum,i="Please delete "+t+" character";return t!=1&amp;&amp;(i+="s"),i},inputTooShort:function(n){var t=n.minimum-n.input.length;return"Please enter "+t+" or more characters"},loadingMore:function(){return"Loading more results…"},maximumSelected:function(n){var t="You can only select "+n.maximum+" item";return n.maximum!=1&amp;&amp;(t+="s"),t},noResults:function(){return"No results found"},searching:function(){return"Searching…"}}});t.define("select2/defaults",["jquery","require","./results","./selection/single","./selection/multiple","./selection/placeholder","./selection/allowClear","./selection/search","./selection/eventRelay","./utils","./translation","./diacritics","./data/select","./data/array","./data/ajax","./data/tags","./data/tokenizer","./data/minimumInputLength","./data/maximumInputLength","./data/maximumSelectionLength","./dropdown","./dropdown/search","./dropdown/hidePlaceholder","./dropdown/infiniteScroll","./dropdown/attachBody","./dropdown/minimumResultsForSearch","./dropdown/selectOnClose","./dropdown/closeOnSelect","./i18n/en"],function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p,w,b,k,d,g,nt,tt,it,rt,ut,ft,et,ot){function st(){this.reset()}st.prototype.apply=function(l){var vt,yt,pt,wt,bt,kt,dt,ct,lt,st,ot,ht,gt,at;if(l=n.extend(!0,{},this.defaults,l),l.dataAdapter==null&amp;&amp;(l.dataAdapter=l.ajax!=null?y:l.data!=null?v:a,l.minimumInputLength&gt;0&amp;&amp;(l.dataAdapter=h.Decorate(l.dataAdapter,b)),l.maximumInputLength&gt;0&amp;&amp;(l.dataAdapter=h.Decorate(l.dataAdapter,k)),l.maximumSelectionLength&gt;0&amp;&amp;(l.dataAdapter=h.Decorate(l.dataAdapter,d)),l.tags&amp;&amp;(l.dataAdapter=h.Decorate(l.dataAdapter,p)),(l.tokenSeparators!=null||l.tokenizer!=null)&amp;&amp;(l.dataAdapter=h.Decorate(l.dataAdapter,w)),l.query!=null&amp;&amp;(vt=t(l.amdBase+"compat/query"),l.dataAdapter=h.Decorate(l.dataAdapter,vt)),l.initSelection!=null&amp;&amp;(yt=t(l.amdBase+"compat/initSelection"),l.dataAdapter=h.Decorate(l.dataAdapter,yt))),l.resultsAdapter==null&amp;&amp;(l.resultsAdapter=i,l.ajax!=null&amp;&amp;(l.resultsAdapter=h.Decorate(l.resultsAdapter,it)),l.placeholder!=null&amp;&amp;(l.resultsAdapter=h.Decorate(l.resultsAdapter,tt)),l.selectOnClose&amp;&amp;(l.resultsAdapter=h.Decorate(l.resultsAdapter,ft))),l.dropdownAdapter==null&amp;&amp;(l.multiple?l.dropdownAdapter=g:(pt=h.Decorate(g,nt),l.dropdownAdapter=pt),l.minimumResultsForSearch!==0&amp;&amp;(l.dropdownAdapter=h.Decorate(l.dropdownAdapter,ut)),l.closeOnSelect&amp;&amp;(l.dropdownAdapter=h.Decorate(l.dropdownAdapter,et)),(l.dropdownCssClass!=null||l.dropdownCss!=null||l.adaptDropdownCssClass!=null)&amp;&amp;(wt=t(l.amdBase+"compat/dropdownCss"),l.dropdownAdapter=h.Decorate(l.dropdownAdapter,wt)),l.dropdownAdapter=h.Decorate(l.dropdownAdapter,rt)),l.selectionAdapter==null&amp;&amp;(l.selectionAdapter=l.multiple?u:r,l.placeholder!=null&amp;&amp;(l.selectionAdapter=h.Decorate(l.selectionAdapter,f)),l.allowClear&amp;&amp;(l.selectionAdapter=h.Decorate(l.selectionAdapter,e)),l.multiple&amp;&amp;(l.selectionAdapter=h.Decorate(l.selectionAdapter,o)),(l.containerCssClass!=null||l.containerCss!=null||l.adaptContainerCssClass!=null)&amp;&amp;(bt=t(l.amdBase+"compat/containerCss"),l.selectionAdapter=h.Decorate(l.selectionAdapter,bt)),l.selectionAdapter=h.Decorate(l.selectionAdapter,s)),typeof l.language=="string"&amp;&amp;(l.language.indexOf("-")&gt;0?(kt=l.language.split("-"),dt=kt[0],l.language=[l.language,dt]):l.language=[l.language]),n.isArray(l.language)){for(ct=new c,l.language.push("en"),lt=l.language,st=0;st&lt;lt.length;st++){ot=lt[st];ht={};try{ht=c.loadPath(ot)}catch(ni){try{ot=this.defaults.amdLanguageBase+ot;ht=c.loadPath(ot)}catch(ti){l.debug&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn('Select2: The language file for "'+ot+'" could not be automatically loaded. A fallback will be used instead.');continue}}ct.extend(ht)}l.translations=ct}else gt=c.loadPath(this.defaults.amdLanguageBase+"en"),at=new c(l.language),at.extend(gt),l.translations=at;return l};st.prototype.reset=function(){function i(n){function t(n){return l[n]||n}return n.replace(/[^\u0000-\u007E]/g,t)}function t(r,u){var f,e,o,s,h,c;if(n.trim(r.term)==="")return u;if(u.children&amp;&amp;u.children.length&gt;0){for(f=n.extend(!0,{},u),e=u.children.length-1;e&gt;=0;e--)o=u.children[e],s=t(r,o),s==null&amp;&amp;f.children.splice(e,1);return f.children.length&gt;0?f:t(r,f)}return(h=i(u.text).toUpperCase(),c=i(r.term).toUpperCase(),h.indexOf(c)&gt;-1)?u:null}this.defaults={amdBase:"./",amdLanguageBase:"./i18n/",closeOnSelect:!0,debug:!1,dropdownAutoWidth:!1,escapeMarkup:h.escapeMarkup,language:ot,matcher:t,minimumInputLength:0,maximumInputLength:0,maximumSelectionLength:0,minimumResultsForSearch:0,selectOnClose:!1,sorter:function(n){return n},templateResult:function(n){return n.text},templateSelection:function(n){return n.text},theme:"default",width:"resolve"}};st.prototype.set=function(t,i){var f=n.camelCase(t),r={},u;r[f]=i;u=h._convertData(r);n.extend(this.defaults,u)};return new st});t.define("select2/options",["require","jquery","./defaults","./utils"],function(n,t,i,r){function u(t,u){if(this.options=t,u!=null&amp;&amp;this.fromElement(u),this.options=i.apply(this.options),u&amp;&amp;u.is("input")){var f=n(this.get("amdBase")+"compat/inputData");this.options.dataAdapter=r.Decorate(this.options.dataAdapter,f)}}return u.prototype.fromElement=function(n){var e=["select2"],f,u,i;this.options.multiple==null&amp;&amp;(this.options.multiple=n.prop("multiple"));this.options.disabled==null&amp;&amp;(this.options.disabled=n.prop("disabled"));this.options.language==null&amp;&amp;(n.prop("lang")?this.options.language=n.prop("lang").toLowerCase():n.closest("[lang]").prop("lang")&amp;&amp;(this.options.language=n.closest("[lang]").prop("lang")));this.options.dir==null&amp;&amp;(this.options.dir=n.prop("dir")?n.prop("dir"):n.closest("[dir]").prop("dir")?n.closest("[dir]").prop("dir"):"ltr");n.prop("disabled",this.options.disabled);n.prop("multiple",this.options.multiple);n.data("select2Tags")&amp;&amp;(this.options.debug&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'),n.data("data",n.data("select2Tags")),n.data("tags",!0));n.data("ajaxUrl")&amp;&amp;(this.options.debug&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."),n.attr("ajax--url",n.data("ajaxUrl")),n.data("ajax--url",n.data("ajaxUrl")));f={};f=t.fn.jquery&amp;&amp;t.fn.jquery.substr(0,2)=="1."&amp;&amp;n[0].dataset?t.extend(!0,{},n[0].dataset,n.data()):n.data();u=t.extend(!0,{},f);u=r._convertData(u);for(i in u)t.inArray(i,e)&gt;-1||(t.isPlainObject(this.options[i])?t.extend(this.options[i],u[i]):this.options[i]=u[i]);return this},u.prototype.get=function(n){return this.options[n]},u.prototype.set=function(n,t){this.options[n]=t},u});t.define("select2/core",["jquery","./options","./utils","./keys"],function(n,t,i,r){var u=function(n,i){var f,e,r,o,s,h,c;n.data("select2")!=null&amp;&amp;n.data("select2").destroy();this.$element=n;this.id=this._generateId(n);i=i||{};this.options=new t(i,n);u.__super__.constructor.call(this);f=n.attr("tabindex")||0;n.data("old-tabindex",f);n.attr("tabindex","-1");e=this.options.get("dataAdapter");this.dataAdapter=new e(n,this.options);r=this.render();this._placeContainer(r);o=this.options.get("selectionAdapter");this.selection=new o(n,this.options);this.$selection=this.selection.render();this.selection.position(this.$selection,r);s=this.options.get("dropdownAdapter");this.dropdown=new s(n,this.options);this.$dropdown=this.dropdown.render();this.dropdown.position(this.$dropdown,r);h=this.options.get("resultsAdapter");this.results=new h(n,this.options,this.dataAdapter);this.$results=this.results.render();this.results.position(this.$results,this.$dropdown);c=this;this._bindAdapters();this._registerDomEvents();this._registerDataEvents();this._registerSelectionEvents();this._registerDropdownEvents();this._registerResultsEvents();this._registerEvents();this.dataAdapter.current(function(n){c.trigger("selection:update",{data:n})});n.addClass("select2-hidden-accessible");n.attr("aria-hidden","true");this._syncAttributes();n.data("select2",this)};return i.Extend(u,i.Observable),u.prototype._generateId=function(n){var t="";return t=n.attr("id")!=null?n.attr("id"):n.attr("name")!=null?n.attr("name")+"-"+i.generateChars(2):i.generateChars(4),t=t.replace(/(:|\.|\[|\]|,)/g,""),"select2-"+t},u.prototype._placeContainer=function(n){n.insertAfter(this.$element);var t=this._resolveWidth(this.$element,this.options.get("width"));t!=null&amp;&amp;n.css("width",t)},u.prototype._resolveWidth=function(n,t){var u,f,e,o,i,s,h,r;if(t=="resolve")return(u=this._resolveWidth(n,"style"),u!=null)?u:this._resolveWidth(n,"element");if(t=="element")return(f=n.outerWidth(!1),f&lt;=0)?"auto":f+"px";if(t=="style"){if(e=n.attr("style"),typeof e!="string")return null;for(o=e.split(";"),i=0,s=o.length;i&lt;s;i=i+1)if(h=o[i].replace(/\s/g,""),r=h.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i),r!==null&amp;&amp;r.length&gt;=1)return r[1];return null}return t},u.prototype._bindAdapters=function(){this.dataAdapter.bind(this,this.$container);this.selection.bind(this,this.$container);this.dropdown.bind(this,this.$container);this.results.bind(this,this.$container)},u.prototype._registerDomEvents=function(){var t=this,r;this.$element.on("change.select2",function(){t.dataAdapter.current(function(n){t.trigger("selection:update",{data:n})})});this.$element.on("focus.select2",function(n){t.trigger("focus",n)});this._syncA=i.bind(this._syncAttributes,this);this._syncS=i.bind(this._syncSubtree,this);this.$element[0].attachEvent&amp;&amp;this.$element[0].attachEvent("onpropertychange",this._syncA);r=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;r!=null?(this._observer=new r(function(i){n.each(i,t._syncA);n.each(i,t._syncS)}),this._observer.observe(this.$element[0],{attributes:!0,childList:!0,subtree:!1})):this.$element[0].addEventListener&amp;&amp;(this.$element[0].addEventListener("DOMAttrModified",t._syncA,!1),this.$element[0].addEventListener("DOMNodeInserted",t._syncS,!1),this.$element[0].addEventListener("DOMNodeRemoved",t._syncS,!1))},u.prototype._registerDataEvents=function(){var n=this;this.dataAdapter.on("*",function(t,i){n.trigger(t,i)})},u.prototype._registerSelectionEvents=function(){var t=this,i=["toggle","focus"];this.selection.on("toggle",function(){t.toggleDropdown()});this.selection.on("focus",function(n){t.focus(n)});this.selection.on("*",function(r,u){n.inArray(r,i)===-1&amp;&amp;t.trigger(r,u)})},u.prototype._registerDropdownEvents=function(){var n=this;this.dropdown.on("*",function(t,i){n.trigger(t,i)})},u.prototype._registerResultsEvents=function(){var n=this;this.results.on("*",function(t,i){n.trigger(t,i)})},u.prototype._registerEvents=function(){var n=this;this.on("open",function(){n.$container.addClass("select2-container--open")});this.on("close",function(){n.$container.removeClass("select2-container--open")});this.on("enable",function(){n.$container.removeClass("select2-container--disabled")});this.on("disable",function(){n.$container.addClass("select2-container--disabled")});this.on("blur",function(){n.$container.removeClass("select2-container--focus")});this.on("query",function(t){n.isOpen()||n.trigger("open",{});this.dataAdapter.query(t,function(i){n.trigger("results:all",{data:i,query:t})})});this.on("query:append",function(t){this.dataAdapter.query(t,function(i){n.trigger("results:append",{data:i,query:t})})});this.on("keypress",function(t){var i=t.which;n.isOpen()?i===r.ESC||i===r.TAB||i===r.UP&amp;&amp;t.altKey?(n.close(),t.preventDefault()):i===r.ENTER?(n.trigger("results:select",{}),t.preventDefault()):i===r.SPACE&amp;&amp;t.ctrlKey?(n.trigger("results:toggle",{}),t.preventDefault()):i===r.UP?(n.trigger("results:previous",{}),t.preventDefault()):i===r.DOWN&amp;&amp;(n.trigger("results:next",{}),t.preventDefault()):(i===r.ENTER||i===r.SPACE||i===r.DOWN&amp;&amp;t.altKey)&amp;&amp;(n.open(),t.preventDefault())})},u.prototype._syncAttributes=function(){this.options.set("disabled",this.$element.prop("disabled"));this.options.get("disabled")?(this.isOpen()&amp;&amp;this.close(),this.trigger("disable",{})):this.trigger("enable",{})},u.prototype._syncSubtree=function(n,t){var i=!1,f=this,r,u;if(!n||!n.target||n.target.nodeName==="OPTION"||n.target.nodeName==="OPTGROUP"){if(t)if(t.addedNodes&amp;&amp;t.addedNodes.length&gt;0)for(r=0;r&lt;t.addedNodes.length;r++)u=t.addedNodes[r],u.selected&amp;&amp;(i=!0);else t.removedNodes&amp;&amp;t.removedNodes.length&gt;0&amp;&amp;(i=!0);else i=!0;i&amp;&amp;this.dataAdapter.current(function(n){f.trigger("selection:update",{data:n})})}},u.prototype.trigger=function(n,t){var r=u.__super__.trigger,f={open:"opening",close:"closing",select:"selecting",unselect:"unselecting"},e,i;if(t===undefined&amp;&amp;(t={}),n in f&amp;&amp;(e=f[n],i={prevented:!1,name:n,args:t},r.call(this,e,i),i.prevented)){t.prevented=!0;return}r.call(this,n,t)},u.prototype.toggleDropdown=function(){this.options.get("disabled")||(this.isOpen()?this.close():this.open())},u.prototype.open=function(){this.isOpen()||this.trigger("query",{})},u.prototype.close=function(){this.isOpen()&amp;&amp;this.trigger("close",{})},u.prototype.isOpen=function(){return this.$container.hasClass("select2-container--open")},u.prototype.hasFocus=function(){return this.$container.hasClass("select2-container--focus")},u.prototype.focus=function(){this.hasFocus()||(this.$container.addClass("select2-container--focus"),this.trigger("focus",{}))},u.prototype.enable=function(n){this.options.get("debug")&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.');(n==null||n.length===0)&amp;&amp;(n=[!0]);var t=!n[0];this.$element.prop("disabled",t)},u.prototype.data=function(){this.options.get("debug")&amp;&amp;arguments.length&gt;0&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');var n=[];return this.dataAdapter.current(function(t){n=t}),n},u.prototype.val=function(t){if(this.options.get("debug")&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),t==null||t.length===0)return this.$element.val();var i=t[0];n.isArray(i)&amp;&amp;(i=n.map(i,function(n){return n.toString()}));this.$element.val(i).trigger("change")},u.prototype.destroy=function(){this.$container.remove();this.$element[0].detachEvent&amp;&amp;this.$element[0].detachEvent("onpropertychange",this._syncA);this._observer!=null?(this._observer.disconnect(),this._observer=null):this.$element[0].removeEventListener&amp;&amp;(this.$element[0].removeEventListener("DOMAttrModified",this._syncA,!1),this.$element[0].removeEventListener("DOMNodeInserted",this._syncS,!1),this.$element[0].removeEventListener("DOMNodeRemoved",this._syncS,!1));this._syncA=null;this._syncS=null;this.$element.off(".select2");this.$element.attr("tabindex",this.$element.data("old-tabindex"));this.$element.removeClass("select2-hidden-accessible");this.$element.attr("aria-hidden","false");this.$element.removeData("select2");this.dataAdapter.destroy();this.selection.destroy();this.dropdown.destroy();this.results.destroy();this.dataAdapter=null;this.selection=null;this.dropdown=null;this.results=null},u.prototype.render=function(){var t=n('&lt;span class="select2 select2-container"&gt;&lt;span class="selection"&gt;&lt;\/span&gt;&lt;span class="dropdown-wrapper" aria-hidden="true"&gt;&lt;\/span&gt;&lt;\/span&gt;');return t.attr("dir",this.options.get("dir")),this.$container=t,this.$container.addClass("select2-container--"+this.options.get("theme")),t.data("element",this.$element),t},u});t.define("select2/compat/utils",["jquery"],function(n){function t(t,i,r){var u,f=[],e;u=n.trim(t.attr("class"));u&amp;&amp;(u=""+u,n(u.split(/\s+/)).each(function(){this.indexOf("select2-")===0&amp;&amp;f.push(this)}));u=n.trim(i.attr("class"));u&amp;&amp;(u=""+u,n(u.split(/\s+/)).each(function(){this.indexOf("select2-")!==0&amp;&amp;(e=r(this),e!=null&amp;&amp;f.push(e))}));t.attr("class",f.join(" "))}return{syncCssClasses:t}});t.define("select2/compat/containerCss",["jquery","./utils"],function(n,t){function r(){return null}function i(){}return i.prototype.render=function(i){var o=i.call(this),u=this.options.get("containerCssClass")||"",f,s,e;return n.isFunction(u)&amp;&amp;(u=u(this.$element)),f=this.options.get("adaptContainerCssClass"),f=f||r,u.indexOf(":all:")!==-1&amp;&amp;(u=u.replace(":all:",""),s=f,f=function(n){var t=s(n);return t!=null?t+" "+n:n}),e=this.options.get("containerCss")||{},n.isFunction(e)&amp;&amp;(e=e(this.$element)),t.syncCssClasses(o,this.$element,f),o.css(e),o.addClass(u),o},i});t.define("select2/compat/dropdownCss",["jquery","./utils"],function(n,t){function r(){return null}function i(){}return i.prototype.render=function(i){var o=i.call(this),u=this.options.get("dropdownCssClass")||"",f,s,e;return n.isFunction(u)&amp;&amp;(u=u(this.$element)),f=this.options.get("adaptDropdownCssClass"),f=f||r,u.indexOf(":all:")!==-1&amp;&amp;(u=u.replace(":all:",""),s=f,f=function(n){var t=s(n);return t!=null?t+" "+n:n}),e=this.options.get("dropdownCss")||{},n.isFunction(e)&amp;&amp;(e=e(this.$element)),t.syncCssClasses(o,this.$element,f),o.css(e),o.addClass(u),o},i});t.define("select2/compat/initSelection",["jquery"],function(n){function t(n,t,i){i.get("debug")&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn("Select2: The `initSelection` option has been deprecated in favor of a custom data adapter that overrides the `current` method. This method is now called multiple times instead of a single time when the instance is initialized. Support will be removed for the `initSelection` option in future versions of Select2");this.initSelection=i.get("initSelection");this._isInitialized=!1;n.call(this,t,i)}return t.prototype.current=function(t,i){var r=this;if(this._isInitialized){t.call(this,i);return}this.initSelection.call(null,this.$element,function(t){r._isInitialized=!0;n.isArray(t)||(t=[t]);i(t)})},t});t.define("select2/compat/inputData",["jquery"],function(n){function t(n,t,i){this._currentData=[];this._valueSeparator=i.get("valueSeparator")||",";t.prop("type")==="hidden"&amp;&amp;i.get("debug")&amp;&amp;console&amp;&amp;console.warn&amp;&amp;console.warn("Select2: Using a hidden input with Select2 is no longer supported and may stop working in the future. It is recommended to use a `&lt;select&gt;` element instead.");n.call(this,t,i)}return t.prototype.current=function(t,i){function f(t,i){var r=[];return t.selected||n.inArray(t.id,i)!==-1?(t.selected=!0,r.push(t)):t.selected=!1,t.children&amp;&amp;r.push.apply(r,f(t.children,i)),r}for(var e,r=[],u=0;u&lt;this._currentData.length;u++)e=this._currentData[u],r.push.apply(r,f(e,this.$element.val().split(this._valueSeparator)));i(r)},t.prototype.select=function(t,i){if(this.options.get("multiple")){var r=this.$element.val();r+=this._valueSeparator+i.id;this.$element.val(r);this.$element.trigger("change")}else this.current(function(t){n.map(t,function(n){n.selected=!1})}),this.$element.val(i.id),this.$element.trigger("change")},t.prototype.unselect=function(n,t){var i=this;t.selected=!1;this.current(function(n){for(var u,f=[],r=0;r&lt;n.length;r++)(u=n[r],t.id!=u.id)&amp;&amp;f.push(u.id);i.$element.val(f.join(i._valueSeparator));i.$element.trigger("change")})},t.prototype.query=function(n,t,i){for(var e,u,f=[],r=0;r&lt;this._currentData.length;r++)e=this._currentData[r],u=this.matches(t,e),u!==null&amp;&amp;f.push(u);i({results:f})},t.prototype.addOptions=function(t,i){var r=n.map(i,function(t){return n.data(t[0],"data")});this._currentData.push.apply(this._currentData,r)},t});t.define("select2/compat/matcher",["jquery"],function(n){function t(t){function i(i,r){var u=n.extend(!0,{},r),f,e,o;if(i.term==null||n.trim(i.term)==="")return u;if(r.children){for(f=r.children.length-1;f&gt;=0;f--)e=r.children[f],o=t(i.term,e.text,e),o||u.children.splice(f,1);if(u.children.length&gt;0)return u}return t(i.term,r.text,r)?u:null}return i}return t});t.define("select2/compat/query",[],function(){function n(n,t,i){i.get("debug")&amp;&amp;window.console&amp;&amp;console.warn&amp;&amp;console.warn("Select2: The `query` option has been deprecated in favor of a custom data adapter that overrides the `query` method. Support will be removed for the `query` option in future versions of Select2.");n.call(this,t,i)}return n.prototype.query=function(n,t,i){t.callback=i;var r=this.options.get("query");r.call(null,t)},n});t.define("select2/dropdown/attachContainer",[],function(){function n(n,t,i){n.call(this,t,i)}return n.prototype.position=function(n,t,i){var r=i.find(".dropdown-wrapper");r.append(t);t.addClass("select2-dropdown--below");i.addClass("select2-container--below")},n});t.define("select2/dropdown/stopPropagation",[],function(){function n(){}return n.prototype.bind=function(n,t,i){n.call(this,t,i);this.$dropdown.on("blur change click dblclick focus focusin focusout input keydown keyup keypress mousedown mouseenter mouseleave mousemove mouseover mouseup search touchend touchstart",function(n){n.stopPropagation()})},n});t.define("select2/selection/stopPropagation",[],function(){function n(){}return n.prototype.bind=function(n,t,i){n.call(this,t,i);this.$selection.on("blur change click dblclick focus focusin focusout input keydown keyup keypress mousedown mouseenter mouseleave mousemove mouseover mouseup search touchend touchstart",function(n){n.stopPropagation()})},n});
/*!
       * jQuery Mousewheel 3.1.13
       *
       * Copyright jQuery Foundation and other contributors
       * Released under the MIT license
       * http://jquery.org/license
       */
return function(i){typeof t.define=="function"&amp;&amp;t.define.amd?t.define("jquery-mousewheel",["jquery"],i):typeof exports=="object"?module.exports=i:i(n)}(function(n){function e(r){var f=r||window.event,w=h.call(arguments,1),l=0,o=0,e=0,a=0,b=0,k=0,v,y,p;if(r=n.event.fix(f),r.type="mousewheel","detail"in f&amp;&amp;(e=f.detail*-1),"wheelDelta"in f&amp;&amp;(e=f.wheelDelta),"wheelDeltaY"in f&amp;&amp;(e=f.wheelDeltaY),"wheelDeltaX"in f&amp;&amp;(o=f.wheelDeltaX*-1),"axis"in f&amp;&amp;f.axis===f.HORIZONTAL_AXIS&amp;&amp;(o=e*-1,e=0),l=e===0?o:e,"deltaY"in f&amp;&amp;(e=f.deltaY*-1,l=e),"deltaX"in f&amp;&amp;(o=f.deltaX,e===0&amp;&amp;(l=o*-1)),e!==0||o!==0)return f.deltaMode===1?(v=n.data(this,"mousewheel-line-height"),l*=v,e*=v,o*=v):f.deltaMode===2&amp;&amp;(y=n.data(this,"mousewheel-page-height"),l*=y,e*=y,o*=y),a=Math.max(Math.abs(e),Math.abs(o)),(!t||a&lt;t)&amp;&amp;(t=a,s(f,a)&amp;&amp;(t/=40)),s(f,a)&amp;&amp;(l/=40,o/=40,e/=40),l=Math[l&gt;=1?"floor":"ceil"](l/t),o=Math[o&gt;=1?"floor":"ceil"](o/t),e=Math[e&gt;=1?"floor":"ceil"](e/t),i.settings.normalizeOffset&amp;&amp;this.getBoundingClientRect&amp;&amp;(p=this.getBoundingClientRect(),b=r.clientX-p.left,k=r.clientY-p.top),r.deltaX=o,r.deltaY=e,r.deltaFactor=t,r.offsetX=b,r.offsetY=k,r.deltaMode=0,w.unshift(r,l,o,e),u&amp;&amp;clearTimeout(u),u=setTimeout(c,200),(n.event.dispatch||n.event.handle).apply(this,w)}function c(){t=null}function s(n,t){return i.settings.adjustOldDeltas&amp;&amp;n.type==="mousewheel"&amp;&amp;t%120==0}var o=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],r="onwheel"in document||document.documentMode&gt;=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],h=Array.prototype.slice,u,t,f,i;if(n.event.fixHooks)for(f=o.length;f;)n.event.fixHooks[o[--f]]=n.event.mouseHooks;i=n.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var t=r.length;t;)this.addEventListener(r[--t],e,!1);else this.onmousewheel=e;n.data(this,"mousewheel-line-height",i.getLineHeight(this));n.data(this,"mousewheel-page-height",i.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var t=r.length;t;)this.removeEventListener(r[--t],e,!1);else this.onmousewheel=null;n.removeData(this,"mousewheel-line-height");n.removeData(this,"mousewheel-page-height")},getLineHeight:function(t){var r=n(t),i=r["offsetParent"in n.fn?"offsetParent":"parent"]();return i.length||(i=n("body")),parseInt(i.css("fontSize"),10)||parseInt(r.css("fontSize"),10)||16},getPageHeight:function(t){return n(t).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};n.fn.extend({mousewheel:function(n){return n?this.bind("mousewheel",n):this.trigger("mousewheel")},unmousewheel:function(n){return this.unbind("mousewheel",n)}})}),t.define("jquery.select2",["jquery","jquery-mousewheel","./select2/core","./select2/defaults"],function(n,t,i,r){if(n.fn.select2==null){var u=["open","close","destroy"];n.fn.select2=function(t){if(t=t||{},typeof t=="object")return this.each(function(){var r=n.extend(!0,{},t),u=new i(n(this),r)}),this;if(typeof t=="string"){var r,f=Array.prototype.slice.call(arguments,1);return(this.each(function(){var i=n(this).data("select2");i==null&amp;&amp;window.console&amp;&amp;console.error&amp;&amp;console.error("The select2('"+t+"') method was called on an element that is not using Select2.");r=i[t].apply(i,f)}),n.inArray(t,u)&gt;-1)?this:r}throw new Error("Invalid arguments for Select2: "+t);}}return n.fn.select2.defaults==null&amp;&amp;(n.fn.select2.defaults=r),i}),{define:t.define,require:t.require}}(),i=t.require("jquery.select2");return n.fn.select2.amd=t,i});</contentText>
  </asset>
  <asset name="templates/act.adjuststock.json" mimeType="text/javascript">
    <contentText>{
  "$type": "Act",
  "template": {
    "mnemonic": "Act.AdjustStock"
  },
  "moodConcept": "EC74541F-87C4-4327-A4B9-97F325501747",
  "classConcept": "28D022C6-8A8B-47C4-9E6A-2BC67308739E",
  "statusConcept": "C34FCBF1-E0FE-4989-90FD-0DC49E1B9685",
  "actTime": "{{now}}",
  "participation": {
    "Location": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{facilityId}}"
    },
    "Authororiginator": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{userId}}"
    },
    "Consumable": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "playerModel": {
        "$type":  "ManufacturedMaterial",
        "id": ""
      },
      "actModel": {
        "$type": "QuantityObservation",
        "reasonConcept": "",
        "value":  0
      }
    }
  }
}
</contentText>
  </asset>
  <asset name="templates/act.countstock.json" mimeType="text/javascript">
    <contentText>{
  "$type": "Act",
  "template": {
    "mnemonic": "Act.CountStock"
  },
  "moodConcept": "EC74541F-87C4-4327-A4B9-97F325501747",
  "classConcept": "28D022C6-8A8B-47C4-9E6A-2BC67308739E",
  "statusConcept": "C34FCBF1-E0FE-4989-90FD-0DC49E1B9685",
  "actTime": "{{now}}",
  "participation": {
    "Location": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{facilityId}}"
    },
    "Authororiginator": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{userId}}"
    },
    "Consumable": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "playerModel": {
        "$type":  "ManufacturedMaterial",
        "id": ""
      },
      "actModel": {
        "$type": "QuantityObservation",
        "reasonConcept": "5edb55a1-723c-46e4-9fee-2c94db20b7ab",
        "value":  0
      }
    }
  }
}
</contentText>
  </asset>
  <asset name="templates/act.observation.weight.json" mimeType="text/javascript">
    <contentText>{
  "$type": "QuantityObservation",
  "template": {
    "mnemonic": "act.observation.weight"
  },
  "moodConcept": "EC74541F-87C4-4327-A4B9-97F325501747",
  "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
  "typeConceptModel": {
    "id": "a261f8cd-69b0-49aa-91f4-e6d3e5c612ed",
    "mnemonic": "VitalSign-Weight"
  },
  "value" :  null,
  "actTime": "{{now}}",
  "unitOfMeasure": "a0a8d4db-db72-4bc7-9b8c-c07cef7bc796",
  "participation": {
    "Location": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{facilityId}}"
    },
    "Performer": {
      "player": "{{userEntityId}}"
    },
    "Authororiginator": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{userEntityId}}"
    },
    "RecordTarget": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": ""
    }
  }
}</contentText>
  </asset>
  <asset name="templates/act.substanceadmin.immunization.json" mimeType="text/javascript">
    <contentText>{
  "$type": "SubstanceAdministration",
  "template": {
    "mnemonic": "act.substanceadmin.immunization"
  },
  "moodConcept": "EC74541F-87C4-4327-A4B9-97F325501747",
  "classConcept": "932A3C7E-AD77-450A-8A1F-030FC2855450",
  "typeConcept": "6E7A3521-2967-4C0A-80EC-6C5C197B2178",
  "actTime": "{{now}}",
  "value": 0.0,
  "unitOfMeasure": "a0a8d4db-db72-4bc7-9b8c-c07cef7bc796"
}</contentText>
  </asset>
  <asset name="templates/act.substanceadmin.supplement.json" mimeType="text/javascript">
    <contentText>{
  "$type": "SubstanceAdministration",
  "template": {
    "mnemonic": "act.substanceadmin.supplement"
  },
  "moodConcept": "EC74541F-87C4-4327-A4B9-97F325501747",
  "classConcept": "932A3C7E-AD77-450A-8A1F-030FC2855450",
  "typeConcept": "7D84A057-1FCC-4054-A51F-B77D230FC6D1",
  "actTime": "{{now}}"
}</contentText>
  </asset>
  <asset name="templates/act.transferstock.json" mimeType="text/javascript">
    <contentText>{
  "$type": "Act",
  "template": {
    "mnemonic": "act.transferstock"
  },
  "moodConcept": "E658CA72-3B6A-4099-AB6E-7CF6861A5B61",
  "classConcept": "FFD8304A-43EC-4EBC-95FC-FB4A4F2338F0",
  "statusConcept": "C34FCBF1-E0FE-4989-90FD-0DC49E1B9685",
  "actTime": "{{now}}",
  "participation": {
    "Location": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{facilityId}}"
    },
    "Receiver": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": ""
    },
    "Authororiginator": {
      "classConcept": "F51DFDCD-039B-4E1F-90BE-3CF56AEF8DA4",
      "statusConcept": "C8064CBD-FA06-4530-B430-1A52F1530C27",
      "player": "{{userId}}"
    }
  }
}</contentText>
  </asset>
  <asset name="views/index.html" mimeType="text/html">
    <contentHtml>
      <view name="org-openiz-core" abstract="true">
        <route>/core</route>
        <view abstract="false" />
      </view>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <ui-view>
          </ui-view>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/alerts/view.html" mimeType="text/html">
    <contentHtml>
      <title>Alert</title>
      <script>/org.openiz.core/controllers/alerts/view.js</script>
      <view name="org-openiz-core.alert" abstract="false">
        <route>/alert/{alertId}</route>
        <view abstract="false">
          <title>Alert</title>
          <controller>ViewAlertController</controller>
        </view>
      </view>
      <content>
        <div class="container" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ alert.subject }}</h3>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12">
              <span class="text-muted">{{ alert.time | date : 'yyyy-MMM-dd' }}</span>
            </div>
          </div>
          <div class="row">
            <label class="col-xs-2">{{ 'locale.alerts.from' | i18n }}</label>
            <div class="col-xs-10">{{ alert.from }}</div>
          </div>
          <div class="row">
            <label class="col-xs-2">{{ 'locale.alerts.to' | i18n }}</label>
            <div class="col-xs-10">{{ alert.to }}</div>
          </div>
          <div class="row">
            <hr />
          </div>
          <div class="row">
            <div class="well" ng-bind-html="alert.body">
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12">
              <div class="btn-group pull-right">
                <button class="btn-danger btn btn-lg" ng-click="deleteAlert(alert)">
                  <span class="glyphicon glyphicon-trash">
                  </span>
                        {{ 'locale.action.delete' | i18n }}
                    </button>
                <button class="btn-primary btn btn-lg" ng-click="updateAlert()">
                  <span class="glyphicon glyphicon-ok">
                  </span>
                        {{ 'locale.action.acknowledge' | i18n }}
                    </button>
              </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/encounters/history/vaccination.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/encounters/history/vaccination.js</script>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="oiz-vaccination-history form-horizontal form-group" ng-controller="VaccinationHistoryController">
          <!-- TODO: Call the forecaster for this -->
          <div class="table-responsive">
            <table class="table table-striped oiz-vaccination-history-table">
              <thead>
                <tr>
                  <th class="vaccine-table-column">
                  </th>
                  <th class="vaccine-table-column" style="text-align:center">0</th>
                  <th class="vaccine-table-column" style="text-align:center">1</th>
                  <th class="vaccine-table-column" style="text-align:center">2</th>
                  <th class="vaccine-table-column" style="text-align:center">3</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="(antigenName, event) in display._vaccineAdministrations">
                  <td>{{ antigenName }}</td>
                  <td ng-repeat="sequence in event">
                    <div ng-if="sequence != null" class="input-group">
                      <span class="input-group-addon">
                        <label class="control control--checkbox">
                          <input type="checkbox" ng-model="sequence._enabled" ng-disabled="!(event[sequence.doseSequence - 1] == null || event[sequence.doseSequence - 1]._enabled == 1) || sequence.moodConcept.toUpperCase() == 'EC74541F-87C4-4327-A4B9-97F325501747' || sequence.startTime &gt; $root.page.maxEventTime ? 'disabled' : null" value="1" name="tetanusImmunity" />
                          <div class="control__indicator">
                          </div>
                        </label>
                      </span>
                      <input ng-disabled="!sequence._enabled" type="date" class="form-control" max="{{ $root.page.loadTime | date: 'yyyy-MM-dd'}}" ng-model="sequence.actTime" min="{{(event[sequence.doseSequence - 1] == null ? patient.dateOfBirth : event[sequence.doseSequence - 1].actTime)| date: 'yyyy-MM-dd'}}" />
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/encounters/partials/relationships.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/binding">
          <div ng-repeat="enc in encounter.relationship">
            <div class="panel panel-default">
              <div class="panel-heading">
                <span>{{ enc.template.name }}</span>
              </div>
              <div class="panel-collapse in">
                <div class="panel-body" ng-include="enc.template.formUrl">
                </div>
              </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/encounters/register/actionpanel.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="panel panel-info oiz-encounter-action-panel" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="panel-heading">
            <span class="panel-title">{{ 'locale.encounters.actionsPerformed.title' | i18n }}</span>
          </div>
          <table class="panel-body table table-striped table-responsive">
            <tr ng-repeat="act in encounter.relationship.HasComponent" ng-if="act.targetModel.moodConcept == 'ec74541f-87c4-4327-a4b9-97f325501747'">
              <td>
                <div class="container-fluid">
                  <div class="row">
                    <div ng-include="OpenIZ.App.resolveTemplate(act.targetModel.template.mnemonic)">
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-xs-12">
                      <div ng-if="act._created" class="btn-group pull-right">
                        <button type="button" ng-if="$index &gt; 0" ng-click="delSubEncounter(encounter.relationship.HasComponent, $index)" class="btn btn-danger">
                          <span class="glyphicon glyphicon-trash">
                          </span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
          </table>
          <div class="panel-body">
            <div class="row">
              <div class="btn-group pull-right dropdown">
                <button type="button" class="btn btn-success" data-toggle="dropdown">
                  <span class="glyphicon glyphicon-plus-sign">
                  </span>
                  <span class="caret">
                  </span>
                </button>
                <ul class="dropdown-menu">
                  <li>
                    <a ng-click="addSubEncounter(encounter.relationship.HasComponent, 'act.substanceadmin.immunization')">Vaccination</a>
                  </li>
                  <li>
                    <a ng-click="addSubEncounter(encounter.relationship.HasComponent, 'act.observation.weight')">Weight</a>
                  </li>
                  <li>
                    <!--<a ng-click="addSubEncounter(encounter.relationship.HasComponent, 'Act.Observation.Height')">Height</a>-->
                  </li>
                  <li>
                    <a ng-click="addSubEncounter(encounter.relationship.HasComponent, 'act.substanceadmin.supplement')">Supplement</a>
                  </li>
                  <li>
                    <!--<a ng-click="addSubEncounter(encounter.relationship.HasComponent, 'Act.Observation.CauseOfDeath')">Cause of Death</a>-->
                  </li>
                  <li>
                    <a ng-click="addSubEncounter(encounter.relationship.HasComponent, 'act.observation.aefi')">Adverse Event</a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/encounters/register/encounter.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/encounters/register/encounter.js</script>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" ng-controller="EncounterEntryController">
          <div class="form-group row" ng-class="{'has-error' : (masterForm.encounterDate.$touched||masterForm.$submitted) &amp;&amp; masterForm.encounterDate.$invalid}">
            <label for="encounterDate" class="col-xs-12 col-sm-2">{{ 'locale.encounters.date' | i18n }}</label>
            <div class="col-xs-12 col-sm-10">
              <input required="required" type="datetime-local" name="encounterDate" max="{{$root.page.loadTime | date: 'yyyy-MM-ddTHH:mm:SS'}}" class="form-control" ng-model="encounter.actTime" />
            </div>
          </div>
          <div class="col-xs-offset-2 col-xs-10" ng-if="(masterForm.encounterDate.$touched||masterForm.$submitted)&amp;&amp;masterForm.encounterDate.$invalid">
            <p class="help-block text-danger">{{ 'locale.encounter.errors.date' | i18n }}</p>
          </div>
          <div class="form-group row">
            <label class="col-xs-12 col-sm-2">{{ 'locale.encounters.facility' | i18n }}</label>
            <div class="col-xs-12 col-sm-10">
              <div class="input-group">
                <span class="input-group-addon">
                  <input type="checkbox" ng-model="encounter.participation.Location._enabled" value="1" />
                </span>
                <select style="width:100%; height:100%" ng-disabled="!encounter.participation.Location._enabled" id="encounterFacility" name="encounterFacility" ng-model="encounter.participation.Location.player" class="form-control" oiz-entitysearch="Place" data-filter="{ &quot;classConcept&quot; :  &quot;FF34DFA7-C6D3-4F8B-BC9F-14BCDC13BA6C&quot; }">
                  <option value="">{{ 'locale.common.location.none' | i18n }}</option>
                  <option selected="selected" value="{{$root.session.entity.relationship.DedicatedServiceDeliveryLocation.target}}">{{$root.session.entity.relationship.DedicatedServiceDeliveryLocation.targetModel.name.OfficialRecord | oizEntityName }}</option>
                </select>
              </div>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-xs-12 col-sm-2">{{ 'locale.encounters.disposition' | i18n }}</label>
            <div class="col-xs-12 col-sm-10">
              <select ng-model="encounter.dischargeDisposition" bind:source="Concept" bind:filter="conceptSet.mnemonic=DischargeDisposition" bind:value="name[{{ locale }}].value" class="form-control">
              </select>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-xs-12 col-sm-2">{{ 'locale.encounters.performer' | i18n }}</label>
            <div class="col-xs-12 col-sm-10">
              <select style="width:100%; height:100%" id="encounterPerformer" name="encounterPerformer" class="form-control" ng-model="encounter.participation.Performer.player" oiz-entitysearch="UserEntity">
                <option selected="selected" value="{{encounter.participation.Performer.player}}">{{encounter.participation.Performer.playerModel.name.OfficialRecord | oizEntityName }}</option>
              </select>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-xs-12 col-sm-2">{{ 'locale.encounters.verifier' | i18n }}</label>
            <div class="col-xs-12 col-sm-10">
              <div class="input-group">
                <select style="width:100%; height:100%" id="encounterVerifier" name="encounterVerifier" class="form-control" ng-model="encounter.participation.Verifier.player" oiz-entitysearch="UserEntity">
                  <option selected="selected" value="{{encounter.participation.Verifier.player}}">{{encounter.participation.Verifier.playerModel.name.OfficialRecord | oizEntityName }}</option>
                </select>
              </div>
            </div>
          </div>
          <div ng-include="OpenIZ.App.resolveTemplate(encounter.template.mnemonic)">
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/modal/authenticate.html" mimeType="text/html">
    <contentHtml>
      <script>~/controllers/common/modal/authenticate.js</script>
      <content>
        <div class="modal fade" id="authenticationDialog" ng-controller="AuthenticationDialogController" tabindex="-1" role="dialog" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <form ng-submit="authenticate(masterForm)" name="masterForm" novalidate="novalidate">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">X</span>
                  </button>
                  <h4 class="modal-title">{{ 'locale.security.authenticateHeader' | i18n }} - {{ $root.system.config.realmName }}</h4>
                </div>
                <div class="modal-body">
                  <div class="container-fluid">
                    <!--#include virtual="~/views/common/security/authenticate.html"-->
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'locale.action.cancel' | i18n }}</button>
                  <button type="submit" class="btn btn-primary">{{ 'locale.security.login.button.login' | i18n }}</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/modal/wait.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div id="waitModal" style="display:block" class="modal fade in" tabindex="-1" data-keyboard="false" xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet">
          <div class="modal-dialog in">
            <div class="modal-content">
              <div class="text-center modal-body">
                <span id="waitModalText">{{ 'locale.dialog.wait.text' | i18n }}</span>
                <div class="progress">
                  <div id="waitProgressBar" class="progress-bar progress-bar-striped progress-bar-info active" style="width:100%">
                  </div>
                </div>
              </div>
            </div>
          </div>
          <script type="text/javascript">
        // <![CDATA[

        window.onbeforeunload = function () {
            OpenIZ.App.showWait();
        };

        //]]></script>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/demographics-adult.html" mimeType="text/html">
    <contentHtml>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="form-horizontal form-group">
          <!--#include virtual="/org.openiz.core/views/common/patients/register/demographics.html"-->
          <div class="form-group">
            <label class="col-xs-2 control-label" for="patientTelecom">{{ 'locale.patient.demographics.telephone' | i18n }}</label>
            <div class="col-xs-4">
              <div class="input-group">
                <select name="patientTelecomType" id="patientTelecomType" class="form-control" ng-model="patient.telecom.$other.use" bind:source="Concept" bind:value="name[{{ locale }}].value" bind:filter="conceptSet.mnemonic=TelecomAddressUse">
                </select>
              </div>
            </div>
            <div class="col-xs-6">
              <div class="input-group">
                <input type="tel" autocomplete="off" autocapitalize="off" name="patientTelecom" ng-model="patient.telecom.$other.value" class="form-control" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.telephone' | i18n }}" data-content="{{ 'locale.patient.relative.telephone.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/demographics-pediatric.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/patients/register/demographics.js</script>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/bind" class="form-horizontal form-group">
          <!--#include virtual="/org.openiz.core/views/common/patients/register/demographics.html"-->
          <div class="form-group">
            <label class="col-xs-3 control-label" for="multipleBirth">{{ 'locale.patient.demographics.birthOrder' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <select name="multipleBirth" ng-model="patient.multipleBirthOrder" id="multipleBirthSelect" class="form-control ng-cloak">
                  <option value="">{{ 'locale.patient.demographics.multipleBirth.none' | i18n }}</option>
                  <option value="0">{{ 'locale.patient.demographics.multipleBirth.unknown' | i18n }}</option>
                  <option value="1">{{ 'locale.patient.demographics.multipleBirth.first' | i18n }}</option>
                  <option value="2">{{ 'locale.patient.demographics.multipleBirth.second' | i18n }}</option>
                  <option value="3">{{ 'locale.patient.demographics.multipleBirth.third' | i18n }}</option>
                </select>
                <span class="select-arrow-container-alt" role="presentation">
                  <span class="select-arrow" role="presentation">
                  </span>
                </span>
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" title="{{ 'locale.patient.demographics.birthOrder' | i18n }}" data-content="{{ 'locale.patient.demographics.birthOrderHelp' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/demographics.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" class="oiz-demographics" xmlns:bind="http://openiz.org/applet/binding">
          <div class="form-group">
            <label class="col-xs-2 control-label ng-cloak" for="givenName">{{ 'locale.patient.demographics.givenName' | i18n }}</label>
            <div class="col-xs-10">
              <div class="input-group">
                <input type="text" name="givenName" id="givenName" class="tagEntry form-control" aria-describedby="givenNameAddon" oiz-tag="oiz-tag" ng-model="patient.name.OfficialRecord.component.Given" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.givenName' | i18n }}" data-content="{{ 'locale.patient.demographics.givenName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label ng-cloak" for="familyName">{{ 'locale.patient.demographics.familyName' | i18n }}</label>
            <div class="col-xs-10">
              <div class="input-group">
                <input type="text" name="familyName" id="familyName" class="tagEntry form-control" aria-describedby="familyNameAddon" oiz-tag="oiz-tag" ng-model="patient.name.OfficialRecord.component.Family" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.familyName' | i18n }}" data-content="{{ 'locale.patient.demographics.familyName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label ng-cloak" for="dobInput">{{ 'locale.patient.demographics.dateOfBirth' | i18n }}</label>
            <div class="col-xs-10" ng-class="{ 'has-error': (masterForm.date.$touched||masterForm.$submitted) &amp;&amp; masterForm.date.$invalid }">
              <div class="input-group">
                <input ng-readonly="patient.readonly.dateOfBirth" type="date" required="required" name="date" id="dobInput" class="form-control" ng-model="patient.dateOfBirth" max="{{$root.page.loadTime | date: 'yyyy-MM-dd'}}" />
                <span class="input-group-addon">
                  <input ng-readonly="patient.readonly.dateOfBirth" type="checkbox" name="approximateDob" ng-model="patient.dateOfBirthPrecision" value="1" />
                  <label for="approximateDob" class="ng-cloak">
                        {{ 'locale.patient.demographic.dob.fuzzy' | i18n }}
                    </label>
                </span>
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.dateOfBirthPrecision' | i18n }}" data-content="{{ 'locale.patient.demographics.dateOfBirthPrecision.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
              <p ng-show="(masterForm.date.$touched||masterForm.$submitted)&amp;&amp;masterForm.date.$invalid" class="help-block text-danger">{{ 'locale.patient.errors.dob' | i18n }}</p>
            </div>
          </div>
          <div class="form-group" ng-if="patient.version">
            <label class="col-xs-2 control-label ng-cloak" for="deathDate">{{ 'locale.patient.demographics.deceasedDate' | i18n }}</label>
            <div class="col-xs-10">
              <div class="input-group">
                <span class="input-group-addon">
                  <input type="checkbox" ng-model="patient.isDeceased" />
                </span>
                <input ng-readonly="patient.readonly.deceasedDate" ng-disabled="!patient.isDeceased" type="date" ng-required="patient.isDeceased" name="date" id="deathDate" class="form-control" ng-model="patient.deceasedDate" max="{{$root.page.loadTime | date: 'yyyy-MM-dd'}}" min="{{patient.dateOfBirth | date : 'yyyy-MM-dd' }}" />
                <span class="input-group-addon">
                  <input ng-disabled="!patient.isDeceased" ng-readonly="patient.readonly.deceasedDate" type="checkbox" name="approximateDeath" ng-model="patient.deceaseDatePrecision" value="1" />
                  <label for="approxDeath" class="ng-cloak">
                        {{ 'locale.patient.demographic.dob.fuzzy' | i18n }}
                    </label>
                </span>
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.deceasedDate' | i18n }}" data-content="{{ 'locale.patient.demographics.deceasedDate.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
              <p ng-show="(masterForm.date.$touched||masterForm.$submitted)&amp;&amp;masterForm.date.$invalid" class="help-block text-danger">{{ 'locale.patient.errors.dob' | i18n }}</p>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label ng-cloak" for="genderSelect">{{ 'locale.patient.demographics.gender' | i18n }}</label>
            <div class="col-xs-4" ng-class="{ 'has-error': (masterForm.gender.$touched||masterForm.$submitted) &amp;&amp; masterForm.gender.$invalid }">
              <div class="input-group">
                <select ng-disabled="patient.readonly.genderConcept" name="gender" ng-model="patient.genderConcept" required="required" id="genderSelect" class="form-control" aria-describedby="genderAddon" bind:source="Concept" bind:filter="conceptSet.mnemonic=AdministrativeGenderCode" bind:value="name[{{ locale }}].value">
                </select>
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.gender' | i18n }}" data-content="{{ 'locale.patient.demographics.gender.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
              <p ng-show="(masterForm.gender.$touched||masterForm.$submitted)&amp;&amp;masterForm.gender.$invalid" class="help-block text-danger ng-cloak">{{ 'locale.patient.errors.gender' | i18n }}</p>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/identifiers.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/patients/register/identifiers.js</script>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="oiz-patient-identifiers form-horizontal form-group" ng-controller="PatientIdentifiersController">
          <div class="row" ng-repeat="(authority, identifier) in patient.identifier">
            <div class="col-xs-3">
              <div class="input-group">
                <select ng-model="identifier.authority.domainName" class="form-control" ng-change="rebindDomain(authority, identifier)" bind:source="AssigningAuthority" bind:key="domainName" bind:value="name" bind:filter="assigningDevice=null&amp;scope.id=BACD9C6F-3FA9-481E-9636-37457962804D">
                </select>
                <span class="select-arrow-container" role="presentation">
                  <span class="select-arrow" role="presentation">
                  </span>
                </span>
              </div>
            </div>
            <div class="col-xs-9">
              <div class="input-group">
                <input type="text" autocomplete="off" autocapitalize="off" ng-model="identifier.value" class="form-control" />
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button" ng-if="scanBarcode" ng-click="scanBarcode(authority, identifier)">
                    <span class="ng-cloak">
                      <span class="glyphicon glyphicon-barcode">
                      </span> {{ 'locale.action.scan' | i18n }}</span>
                  </button>
                  <button class="btn btn-default" type="button" ng-if="addIdentifier" ng-click="addIdentifier()">
                    <span class="glyphicon glyphicon-plus">
                    </span>
                  </button>
                  <button class="btn btn-default" type="button" ng-if="removeIdentifier" ng-click="removeIdentifier(authority, identifier)">
                    <span class="glyphicon glyphicon-remove">
                    </span>
                  </button>
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.demographics.identifier' | i18n }}" data-content="{{ 'locale.patient.demographics.identifier.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/mothersinfo.html" mimeType="text/html">
    <contentHtml>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="form-horizontal form-group">
          <div class="form-group">
            <label class="col-xs-3 control-label" for="mothersGiven">{{ 'locale.patient.mother.givenName' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <input type="text" name="mothersGiven" id="mothersGiven" select="0" class="tagEntry form-control" oiz-tag="oiz-tag" ng-model="patient.relationship.Mother.targetModel.name.OfficialRecord.component.Given" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.mother.givenName' | i18n }}" data-content="{{ 'locale.patient.mother.givenName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-3 control-label" for="mothersFamily">{{ 'locale.patient.mother.familyName' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <input type="text" name="mothersFamily" id="mothersFamily" select="0" class="tagEntry form-control" oiz-tag="oiz-tag" ng-model="patient.relationship.Mother.targetModel.name.OfficialRecord.component.Family" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.mother.familyName' | i18n }}" data-content="{{ 'locale.patient.mother.familyName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-3 control-label" for="mothersIdentifier">{{ 'locale.patient.mother.identifier' | i18n }}</label>
            <div class="col-xs-4">
              <div class="input-group">
                <select name="mothersIdentifierType" id="mothersIdentifierType" class="form-control" ng-model="patient.relationship.Mother.targetModel.identifier.$other.authority" bind:source="AssigningAuthority" bind:value="name" bind:filter="assigningDevice=null&amp;scope.id=9DE2A846-DDF2-4EBC-902E-84508C5089EA">
                </select>
                <span class="select-arrow-container" role="presentation">
                  <span class="select-arrow" role="presentation">
                  </span>
                </span>
              </div>
            </div>
            <div class="col-xs-5">
              <div class="input-group">
                <input type="text" name="mothersIdentifierValue" ng-model="patient.relationship.Mother.targetModel.identifier.$other.value" class="form-control" />
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button" ng-click="scanBarcode(patient.relationship.Mother.targetModel.identifier.$other.value)">
                    <span>
                      <span class="glyphicon glyphicon-barcode">
                      </span> {{ 'locale.action.scan' | i18n }}</span>
                  </button>
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.mother.identifier' | i18n }}" data-content="{{ 'locale.patient.mother.identifier.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-3 control-label" for="mothersPhoneNumber">{{ 'locale.patient.mother.telephone' | i18n }}</label>
            <div class="col-xs-4">
              <div class="input-group">
                <select name="mothersPhoneType" id="mothersPhoneType" class="form-control" ng-model="patient.relationship.Mother.targetModel.telecom.$other.use" bind:source="Concept" bind:value="name[{{ locale }}].value" bind:filter="conceptSet.mnemonic=TelecomAddressUse">
                </select>
                <span class="select-arrow-container" role="presentation">
                  <span class="select-arrow" role="presentation">
                  </span>
                </span>
              </div>
            </div>
            <div class="col-xs-5">
              <div class="input-group">
                <input type="tel" autocomplete="off" autocapitalize="off" name="mothersPhoneNumber" ng-model="patient.relationship.Mother.targetModel.telecom.$other.value" class="form-control" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.mother.telephone' | i18n }}" data-content="{{ 'locale.patient.mother.telephone.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/relationship-childonly.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/patients/register/identifiers.js</script>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="oiz-patient-identifiers form-horizontal form-group">
          <div class="form-group">
            <label class="col-xs-2 control-label" for="relationType">{{ 'locale.patient.realtive.type' | i18n }}</label>
            <div class="col-xs-10">
              <div class="input-group">
                <select ng-model="patient.relationship.$other.relationshipType" class="form-control" bind:source="Concept" bind:filter="conceptSet.mnemonic=ChildFamilyMember&amp;mnemonic=!Mother" bind:value="name[{{ locale }}].value">
                </select>
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.type' | i18n }}" data-content="{{ 'locale.patient.relative.type.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="relationGivenName">{{ 'locale.patient.realtive.givenName' | i18n }}</label>
            <div class="col-xs-10">
              <div class="input-group">
                <input type="text" name="relationGivenName" id="relationGivenName" class="tagEntry form-control" oiz-tag="oiz-tag" ng-model="patient.relationship.$other.targetModel.name.OfficialRecord.component.Given" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.givenName' | i18n }}" data-content="{{ 'locale.patient.relative.givenName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="relationFamilyName">{{ 'locale.patient.relative.familyName' | i18n }}</label>
            <div class="col-xs-10">
              <div class="input-group">
                <input type="text" name="relationFamilyName" id="relationFamilyName" class="tagEntry form-control" oiz-tag="oiz-tag" ng-model="patient.relationship.$other.targetModel.name.OfficialRecord.component.Family" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.familyName' | i18n }}" data-content="{{ 'locale.patient.relative.familyName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="relationPhoneNumber">{{ 'locale.patient.relative.telephone' | i18n }}</label>
            <div class="col-xs-4">
              <div class="input-group">
                <select name="realtivePhoneNumberType" id="relationPhoneNumberType" class="form-control" ng-model="patient.relationship.$other.targetModel.telecom.$other.use" bind:source="Concept" bind:value="name[{{ locale }}].value" bind:filter="conceptSet.mnemonic=TelecomAddressUse">
                </select>
              </div>
            </div>
            <div class="col-xs-6">
              <div class="input-group">
                <input type="tel" autocomplete="off" autocapitalize="off" name="relationPhoneNumber" ng-model="patient.relationship.$other.targetModel.telecom.$other.value" class="form-control" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.telephone' | i18n }}" data-content="{{ 'locale.patient.relative.telephone.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/register/relationship.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/patients/register/identifiers.js</script>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="oiz-patient-identifiers form-horizontal form-group">
          <div class="form-group">
            <label class="col-xs-3 control-label" for="relationType">{{ 'locale.patient.relative.type' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <select ng-model="patient.relationship.$other.relationshipType" class="form-control" bind:source="Concept" bind:filter="conceptSet.mnemonic=FamilyMember" bind:value="name[{{ locale }}].value">
                </select>
                <span class="select-arrow-container-alt" role="presentation">
                  <span class="select-arrow" role="presentation">
                  </span>
                </span>
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.type' | i18n }}" data-content="{{ 'locale.patient.relative.type.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-3 control-label" for="relationGivenName">{{ 'locale.patient.realtive.givenName' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <input type="text" name="relationGivenName" id="relationGivenName" class="tagEntry form-control" oiz-tag="oiz-tag" ng-model="patient.relationship.$other.targetModel.name.OfficialRecord.component.Given" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.givenName' | i18n }}" data-content="{{ 'locale.patient.relative.givenName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-3 control-label" for="relationFamilyName">{{ 'locale.patient.relative.familyName' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <input type="text" name="relationFamilyName" id="relationFamilyName" class="tagEntry form-control" oiz-tag="oiz-tag" ng-model="patient.relationship.$other.targetModel.name.OfficialRecord.component.Family" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.familyName' | i18n }}" data-content="{{ 'locale.patient.relative.familyName.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="col-xs-3 control-label" for="relationPhoneNumber">{{ 'locale.patient.relative.telephone' | i18n }}</label>
            <div class="col-xs-4">
              <div class="input-group">
                <select name="realtivePhoneNumberType" id="relationPhoneNumberType" class="form-control" ng-model="patient.relationship.$other.targetModel.telecom.$other.use" bind:source="Concept" bind:value="name[{{ locale }}].value" bind:filter="conceptSet.mnemonic=TelecomAddressUse">
                </select>
                <span class="select-arrow-container" role="presentation">
                  <span class="select-arrow" role="presentation">
                  </span>
                </span>
              </div>
            </div>
            <div class="col-xs-5">
              <div class="input-group">
                <input type="tel" autocomplete="off" autocapitalize="off" name="relationPhoneNumber" ng-model="patient.relationship.$other.targetModel.telecom.$other.value" class="form-control" />
                <span class="input-group-btn">
                  <button type="button" class="btn btn-default" data-toggle="popover" data-placement="left" title="{{ 'locale.patient.relative.telephone' | i18n }}" data-content="{{ 'locale.patient.relative.telephone.help' | i18n }}">
                    <span class="glyphicon glyphicon-question-sign">
                    </span>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/search/search-results.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/patients/search/search-results.js</script>
      <content>
        <div class="container-fluid" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding">
          <div class="row">
            <div class="col-md-12">
              <table class="table table-responsive table-striped table-bordered oiz-patient-results" ng-controller="SearchResultsController">
                <thead>
                  <tr>
                    <th style="width:25px">
                      <a data-target="#detailFilter" data-toggle="collapse">
                        <span class="glyphicon glyphicon-chevron-right" id="detailFilterIndicator">
                        </span>
                      </a>
                    </th>
                    <th style="width:20%">{{ 'locale.patient.search.header.names' | i18n }}</th>
                    <th style="width:15%">{{ 'locale.patient.search.header.dateOfBirth' | i18n }}</th>
                    <th style="width:15%">{{ 'locale.patient.search.header.gender' | i18n }}</th>
                    <th style="width:20%">{{ 'locale.patient.search.header.cityVillage' | i18n }}</th>
                    <th style="width:20%">{{ 'locale.patient.search.header.identifier' | i18n }}</th>
                    <th style="width:14%">{{ 'locale.patient.search.header.actions' | i18n }}</th>
                  </tr>
                  <tr class="collapse" id="detailFilter" oiz-collapseindicator="oiz-collapseindicator" data-oiz-chevron="#detailFilterIndicator">
                    <th>
                    </th>
                    <th>
                      <input class="form-control" oiz-tag="oiz-tag" ng-model="search.query['name.component.value']" type="search" name="nameDetailFilter" />
                    </th>
                    <th>
                      <input max="{{::$root.page.loadTime | date: 'yyyy-MM-dd' }}" style="max-width:200px" class="form-control" ng-model="search.dateOfBirthString" type="date" name="dobFilter" />
                    </th>
                    <th>
                      <select class="form-control" bind:source="Concept" bind:filter="conceptSet.mnemonic=AdministrativeGenderCode" bind:value="name[{{ locale }}].value" ng-model="search.query['genderConcept']" name="genderFilter" />
                    </th>
                    <th>
                      <select class="form-control" ng-model="search.query['address[HomeAddress].component.value']" type="search" name="addressFilter" oiz-entitysearch="Place" data-filter="{ &quot;classConcept&quot; :  &quot;!FF34DFA7-C6D3-4F8B-BC9F-14BCDC13BA6C&quot; }" data-group-by="address.Direct.component.County">
                      </select>
                    </th>
                    <th>
                      <input type="text" class="form-control" ng-model="search.query['identifier.value']" name="identifierFilter" />
                    </th>
                    <th>
                      <button class="btn btn-info" ng-click="search.search()" type="button">
                        <span class="glyphicon glyphicon-refresh">
                        </span>
                      </button>
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr ng-repeat="patient in search.results.item">
                    <td>{{search.results.offset + 1 + $index}}</td>
                    <td>
                            {{ ::patient.name.OfficialRecord | oizEntityName }}
                            <small ng-if="patient.relationship.Mother.targetModel"><br />
                                {{ ::patient.relationship.Mother.targetModel.name.OfficialRecord | oizEntityName }} <span class="label label-primary">{{ 'locale.patient.relationship.mother' | i18n }}</span></small></td>
                    <td>{{ ::patient.dateOfBirth | date: 'yyyy-MMM-dd' }} <span class="label label-info" ng-if="patient.dateOfBirthPrecision">{{ 'locale.patient.demographics.fuzzy' | i18n }}</span></td>
                    <td>{{ ::patient.genderConceptModel.name[$root.page.locale] }}</td>
                    <td>{{ ::patient.address.HomeAddress | oizEntityAddress }}</td>
                    <td>
                      <ul class="list-group">
                        <li class="list-group-item" ng-repeat="(dmn, id) in patient.identifier">
                                    {{ ::id.value }} <span class="label label-info">{{ ::dmn }}</span></li>
                      </ul>
                    </td>
                    <td>
                      <span class="btn-group">
                        <a class="btn btn-primary" ui-sref="tz-timr-applet.view-patient({patientId:patient.id})">
                                    {{ 'locale.patient.action.view' | i18n }}<span class="glyphicon glyphicon-eye-open"></span></a>
                        <a class="btn btn-primary" ng-click="startEncounter(patient)" ng-if="!patient._isInEncounter">
                                    {{ 'locale.patient.action.startEncounter' | i18n }}
                                </a>
                        <a class="btn btn-success" ng-click="viewEncounter(patient)" ng-if="patient._isInEncounter">
                                    {{ 'locale.patient.action.viewEncounter' | i18n }}
                                </a>
                      </span>
                    </td>
                  </tr>
                </tbody>
                <tfoot ng-if="search.results">
                  <tr>
                    <td colspan="2">{{ search.results.offset + 1 }} .. {{ search.results.offset + search.results.count }} of {{ search.results.totalResults }} </td>
                    <td colspan="5">
                      <ul class="pagination" style="margin:0px; padding:0px" ng-if="search.paging.total &gt; 1">
                        <li>
                          <a ng-click="search.previous()">&lt;&lt;</a>
                        </li>
                        <li ng-class="{'active' : i == search.paging.current}" ng-repeat="i in search.paging.pages">
                          <a ng-click="search.goPage(i)">{{i}}</a>
                        </li>
                        <li>
                          <a ng-click="search.next()">&gt;&gt;</a>
                        </li>
                      </ul>
                    </td>
                  </tr>
                </tfoot>
              </table>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/demographics-adult.html" mimeType="text/html">
    <contentHtml>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/bind" class="form-horizontal form-group">
          <!--#include virtual="/org.openiz.core/views/common/patients/view/demographics.html"-->
          <div class="form-group">
            <label class="col-xs-2 control-label" for="phoneNumber">{{ 'locale.patient.demographics.telephone' | i18n }}</label>
            <div class="col-xs-6">
              <span type="tel" name="phoneNumber" ng-model="patient.telecom[Direct]">{{patient.telecom[Direct]}}</span>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/demographics-pediatric.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/lib/bootstrap-tokenfield.min.js</script>
      <style>/org.openiz.core/css/bootstrap-tokenfield.min.css</style>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/bind" class="form-horizontal form-group">
          <!--#include virtual="/org.openiz.core/views/common/patients/view/demographics.html"-->
          <div class="form-group">
            <label class="col-xs-2 control-label" for="multipleBirth">{{ 'locale.patient.demographics.birthOrder' | i18n }}</label>
            <div class="col-xs-4">
              <span>{{patient.multipleBirthOrder}}</span>
            </div>
            <div class="col-xs-6">
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/demographics.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" class="oiz-demographics" xmlns:bind="http://openiz.org/applet/binding">
          <div class="form-group">
            <label class="col-xs-2 control-label" for="givenName">{{ 'locale.patient.demographics.givenName' | i18n }}</label>
            <div class="col-xs-10">
                {{ patient.name.OfficialRecord.component.Given | oizEntityName }}
        </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="familyName">{{ 'locale.patient.demographics.familyName' | i18n }}</label>
            <div class="col-xs-10">
            {{ patient.name.OfficialRecord.component.Family | oizEntityName }}
        </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="dobInput">{{ 'locale.patient.demographics.dateOfBirth' | i18n }}</label>
            <div class="col-xs-4">
            {{ patient.dateOfBirth | date: 'yyyy-MMM-dd' }}
            <span ng-if="patient.dateOfBirthPrecision">{{ 'locale.patient.demographic.dob.fuzzy' | i18n }}</span></div>
            <label class="col-xs-2 control-label" for="genderSelect">{{ 'locale.patient.demographics.gender' | i18n }}</label>
            <div class="col-xs-4">
            {{ patient.genderConceptModel.name[$root.page.locale] }}
        </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/identifiers.html" mimeType="text/html">
    <contentHtml>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="oiz-patient-identifiers form-horizontal form-group">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>{{ 'locale.patient.identifiers.authority' | i18n }}</th>
                <th>{{ 'locale.patient.identifiers.value' | i18n }}</th>
                <th>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr ng-repeat="(authority, identifier) in patient.identifier">
                <td>{{authority}}</td>
                <td>{{identifier.value}}</td>
                <td>
                </td>
              </tr>
            </tbody>
          </table>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/mothersinfo.html" mimeType="text/html">
    <contentHtml>
      <content>
        <fieldset xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="form-horizontal form-group">
          <div class="form-group">
            <label class="col-xs-2 control-label" for="mothersGiven">{{ 'locale.patient.mother.givenName' | i18n }}</label>
            <div class="col-xs-10">
                {{patient.relationship.Mother.targetModel.name.OfficialRecord.component.Given | oizEntityName}}
        </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="mothersFamily">{{ 'locale.patient.mother.familyName' | i18n }}</label>
            <div class="col-xs-10">
              {{patient.relationship.Mother.targetModel.name.OfficialRecord.component.Family | oizEntityName}}
        </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="mothersIdentifier">{{ 'locale.patient.mother.identifier' | i18n }}</label>
            <div class="col-xs-4">
                {{patient.relationship.Mother.targetModel.identifier.$other.authority}}
        </div>
            <div class="col-xs-6">
               {{patient.relationship.Mother.targetModel.identifier.$other.value}}
        </div>
          </div>
          <div class="form-group">
            <label class="col-xs-2 control-label" for="mothersPhoneNumber">{{ 'locale.patient.mother.telephone' | i18n }}</label>
            <div class="col-xs-10">
              <table class="table">
                <tr ng-repeat="(type,value) in patient.relationship.Mother.targetModel.telecom">
                  <td>{{value}}</td>
                  <td>({{type}})</td>
                </tr>
              </table>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/care-plan.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" style="max-height:200px; overflow-y:scroll">
          <ul class="list-group">
            <li class="list-group-item" ng-repeat="act in patient.participation.RecordTarget" ng-if="act.actModel.moodConcept == 'acf7baf2-221f-4bc2-8116-ceb5165be079' &amp;&amp; act.actModel.startTime &lt; currentDate" ng-class="{'list-group-item-success':act.actModel.relationship.Fulfills}">
              <h4 class="list-group-item-heading">
                {{act.actModel.classConceptModel.name[$root.page.locale] }}  {{act.actModel.typeConceptModel.name[$root.page.locale]}}
            </h4>
              <p class="list-group-item-text">
                <small>Encounter Start: {{ act.actModel.startTime | date: 'yyyy-MM-dd' }} </small>
                <small ng-if="act.actModel.stopTime!=null">Encounter End: {{act.actModel.stopTime | date: 'yyyy-MM-dd'}}</small>
                <small ng-if="act.actModel.typeConceptModel.name[$root.page.locale]!='BODY WEIGHT (MEASURED)'">Vaccine: {{act.vaccineName}}</small>
              </p>
            </li>
          </ul>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/demographic-summary.html" mimeType="text/html">
    <contentHtml>
      <script>~/controllers/common/patients/view/partials/demographic-summary.js</script>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" class="container-fluid" ng-controller="DemographicSummaryController" xmlns:bind="http://openiz.org/applet/binding">
          <div class="row">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.givenName' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12">
            {{ patient.name.OfficialRecord.component.Given | oizEntityName }}
        </div>
          </div>
          <div class="row">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.familyName' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12">
            {{ patient.name.OfficialRecord.component.Family | oizEntityName }}
        </div>
          </div>
          <div class="row">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.dateOfBirth' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12" ng-if="patient.dateOfBirthPrecision">
            {{ patient.dateOfBirth | date: 'yyyy-MMM' }}
        </div>
            <div class="col-sm-10 col-xs-12" ng-if="!patient.dateOfBirthPrecision">
            {{ patient.dateOfBirth | date: 'yyyy-MMM-dd' }}
        </div>
          </div>
          <div class="row" ng-if="patient.multipleBirthOrder">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.birthOrder' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12">
            {{ 'locale.common.yes' | i18n }} - {{ patient.multipleBirthOrderText }}
        </div>
          </div>
          <div class="row">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.gender' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12">
            {{ patient.genderConceptModel | oizConcept }}
        </div>
          </div>
          <div class="row">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.facility' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12">
            {{ patient.relationship.DedicatedServiceDeliveryLocation.targetModel.name.OfficialRecord | oizEntityName }}
        </div>
          </div>
          <div class="row">
            <label class="col-sm-2 col-xs-12">
            {{ 'locale.patient.demographics.domicile' | i18n }}
        </label>
            <div class="col-sm-10 col-xs-12">
            {{ patient.address.HomeAddress | oizEntityAddress }}
        </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/drug-therapy-summary.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/identifier-summary.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <ul class="list-group">
            <li ng-repeat="(auth, id) in patient.identifier" class="list-group-item">
              <h4 class="list-group-item-heading">{{id.value}} <small class="label label-info">{{auth}}</small></h4>
            </li>
          </ul>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/intolerances.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/mother-summary.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" class="list-group">
          <a ng-click="viewPerson(rel.id)" ng-repeat="(typ, rel) in patient.relationship" ng-if="(rel.targetModel.$type == 'Person' || rel.targetModel.$type == 'Patient') &amp;&amp; typ=='Mother'" class="list-group-item">
            <h4 class="list-group-item-heading">Name: {{rel.targetModel.name.OfficialRecord | oizEntityName}}</h4>
            <small ng-if="rel.targetModel.identifier">ID: {{rel.targetModel.identifier | oizEntityIdentifier}}</small>
            <div ng-repeat="contact in rel.targetModel.telecom">
              <small>Contact: {{contact.value}}</small>
            </div>
          </a>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/relationship-summary.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" class="list-group">
          <a ng-click="viewPerson(rel.id)" ng-repeat="(typ, rel) in patient.relationship" ng-if="(rel.targetModel.$type == 'Person' || rel.targetModel.$type == 'Patient') &amp;&amp; typ!='Mother'" class="list-group-item">
            <h4 class="list-group-item-heading">Name: {{rel.targetModel.name.OfficialRecord | oizEntityName}}</h4>
            <small>ID: {{rel.targetModel.identifier | oizEntityIdentifier}}</small>
            <div ng-repeat="contact in rel.targetModel.telecom">
              <small>Contact: {{contact.value}}</small>
            </div>
          </a>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/vaccination-summary.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/weight-detail.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/weight-summary.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/patients/view/partials/yellowcard.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/common/patients/view/partials/yellowcard.js</script>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" ng-controller="YellowCardController">
          <!-- TODO: Call the forecaster for this -->
          <div class="table-responsive">
            <table class="table table-striped oiz-vaccination-history-table">
              <thead>
                <tr>
                  <th class="vaccine-table-column">
                  </th>
                  <th class="vaccine-table-column" style="text-align:center">0</th>
                  <th class="vaccine-table-column" style="text-align:center">1</th>
                  <th class="vaccine-table-column" style="text-align:center">2</th>
                  <th class="vaccine-table-column" style="text-align:center">3</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="(antigenName, event) in display._vaccineAdministrations">
                  <td>{{ antigenName }}</td>
                  <td ng-repeat="sequence in event track by $index">
                    <a data-toggle="tab" data-target="#vaccinations">
                      <div ng-if="sequence != null" class="input-group">
                        <div ng-if="sequence.moodConcept == 'acf7baf2-221f-4bc2-8116-ceb5165be079'">
                          <div class="text-danger" ng-if="sequence.stopTime != null &amp;&amp; sequence.stopTime &lt; $root.page.loadTime">
                            <span class="glyphicon glyphicon-exclamation-sign">
                            </span>
                          </div>
                          <div class="text-warn" ng-if="sequence.startTime != null &amp;&amp; sequence.startTime &lt; $root.page.maxEventTime &amp;&amp; (sequence.stopTime == null || sequence.stopTime != null &amp;&amp;  $root.page.maxEventTime &lt; sequence.stopTime)">
                            <span class="glyphicon glyphicon-info-sign">
                            </span>
                          </div>
                          <div class="text-info" ng-if="sequence.startTime != null &amp;&amp; sequence.startTime &gt; $root.page.maxEventTime">
                            <span class="glyphicon glyphicon-calendar">
                            </span>
                          </div>
                        </div>
                        <div ng-if="sequence.moodConcept != 'acf7baf2-221f-4bc2-8116-ceb5165be079'" class="text-success">
                          <div class="text-success" ng-if="!sequence.negationInd">
                            <span class="glyphicon glyphicon-ok">
                            </span>
                          </div>
                          <div class="text-warn" ng-if="sequence.negationInd">
                            <span class="glyphicon glyphicon-question-sign">
                            </span>
                          </div>
                        </div>
                      </div>
                    </a>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/security/authenticate.html" mimeType="text/html">
    <contentHtml>
      <content>
        <fieldset class="form-horizontal form-group" xmlns="http://www.w3.org/1999/xhtml">
          <div class="form-group" ng-class="{ 'has-error' : loginForm.username.$invalid &amp;&amp; loginForm.username.$touched }">
            <label for="usernameInput" class="col-xs-2 control-label">{{ 'locale.security.login.label.username' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <input ng-model="username" type="text" ng-required="true" placeholder="{{ 'locale.security.login.placeholder.username' | i18n }}" class="form-control" name="username" id="usernameInput" autocomplete="off" autofocus="autofocus" autocorrect="off" autocapitalize="none" />
                <p ng-show="loginForm.username.$invalid &amp;&amp; loginForm.username.$touched" class="help-block text-danger">{{ 'locale.security.errors.usernameRequired' | i18n }}</p>
              </div>
            </div>
          </div>
          <div class="form-group" ng-class="{ 'has-error' : loginForm.password.$invalid &amp;&amp; loginForm.password.$touched }">
            <label for="passwordInput" class="col-xs-2 control-label">{{ 'locale.security.login.label.password' | i18n }}</label>
            <div class="col-xs-9">
              <div class="input-group">
                <input ng-model="password" type="password" ng-required="true" placeholder="{{ 'locale.security.login.placeholder.password' | i18n }}" class="form-control" name="password" />
                <p ng-show="loginForm.password.$invalid &amp;&amp; loginForm.password.$touched" class="help-block text-danger">{{ 'locale.security.errors.passwordRequired' | i18n }}</p>
              </div>
            </div>
          </div>
        </fieldset>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/security/forgotpassword.html" mimeType="text/html">
    <contentHtml>
      <title lang="en">{{ 'locale.security.forgotPassword.title' | i18n }}</title>
      <script>~/controllers/common/security/forgotpassword.js</script>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" class="modal fade" id="passwordResetDialog" ng-controller="ForgotPasswordController" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">X</span>
                </button>
                <h4 class="modal-title">{{ 'locale.security.forgotPassword.title' | i18n }}</h4>
              </div>
              <div class="modal-body">
                <div class="container-fluid">
                  <div id="forgotPasswordWizard">
                    <ul class="col-xs-4 nav nav-pills nav-stacked" role="tablist">
                      <li class="active" role="presentation">
                        <a class="not-active" href="#usernameTab" data-toggle="tab">{{ 'locale.security.forgotPassword.userName' | i18n }}</a>
                      </li>
                      <li role="presentation">
                        <a class="not-active" href="#methodTab" data-toggle="tab">{{ 'locale.security.forgotPassword.mechanism' | i18n }}</a>
                      </li>
                      <li role="presentation">
                        <a class="not-active" href="#challengeTab" data-toggle="tab">{{ 'locale.security.forgotPassword.challenge' | i18n }}</a>
                      </li>
                      <li role="presentation">
                        <a class="not-active" href="#changePasswordTab" data-toggle="tab">{{ 'locale.security.forgotPassword.changePassword' | i18n }}</a>
                      </li>
                    </ul>
                    <div class="tab-content col-xs-8">
                      <div role="tabpanel" class="tab-pane active container-fluid" id="usernameTab">
                        <h4>{{ 'locale.forgotPassword.userName.title' | i18n }}</h4>
                        <p>{{ 'locale.forgotPassword.userName.help' | i18n }}</p>
                        <input name="username" ng-change="nextEnabled(resetRequest.userName != null)" ng-model="resetRequest.userName" required="required" class="form-control" type="text" placeholder="{{ 'locale.forgotPassword.userName.placeholder' | i18n }}" />
                      </div>
                      <div role="tabpanel" class="tab-pane" id="methodTab">
                        <h4>{{ 'locale.forgotPassword.mechanism.title' | i18n }}</h4>
                        <p>{{ 'locale.forgotPassword.mechanism.help' | i18n }}</p>
                        <ul>
                          <li ng-repeat="mech in tfaMechanisms" style="list-style-type:none">
                            <input type="radio" ng-model="resetRequest.mechanism" ng-change="setMechanism(mech)" value="{{mech.id}}" /> {{ mech.name }}</li>
                        </ul>
                      </div>
                      <div role="tabpanel" class="tab-pane" id="challengeTab">
                        <h4>{{ 'locale.forgotPassword.challenge.title' | i18n }}</h4>
                        <p>{{ resetRequest.mechanismModel.challengeText }}</p>
                        <div class="input-group">
                          <input ng-model="resetRequest.verification" required="required" class="form-control" type="text" placeholder="{{ 'locale.forgotPassword.challenge.placeholder' | i18n }}" />
                          <span class="input-group-btn">
                            <button ng-disabled="resetRequest.verification != null &amp;&amp; resetRequest.verification != '' ? '' : 'disabled'" type="button" class="btn btn-info" ng-click="sendReset()">{{ 'locale.forgotPassword.challenge.resend' | i18n }}</button>
                          </span>
                        </div>
                        <div ng-if="resetResponse">
                          <p>{{ 'locale.forgotPassword.challenge.response' | i18n }}</p>
                          <input ng-model="resetRequest.tfaSecret" ng-change="nextEnabled(resetRequest.tfaSecret != null)" required="required" class="form-control" type="number" placeholder="{{ 'locale.forgotPassword.challenge.placeholder' | i18n }}" />
                        </div>
                      </div>
                      <div role="tabpanel" class="tab-pane" id="changePasswordTab">
                        <h4>{{ 'locale.forgotPassword.changePassword.title' | i18n }}</h4>
                        <p>{{ 'locale.forgotPassword.changePassword.help' | i18n }}</p>
                        <div class="container-fluid">
                          <div class="row">
                            <label for="newPassword" class="col-xs-3 control-label">{{ 'locale.preferences.password' | i18n }}</label>
                            <div class="col-xs-9">
                              <input ng-change="nextEnabled(resetRequest.password != null &amp;&amp; resetRequest.confirm != null &amp;&amp; resetRequest.password == resetRequest.confirm)" name="newPassword" class="form-control" type="password" ng-model="resetRequest.password" />
                            </div>
                          </div>
                          <div class="row">
                            <label for="confirmPassword" class="col-xs-3 control-label">{{ 'locale.preferences.confirm' | i18n }}</label>
                            <div class="col-xs-9">
                              <input ng-change="nextEnabled(resetRequest.password != null &amp;&amp; resetRequest.confirm != null &amp;&amp; resetRequest.password == resetRequest.confirm)" name="confirmPassword" class="form-control" type="password" ng-model="resetRequest.confirm" />
                            </div>
                          </div>
                          <p ng-show="resetRequest.password != resetRequest.confirm" class="help-block text-danger">{{ 'locale.settings.passwordNoMatch' | i18n }}</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'locale.action.cancel' | i18n }}</button>
                <button type="button" class="next btn btn-primary" disabled="disabled" id="nextButton" ng-click="nextWizard()">{{ 'locale.action.next' | i18n }}</button>
                <button type="submit" style="display:none">{{ 'locale.action.done' | i18n }}</button>
              </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/common/security/login.html" mimeType="text/html">
    <demand>1.3.6.1.4.1.33349.3.1.5.9.2.1</demand>
    <contentHtml>
      <title lang="en">Login</title>
      <script>~/controllers/common/security/login.js</script>
      <view name="org-openiz-core.login" abstract="false">
        <route>/login</route>
        <view abstract="false">
          <title lang="en">Login</title>
          <controller>LoginController</controller>
        </view>
      </view>
      <content>
        <div xmlns:oiz="http://openiz.org/applet" xmlns="http://www.w3.org/1999/xhtml" xmlns:bind="http://openiz.org/applet/binding">
          <div class="text-center">{{ 'locale.security.login.helpText' | i18n }}</div>
          <!--#include virtual="~/views/common/security/forgotpassword.html"-->
          <form ng-controller="LoginPartController" novalidate="novalidate" name="loginForm" class="form" ng-submit="login(loginForm, username, password)">
            <!--#include virtual="~/views/common/security/authenticate.html"-->
            <div class="row">
              <div class="col-xs-12">
                <div class="btn-group pull-right">
                  <!--<a class="btn btn-success pull-left" href="~/views/security/register.html">{{ 'locale.buttonLabels.register' | i18n }}</a>-->
                  <button type="button" class="btn btn-lg btn-warning" ng-click="showPasswordReset()">{{ 'locale.security.login.button.forgotPassword' | i18n }}</button>
                  <button type="submit" class="btn btn-lg btn-primary pull-right">{{ 'locale.security.login.button.login' | i18n }}</button>
                </div>
              </div>
            </div>
          </form>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/debug/about.html" mimeType="text/html">
    <demand>1.3.6.1.4.1.33349.3.1.5.9.2.1</demand>
    <contentHtml>
      <title>Debug Information</title>
      <script>~/controllers/debug/about.js</script>
      <view name="org-openiz-core.about" abstract="false">
        <route>/about</route>
        <view abstract="false">
          <title>Debug Information</title>
          <controller>AboutApplicationController</controller>
        </view>
      </view>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
              <a href="#versions" data-toggle="tab">{{ 'locale.about.tabs.versions' | i18n }}</a>
            </li>
            <li role="presentation">
              <a href="#log" data-toggle="tab">{{ 'locale.about.tabs.log' | i18n }}</a>
            </li>
            <li role="presentation">
              <a href="#runtime" data-toggle="tab">{{ 'locale.about.tabs.runtime' | i18n }}</a>
            </li>
          </ul>
          <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="versions">
              <!--#include virtual="~/views/debug/tabs/versions.html"-->
            </div>
            <div role="tabpanel" class="tab-pane" id="log">
              <!--#include virtual="~/views/debug/tabs/log.html"-->
            </div>
            <div role="tabpanel" class="tab-pane" id="runtime">
              <!--#include virtual="~/views/debug/tabs/runtime.html"-->
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/debug/feedback.html" mimeType="text/html">
    <contentHtml>
      <title>Feedback</title>
      <layout>/org.openiz.core/layouts/navbar.html</layout>
      <script>~/controllers/debug/feedback.js</script>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" oiz:layout="/org.openiz.core/layouts/navbar.html" />
      </content>
    </contentHtml>
  </asset>
  <asset name="views/debug/report.html" mimeType="text/html">
    <demand>1.3.6.1.4.1.33349.3.1.5.9.2.1</demand>
    <contentHtml>
      <title>Bug Report</title>
      <script>~/controllers/debug/report.js</script>
      <script>/org.openiz.core/controllers/settings/password.js</script>
      <view name="org-openiz-core.report" abstract="false">
        <route>/report</route>
        <view abstract="false">
          <title>Bug Report</title>
          <controller>ReportBugController</controller>
        </view>
      </view>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <h3>{{ 'locale.debug.bugReport' | i18n }}</h3>
          <div class="alert alert-warning" ng-if="!$root.page.onlineState">
        {{ 'locale.action.onlineOnly' | i18n }}
    </div>
          <form class="form" ng-submit="submitBugReport(masterForm)" name="masterForm" ng-if="!report.id">
            <fieldset class="form-horizontal form-group">
              <div class="form-group" ng-class="{ 'has-error': (masterForm.submitter.$touched||masterForm.$submitted) &amp;&amp; masterForm.submitter.$invalid }">
                <label class="col-xs-2 control-label" for="submitter">{{ 'locale.debug.reporter' | i18n }}</label>
                <div class="col-xs-10">
                  <select disabled="disabled" style="width:100%; height:100%" id="submitter" name="submitter" class="form-control" ng-model="report.submitterKey" oiz-entitysearch="UserEntity">
                    <option selected="selected" value="{{report.submitterKey}}">{{report.submitterModel.name.OfficialRecord | oizEntityName }}</option>
                  </select>
                </div>
                <p ng-show="masterForm.submitter.$invalid &amp;&amp; masterForm.submitter.$touched" class="help-block text-danger">{{ 'locale.debug.errors.submitterRequired' | i18n }}</p>
              </div>
              <div class="form-group" ng-class="{ 'has-error': (masterForm.note.$touched||masterForm.$submitted) &amp;&amp; masterForm.note.$invalid }">
                <label class="col-xs-2 control-label" for="note">{{ 'locale.debug.reproduction' | i18n }}</label>
                <div class="col-xs-10">
                  <textarea class="form-control" rows="8" name="note" ng-model="report.note" required="required" placeholder="{{ 'locale.debug.reproductionPlaceholder' | i18n }}">
                  </textarea>
                </div>
              </div>
              <div class="form-group">
                <label class="checkbox col-xs-10 col-xs-offset-2">
                  <input type="checkbox" name="sendLogs" ng-model="report._includeData" checked="checked" />
                    {{ 'locale.debug.sendLogs' | i18n }}
                </label>
              </div>
            </fieldset>
            <div class="container-fluid">
              <div class="row">
                <div class="pull-right btn-group">
                  <button type="button" class="btn btn-lg btn-danger" ng-click="close(masterForm)">
                    <span>
                      <span class="glyphicon glyphicon-remove">
                      </span>
                            {{ 'locale.action.cancel' | i18n }}
                        </span>
                  </button>
                  <div class="btn-group">
                    <button ng-disabled="!$root.page.onlineState" type="submit" class="btn btn-lg btn-primary">
                      <span>
                        <span class="glyphicon glyphicon-ok">
                        </span>
                                {{ 'locale.debug.submit' | i18n }}
                            </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </form>
          <div class="alert alert-success" ng-if="report.id">
            <div class="row">
              <div class="col-md-12 text-center">
                {{ 'locale.debug.reportSubmitted' | i18n }}
            </div>
            </div>
            <div class="row">
              <div class="col-md-12 text-center">
                {{ 'locale.debug.reportTicketId' | i18n }}
                <span class="label-success"><strong>{{ report.ticketId }}</strong></span></div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/debug/tabs/log.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <fieldset class="form-horizontal form-group">
            <div class="form-group">
              <label for="logFile" class="control-label">{{ 'locale.about.logFile' | i18n }}</label>
              <select ng-model="logid" class="form-control" ng-change="loadLogContents()">
                <option ng-repeat="log in about.logInfo" value="{{log.id}}">{{log.description}} - {{log.size / 1024 | number: 2}} kb (Last written: {{log.lastWrite | date: 'yyyy-MMM-dd HH:mm'}})</option>
              </select>
            </div>
            <div class="form-group">
              <label for="logSize" class="control-label">{{ 'locale.about.logSize' | i18n }}</label>
              <select class="form-control" ng-model="logLength" ng-change="loadLogContents()">
                <option selected="selected" value="1024">1 kb {{ 'locale.common.of' | i18n }} {{ log.size / 1024 | number: 2}} kb</option>
                <option value="131072">128 kb {{ 'locale.common.of' | i18n }} {{ log.size / 1024 | number: 2}} kb</option>
                <option value="524288">512 kb {{ 'locale.common.of' | i18n }} {{ log.size / 1024 | number: 2}} kb</option>
                <option value="1048576">1 MB {{ 'locale.common.of' | i18n }} {{ log.size / 1048576 | number: 2}} MB</option>
              </select>
            </div>
            <div class="form-group">
              <label for="logFile" class="control-label">{{ 'locale.about.logContents' | i18n }}</label>
              <pre style="height:60%; max-height:60%; overflow-y:scroll">{{log.text}}</pre>
            </div>
          </fieldset>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/debug/tabs/runtime.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ 'locale.about.machineInfo' | i18n }}</h3>
              <table class="table table-striped">
                <tr>
                  <th>{{ 'locale.about.environment.os' | i18n }}</th>
                  <td>{{ about.environment.osVersion }} <span class="label label-info" ng-if="about.environment.is64bit">64-bit</span></td>
                </tr>
                <tr>
                  <th>{{ 'locale.about.environment.cpu' | i18n }}</th>
                  <td>{{ about.environment.processorCount }}</td>
                </tr>
                <tr>
                  <th>{{ 'locale.about.environment.runtimeVersion' | i18n }}</th>
                  <td>{{ about.environment.version }}</td>
                </tr>
                <tr>
                  <th>{{ 'locale.about.environment.mem' | i18n }}</th>
                  <td>{{ about.environment.usedMem | number:0 }} b</td>
                </tr>
              </table>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ 'locale.about.fileInfo' | i18n }}</h3>
              <table class="table table-striped">
                <tr>
                  <th>{{ 'locale.about.files.name' | i18n }}</th>
                  <th>{{ 'locale.about.files.size' | i18n }}</th>
                  <th>{{ 'locale.about.files.date' | i18n }}</th>
                </tr>
                <tr ng-repeat="f in about.fileInfo">
                  <td>{{ f.description }}</td>
                  <td>{{ f.size | number:0 }} b</td>
                  <td>{{ f.lastWrite | date: 'yyyy-MMM-dd HH:mm'}}</td>
                </tr>
              </table>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ 'locale.about.syncInfo' | i18n }}</h3>
              <table class="table table-striped">
                <tr>
                  <th>{{ 'locale.about.sync.resource' | i18n }}</th>
                  <th>{{ 'locale.about.sync.date' | i18n }} / {{ 'locale.about.sync.etag' | i18n }}</th>
                  <th>{{ 'locale.about.sync.filter' | i18n }}</th>
                </tr>
                <tr ng-repeat="s in about.syncInfo">
                  <td>{{ s.resource }}</td>
                  <td>{{ s.lastSync | date: 'yyyy-MMM-dd HH:mm' }} <small>{{ s.etag }}</small></td>
                  <td>{{ s.filter }}</td>
                </tr>
              </table>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/debug/tabs/versions.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ 'locale.about.logo' | i18n }} {{ about.product }} {{ about.infoVersion }}</h3>
            v.{{ about.version }} (C) {{ about.copyright }} {{ about.company }} <br />
            OpenIZ Platform: {{ about.openiz.version }} ({{about.openiz.infoVersion}})
        </div>
          </div>
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ 'locale.about.versions.applets.title' | i18n }}</h3>
              <hr />
              <table class="table table-striped">
                <tr>
                  <th>
                  </th>
                  <th>{{ 'locale.about.versions.applet' | i18n }}</th>
                  <th>{{ 'locale.about.versions.author' | i18n }}</th>
                  <th>{{ 'locale.about.versions.id' | i18n }}</th>
                </tr>
                <tr ng-repeat="app in about.applet">
                  <td>
                    <img src="{{ app.icon }}" alt="logo" />
                  </td>
                  <td>{{ app.name[0].value }} v.{{app.version}}</td>
                  <td>{{ app.author }}</td>
                  <td>{{ app.id }}</td>
                </tr>
              </table>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12">
              <h3>{{ 'locale.about.versions.assemblies.title' | i18n}}</h3>
              <hr />
              <table class="table table-striped">
                <tr>
                  <th>{{ 'locale.about.versions.assembly' | i18n }}</th>
                  <th>{{ 'locale.about.versions.version' | i18n }}</th>
                  <th>{{ 'locale.about.versions.info' | i18n }}</th>
                </tr>
                <tr ng-repeat="asm in about.assembly">
                  <td>{{ asm.name }}</td>
                  <td>{{ asm.version }}</td>
                  <td>{{ asm.info }}</td>
                </tr>
              </table>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/errors/403.html" mimeType="text/html">
    <contentHtml>
      <title lang="en">Forbidden</title>
      <title lang="fr">Interdit</title>
      <title lang="sw">Haramu</title>
      <layout>/org.openiz.core/layouts/minimal.html</layout>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet" openiz:layout="/org.openiz.core/layouts/minimal.html">
          <h1>{{ 'locale.error.403.title' | i18n }}</h1>
          <hr />
          <p>{{ 'locale.error.403.description' | i18n }}</p>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/errors/404.html" mimeType="text/html">
    <contentHtml>
      <title lang="en">Not Found</title>
      <title lang="fr">Non Trouvee</title>
      <title lang="sw">Haipatikani</title>
      <layout>/org.openiz.core/layouts/minimal.html</layout>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet" openiz:layout="/org.openiz.core/layouts/minimal.html">
          <h1>{{ 'locale.error.404.title' | i18n }}</h1>
          <hr />
          <p>{{ 'locale.error.404.description' | i18n }} <script type="text/javascript">document.write(window.location);</script></p>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/errors/500.html" mimeType="text/html">
    <contentHtml>
      <title lang="en">Internal Server Error</title>
      <title lang="fr">Erreur du Serveur</title>
      <title lang="sw">Kosa Server</title>
      <layout>/org.openiz.core/layouts/minimal.html</layout>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet" openiz:layout="/org.openiz.core/layouts/minimal.html">
          <h1>{{ 'locale.error.500.title' | i18n }}</h1>
          <hr />
          <p>{{ 'locale.error.500.description' | i18n }}
    <script type="text/javascript">document.write(window.location);</script></p>
          <hr />
          <pre>{{ exception }}</pre>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/security/login.html" mimeType="text/html">
    <contentHtml>
      <title>Login</title>
      <script>~/controllers/security/login.js</script>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet">
          <!--#include virtual="~/views/common/security/login.html"-->
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/index.html" mimeType="text/html">
    <demand>1.3.6.1.4.1.33349.3.1.5.9.2.10</demand>
    <contentHtml>
      <title lang="en">Initial Settings</title>
      <title lang="fr" />
      <title lang="sw" />
      <layout>/org.openiz.core/layouts/minimal.html</layout>
      <script>/org.openiz.core/controllers/settings/settings.js</script>
      <content>
        <div class="container" ng-controller="SettingsController" xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet" openiz:layout="/org.openiz.core/layouts/minimal.html">
          <div class="row">
            <div class="col-md-12">
              <form name="realmForm" novalidate="novalidate" class="form-horizontal">
                <div class="panel panel-default">
                  <div class="panel-heading">
                    <h3 class="panel-title">{{ 'locale.settings.realmTitle' | i18n }}</h3>
                  </div>
                  <div class="panel-collapse collapse in">
                    <div class="panel-body">
                      <div class="container-fluid">
                        <div class="row">
                          <div class="col-md-2 col-xs-2">
                            <img src="~/img/appbar.network.home.png" alt="network" class="left" />
                          </div>
                          <div class="col-md-10 col-xs-10" style="vertical-align:middle">
                            <em>{{ 'locale.settings.realmDescription' | i18n }}</em>
                          </div>
                        </div>
                        <div class="row">
                          <div class="col-md-12">
                            <div class="form-group">
                              <label class="col-sm-2 control-label" for="deviceName" id="deviceNameLabel">{{ 'locale.settings.deviceName' | i18n }}</label>
                              <div class="col-sm-10">
                                <input ng-model="config.security.deviceName" ng-required="true" placeholder="tabletid" ng-pattern="/^[A-Za-z][A-Za-z.0-9-]+$/i" autocorrect="off" autocomplete="off" autocapitalize="off" spellcheck="false" class="form-control" type="text" name="deviceName" id="deviceName" aria-describedby="deviceNameLabel" />
                              </div>
                            </div>
                            <div class="form-group">
                              <label class="col-sm-2 control-label" for="realmName" id="realmServerLabel">{{ 'locale.settings.realmName' | i18n }}</label>
                              <div class="col-sm-10">
                                <input ng-model="config.security.domain" ng-required="true" placeholder="demo.openiz.org" ng-pattern="/^[A-Za-z0-9.-]*$/i" class="form-control" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" type="text" name="realmServer" id="realmServer" aria-describedby="realmServerLabel" />
                              </div>
                            </div>
                            <div class="btn-group pull-right">
                              <button class="btn-danger btn" ng-disabled="config.realmName == null" ng-click="leaveRealm(config.security)">
                                <span class="glyphicon glyphicon-resize-full">
                                </span> {{ 'locale.settings.leaveRealm' | i18n }}
                                            </button>
                              <button class="btn-primary btn" ng-click="joinRealm(config.security)" ng-disabled="realmForm.$invalid || config.realmName != null">
                                                {{ 'locale.settings.joinRealm' | i18n }} <span class="glyphicon glyphicon-resize-small"></span></button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </form>
              <div class="panel panel-default">
                <div class="panel-heading">
                  <h3 class="panel-title">
                    <a href="#dataBody" data-toggle="collapse">
                      <span class="glyphicon glyphicon-chevron-right" id="dataBodyIndicator">
                      </span>{{ 'locale.settings.dataTitle' | i18n }}
                        </a>
                  </h3>
                </div>
                <div class="panel-collapse collapse" id="dataBody" oiz-collapseindicator="oiz-collapseindicator" data-oiz-chevron="#dataBodyIndicator">
                  <div class="panel-body">
                    <!--#include virtual="~/views/settings/tabs/data.html"-->
                  </div>
                </div>
              </div>
              <div class="panel panel-default">
                <div class="panel-heading">
                  <h3 class="panel-title">
                    <a href="#logBody" data-toggle="collapse">
                      <span class="glyphicon glyphicon-chevron-right" id="logBodyIndicator">
                      </span> {{ 'locale.settings.logTitle' | i18n }}
                        </a>
                  </h3>
                </div>
                <div class="panel-collapse collapse" id="logBody" oiz-collapseindicator="oiz-collapseindicator" data-oiz-chevron="#logBodyIndicator">
                  <div class="panel-body">
                    <!--#include virtual="~/views/settings/tabs/log.html"-->
                  </div>
                </div>
              </div>
              <div class="panel panel-default">
                <div class="panel-heading">
                  <h3 class="panel-title">
                    <a href="#securityBody" data-toggle="collapse">
                      <span class="glyphicon glyphicon-chevron-right" id="securityBodyIndicator">
                      </span> {{ 'locale.settings.securityTitle' | i18n }}
                        </a>
                  </h3>
                </div>
                <div class="panel-collapse collapse" id="securityBody" oiz-collapseindicator="oiz-collapseindicator" data-oiz-chevron="#securityBodyIndicator">
                  <div class="panel-body">
                    <!--#include virtual="~/views/settings/tabs/security.html"-->
                  </div>
                </div>
              </div>
              <div class="panel panel-default">
                <div class="panel-heading">
                  <h3 class="panel-title">
                    <a href="#networkBody" data-toggle="collapse">
                      <span class="glyphicon glyphicon-chevron-right" id="networkBodyIndicator">
                      </span> {{ 'locale.settings.networkTitle' | i18n }}
                        </a>
                  </h3>
                </div>
                <div class="panel-collapse collapse" id="networkBody" oiz-collapseindicator="oiz-collapseindicator" data-oiz-chevron="#networkBodyIndicator">
                  <div class="panel-body">
                    <!--#include virtual="~/views/settings/tabs/network.html"-->
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-12">
              <div class="btn-group pull-right">
                <button class="btn-danger btn" ng-click="close()">
                  <span class="glyphicon glyphicon-remove">
                  </span> {{ 'locale.settings.cancel' | i18n }}
                </button>
                <button class="btn-primary btn" ng-click="save(config)">
                    {{ 'locale.settings.apply' | i18n }} <span class="glyphicon glyphicon-ok"></span></button>
              </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/preferences.html" mimeType="text/html">
    <demand>1.3.6.1.4.1.33349.3.1.5.9.2.1</demand>
    <contentHtml>
      <title lang="en">User Settings</title>
      <script>/org.openiz.core/controllers/settings/preferences.js</script>
      <view name="org-openiz-core.preferences" abstract="false">
        <route>/preferences</route>
        <view abstract="false">
          <title lang="en">User Settings</title>
          <controller>UserPasswordController</controller>
        </view>
      </view>
      <content>
        <div class="container" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding">
          <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
              <a href="#profile" data-toggle="tab">{{ 'locale.preferences.tabs.profile' | i18n }}</a>
            </li>
            <li role="presentation">
              <a href="#password" data-toggle="tab" ng-disabled="!isNetworkAvailable">{{ 'locale.preferences.tabs.password' | i18n }}</a>
            </li>
          </ul>
          <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="profile">
              <!--#include virtual="~/views/settings/tabs/profile.html"-->
            </div>
            <div role="tabpanel" class="tab-pane" id="password">
              <!--#include virtual="~/views/settings/tabs/password.html"-->
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/settings.html" mimeType="text/html">
    <demand>1.3.6.1.4.1.33349.3.1.5.9.2.10</demand>
    <contentHtml>
      <title lang="en">Initial Settings</title>
      <title lang="fr" />
      <title lang="sw" />
      <script>/org.openiz.core/controllers/settings/settings.js</script>
      <view name="org-openiz-core.settings" abstract="false">
        <route>/settings</route>
        <view abstract="false">
          <title lang="en">Initial Settings</title>
          <title lang="fr" />
          <title lang="sw" />
          <controller>SettingsController</controller>
        </view>
      </view>
      <content>
        <div class="container" xmlns="http://www.w3.org/1999/xhtml" xmlns:openiz="http://openiz.org/applet">
          <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
              <a href="#dataBody" data-toggle="tab">{{ 'locale.settings.dataTitle' | i18n }}</a>
            </li>
            <li role="presentation">
              <a href="#logBody" data-toggle="tab">{{ 'locale.settings.logTitle' | i18n }}</a>
            </li>
            <li role="presentation">
              <a href="#securityBody" data-toggle="tab">{{ 'locale.settings.securityTitle' | i18n }}</a>
            </li>
            <li role="presentation">
              <a href="#networkBody" data-toggle="tab">{{ 'locale.settings.networkTitle' | i18n }}</a>
            </li>
          </ul>
          <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="dataBody">
              <!--#include virtual="~/views/settings/tabs/data.html"-->
            </div>
            <div role="tabpanel" class="tab-pane" id="logBody">
              <!--#include virtual="~/views/settings/tabs/log.html"-->
            </div>
            <div role="tabpanel" class="tab-pane" id="securityBody">
              <!--#include virtual="~/views/settings/tabs/security.html"-->
            </div>
            <div role="tabpanel" class="tab-pane" id="networkBody">
              <!--#include virtual="~/views/settings/tabs/network.html"-->
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/tabs/data.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container-fluid" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="container-fluid">
            <div class="row">
              <div class="col-md-2 col-xs-2">
                <img src="~/img/appbar.database.png" alt="database" class="left" />
              </div>
              <div class="col-md-10 col-xs-10" style="vertical-align:middle">
                <em>{{ 'locale.settings.dataDescription' | i18n }}</em>
              </div>
            </div>
          </div>
          <div class="form-group">
            <span class="control-label col-sm-2">{{ 'locale.settings.dataMode' | i18n }}</span>
            <div class="col-sm-10">
              <select class="form-control" ng-model="config.data.mode">
                <option value="sync">Synchronized</option>
                <option value="online">Online Only</option>
                <option value="offline">Offline Only</option>
              </select>
            </div>
          </div>
          <div class="form-group" ng-if="config.data.mode == 'sync'">
            <label class="control-label col-sm-2">{{ 'locale.settings.syncEvents' | i18n }}:</label>
            <div class="col-sm-10">
              <select class="form-control select2" multiple="multiple" ng-model="config.data.sync.event">
                <option value="onstart">On Startup</option>
                <option value="onclose">On Close</option>
                <option value="oncommit">On Commit</option>
              </select>
            </div>
          </div>
          <div class="form-group" ng-if="config.data.mode == 'sync'">
            <label class="control-label col-sm-2">{{ 'locale.settings.pollInterval' | i18n }}:</label>
            <div class="col-sm-10">
              <select class="form-control" id="pollIntervalInput" ng-model="config.data.sync.pollInterval">
                <option value="1">{{ 'locale.settings.pollInterval.1' | i18n }}</option>
                <option value="5">{{ 'locale.settings.pollInterval.5' | i18n }}</option>
                <option value="15">{{ 'locale.settings.pollInterval.15' | i18n }}</option>
                <option value="30">{{ 'locale.settings.pollInterval.30' | i18n }}</option>
                <option value="0">{{ 'locale.settings.pollInterval.0' | i18n }}</option>
                <option value="-1">{{ 'locale.settings.pollInterval.push' | i18n }}</option>
              </select>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/tabs/log.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container-fluid" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="container-fluid">
            <div class="row">
              <div class="col-md-2 col-xs-2">
                <img src="~/img/appbar.book.list.png" alt="log" class="left" />
              </div>
              <div class="col-md-10 col-xs-10" style="vertical-align:middle">
                <em>{{ 'locale.settings.logDescription' | i18n }}</em>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="control-label col-sm-2">{{ 'locale.settings.logMode' | i18n }}</label>
            <div class="col-sm-10">
              <select class="form-control" ng-model="config.log.mode">
                <optgroup label="Debugging">
                  <option value="LogAlways">{{ 'locale.settings.log.always' | i18n }}</option>
                  <option value="Information">{{ 'locale.settings.log.informational' | i18n }}</option>
                  <option value="Verbose">{{ 'locale.settings.log.verbose' | i18n }}</option>
                </optgroup>
                <optgroup label="Production">
                  <option value="Critical">{{ 'locale.settings.log.critical' | i18n }}</option>
                  <option value="Error">{{ 'locale.settings.log.error' | i18n }}</option>
                  <option value="Warning">{{ 'locale.settings.log.warning' | i18n }}</option>
                </optgroup>
              </select>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/tabs/network.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container-fluid" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="container-fluid">
            <div class="row">
              <div class="col-md-2 col-xs-2">
                <img src="~/img/appbar.network.png" alt="log" class="left" />
              </div>
              <div class="col-md-10 col-xs-10" style="vertical-align:middle">
                <em>{{ 'locale.settings.networkDescription' | i18n }}</em>
              </div>
            </div>
          </div>
          <div class="form-group">
            <div class="col-sm-2">
            </div>
            <div class="col-sm-10">
              <div class="checkbox">
                <label>
                  <input name="useProxy" type="checkbox" ng-model="config.network.useProxy" />
                    {{ 'locale.settings.useProxy' | i18n }}
                    -
                    <em>
                        {{ 'locale.settings.useProxyDescription' | i18n}}
                    </em></label>
              </div>
            </div>
          </div>
          <div ng-if="config.network.useProxy" class="form-group">
            <label class="control-label col-sm-2">{{ 'locale.settings.proxyAddress' | i18n }}</label>
            <div class="col-sm-10">
              <input type="url" class="form-control" ng-model="config.network.proxyAddress" placeholder="{{ 'locale.settings.proxyAddressPlaceHolder' | i18n }}" />
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/tabs/password.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/settings/password.js</script>
      <content>
        <form name="changePasswordForm" class="form-horizontal form" novalidate="novalidate" ng-submit="changePasswordForm.$valid &amp;&amp; changePassword($root.session.user.userName, changePassword.existing, changePassword.password, changePassword.confirmation)" ng-controller="UserPasswordController" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding">
          <div class="alert alert-warning" ng-if="!$root.page.onlineState">
        {{ 'locale.preferences.password.onlineOnly' | i18n }}
    </div>
          <div class="container-fluid">
            <div class="form-group">
              <label for="username" class="col-xs-12 col-sm-2 control-label">{{ 'locale.preferences.username' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <input type="text" name="username" ng-model="::$root.session.user.userName" readonly="readonly" class="form-control" />
              </div>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : changePasswordForm.existing.$invalid &amp;&amp; changePasswordForm.existing.$touched }">
              <label for="existing" class="col-xs-12 col-sm-2 control-label">{{ 'locale.preferences.existingPassword' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <input ng-disabled="!$root.page.onlineState" type="password" name="existing" ng-required="true" ng-model="changePassword.existing" class="form-control" />
                <p ng-show="changePasswordForm.existing.$invalid &amp;&amp; changePasswordForm.existing.$touched" class="help-block text-danger">{{ 'locale.preferences.errors.existingPasswordRequired' | i18n }}</p>
              </div>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : changePasswordForm.password.$invalid &amp;&amp; changePasswordForm.password.$touched }">
              <label for="password" class="col-xs-12 col-sm-2 control-label">{{ 'locale.preferences.password' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <input ng-disabled="!$root.page.onlineState" type="password" name="password" ng-required="true" ng-model="changePassword.password" class="form-control" />
                <p ng-show="changePasswordForm.password.$invalid &amp;&amp; changePasswordForm.password.$touched" class="help-block text-danger">{{ 'locale.preferences.errors.newPasswordRequired' | i18n }}</p>
              </div>
            </div>
            <div class="form-group" ng-class="{ 'has-error' : changePasswordForm.confirm.$invalid &amp;&amp; changePasswordForm.confirm.$touched }">
              <label for="confirm" class="col-xs-12 col-sm-2 control-label">{{ 'locale.preferences.confirm' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <input ng-disabled="!$root.page.onlineState" type="password" name="confirm" ng-required="true" ng-model="changePassword.confirmation" class="form-control" />
                <p ng-show="changePasswordForm.confirm.$invalid &amp;&amp; changePasswordForm.confirm.$touched" class="help-block text-danger">{{ 'locale.preferences.errors.confirmationPasswordRequired' | i18n }}</p>
              </div>
            </div>
            <div class="row">
              <div class="col-xs-12">
                <div class="btn-group pull-right">
                  <button ng-disabled="!$root.page.onlineState" type="submit" class="btn btn-lg btn-primary">
                    <span class="glyphicon glyphicon-check">
                    </span> {{ 'locale.preferences.changePassword' | i18n }}</button>
                </div>
              </div>
            </div>
          </div>
        </form>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/tabs/profile.html" mimeType="text/html">
    <contentHtml>
      <script>/org.openiz.core/controllers/settings/profile.js</script>
      <content>
        <form class="form form-horizontal" ng-controller="UserProfileController" ng-submit="saveProfile(editObject.entity)" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding">
          <div class="container-fluid">
            <div class="form-group">
              <label class="col-xs-12 col-sm-2 control-label" for="givenNameInput">{{ 'locale.preferences.givenName' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <input type="text" class="tagEntry form-control" oiz-tag="oiz-tag" name="givenNameInput" ng-model="editObject.entity.name.OfficialRecord.component.Given" />
              </div>
            </div>
            <div class="form-group">
              <label class="col-xs-12 col-sm-2 control-label" for="familyNameInput">{{ 'locale.preferences.familyName' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <input type="text" class="tagEntry form-control" oiz-tag="oiz-tag" name="familyNameInput" ng-model="editObject.entity.name.OfficialRecord.component.Family" />
              </div>
            </div>
            <div class="form-group" ng-repeat="(use,tel) in editObject.entity.telecom">
              <label class="col-xs-2 control-label" for="telephone">{{ 'locale.preferences.telephone' | i18n }}</label>
              <div class="col-xs-4">
                <select name="telephone" id="telephone" class="form-control" ng-model="tel.use" bind:source="Concept" bind:value="name[{{ locale }}].value" bind:filter="conceptSet.mnemonic=TelecomAddressUse">
                </select>
              </div>
              <div class="col-xs-6">
                <input type="text" autocomplete="off" autocapitalize="off" name="relationPhoneNumber" ng-model="tel.value" class="form-control" />
              </div>
            </div>
            <div class="form-group">
              <label class="col-xs-12 col-sm-2 control-label" for="facilityInput">{{ 'locale.preferences.facility' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <div class="input-group">
                  <select class="form-control" style="width:100%; height:100%" id="facilityInput" name="facilityInput" ng-model="editObject.entity.relationship.DedicatedServiceDeliveryLocation.target" oiz-entitysearch="Place" data-filter="{ &quot;classConcept&quot; :  &quot;FF34DFA7-C6D3-4F8B-BC9F-14BCDC13BA6C&quot; }">
                    <option value="{{editObject.entity.relationship.DedicatedServiceDeliveryLocation.target}}">{{editObject.entity.relationship.DedicatedServiceDeliveryLocation.targetModel.name.OfficialRecord | oizEntityName }}</option>
                  </select>
                </div>
              </div>
            </div>
            <div class="form-group">
              <label class="col-xs-12 col-sm-2 control-label" for="facilityInput">{{ 'locale.preferences.language' | i18n }}</label>
              <div class="col-xs-12 col-sm-10">
                <div class="input-group">
                  <select class="form-control" style="width:100%; height:100%" id="facilityInput" name="facilityInput" ng-model="editObject.entity.language[0].languageCode">
                    <option value="en">English</option>
                    <option value="sw">Kiswahili</option>
                  </select>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-xs-12">
                <div class="btn-group pull-right">
                  <button type="submit" class="btn btn-lg btn-primary">
                    <span class="glyphicon glyphicon-check">
                    </span>{{ 'locale.actions.save' | i18n }}</button>
                </div>
              </div>
            </div>
          </div>
        </form>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/settings/tabs/security.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div class="container-fluid" xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet">
          <div class="container-fluid">
            <div class="row">
              <div class="col-md-2 col-xs-2">
                <img src="~/img/appbar.shield.png" alt="log" class="left" />
              </div>
              <div class="col-md-10 col-xs-10" style="vertical-align:middle">
                <em>{{ 'locale.settings.securityDescription' | i18n }}</em>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="control-label col-sm-2">{{ 'locale.settings.passwordFormat' | i18n }}</label>
            <div class="col-sm-10">
              <select class="form-control" ng-model="config.security.hasher">
                <option value="SHA256PasswordHasher">{{ 'locale.settings.security.sha256' | i18n }}</option>
                <option value="SHA1PasswordHasher">{{ 'locale.settings.security.sha1' | i18n }}</option>
                <option value="PlainTextPasswordHasher">{{ 'locale.settings.security.plain' | i18n }}</option>
              </select>
            </div>
          </div>
          <div class="form-group">
            <div class="col-sm-2">
            </div>
            <div class="col-sm-10">
              <div class="checkbox">
                <label>
                  <input name="offlineAuthenticationInput" type="checkbox" ng-model="config.security.offline.enable" />
                    {{ 'locale.settings.allowLocalAuth' | i18n }}
                    -
                    <em>
                        {{ 'locale.settings.allowLocalAuthDescription' | i18n}}
                    </em></label>
              </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/templates/act.observation.weight.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="form-group">
          <div class="row form-group">
            <div class="control-label col-xs-12 col-sm-3">
              <label class="control-label">
                {{ 'locale.encounters.weight.title' | i18n }}
            </label>
              <br />
              <span ng-if="act.targetModel._overdue">
                <small>{{ 'locale.encounters.overdue' | i18n }} <br />({{ act.targetModel.startTime | date : 'yyyy-MMM-dd' }} - {{ act.targetModel.stopTime | date: 'yyyy-MMM-dd' }})</small>
              </span>
              <span ng-if="!act.targetModel._overdue &amp;&amp; act.targetModel.relationship.Fulfills">
                <small>
                    ({{ act.targetModel.relationship.Fulfills.targetModel.startTime | date : 'yyyy-MMM-dd' }} - {{ act.targetModel.relationship.Fulfills.targetModel.stopTime | date: 'yyyy-MMM-dd' }})
                </small>
              </span>
            </div>
            <div class="col-xs-12 col-sm-9" ng-if="!act.targetModel._overdue">
              <div class="input-group">
                <span class="input-group-addon">
                  <input ng-if="!act._created" type="checkbox" ng-model="act._enabled" checked="checked" value="1" readonly="readonly" />
                </span>
                <span class="input-group-addon">{{ 'locale.encounters.weight.value' | i18n }}</span>
                <input ng-change="OpenIZ.CarePlan.interpretObservation(act.targetModel, patient, 'act.observation.weight')" name="weight_{{act.targetModel.id}}" ng-required="act._enabled" ng-disabled="!act._enabled" type="number" min="0" max="200" class="form-control" ng-model="act.targetModel.value" />
                <span class="input-group-addon">
                    {{ 'locale.encounter.weight.unitOfMeasure' | i18n }}
                </span>
                <select name="uom_{{act.targetModel.id}}" ng-required="act._enabled" ng-disabled="!act._enabled" ng-model="act.targetModel.unitOfMeasure" class="form-control" bind:source="Concept" bind:filter="conceptSet.mnemonic=UnitOfMeasureWeight" bind:value="name[{{ locale }}].value">
                </select>
                <span class="input-group-addon" ng-if="act.targetModel.interpretationConcept == '41d42abf-17ad-4144-bf97-ec3fd907f57d'">
                  <span class="label label-success">
                    <span class="glyphicon glyphicon-ok">
                    </span> {{ 'locale.encounter.weight.interpretation.normal' | i18n }}</span>
                </span>
                <span class="input-group-addon" ng-if="!act.targetModel.interpretationConcept || act.targetModel.interpretationConcept == '6188f821-261f-420c-9520-0de240a05661' || act.targetModel.interpretationConcept == 'a7159ba0-a9ec-4565-95b8-ed364794c0b8'">
                  <span class="label label-danger">
                    <span class="glyphicon glyphicon-triangle-bottom">
                    </span> {{ 'locale.encounter.weight.interpretation.low' | i18n }}</span>
                </span>
                <span class="input-group-addon" ng-if="act.targetModel.interpretationConcept == '8b553d58-6c8c-4d01-a534-83ba5780b41a' || act.targetModel.interpretationConcept == '3c4d6579-7496-4b44-aac1-18a714ff7a05'">
                  <span class="label label-danger">
                    <span class="glyphicon glyphicon-triangle-top">
                    </span> {{ 'locale.encounter.weight.interpretation.high' | i18n }}</span>
                </span>
              </div>
            </div>
            <div class="row" ng-if="act.targetModel.interpretationConcept != null &amp;&amp; act.targetModel.interpretationConcept != '41d42abf-17ad-4144-bf97-ec3fd907f57d'">
              <div class="col-xs-12 col-sm-9 col-sm-offset-3 text-primary" style="padding:10px;">
                <span class="glyphicon glyphicon-info-sign">
                </span>
                {{ 'locale.encounter.cdss.nutritionCounselingText' | i18n }}
            </div>
            </div>
            <div class="row">
              <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['uom_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['uom_' + act.targetModel.id].$invalid">
                {{ 'locale.encounters.immunizations.errors.missingUom' | i18n }}
            </div>
              <div class="col-xs-offset-2 col-xs-10 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['weight_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['weight_' + act.targetModel.id].$invalid">
                {{ 'locale.encounters.immunizations.errors.weightInvalid' | i18n }}
            </div>
            </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/templates/act.substanceadmin.immunization.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="form-group" ng-style="{'background-color:#fdd':act.targetModel._overdue}">
          <div class="row">
            <div class="control-label col-xs-12 col-sm-3">
              <label class="control-label">
                {{ 'locale.encounters.immunization.title' | i18n }} {{ act.targetModel.participation.Product.playerModel.name.Assigned | oizEntityName }} {{act.targetModel.doseSequence}}

            </label>
              <br />
              <span ng-if="act.targetModel._overdue">
                <small>{{ 'locale.encounters.overdue' | i18n }} <br />({{ act.targetModel.startTime | date : 'yyyy-MMM-dd' }} - {{ act.targetModel.stopTime | date: 'yyyy-MMM-dd' }})</small>
              </span>
              <span ng-if="!act.targetModel._overdue &amp;&amp; act.targetModel.relationship.Fulfills">
                <small>({{ act.targetModel.relationship.Fulfills.targetModel.startTime | date : 'yyyy-MMM-dd' }} - {{ act.targetModel.relationship.Fulfills.targetModel.stopTime | date: 'yyyy-MMM-dd' }})
                </small>
              </span>
            </div>
            <div class="col-xs-12 col-sm-9" ng-if="!act.targetModel._overdue">
              <div class="input-group">
                <span class="input-group-addon">
                  <input ng-if="!act._created" type="checkbox" ng-model="act._enabled" checked="checked" value="1" />
                </span>
                <span class="input-group-addon" ng-show="act._created &amp;&amp; act._enabled">{{ 'locale.encounters.immunizations.antigen' | i18n }}</span>
                <select ng-class="{'has-error':act._enabled &amp;&amp; (masterForm['product_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['product_' + act.targetModel.id].$invalid}" ng-show="act._enabled &amp;&amp; act._created" name="product_{{act.targetModel.id}}" ng-required="act._enabled" class="form-control" ng-model="act.targetModel.participation.Product.player" bind:source="Material" bind:filter="statusConcept.mnemonic=ACTIVE&amp;typeConcept.mnemonic=~VaccineType&amp;determinerConcept.mnemonic=Described" bind:value="name[Assigned].component[null].value">
                  <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.immunizations.antigen' | i18n }}</option>
                </select>
                <span class="input-group-addon" ng-show="act._enabled">{{ 'locale.encounters.immunizations.lot' | i18n }}</span>
                <select ng-class="{'has-error':act._enabled &amp;&amp; (masterForm['consumable_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['consumable_' + act.targetModel.id].$invalid}" ng-show="act._enabled" ng-required="act._enabled" name="consumable_{{act.targetModel.id}}" class="form-control" ng-model="act.targetModel.participation.Consumable.player" data-watch="act.targetModel.participation.Product.player" data-watch-target="relationship[ManufacturedProduct].source" oiz-databind="ManufacturedMaterial" data-filter="{ &quot;relationship[ManufacturedProduct].source&quot; : &quot;{{ act.targetModel.participation.Product.player }}&quot;, &quot;expiryDate&quot; : &quot;&gt;{{ $root.page.loadTime | date: &quot;yyyy-MM-dd&quot; }}&quot; }" data-display="scope.lotNumber">
                  <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.immunizations.lot' | i18n }}</option>
                </select>
                <span ng-show="act._enabled" class="input-group-addon">
                    {{ 'locale.encounters.immunizations.site' | i18n }}
                </span>
                <select ng-show="act._enabled" name="site_{{act.targetModel.id}}" ng-required="act._enabled" class="form-control" ng-model="act.targetModel.site" bind:source="Concept" bind:value="name[{{ locale }}].value" bind:filter="conceptSet.mnemonic=AdministrationSite">
                  <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.immunizations.site' | i18n }}</option>
                </select>
                <span ng-if="!act._enabled" class="input-group-addon">{{ 'locale.encounters.protocolViolation.reason' | i18n }}</span>
                <select ng-if="!act._enabled" name="reason_{{act.targetModel.id}}" ng-required="!act._enabled" ng-model="act.negationReason" bind:source="Concept" bind:filter="conceptSet.mnemonic=ProtocolViolationReason" bind:value="name[{{ locale }}].value" class="form-control">
                  <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.protocolViolation.reason' | i18n }}</option>
                </select>
              </div>
            </div>
            <div class="col-xs-12 col-sm-9" ng-if="act.targetModel._overdue">
              <div class="input-group">
                <span class="input-group-addon">
                  <input type="checkbox" ng-model="act._enabled" checked="checked" value="1" />
                </span>
                <span class="input-group-addon" ng-show="act._created &amp;&amp; act._enabled">{{ 'locale.encounters.date' | i18n }}</span>
                <input ng-class="{'has-error':act._enabled &amp;&amp; (masterForm['izdate_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['izdate_' + act.targetModel.id].$invalid}" ng-disabled="!act._enabled" name="izdate_{{act.targetModel.id}}" ng-required="act._enabled" class="form-control" ng-model="act.targetModel.actTime" type="date" max="{{$root.page.loadTime | date: 'yyyy-MM-dd'}}" />
              </div>
            </div>
          </div>
          <div class="row form-group">
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['product_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['product_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingProduct' | i18n }}
        </div>
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['consumable_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['consumable_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingConsumable' | i18n }}
        </div>
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['site_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['site_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingSite' | i18n }}
        </div>
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="!act._enabled &amp;&amp; (masterForm['reason_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['reason_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingReason' | i18n }}
        </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <asset name="views/templates/act.substanceadmin.supplement.html" mimeType="text/html">
    <contentHtml>
      <content>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:oiz="http://openiz.org/applet" xmlns:bind="http://openiz.org/applet/binding" class="form-group" ng-style="{'background-color:#fdd':act.targetModel._overdue}">
          <div class="row">
            <div class="control-label col-xs-12 col-sm-3">
              <label class="control-label">
                {{ 'locale.encounters.supplement.title' | i18n }}

            </label>
              <br />
              <span ng-if="act.targetModel._overdue">
                <small>{{ 'locale.encounters.overdue' | i18n }} <br />({{ act.targetModel.startTime | date : 'yyyy-MMM-dd' }} - {{ act.targetModel.stopTime | date: 'yyyy-MMM-dd' }})</small>
              </span>
              <span ng-if="!act.targetModel._overdue &amp;&amp; act.targetModel.relationship.Fulfills">
                <small>
                    ({{ act.targetModel.relationship.Fulfills.targetModel.startTime | date : 'yyyy-MMM-dd' }} - {{ act.targetModel.relationship.Fulfills.targetModel.stopTime | date: 'yyyy-MMM-dd' }})
                </small>
              </span>
            </div>
            <div class="col-xs-12 col-sm-9" ng-if="!act.targetModel._overdue">
              <div class="input-group">
                <span class="input-group-addon">
                  <input ng-if="!act._created" type="checkbox" ng-model="act._enabled" checked="checked" value="1" />
                </span>
                <span class="input-group-addon" ng-show="act._created &amp;&amp; act._enabled">{{ 'locale.encounters.supplement.drug' | i18n }}</span>
                <select ng-class="{'has-error':act._enabled &amp;&amp; (masterForm['product_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['product_' + act.targetModel.id].$invalid}" ng-show="act._enabled &amp;&amp; act._created" name="product_{{act.targetModel.id}}" ng-required="act._enabled" class="form-control" ng-model="act.targetModel.participation.Product.player" bind:source="Material" bind:filter="statusConcept.mnemonic=ACTIVE&amp;typeConcept.mnemonic=~Supplement&amp;determinerConcept.mnemonic=Described" bind:value="name[Assigned].component[null].value">
                  <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.supplement.drug' | i18n }}</option>
                </select>
                <select class="form-control" disabled="disabled" ng-if="act._enabled &amp;&amp; !act._created">
                  <option selected="selected">{{ act.targetModel.participation.Product.playerModel.name.Assigned | oizEntityName }}</option>
                </select>
                <!--
                    TODO: Do we need to track supplements?
                    <span class="input-group-addon" ng-show="act._enabled">{{ 'locale.encounters.immunizations.lot' | i18n }}</span>
                <select ng-class="{'has-error':act._enabled &amp;&amp; (masterForm['consumable_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['consumable_' + act.targetModel.id].$invalid}" ng-show="act._enabled" ng-required="act._enabled" name="consumable_{{act.targetModel.id}}" class="form-control" ng-model="act.targetModel.participation.Consumable.player" data-watch="act.targetModel.participation.Product.player" data-watch-target="relationship[ManufacturedProduct].source" oiz-databind="ManufacturedMaterial" data-filter='{ "relationship[ManufacturedProduct].source" : "{{ act.targetModel.participation.Product.player }}", "expiryDate" : "&gt;{{ $root.page.loadTime | date: "yyyy-MM-dd" }}" }' data-display="scope.lotNumber">
                    <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.immunizations.lot' | i18n }}</option>
                </select>-->
                <span ng-if="!act._enabled" class="input-group-addon">{{ 'locale.encounters.protocolViolation.reason' | i18n }}</span>
                <select ng-if="!act._enabled" name="reason_{{act.targetModel.id}}" ng-required="!act._enabled" ng-model="act.negationReason" bind:source="Concept" bind:filter="conceptSet.mnemonic=ProtocolViolationReason" bind:value="name[{{ locale }}].value" class="form-control">
                  <option value="" disabled="disabled" selected="selected">{{ 'locale.encounters.protocolViolation.reason' | i18n }}</option>
                </select>
              </div>
            </div>
            <div class="col-xs-12 col-sm-9" ng-if="act.targetModel._overdue">
              <div class="input-group">
                <span class="input-group-addon">
                  <input type="checkbox" ng-model="act._enabled" checked="checked" value="1" />
                </span>
                <span class="input-group-addon" ng-show="act._created &amp;&amp; act._enabled">{{ 'locale.encounters.date' | i18n }}</span>
                <input ng-class="{'has-error':act._enabled &amp;&amp; (masterForm['izdate_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['izdate_' + act.targetModel.id].$invalid}" ng-disabled="!act._enabled" name="izdate_{{act.targetModel.id}}" ng-required="act._enabled" class="form-control" ng-model="act.targetModel.actTime" type="date" max="{{$root.page.loadTime | date: 'yyyy-MM-dd'}}" />
              </div>
            </div>
          </div>
          <div class="row form-group">
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['product_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['product_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingProduct' | i18n }}
        </div>
            <!--
            TODO: Do we track supplements for stock?
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['consumable_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['consumable_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingConsumable' | i18n }}
        </div>-->
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="act._enabled &amp;&amp; (masterForm['site_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['site_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingSite' | i18n }}
        </div>
            <div class="col-xs-10 col-xs-offset-2 help-block text-danger" ng-if="!act._enabled &amp;&amp; (masterForm['reason_' + act.targetModel.id].$touched||masterForm.$submitted) &amp;&amp; masterForm['reason_' + act.targetModel.id].$invalid">
            {{ 'locale.encounters.immunizations.errors.missingReason' | i18n }}
        </div>
          </div>
        </div>
      </content>
    </contentHtml>
  </asset>
  <strings lang="en">
    <string key="locale.encounters.overdue">Overdue</string>
    <string key="locale.action.submit">Submit</string>
    <string key="locale.action.next">Next</string>
    <string key="locale.action.back">Back</string>
    <string key="locale.action.done">Done</string>
    <string key="locale.action.delete">Delete</string>
    <string key="locale.action.acknowledge">Acknowledge</string>
    <string key="locale.action.cancel">Cancel</string>
    <string key="locale.action.save">Save</string>
    <string key="locale.action.finish">Finish</string>
    <string key="locale.action.view">View</string>
    <string key="locale.action.update">Update</string>
    <string key="locale.action.edit">Edit</string>
    <string key="locale.action.remove">Remove</string>
    <string key="locale.action.search">Search</string>
    <string key="locale.alert.updateSuccessful">Update Successful</string>
    <string key="locale.alert.updateUnsuccessful">Update Unsuccessful</string>
    <string key="locale.common.no">No</string>
    <string key="locale.common.yes">Yes</string>
    <string key="locale.common.unknown">Unknown</string>
    <string key="locale.common.invalidForm">Form submission is invalid</string>
    <string key="locale.dialog.wait.text">Please wait</string>
    <string key="locale.security.login.helpText">Please log into TImR to continue</string>
    <string key="locale.security.login.label.username">Username</string>
    <string key="locale.security.login.label.password">Password</string>
    <string key="locale.security.login.placeholder.username">Enter your username</string>
    <string key="locale.security.login.placeholder.password">Enter your password</string>
    <string key="locale.security.login.button.forgotPassword">Forgot Password</string>
    <string key="locale.security.login.button.login">Login</string>
    <string key="locale.security.forgotPassword.title">Forgot Password</string>
    <string key="locale.security.forgotPassword.userName">Username</string>
    <string key="locale.security.forgotPassword.mechanism">Method</string>
    <string key="locale.security.forgotPassword.challenge">Verify</string>
    <string key="locale.security.forgotPassword.changePassword">Set Password</string>
    <string key="locale.forgotPassword.userName.title">Enter Username</string>
    <string key="locale.forgotPassword.userName.help">Enter the name of the user for which you wish to reset the password.</string>
    <string key="locale.forgotPassword.userName.label">Username</string>
    <string key="locale.forgotPassword.userName.placeholder">Username</string>
    <string key="locale.forgotPassword.mechanism.title">Reset Method</string>
    <string key="locale.forgotPassword.mechanism.help">To reset your password we need to verify it is you. Select a verification method:</string>
    <string key="locale.forgotPassword.challenge.title">Verify Your Identity</string>
    <string key="locale.forgotPassword.changePassword.title">Set Password</string>
    <string key="locale.forgotPassword.changePassword.help">Set your new password below</string>
    <string key="locale.forgotPassword.challenge.resend">Send</string>
    <string key="locale.forgotPassword.challenge.response">A secret has been sent to you, enter the secret below. If you do not receive the secret you can press "send" to get a new secret sent to you.</string>
    <string key="locale.security.errors.usernameRequired">Please enter a username</string>
    <string key="locale.security.errors.passwordRequired">Please enter a password</string>
    <string key="locale.security.errors.unableToResetPassword">Unable to reset password</string>
    <string key="locale.error.404.title">Not Found</string>
    <string key="locale.error.404.description">The requested resource was not found: </string>
    <string key="locale.error.500.title">Internal Server Error</string>
    <string key="locale.error.500.description">There was an internal error rendering the page. Please check the mobile log files.</string>
    <string key="locale.error.403.title">Forbidden</string>
    <string key="locale.error.403.description">The requested action is forbidden</string>
    <string key="locale.error.bug.title">Submit Bug</string>
    <string key="locale.error.bug.description">Use this form to submit a bug or feedback on this page.</string>
    <string key="locale.error.bug.input.title">Summary:</string>
    <string key="locale.error.bug.input.severity">Severity:</string>
    <string key="locale.error.bug.input.blocker">I cannot perform my assigned tasks because of this bug</string>
    <string key="locale.error.bug.input.severe">This bug is severe and I cannot work around it</string>
    <string key="locale.error.bug.input.minimal">I can work around this bug but it interrupts my workflow</string>
    <string key="locale.error.bug.input.trivial">I am able to work around this bug</string>
    <string key="locale.error.bug.input.description">Describe this bug:</string>
    <string key="locale.error.bug.input.logFile">Attach Log File:</string>
    <string key="locale.settings.status.duplicateName">This device name has already been registered. Do you want to replace this device registration on the server? (If you do, another deivce with this name may not be able to connect)</string>
    <string key="locale.settings.realmTitle">Join Realm</string>
    <string key="locale.settings.realmDescription">A realm is a security domain to which OpenIZ is joined. This realm is responsible for controlling security settings, data synchronization as well administrative functions such as the concept dictionary.</string>
    <string key="locale.settings.deviceName">Device Name:</string>
    <string key="locale.settings.realmName">Realm ID:</string>
    <string key="locale.settings.dataTitle">Data Settings</string>
    <string key="locale.settings.dataDescription">This panel allows you to configure manner in which data is stored and synchronized with the central environment.</string>
    <string key="locale.settings.dataMode">Data Mode:</string>
    <string key="locale.settings.logTitle">Log Settings</string>
    <string key="locale.settings.logDescription">OpenIZ Disconnected Client keeps application log files which can be sent to a centralized diagnosis server in the case of application crash. Use this panel to configure the verbosity of those logs</string>
    <string key="locale.settings.logMode">Log Detail:</string>
    <string key="locale.settings.log.critical">Critical Alerts (crashes) only</string>
    <string key="locale.settings.log.always">Log Everything (results in large log files)</string>
    <string key="locale.settings.log.informational">Verbose</string>
    <string key="locale.settings.log.verbose">Very Verbose</string>
    <string key="locale.settings.log.error">Errors Only</string>
    <string key="locale.settings.log.warning">Errors and Warnings Only</string>
    <string key="locale.settings.securityTitle">Security Settings</string>
    <string key="locale.settings.securityDescription">Use this panel to configure the manner in which security policies are enforced on this device.</string>
    <string key="locale.settings.passwordFormat">Password Store:</string>
    <string key="locale.settings.allowLocalAuth">Authorization:</string>
    <string key="locale.settings.allowLocalAuthDescription">Allow local authorization, this will allow clients to log into the app even if the internet is down</string>
    <string key="locale.settings.security.sha256">SHA256 Hashing - Very Strong</string>
    <string key="locale.settings.security.sha1">SHA1 Hashing - Compatibility mode</string>
    <string key="locale.settings.security.plain">Plaintext (not-recommended)</string>
    <string key="locale.settings.save">Save Settings</string>
    <string key="locale.settings.cancel">Cancel</string>
    <string key="locale.settings.syncEvents">Synchronize On:</string>
    <string key="locale.settings.syncEvents.start">When the application starts</string>
    <string key="locale.settings.syncEvents.stop">When the application closes</string>
    <string key="locale.settings.syncEvents.commit">Everytime new data is available</string>
    <string key="locale.settings.syncEvents.ip">When the internet status changes</string>
    <string key="locale.settings.pollInterval">Enable Polling:</string>
    <string key="locale.settings.pollInterval.0">Never</string>
    <string key="locale.settings.pollInterval.1">Every 1 minute</string>
    <string key="locale.settings.pollInterval.5">Every 5 minutes</string>
    <string key="locale.settings.pollInterval.15">Every 15 minutes</string>
    <string key="locale.settings.pollInterval.30">Every 30 minutes</string>
    <string key="locale.settings.pollInterval.push">When new data is available</string>
    <string key="locale.settings.leaveRealm">Leave</string>
    <string key="locale.settings.joinRealm">Join</string>
    <string key="locale.settings.apply">Apply</string>
    <string key="locale.settings.cancel">Cancel</string>
    <string key="locale.settings.error.noRealm">Your application is not joined to any realm!</string>
    <string key="locale.settings.confirm.leaveRealm">This operation will remove all local unsynchronized data. Are you sure you want to leave the realm </string>
    <string key="locale.settings.status.joinRealm">Your application is now joined to this realm</string>
    <string key="locale.settings.createLocalAdmin">Create local administrator account</string>
    <string key="locale.settings.localAdminPassword">Local Admin Password:</string>
    <string key="locale.settings.localAdminName">Local Admin Username:</string>
    <string key="locale.actions.save">Save</string>
    <string key="locale.preferences.changePassword">Change Password</string>
    <string key="locale.preferences.username">Username</string>
    <string key="locale.preferences.existingPassword">Existing Password</string>
    <string key="locale.preferences.password">New Password</string>
    <string key="locale.preferences.confirm">Confirm Password</string>
    <string key="locale.preferences.tabs.password">Password</string>
    <string key="locale.preferences.tabs.profile">My Profile</string>
    <string key="locale.preferences.givenName">Name(s)</string>
    <string key="locale.preferences.familyName">Surname(s)</string>
    <string key="locale.preferences.telephone">Tel / E-Mail</string>
    <string key="locale.preferences.facility">Facility</string>
    <string key="locale.preferences.language">Language</string>
    <string key="locale.preferences.errors.existingPasswordRequired">Please enter your existing password</string>
    <string key="locale.preferences.errors.newPasswordRequired">Please enter your new password</string>
    <string key="locale.preferences.errors.confirmationPasswordRequired">Please enter your new password confirmation</string>
    <string key="locale.settings.passwordNoMatch">Passwords do not match</string>
    <string key="locale.encounters.weightSummary.title">Weight Summary</string>
    <string key="locale.login.header">Log-in to</string>
    <string key="locale.login.username">Username:</string>
    <string key="locale.login.password">Password:</string>
    <string key="locale.login.doLogin">Login</string>
    <string key="locale.debug.bugReport">Submit Bug Report</string>
    <string key="locale.debug.reporter">Reporter</string>
    <string key="locale.debug.reproduction">Steps to Reproduce</string>
    <string key="locale.debug.reproductionPlaceholder">Enter the steps that you performed prior to encountering the bug/issue</string>
    <string key="locale.debug.sendLogs">Attach application information (versions, log files, settings, etc.)</string>
    <string key="locale.debug.submit">Send Report</string>
    <string key="locale.debug.reportSubmitted">Your issue has been successfully submitted to the central ticketing system</string>
    <string key="locale.debug.reportTicketId">For your reference, your ticket ID# is:</string>
    <string key="locale.about.tabs.versions">Version Information</string>
    <string key="locale.about.tabs.log">Log Files</string>
    <string key="locale.about.tabs.runtime">Environment</string>
    <string key="locale.about.versions.applets.title">Loaded Applets</string>
    <string key="locale.about.versions.applet">Name</string>
    <string key="locale.about.versions.author">Author</string>
    <string key="locale.about.versions.id">Package ID</string>
    <string key="locale.about.versions.assemblies.title">Loaded DLLs</string>
    <string key="locale.about.versions.assembly">Assembly</string>
    <string key="locale.about.versions.version">Version</string>
    <string key="locale.about.versions.info">Description</string>
    <string key="locale.about.machineInfo">Runtime Environment</string>
    <string key="locale.about.fileInfo">Datafile Information</string>
    <string key="locale.about.syncInfo">Synchronizaton Information</string>
    <string key="locale.about.environment.os">Operating System Version</string>
    <string key="locale.about.environment.cpu">CPU Processor Count</string>
    <string key="locale.about.environment.runtimeVersion">.NET Runtime Version</string>
    <string key="locale.about.environment.mem">Used Memory</string>
    <string key="locale.about.files.name">Data File</string>
    <string key="locale.about.files.size">Total Size</string>
    <string key="locale.about.files.date">Last Write Date</string>
    <string key="locale.about.sync.resource">Data Resource</string>
    <string key="locale.about.sync.date">Last Sync Date</string>
    <string key="locale.about.sync.etag">Last Version</string>
    <string key="locale.about.sync.filter">Filter</string>
    <string key="locale.confirm.cascade">There are other places this value is used. Would you like to also update those values?</string>
  </strings>
  <strings lang="fr">
    <string key="locale.error.404.title">Non trouvee</string>
    <string key="locale.error.404.description">Le ressource demandee n'a pas pu etra trouve. </string>
    <string key="locale.error.500.title">Erreru du Serveur</string>
    <string key="locale.error.500.description">Il y avait une erreru rendu cette page. S'il vous plait verifier les fishiers journaux.</string>
    <string key="locale.error.403.title">Interdit</string>
    <string key="locale.error.403.description">Vous ne possedez pas de privileges suffisants pour voir la page.</string>
  </strings>
  <strings lang="sw">
    <string key="locale.error.404.title">Haipatikani</string>
    <string key="locale.error.404.description">Rasilimali aliomba hakuweza kupatikana.</string>
    <string key="locale.error.500.title">Kosa server</string>
    <string key="locale.error.500.description">Kulikuwa na hitilafu utoaji ukurasa ombi. Tafadhali wasiliana na magogo maombi ya simu.</string>
    <string key="locale.error.403.title">Haramu</string>
    <string key="locale.error.403.description">Hawana marupurupu ya kutosha na kuona</string>
  </strings>
</AppletManifest>